{"version":3,"sources":["../../../../../src/plugins/headingGroup/handlers/createRenderNode.tsx"],"names":["React","Block","Heading","GroupFactory","condition","generateGroupType","Group","Heading1","Heading2","Heading3","Heading4","Heading5","Heading6","headingList","createRenderNode","config","level","hCondition","slice","map","H","node","isBlock","type","TYPE","renderNode","props","controller","next","attributes","isSelected","children","some"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,SAASC,KAAT,QAA8B,oBAA9B;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AAEA,SAASC,SAAT,EAAoBC,iBAApB;IAEQC,K,GAAUH,Y,CAAVG,K;IAGNC,Q,GAMEL,O,CANFK,Q;IACAC,Q,GAKEN,O,CALFM,Q;IACAC,Q,GAIEP,O,CAJFO,Q;IACAC,Q,GAGER,O,CAHFQ,Q;IACAC,Q,GAEET,O,CAFFS,Q;IACAC,Q,GACEV,O,CADFU,Q;AAGF,IAAMC,WAAW,GAAG,CAClBN,QADkB,EAElBC,QAFkB,EAGlBC,QAHkB,EAIlBC,QAJkB,EAKlBC,QALkB,EAMlBC,QANkB,CAApB;;AASA,SAASE,gBAAT,CAA0BC,MAA1B,EAA4E;AAAA,sBACpDA,MADoD,CAClEC,KADkE;AAAA,MAClEA,KADkE,8BAC1D,CAD0D;AAE1E,MAAMC,UAAU,GAAGb,SAAS,MAAT,SACdS,WAAW,CAACK,KAAZ,CAAkB,CAAlB,EAAqBF,KAArB,EAA4BG,GAA5B,CAAgC,UAACC,CAAD,EAAO;AACxC,WAAO,UAACC,IAAD,EAAU;AACf,aAAOpB,KAAK,CAACqB,OAAN,CAAcD,IAAd,KAAuBA,IAAI,CAACE,IAAL,KAAclB,iBAAiB,CAACe,CAAC,CAACI,IAAH,CAA7D;AACD,KAFD;AAGD,GAJE,CADc,CAAnB;AAQA,SAAO,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,UAA3B,EAAuCC,IAAvC,EAA6C;AAAA,QAEhDP,IAFgD,GAM9CK,KAN8C,CAEhDL,IAFgD;AAAA,QAGhDQ,UAHgD,GAM9CH,KAN8C,CAGhDG,UAHgD;AAAA,QAIhDC,UAJgD,GAM9CJ,KAN8C,CAIhDI,UAJgD;AAAA,QAKhDC,QALgD,GAM9CL,KAN8C,CAKhDK,QALgD;;AAQlD,QAAId,UAAU,CAACe,IAAX,CAAgBX,IAAhB,CAAJ,EAA2B;AACzB,0BACE,eAAC,KAAD;AACE,QAAA,IAAI,EAAEA,IADR;AAEE,QAAA,UAAU,EAAEQ,UAFd;AAGE,QAAA,UAAU,EAAEF,UAHd;AAIE,QAAA,UAAU,EAAEG;AAJd,SAMGC,QAAQ,EANX,CADF;AAUD;;AAED,WAAOH,IAAI,EAAX;AACD,GAtBD;AAuBD;;AAED,eAAed,gBAAf","sourcesContent":["import * as React from 'react';\nimport { Block, Plugin } from '@ali/4ever-cangjie';\nimport { Heading } from '@ali/4ever-mo';\nimport { GroupFactory } from '@ali/4ever-bamboo';\nimport { HeadingGroupConfig } from '../types';\nimport { condition, generateGroupType } from '../utils';\n\nconst { Group } = GroupFactory;\n\nconst {\n  Heading1,\n  Heading2,\n  Heading3,\n  Heading4,\n  Heading5,\n  Heading6,\n} = Heading;\n\nconst headingList = [\n  Heading1,\n  Heading2,\n  Heading3,\n  Heading4,\n  Heading5,\n  Heading6,\n];\n\nfunction createRenderNode(config: HeadingGroupConfig): Plugin['renderNode'] {\n  const { level = 3 } = config;\n  const hCondition = condition(\n    ...headingList.slice(0, level).map((H) => {\n      return (node) => {\n        return Block.isBlock(node) && node.type === generateGroupType(H.TYPE);\n      };\n    }),\n  );\n\n  return function renderNode(props, controller, next) {\n    const {\n      node,\n      attributes,\n      isSelected,\n      children,\n    } = props;\n\n    if (hCondition.some(node)) {\n      return (\n        <Group\n          node={node as Block}\n          attributes={attributes}\n          controller={controller}\n          isSelected={isSelected}\n        >\n          {children()}\n        </Group>\n      );\n    }\n\n    return next();\n  };\n}\n\nexport default createRenderNode;\n"],"file":"createRenderNode.js"}