import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { Link, Paragraph, Heading } from '@ali/4ever-mo';
import { SubMenu, Button, PlusBetaNormal, MinusBetaNormal } from '@ali/we-design';
import { PluginRoles } from '@ali/4ever-bamboo';
import { setLetterSpacing } from "../actions";
import { SpacingSet, SpacingValue, commonButtonStyle } from "./style";
var MIN = -10;
var MAX = 10;
var STEP = 0.5;

function canSetMark(controller) {
  var _controller$value$sel = controller.value.selection,
      isCollapsedAtEdge = _controller$value$sel.isCollapsedAtEdge,
      isExpanded = _controller$value$sel.isExpanded;
  if (isCollapsedAtEdge || isExpanded) return true;
  var _controller$value = controller.value,
      startBlock = _controller$value.startBlock,
      startInline = _controller$value.startInline;

  if (startInline && !Link.isLink(startInline)) {
    // 仅支持 link
    return false;
  }

  if (Paragraph.isParagraph(startBlock) || Heading.isHeading(startBlock)) {
    // 仅支持文字段落
    return true;
  }

  return false;
}

var _ref = /*#__PURE__*/_createElement(MinusBetaNormal, null);

var _ref2 = /*#__PURE__*/_createElement(PlusBetaNormal, null);

export default function LetterSpacingMenu(props) {
  var menuItem = props.menuItem,
      controller = props.controller;

  var title = menuItem.title,
      rest = _objectWithoutPropertiesLoose(menuItem, ["title"]);

  var isDisabled = !canSetMark(controller);
  var letterSpacing = controller.query('getLetterSpacing');

  var handleMinusClick = function handleMinusClick() {
    var spacing = letterSpacing - STEP;
    if (spacing < MIN) return;
    controller.run('onAction', setLetterSpacing(spacing));
  };

  var handlePlusClick = function handlePlusClick() {
    var spacing = letterSpacing + STEP;
    if (spacing > MAX) return;
    controller.run('onAction', setLetterSpacing(spacing));
  };

  return /*#__PURE__*/_createElement(SubMenu, _extends({}, rest, {
    title: title,
    disabled: isDisabled
  }), /*#__PURE__*/_createElement(SpacingSet, null, /*#__PURE__*/_createElement(Button, {
    icon: _ref,
    style: commonButtonStyle,
    bordered: false,
    onClick: handleMinusClick,
    role: PluginRoles.letterSpacingMinus
  }), /*#__PURE__*/_createElement(SpacingValue, null, letterSpacing, "pt"), /*#__PURE__*/_createElement(Button, {
    icon: _ref2,
    style: commonButtonStyle,
    bordered: false,
    onClick: handlePlusClick,
    role: PluginRoles.letterSpacingPlus
  })));
}
//# sourceMappingURL=letterSpacingMenu.js.map