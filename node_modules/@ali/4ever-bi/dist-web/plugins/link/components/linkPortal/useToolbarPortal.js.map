{"version":3,"sources":["../../../../../../src/plugins/link/components/linkPortal/useToolbarPortal.tsx"],"names":["React","LinkToolbar","editLinkCard","handleLinkPlaceholder","useToolbarPortal","props","node","href","onRemove","onUnlink","controller","locale","onCopyLink","onCut","isLinkFocused","getLinkInfo","onToolbarSwitchStyle","onOpenlink","enableCard","onSwitchToEdit","showToolbar","portalRef","linkRef","hideToolbar","isPlaceholder","cardInfo","data","title","imgURL","desc","isEmptyHref","trim","length","useEffect","handleEdit","useCallback","run","handleLinkMouseDown","e","stopPropagation","preventDefault","handleLinkClick","handleClickoutside","event","target","current","contains","overlay","useMemo"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { LinkPortalProps } from '../../types';\nimport LinkToolbar from '../linkToolbar';\nimport { editLinkCard, handleLinkPlaceholder } from '../../actions';\n\ninterface ToolbarPortalProps extends LinkPortalProps {\n  onSwitchToEdit: () => void;\n  showToolbar: () => void;\n  hideToolbar: () => void;\n  portalRef: React.RefObject<HTMLDivElement>;\n  linkRef: React.RefObject<HTMLDivElement>;\n  isPlaceholder: boolean;\n}\n\ninterface IToolbarPortal {\n  overlay: React.ReactElement;\n  handleLinkMouseDown: (event: React.MouseEvent) => void;\n  handleLinkClick: (event: React.MouseEvent) => void;\n}\n\nconst useToolbarPortal = (props: ToolbarPortalProps): IToolbarPortal => {\n  const {\n    node,\n    href = '',\n    onRemove,\n    onUnlink,\n    controller,\n    locale,\n    onCopyLink,\n    onCut,\n    isLinkFocused,\n    getLinkInfo,\n    onToolbarSwitchStyle,\n    onOpenlink,\n    enableCard,\n    onSwitchToEdit,\n    showToolbar,\n    portalRef,\n    linkRef,\n    hideToolbar,\n    isPlaceholder,\n  } = props;\n\n  const cardInfo = node?.data.cardInfo || {};\n  const { title, imgURL, desc } = cardInfo;\n\n  const isEmptyHref = href.trim().length === 0;\n\n\n  // isLinkFocused 变化时主动隐藏\n  React.useEffect(() => {\n    // 对于占位符合首次插入链接，直接显示编辑框\n    if (isLinkFocused && (isPlaceholder || isEmptyHref)) {\n      onSwitchToEdit();\n    }\n  }, [isLinkFocused, isPlaceholder, isEmptyHref, onSwitchToEdit]);\n\n  const handleEdit = React.useCallback(() => {\n    // 清理所有状态，切换至编辑模式\n    onSwitchToEdit();\n    controller.run('onAction', editLinkCard());\n  }, [controller, onSwitchToEdit]);\n\n  const handleLinkMouseDown = React.useCallback((e: React.MouseEvent) => {\n    // 仅当链接是占位符，或者空链接，点击生效，显示编辑框\n    if ((isPlaceholder || isEmptyHref)) {\n      e.stopPropagation();\n      e.preventDefault();\n      onSwitchToEdit();\n    }\n    if (isPlaceholder) {\n      controller.run('onAction', handleLinkPlaceholder());\n    }\n  }, [controller, isPlaceholder, isEmptyHref, onSwitchToEdit]);\n\n  // 正常链接点击跳转\n  const handleLinkClick = React.useCallback((e: React.MouseEvent) => {\n    if (!isPlaceholder && !isEmptyHref) {\n      typeof onOpenlink === 'function' && onOpenlink();\n    }\n  }, [onOpenlink, isPlaceholder, isEmptyHref]);\n\n  const handleClickoutside = React.useCallback((event) => {\n    const target = event.target as HTMLElement;\n    if (target === linkRef.current || linkRef.current?.contains(target)) {\n      return;\n    }\n    hideToolbar();\n  }, []);\n\n  const overlay = React.useMemo(() => (\n    <LinkToolbar\n      ref={portalRef}\n      href={href}\n      title={title}\n      imgURL={imgURL}\n      desc={desc}\n      onEdit={handleEdit}\n      onRemove={onRemove}\n      onUnlink={onUnlink}\n      onHide={hideToolbar}\n      onCopy={onCopyLink}\n      onCut={onCut}\n      onOpenlink={onOpenlink}\n      onClickoutside={handleClickoutside}\n      getLinkInfo={getLinkInfo}\n      locale={locale}\n      enableCard={enableCard}\n      onToolbarSwitchStyle={onToolbarSwitchStyle}\n      onMouseLeave={hideToolbar}\n      onMouseEnter={showToolbar}\n      onCleanup={hideToolbar}\n    />\n  ),\n    [\n      portalRef,\n      href,\n      title,\n      imgURL,\n      desc,\n      handleEdit,\n      onRemove,\n      onUnlink,\n      locale,\n      onCopyLink,\n      onCut,\n      enableCard,\n      onOpenlink,\n    ]);\n\n  return {\n    overlay,\n    handleLinkMouseDown,\n    handleLinkClick,\n  };\n};\n\nexport default useToolbarPortal;\n"],"file":"useToolbarPortal.js"}