{"version":3,"sources":["../../../../../src/plugins/link/components/textLink.tsx"],"names":["React","isFirstPart","LinkPlugin","ToolbarLinkNormal","Link","LinkCardWrapper","PlaceholerLinkWrapper","saveLinkCard","updateLink","cutLink","removeLink","updateLinkWithCardInfo","switchDisplayType","switchLink2Card","injectCardInfo","removeInjectCardInfo","copyLink","unwrapLinkCard","LinkPortal","LinkCardPortal","getCardInfo","getLinkCardState","convertTextLinkToBlockLinkCard","InlinePlaceholder","normalizeLink","openLink","TextLink","props","controller","node","locale","attributes","children","protocolAllowList","onCopyLink","getLinkInfo","isSelected","defaultDisplayType","displayType","enableCard","draggable","openLinkOfConfig","enableLinkCardBlock","mountRoot","value","selection","document","data","href","cardInfo","cardTitle","title","cardImgURL","imgURL","cardDesc","desc","text","query","handleRemove","useCallback","run","handleCut","handleSave","newText","newHref","fixedHref","length","fixedText","handleRefresh","info","newInfo","handleToolbarSwitchStyle","handleUnlink","isPlaceholder","addLinkPlaceholder","handleVisit","isCollapsed","normalizedLink","handleCopy","isLinkFocused","useMemo","isFocused","showPlaceholder","link","maxSz","fontSize","firstPart","placeholdLink","injections","showCard","cardState","isTitleEqualsHref","trim","cardText","actualTitle"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Controller, RenderNodeProps } from '@ali/4ever-cangjie';\nimport { isFirstPart, LinkPlugin } from '@ali/4ever-bamboo';\nimport { ToolbarLinkNormal } from '@ali/we-design';\nimport { Link, LinkCardWrapper, PlaceholerLinkWrapper } from './styled';\nimport { LinkPluginConfig, LinkNode, CardInfo, LinkDisplayType, ILinkCardInfo } from '../types';\nimport {\n  saveLinkCard,\n  updateLink,\n  cutLink,\n  removeLink,\n  updateLinkWithCardInfo,\n  switchDisplayType,\n  switchLink2Card,\n  injectCardInfo,\n  removeInjectCardInfo,\n  copyLink,\n  unwrapLinkCard\n} from '../actions';\nimport LinkPortal from './linkPortal/linkPortal';\nimport LinkCardPortal from './card/LinkCardPortal';\nimport { getCardInfo, getLinkCardState, getLinkDefaultSz } from '../utils';\nimport { BiPluginConfig } from '../../../types';\nimport { convertTextLinkToBlockLinkCard } from '../linkCard/actions';\nimport { InlinePlaceholder } from '@ali/we-toolbar';\n\nconst { normalizeLink, openLink } = LinkPlugin;\n\ninterface TextLinkProps extends RenderNodeProps<LinkNode> {\n  locale: LinkPluginConfig['locale'];\n  protocolAllowList: string[];\n  onCopyLink?: (href: string) => void;\n  getLinkInfo?: (href: string) => Promise<CardInfo>;\n  controller: Controller;\n  displayType: LinkDisplayType;\n  // todo 全量后下线配置\n  enableCard: boolean;\n  draggable?: BiPluginConfig['DraggablePluginConfig'];\n  openLink?: (href: string) => void;\n  enableLinkCardBlock?: boolean;\n  mountRoot?: boolean;\n}\n\n\nconst TextLink: React.FC<TextLinkProps> = (props) => {\n  const {\n    controller,\n    node,\n    locale,\n    attributes,\n    children,\n    protocolAllowList,\n    onCopyLink,\n    getLinkInfo,\n    isSelected,\n    displayType: defaultDisplayType,\n    enableCard,\n    draggable,\n    openLink: openLinkOfConfig,\n    enableLinkCardBlock,\n    mountRoot\n  } = props;\n  const { selection, document } = controller.value;\n\n  const { href = '', cardInfo } = node.data;\n\n  const { title: cardTitle, imgURL: cardImgURL, desc: cardDesc } = cardInfo || {};\n\n  const text = controller.query('getText', { node }) || '';\n\n  const handleRemove = React.useCallback(() => {\n    controller.run('onAction', removeLink(node));\n  }, [controller, node]);\n\n  const handleCut = React.useCallback(() => {\n    controller.run('onAction', cutLink(node));\n  }, [controller, node]);\n\n  const handleSave = React.useCallback(\n    async (newText: string, newHref: string, displayType: LinkDisplayType) => {\n      // 编辑框允许 href 或 text 为空字符串，转为卡片时需要保证都不为空\n      const fixedHref = newHref.length > 0 ? newHref : newText;\n      const fixedText = newText.length > 0 ? newText : newHref;\n      // 如果保存为卡片形式形式，\n      if (displayType === 'card' && getLinkInfo && typeof getLinkInfo === 'function') {\n        // 保存为卡片\n        if (enableLinkCardBlock) {\n          // 保存为 block linkCard\n          controller.run('onAction', convertTextLinkToBlockLinkCard(node, fixedText, fixedHref));\n        } else {\n          // 保存为 inline linkCard\n          controller.run('onAction', saveLinkCard(node, fixedText, fixedHref));\n        }\n      } else if (defaultDisplayType === 'card') {\n        controller.run('onAction', updateLinkWithCardInfo(node, fixedText, fixedHref, { displayType: 'link' }));\n      } else {\n        controller.run('onAction', updateLink(node, newText, newHref));\n      }\n      controller.run('onCangjieFocus');\n    },\n    [controller, node, defaultDisplayType, getLinkInfo, enableLinkCardBlock],\n  );\n\n  const handleRefresh = React.useCallback(\n    async () => {\n      if (getLinkInfo && typeof getLinkInfo === 'function') {\n        // 先设置卡片状态为 loading，刷新无需为节点注入信息\n        controller.run('onAction', injectCardInfo(node, { displayType: 'card' }));\n        try {\n          const info = await getLinkInfo(href);\n          if (info) {\n            // 请求成功\n            const { imgURL, title, desc } = info;\n            const newInfo: ILinkCardInfo = { imgURL, title, desc, displayType: 'card' };\n            controller.run('onAction', removeInjectCardInfo(node));\n            controller.run('onAction', updateLinkWithCardInfo(node, text, href, newInfo));\n            controller.run('onCangjieFocus');\n            // 清理临时状态\n            return;\n          }\n        } catch (e) {\n          console.debug(e);\n        }\n        // 请求失败,将状态设置为 error，数据填充 undefined\n        controller.run('onAction', removeInjectCardInfo(node));\n        controller.run('onAction', updateLinkWithCardInfo(node, text, href, { displayType: 'card' }));\n      }\n      controller.run('onCangjieFocus');\n    }, [controller, getLinkInfo, text, href, node],\n  );\n\n  const handleToolbarSwitchStyle = React.useCallback((newHref: string, displayType: LinkDisplayType, title?: string, desc?: string, imgURL?: string) => {\n    // 当 displayType 为 link 时，没有发生 url 转卡片，不保存 CardInfo\n    if (displayType === 'link') {\n      controller.run('onAction', switchDisplayType(node, displayType));\n    } else {\n      const newInfo: ILinkCardInfo = { imgURL, title, desc, displayType };\n      if (enableLinkCardBlock) {\n        // 保存为 block linkCard\n        controller.run('onAction', convertTextLinkToBlockLinkCard(node, text, newHref, newInfo));\n      } else {\n        // 保存为 inline linkCard\n        controller.run('onAction', switchLink2Card(node, text, newHref, newInfo));\n      }\n    }\n  }, [controller, node, text, enableLinkCardBlock]);\n\n  const handleUnlink = React.useCallback(() => {\n    const isPlaceholder = text === locale.addLinkPlaceholder && href === ''\n    if (isPlaceholder) {\n      // 在占位符进行取消链接时，直接执行删除，来自：https://work.aone.alibaba-inc.com/issue/34949369\n      controller.run('onAction', removeLink(node));\n    } else {\n      controller.run('onAction', unwrapLinkCard(node));\n    }\n\n  }, [controller, node, text]);\n\n  const handleVisit = React.useCallback(\n    () => {\n      const isCollapsed = controller.value.selection.isCollapsed;\n      if (!isCollapsed) return;\n      if (openLinkOfConfig) {\n        const normalizedLink = normalizeLink(href, protocolAllowList);\n        openLinkOfConfig(normalizedLink);\n      } else {\n        openLink(href, protocolAllowList);\n      }\n    },\n    [href, protocolAllowList, openLinkOfConfig],\n  );\n\n  const handleCopy = React.useCallback(\n    () => {\n      // 卡片形式下，使用仓颉复制\n      controller.run('onAction', copyLink(node));\n      if (onCopyLink && typeof onCopyLink === 'function') {\n        onCopyLink(href);\n      }\n    },\n    [href, onCopyLink, node, controller],\n  );\n\n  const isLinkFocused = React.useMemo(() => {\n    return controller.value.isFocused && isSelected && selection && selection.isCollapsed;\n  }, [controller.value.isFocused, isSelected, selection]);\n\n  // 当节点的文本为占位符文本时，显示占位符样式；其余情况显示默认链接样式\n  const showPlaceholder = text === locale.addLinkPlaceholder && href === '';\n\n  const link = (\n    <Link {...attributes} data-type=\"link\" data-testid=\"link\" className=\"link\">\n      {children()}\n    </Link>\n  );\n\n  const { fontSize: maxSz } = React.useMemo(() => controller.query('getLinkMaxSz', { node }), [node, controller]);\n  const firstPart = isFirstPart(node);\n\n  const placeholdLink = (\n    <PlaceholerLinkWrapper\n      {...attributes}\n      data-type=\"link\"\n      data-testid=\"link\"\n    >\n      <InlinePlaceholder\n        icon={firstPart ? <ToolbarLinkNormal className=\"link-placeholder-icon\" /> : null}\n        type=\"normal\"\n        isSelected={isLinkFocused}\n        style={{ fontSize: maxSz }}\n      >\n        {children()}\n      </InlinePlaceholder>\n    </PlaceholerLinkWrapper>\n  )\n\n  const { injections } = controller.value;\n  const showCard = getCardInfo(node, injections)?.displayType === 'card';\n  const cardState = getLinkCardState(false, node, injections);\n  const isTitleEqualsHref = text.trim() === href.trim();\n  const cardText = isTitleEqualsHref ? '' : text;\n  const actualTitle = isTitleEqualsHref ? cardTitle : text;\n\n  return (\n    (showCard || defaultDisplayType === 'card')\n      ?\n      <LinkCardWrapper>\n        <LinkCardPortal\n          {...props}\n          controller={controller}\n          locale={locale}\n          onSave={handleSave}\n          onRemove={handleRemove}\n          onCut={handleCut}\n          onUnlink={handleUnlink}\n          href={href}\n          text={cardText}\n          title={actualTitle}\n          state={cardState}\n          displayType={defaultDisplayType}\n          isSelected={isSelected}\n          readonly={false}\n          isMobile={false}\n          imgURL={cardImgURL}\n          desc={cardDesc}\n          onOpenLink={handleVisit}\n          onRefresh={handleRefresh}\n          onCopyLink={handleCopy}\n          node={node}\n          attributes={attributes}\n          draggable={draggable}\n          enableCard={enableCard}\n        />\n      </LinkCardWrapper>\n      :\n      <LinkPortal\n        controller={controller}\n        node={node}\n        href={href}\n        text={cardText}\n        locale={locale}\n        onSave={handleSave}\n        onCut={handleCut}\n        onRemove={handleRemove}\n        onUnlink={handleUnlink}\n        onOpenlink={handleVisit}\n        onCopyLink={handleCopy}\n        getLinkInfo={getLinkInfo}\n        isLinkFocused={isLinkFocused}\n        onToolbarSwitchStyle={handleToolbarSwitchStyle}\n        enableCard={enableCard}\n        mountRoot={mountRoot}\n      >\n        {showPlaceholder ? placeholdLink : link}\n      </LinkPortal>\n  );\n};\n\nexport default TextLink;\n"],"file":"textLink.js"}