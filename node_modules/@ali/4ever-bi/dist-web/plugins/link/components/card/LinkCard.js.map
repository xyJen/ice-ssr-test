{"version":3,"sources":["../../../../../../src/plugins/link/components/card/LinkCard.tsx"],"names":["React","styled","theme","URLLinkCard","link","height","width","margin","LINK_WIDTH","Wrapper","span","noop","LinkCard","memo","props","state","href","controller","title","imgURL","desc","locale","displayStyle","displayType","onCopy","onRefresh","onOpenLink","onSwitchStyle","onCut","onDelete","isMobile","isSelected","rest","urlInfo","useMemo","triggerNodeRef","useRef","handleCopyLink","useCallback","linkCardLocale","tooltipLocale","editTooltip","edit","copyTooltip","copy","unlinkTooltip","unlink","deleteTooltip","switchStyleTooltip","styleText","handleSwitchStyle","style","finalWidth"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { theme } from '@ali/4ever-bamboo';\nimport { URLLinkCard } from '@ali/we-biz-link-card';\nimport { LinkDisplayType, LinkPluginConfig } from '../../types';\n\nconst { height, width, margin } = theme.link;\nconst LINK_WIDTH = 350;\ninterface IOwnProps {\n  controller?: Controller;\n  isSelected?: boolean;\n}\ninterface ITooltipLocale {\n  editTooltip?: string;\n  copyTooltip?: string;\n  unlinkTooltip?: string;\n  deleteTooltip?: string;\n  switchStyleTooltip?: string;\n}\ninterface IProps extends IOwnProps {\n  title?: string;\n  desc?: string;\n  imgURL?: string;\n  locale: LinkPluginConfig['locale'];\n  state: CardState;\n  href: string;\n  readonly: boolean;\n  isMobile: boolean;\n  isSelected?: boolean;\n  displayType: LinkDisplayType;\n  onEdit?: () => void; // 编辑\n  onCopy?: (href: string) => void; // 复制\n  onCut?: () => void; // 剪切\n  onUnlink?: () => void; // 取消链接\n  onDelete?: () => void; // 删除\n  onRefresh?: () => void;\n  onSwitchStyle?: (style: LinkDisplayType) => void;\n  onOpenLink?: () => void;\n}\n\nexport type CardState = 'loading' | 'error' | 'normal';\n\nconst Wrapper = styled.span`\n  cursor: default;\n  display: inline-block;\n  line-height: normal;\n  box-sizing: content-box;\n  border-radius: 8px;\n`;\n\n\nconst noop = () => { };\n\nexport const LinkCard = React.memo((props: IProps) => {\n  const {\n    state,\n    href,\n    controller,\n    title = '',\n    imgURL = '',\n    desc = '',\n    locale,\n    displayType: displayStyle,\n    onCopy = noop,\n    onRefresh = noop,\n    onOpenLink = noop,\n    onSwitchStyle = noop,\n    onCut = noop,\n    onDelete = noop,\n    isMobile,\n    isSelected = false,\n    ...rest\n  } = props;\n\n  const urlInfo = React.useMemo(() => ({\n    title,\n    imgURL,\n    desc,\n  }), [title, imgURL, desc]);\n\n  const triggerNodeRef = React.useRef<HTMLSpanElement>();\n\n  const handleCopyLink = React.useCallback(() => {\n    if (onCopy && typeof onCopy === 'function') {\n      onCopy(href || '');\n    }\n  }, [onCopy, href]);\n\n  const linkCardLocale = React.useMemo(() => {\n    const tooltipLocale: ITooltipLocale = {\n      editTooltip: locale.edit,\n      copyTooltip: locale.copy,\n      unlinkTooltip: locale.unlink,\n      deleteTooltip: locale.delete,\n      switchStyleTooltip: locale.styleText,\n    };\n    return { ...locale, ...tooltipLocale };\n  }, [locale]);\n\n  const handleSwitchStyle = React.useCallback((style: 'indoc' | 'popup') => {\n    onSwitchStyle(style === 'popup' ? 'link' : 'card');\n  }, [onSwitchStyle]);\n\n  // 当链接呼出卡片时，显示宽度需要调整\n  const finalWidth = displayStyle === 'link' ? LINK_WIDTH : width;\n\n  return (\n    <Wrapper ref={triggerNodeRef} style={{ height: height, width: finalWidth, margin: margin }}>\n      <URLLinkCard\n        isSelected={isSelected}\n        cardStyle={displayStyle === 'link' ? 'popup' : 'indoc'}\n        state={state}\n        url={href}\n        locale={linkCardLocale}\n        urlInfo={urlInfo}\n        isMobile={isMobile}\n        onRefresh={onRefresh}\n        onCopy={handleCopyLink}\n        onOpenURL={onOpenLink}\n        onSwitchStyle={handleSwitchStyle}\n        onDelete={onDelete}\n        onCut={onCut}\n        editBtnTestID=\"link-toolbar-edit\"\n        copyBtnTestID=\"link-toolbar-copy\"\n        cutBtnTestID=\"link-toolbar-cut\"\n        unlinkBtnTestID=\"link-toolbar-unlink\"\n        deleteBtnTestID=\"link-toolbar-remove\"\n        switchStyleBtnTestID=\"link-toolbar-switch\"\n        linkStyleBtnTestID=\"link-toolbar-switch-link\"\n        cardStyleBtnTestID=\"link-toolbar-switch-card\"\n        cardTestID=\"link-card\"\n        {...rest}\n      />\n    </Wrapper>\n  );\n});\n\n"],"file":"LinkCard.js"}