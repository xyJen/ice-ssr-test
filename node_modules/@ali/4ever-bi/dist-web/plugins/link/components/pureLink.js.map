{"version":3,"sources":["../../../../../src/plugins/link/components/pureLink.tsx"],"names":["React","copyToClipboard","LinkPlugin","Link","LinkCardWrapper","removePureLink","updatePureLink","unwrapPureLink","updatePureLinkWithCardInfo","cutPureLink","LinkPortal","getCardInfo","LinkCard","convertPureLinkToBlockLinkCard","normalizeLink","openLink","isSelectionInPureLink","node","selection","startOffset","endOffset","anchor","key","isCollapsed","isTextPoint","offset","PureLink","props","children","attributes","controller","locale","protocolAllowList","onCopyLink","text","mark","getLinkInfo","enableCard","openLinkOfConfig","enableLinkCardBlock","mountRoot","href","data","offsetInNode","value","isLinkFocus","useMemo","length","handleRemove","useCallback","run","handleSave","t","h","displayType","fixedHref","fixedText","onToolbarSwitchStyle","newHref","title","desc","imgURL","cardInfo","handleUnlink","handleVisit","normalizedLink","handleCopy","handleCut","injections","showCard"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { RenderMarkProps, Controller, Text, Selection } from '@ali/4ever-cangjie';\nimport { copyToClipboard, LinkPlugin } from '@ali/4ever-bamboo';\nimport { Link, LinkCardWrapper } from './styled';\nimport { LinkPluginConfig, CardInfo, LinkDisplayType, ILinkCardInfo } from '../types';\nimport { removePureLink, updatePureLink, unwrapPureLink, updatePureLinkWithCardInfo, cutPureLink } from '../actions';\nimport LinkPortal from './linkPortal/linkPortal';\nimport { getCardInfo } from '../utils';\nimport { LinkCard } from './card/LinkCard';\nimport { convertPureLinkToBlockLinkCard } from '../linkCard/actions';\n\nconst { normalizeLink, openLink } = LinkPlugin;\n\ninterface PureLinkProps extends RenderMarkProps {\n  controller: Controller;\n  locale: LinkPluginConfig['locale'];\n  protocolAllowList: string[];\n  onCopyLink?: (href: string) => void;\n  getLinkInfo?: (href: string) => Promise<CardInfo>;\n  // todo 全量后下线配置\n  enableCard: boolean;\n  openLink?: (href: string) => void;\n  enableLinkCardBlock?: boolean;\n  mountRoot?: boolean;\n}\n\nconst isSelectionInPureLink = (node: Text, selection: Selection, startOffset: number, endOffset: number) => {\n  const { anchor } = selection;\n  if (node.key === anchor.key && selection.isCollapsed && anchor.isTextPoint()) {\n    return anchor.offset >= startOffset && anchor.offset <= endOffset;\n  }\n\n  return false;\n}\n\nconst PureLink: React.FC<PureLinkProps> = (props) => {\n  const {\n    children,\n    attributes,\n    controller,\n    node,\n    locale,\n    protocolAllowList,\n    onCopyLink,\n    offset,\n    text,\n    mark,\n    getLinkInfo,\n    enableCard,\n    openLink: openLinkOfConfig,\n    enableLinkCardBlock,\n    mountRoot,\n  } = props;\n\n  const href = mark.data.href as string || text;\n  const offsetInNode = mark.data.offsetInNode as number || offset;\n\n  const { selection } = controller.value;\n\n  // 这里需要使用 text 而不是 href 的 length，\n  // 因为在 pi 中，一旦链接换行，text 会拆分为两个不同的 leaf，导致光标定位异常\n  const isLinkFocus = React.useMemo(() => isSelectionInPureLink(node as Text, selection, offset, offset + text.length), [\n    node, selection, offset, text]);\n\n  const handleRemove = React.useCallback(() => {\n    controller.run('onAction', removePureLink(node as Text, offsetInNode, href));\n  }, [node, offsetInNode, href, controller]);\n\n  const handleSave = React.useCallback(\n    (t: string, h: string, displayType: LinkDisplayType) => {\n      // 如果保存为卡片形式形式，\n      if (displayType === 'card' && getLinkInfo && typeof getLinkInfo === 'function') {\n        // 编辑框允许 href 或 text 为空字符串，转为卡片时需要保证都不为空\n        const fixedHref = h.length > 0 ? h : t;\n        const fixedText = t.length > 0 ? t : h;\n        // 请求前先填充 undefined 信息，确保数据层识别为卡片，解决 loading 时排版问题\n        // todo 排版 2.0 后删除下面代码\n        if (enableLinkCardBlock) {\n          controller.run('onAction', convertPureLinkToBlockLinkCard(node as Text, offsetInNode, fixedText, fixedHref, href, { displayType }, true));\n        } else {\n          controller.run('onAction', updatePureLinkWithCardInfo(node as Text, offsetInNode, fixedText, fixedHref, href, { displayType }, true));\n        }\n      } else {\n        controller.run(\n          'onAction',\n          updatePureLink(node as Text, offsetInNode, t, h, href),\n        );\n      }\n      controller.run('onCangjieFocus');\n    },\n    [node, offsetInNode, href, controller, getLinkInfo, enableLinkCardBlock],\n  );\n\n  const onToolbarSwitchStyle = React.useCallback((newHref: string, displayType: LinkDisplayType, title?: string, desc?: string, imgURL?: string) => {\n    // 当 displayType 为 link 时，没有发生 url 转卡片，不保存 CardInfo\n    if (displayType === 'card') {\n      const cardInfo: ILinkCardInfo = { imgURL, title, desc, displayType };\n      if (enableLinkCardBlock) {\n        controller.run('onAction', convertPureLinkToBlockLinkCard(node as Text, offsetInNode, text, newHref, newHref, cardInfo));\n      } else {\n        controller.run('onAction', updatePureLinkWithCardInfo(node as Text, offsetInNode, text, newHref, newHref, cardInfo));\n      }\n    }\n  }, [controller, href, node, offsetInNode, text, enableLinkCardBlock]);\n\n  const handleUnlink = React.useCallback(() => {\n    controller.run('onAction', unwrapPureLink(node as Text, offsetInNode, href));\n  }, [node, offsetInNode, href, controller]);\n\n  const handleVisit = React.useCallback(\n    () => {\n      if (openLinkOfConfig) {\n        const normalizedLink = normalizeLink(href, protocolAllowList);\n        openLinkOfConfig(normalizedLink);\n      } else {\n        openLink(href, protocolAllowList);\n      }\n    },\n    [href, protocolAllowList, openLinkOfConfig],\n  );\n\n  const handleCopy = React.useCallback(\n    () => {\n      // 卡片形式下，使用仓颉复制\n      copyToClipboard(href, onCopyLink);\n    },\n    [href, onCopyLink],\n  );\n\n  const handleCut = React.useCallback(\n    () => {\n      controller.run('onAction', cutPureLink(node as Text, offsetInNode, href));\n    },\n    [node, offsetInNode, href, controller],\n  );\n\n  const { injections } = controller.value;\n  const showCard = getCardInfo(node, injections)?.displayType === 'card';\n  return (\n    <>\n      {\n        enableCard && showCard\n          ?\n          <LinkCardWrapper {...attributes}>\n            <LinkCard\n              state={'loading'}\n              href={href}\n              displayType={'card'}\n              controller={controller}\n              readonly={false}\n              isMobile={false}\n              locale={locale}\n            />\n          </LinkCardWrapper>\n          :\n          <LinkPortal\n            controller={controller}\n            locale={locale}\n            text=\"\"\n            href={href}\n            onSave={handleSave}\n            onRemove={handleRemove}\n            onUnlink={handleUnlink}\n            onCopyLink={handleCopy}\n            onCut={handleCut}\n            getLinkInfo={getLinkInfo}\n            onToolbarSwitchStyle={onToolbarSwitchStyle}\n            onOpenlink={handleVisit}\n            enableCard={enableCard}\n            isLinkFocused={isLinkFocus}\n            mountRoot={mountRoot}\n          >\n            <Link {...attributes} data-type=\"link\" data-testid=\"pure-link\" className=\"link\">\n              {children()}\n            </Link>\n          </LinkPortal>\n      }\n    </>\n\n  );\n};\n\nexport default PureLink;\n"],"file":"pureLink.js"}