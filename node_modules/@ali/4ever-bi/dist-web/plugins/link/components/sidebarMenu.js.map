{"version":3,"sources":["../../../../../src/plugins/link/components/sidebarMenu.tsx"],"names":["React","Input","logger","actions","PLACEHOLDER","SetInlineHrefMenu","props","dataValue","controller","value","document","focusInline","parent","getParent","key","isParentClickable","isElement","type","data","href","useState","setValue","inputRef","useRef","handleBlur","useCallback","event","run","updateLink","text","sum","unwrapLink","wrapLink","selection","undefined","handleEnter","stopPropagation","preventDefault","current","blur","handleChange","target","handleFocus"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Controller, Inline } from '@ali/4ever-cangjie';\nimport { Input } from '@ali/we-design';\nimport logger from '@ali/4ever-logger';\nimport * as actions from '../actions';\n\nconst PLACEHOLDER = 'https://';\n\nexport interface ILinkMenuProps {\n  controller: Controller;\n}\n\nexport const SetInlineHrefMenu = (props: ILinkMenuProps) => {\n  let dataValue;\n  const { controller } = props;\n  const { document, focusInline } = controller.value;\n  const parent = document.getParent(focusInline?.key) as Inline;\n  const isParentClickable = parent?.isElement() && parent.type === 'link';\n  if (isParentClickable) {\n    dataValue = parent.data.href;\n  }\n  const [value, setValue] = React.useState(dataValue);\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const handleBlur: React.FocusEventHandler<HTMLInputElement> = React.useCallback((event) => {\n    if (isParentClickable) {\n      if (value && value !== PLACEHOLDER) {\n        controller.run('onAction', actions.updateLink(parent!, parent.data.text || '', value));\n        logger.sum('sidebar-link-update-link');\n      } else {\n        controller.run('onAction', actions.unwrapLink());\n        setValue('');\n        logger.sum('sidebar-link-unwrap-link');\n      }\n    } else if (value && value !== PLACEHOLDER) {\n      controller.run('onAction', actions.wrapLink(controller.value.selection));\n      const parent = controller.value.document.getParent(focusInline?.key) as Inline;\n      if (!parent) {\n        return undefined;\n      }\n      controller.run('onAction', actions.updateLink(parent, '', value));\n      logger.sum('sidebar-link-wrap-link');\n    } else {\n      setValue('');\n    }\n  }, [isParentClickable, parent, value, controller]);\n\n  const handleEnter: React.KeyboardEventHandler<HTMLInputElement> = React.useCallback(() => {\n    event?.stopPropagation();\n    event?.preventDefault();\n    inputRef.current?.blur();\n  }, []);\n\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = React.useCallback((event) => {\n    setValue(event.target.value);\n  }, []);\n\n  const handleFocus: React.FocusEventHandler<HTMLInputElement> = React.useCallback((event) => {\n    if (!value) {\n      setValue(PLACEHOLDER);\n    }\n  }, []);\n\n  return (\n    <Input\n      placeholder={PLACEHOLDER}\n      onChange={handleChange}\n      onBlur={handleBlur}\n      onEnter={handleEnter}\n      onFocus={handleFocus}\n      value={value}\n      ref={inputRef}\n      allowClear\n      disabled={!focusInline}\n    />\n  );\n};\n"],"file":"sidebarMenu.js"}