import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { CopyBetaNormal, DeleteBetaNormal, DeleteLinkNormal, EditorBorderBetaNormal, Tooltip } from '@ali/we-design';
import { ToolbarIconWrapper } from "./styled";

var _ref = /*#__PURE__*/_createElement(EditorBorderBetaNormal, null);

var _ref2 = /*#__PURE__*/_createElement(CopyBetaNormal, null);

var _ref3 = /*#__PURE__*/_createElement(DeleteBetaNormal, null);

var _ref4 = /*#__PURE__*/_createElement(DeleteLinkNormal, null);

var ToolbarIcon = function ToolbarIcon(props) {
  var onMouseDown = props.onMouseDown,
      type = props.type,
      tip = props.tip,
      rest = _objectWithoutPropertiesLoose(props, ["onMouseDown", "type", "tip"]);

  var icon;

  switch (type) {
    case 'editor-border-beta':
      icon = _ref;
      break;

    case 'copy-beta':
      icon = _ref2;
      break;

    case 'delete-beta':
      icon = _ref3;
      break;

    case 'delete-link-beta':
      icon = _ref4;
      break;

    default:
      break;
  }

  return /*#__PURE__*/_createElement(Tooltip, {
    title: tip,
    placement: "bottom"
  }, /*#__PURE__*/_createElement(ToolbarIconWrapper, _extends({
    onMouseDown: onMouseDown
  }, rest), icon));
};

export default /*#__PURE__*/React.memo(ToolbarIcon);
//# sourceMappingURL=ToolbarIcon.js.map