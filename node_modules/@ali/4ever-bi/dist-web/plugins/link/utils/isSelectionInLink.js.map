{"version":3,"sources":["../../../../../src/plugins/link/utils/isSelectionInLink.ts"],"names":["Inline","isSelectionInLink","value","document","selection","startKey","getStart","key","linkBlock","getClosest","node","isInline","type","Boolean","tryGetSelectedLinkPlaceholder","placeholder","linkNode","data","href","text"],"mappings":"AAAA,SAAgBA,MAAhB,QAAqC,oBAArC;AAGA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAyC;AACtD,MAAI,CAACA,KAAL,EAAY;AACV,WAAO,KAAP;AACD;;AAHqD,MAK9CC,QAL8C,GAKtBD,KALsB,CAK9CC,QAL8C;AAAA,MAKpCC,SALoC,GAKtBF,KALsB,CAKpCE,SALoC;;AAOtD,MAAI,CAACA,SAAL,EAAgB;AACd,WAAO,KAAP;AACD;;AAED,MAAMC,QAAQ,GAAGD,SAAS,CAACE,QAAV,CAAmBH,QAAnB,EAA6BI,GAA9C;;AAEA,MAAI,CAACF,QAAL,EAAe;AACb,WAAO,KAAP;AACD;;AAED,MAAMG,SAAS,GAAGL,QAAQ,CAACM,UAAT,CAChBJ,QADgB,EAEhB,UAACK,IAAD;AAAA,WAAUV,MAAM,CAACW,QAAP,CAAgBD,IAAhB,KAAyBA,IAAI,CAACE,IAAL,KAAc,MAAjD;AAAA,GAFgB,CAAlB;AAKA,SAAOC,OAAO,CAACL,SAAD,CAAd;AACD;AAED,OAAO,SAASM,6BAAT,CAAuCZ,KAAvC,EAAqDa,WAArD,EAAyF;AAC9F,MAAI,CAACb,KAAL,EAAY;AACV,WAAO,IAAP;AACD;;AAH6F,MAKtFC,QALsF,GAK9DD,KAL8D,CAKtFC,QALsF;AAAA,MAK5EC,SAL4E,GAK9DF,KAL8D,CAK5EE,SAL4E;;AAO9F,MAAI,CAACA,SAAL,EAAgB;AACd,WAAO,IAAP;AACD;;AAED,MAAMC,QAAQ,GAAGD,SAAS,CAACE,QAAV,CAAmBH,QAAnB,EAA6BI,GAA9C;;AAEA,MAAI,CAACF,QAAL,EAAe;AACb,WAAO,IAAP;AACD;;AAED,MAAMW,QAAQ,GAAGb,QAAQ,CAACM,UAAT,CACfJ,QADe,EAEf,UAACK,IAAD;AAAA,WAAUV,MAAM,CAACW,QAAP,CAAgBD,IAAhB,KAAyBA,IAAI,CAACE,IAAL,KAAc,MAAvC,IACLF,IAAI,CAACO,IAAL,CAAUC,IAAV,KAAmB,EADd,IACoBR,IAAI,CAACS,IAAL,KAAcJ,WAD5C;AAAA,GAFe,CAAjB;AAMA,SAAOC,QAAP;AACD","sourcesContent":["import { Value, Inline, Block } from '@ali/4ever-cangjie';\nimport { LinkNode } from '../types';\n\nexport default function isSelectionInLink(value: Value) {\n  if (!value) {\n    return false;\n  }\n\n  const { document, selection } = value;\n\n  if (!selection) {\n    return false;\n  }\n\n  const startKey = selection.getStart(document).key;\n\n  if (!startKey) {\n    return false;\n  }\n\n  const linkBlock = document.getClosest(\n    startKey,\n    (node) => Inline.isInline(node) && node.type === 'link',\n  ) as Block;\n\n  return Boolean(linkBlock);\n}\n\nexport function tryGetSelectedLinkPlaceholder(value: Value, placeholder: string): LinkNode|null {\n  if (!value) {\n    return null;\n  }\n\n  const { document, selection } = value;\n\n  if (!selection) {\n    return null;\n  }\n\n  const startKey = selection.getStart(document).key;\n\n  if (!startKey) {\n    return null;\n  }\n\n  const linkNode = document.getClosest(\n    startKey,\n    (node) => Inline.isInline(node) && node.type === 'link'\n      && node.data.href === '' && node.text === placeholder,\n  ) as LinkNode;\n\n  return linkNode;\n}\n"],"file":"isSelectionInLink.js"}