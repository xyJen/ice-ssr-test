{"version":3,"sources":["../../../../src/plugins/link/createRenderMark.tsx"],"names":["React","PureLink","isLinkNode","createRenderMark","linkConfig","locale","protocolAllowList","onCopyLink","getLinkInfo","enableCard","openLink","enableLinkCardBlock","mountRoot","renderMark","props","controller","next","mark","marks","node","type","find","document","value","inline","getClosestInline","key"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAC5B,OAAOC,QAAP;AAEA,SAASC,UAAT;AAEA,eAAe,SAASC,gBAAT,CACbC,UADa,EAES;AAAA,MAEpBC,MAFoB,GAUlBD,UAVkB,CAEpBC,MAFoB;AAAA,MAGpBC,iBAHoB,GAUlBF,UAVkB,CAGpBE,iBAHoB;AAAA,MAIpBC,UAJoB,GAUlBH,UAVkB,CAIpBG,UAJoB;AAAA,MAKpBC,WALoB,GAUlBJ,UAVkB,CAKpBI,WALoB;AAAA,8BAUlBJ,UAVkB,CAMpBK,UANoB;AAAA,MAMpBA,UANoB,sCAMP,KANO;AAAA,MAOpBC,QAPoB,GAUlBN,UAVkB,CAOpBM,QAPoB;AAAA,MAQpBC,mBARoB,GAUlBP,UAVkB,CAQpBO,mBARoB;AAAA,8BAUlBP,UAVkB,CASpBQ,SAToB;AAAA,MASpBA,SAToB,sCASR,KATQ;AAWtB,SAAO,SAASC,UAAT,CAAoBC,KAApB,EAA4CC,UAA5C,EAAwDC,IAAxD,EAA8D;AAAA,QAC3DC,IAD2D,GACrCH,KADqC,CAC3DG,IAD2D;AAAA,QACrDC,KADqD,GACrCJ,KADqC,CACrDI,KADqD;AAAA,QAC9CC,IAD8C,GACrCL,KADqC,CAC9CK,IAD8C;;AAEnE,QAAIF,IAAI,CAACG,IAAL,KAAc,MAAd,IAAwB,CAACF,KAAK,CAACG,IAAN,CAAW;AAAA,UAAGD,IAAH,QAAGA,IAAH;AAAA,aAAcA,IAAI,KAAK,QAAvB;AAAA,KAAX,CAA7B,EAA0E;AAAA,UAChEE,QADgE,GACnDP,UAAU,CAACQ,KADwC,CAChED,QADgE;AAExE,UAAME,MAAM,GAAGF,QAAQ,CAACG,gBAAT,CAA0BN,IAAI,CAACO,GAA/B,CAAf;;AACA,UAAI,CAACxB,UAAU,CAACsB,MAAD,CAAf,EAAyB;AACvB;AACA,4BACE,eAAC,QAAD,eACMV,KADN;AAEE,UAAA,UAAU,EAAEC,UAFd;AAGE,UAAA,iBAAiB,EAAET,iBAAiB,IAAI,EAH1C;AAIE,UAAA,MAAM,EAAED,MAJV;AAKE,UAAA,UAAU,EAAEE,UALd;AAME,UAAA,WAAW,EAAEC,WANf;AAOE,UAAA,UAAU,EAAEC,UAPd;AAQE,UAAA,QAAQ,EAAEC,QARZ;AASE,UAAA,mBAAmB,EAAEC,mBATvB;AAUE,UAAA,SAAS,EAAEC;AAVb,WADF;AAcD;AAEF;;AACD,WAAOI,IAAI,EAAX;AACD,GAzBD;AA0BD","sourcesContent":["import * as React from 'react';\nimport { Plugin, RenderMarkProps } from '@ali/4ever-cangjie';\nimport PureLink from './components/pureLink';\nimport { LinkPluginConfig } from './types';\nimport { isLinkNode } from './utils';\n\nexport default function createRenderMark(\n  linkConfig: LinkPluginConfig,\n): Plugin['renderMark'] {\n  const {\n    locale,\n    protocolAllowList,\n    onCopyLink,\n    getLinkInfo,\n    enableCard = false,\n    openLink,\n    enableLinkCardBlock,\n    mountRoot = false,\n  } = linkConfig;\n  return function renderMark(props: RenderMarkProps, controller, next) {\n    const { mark, marks, node } = props;\n    if (mark.type === 'link' && !marks.find(({ type }) => type === 'unlink')) {\n      const { document } = controller.value;\n      const inline = document.getClosestInline(node.key);\n      if (!isLinkNode(inline)) {\n        // 仅在父节点不是 link 节点时，渲染 purelink, 避免节点嵌套\n        return (\n          <PureLink\n            {...props}\n            controller={controller}\n            protocolAllowList={protocolAllowList || []}\n            locale={locale}\n            onCopyLink={onCopyLink}\n            getLinkInfo={getLinkInfo}\n            enableCard={enableCard}\n            openLink={openLink}\n            enableLinkCardBlock={enableLinkCardBlock}\n            mountRoot={mountRoot}\n          />\n        );\n      }\n\n    }\n    return next();\n  };\n}\n"],"file":"createRenderMark.js"}