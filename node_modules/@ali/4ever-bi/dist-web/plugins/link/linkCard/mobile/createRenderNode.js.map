{"version":3,"sources":["../../../../../../src/plugins/link/linkCard/mobile/createRenderNode.tsx"],"names":["React","styled","SimpleLazyLoad","convertBlockLinkCardToTextLink","copyBlockLinkCard","cutBlockLinkCard","deleteBlockLinkCard","unlinkBlockCardData","updateBlockLinkCardData","getBlockLinkCardState","LinkPlugin","useScrollableContent","biLocale","normalizeLink","openLink","Wrapper","div","LinkCardNode","props","nodeProps","controller","linkConfig","isMobile","URLLinkCard","locale","link","protocolAllowList","onCopyLink","getLinkInfo","openLinkOfConfig","node","isSelected","selection","value","data","metadata","text","href","cardInfo","scrollContent","document","body","getContainer","useCallback","urlInfo","useMemo","isTitleEqualsHref","trim","actualTitle","title","desc","imgURL","linkCardLocale","tooltipLocale","editTooltip","edit","copyTooltip","copy","unlinkTooltip","unlink","deleteTooltip","switchStyleTooltip","styleText","state","handleVisit","normalizedLink","handleCopy","run","handleCut","handleRemove","handleUnlink","handleSwitchStyle","e","handleRefresh","isCollapsed","createRenderNode","LazyLoad","lazyload","then"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { Controller, RenderNodeProps } from '@ali/4ever-cangjie';\nimport { SimpleLazyLoad } from '@ali/4ever-component';\nimport { CustomizedBiCardPluginType } from '@ali/4ever-factory';\nimport { BlockLinkCard, LinkPluginConfig } from '../../types';\nimport {\n  convertBlockLinkCardToTextLink,\n  copyBlockLinkCard,\n  cutBlockLinkCard,\n  deleteBlockLinkCard,\n  unlinkBlockCardData,\n  updateBlockLinkCardData,\n} from '../actions';\nimport { getBlockLinkCardState } from '../utils/getBlockLinkCardState';\nimport { LinkPlugin, useScrollableContent } from '@ali/4ever-bamboo';\nimport biLocale from '../../../../locales/zh_CN';\n\nconst { normalizeLink, openLink } = LinkPlugin;\n\nconst Wrapper = styled.div`\n  cursor: pointer;\n  border-radius: 9px;\n`;\n\nfunction LinkCardNode(props: {\n  nodeProps: RenderNodeProps<BlockLinkCard>;\n  controller: Controller;\n  linkConfig: LinkPluginConfig;\n  URLLinkCard: React.ComponentType<any>;\n  isMobile: boolean;\n}) {\n  const { nodeProps, controller, linkConfig, isMobile, URLLinkCard } = props;\n\n  const {\n    locale = biLocale.link.locale,\n    protocolAllowList = ['http:', 'https:', 'dingtalk:', 'taobao:'],\n    onCopyLink,\n    getLinkInfo,\n    openLink: openLinkOfConfig,\n  } = linkConfig;\n\n  const { node, isSelected } = nodeProps;\n\n  const { selection } = controller.value;\n\n  const { text, href, cardInfo } = node.data.metadata!;\n\n  const scrollContent = useScrollableContent() || document.body;\n\n  const getContainer = React.useCallback(() => {\n    return scrollContent;\n  }, [scrollContent]);\n\n  const urlInfo = React.useMemo(() => {\n    const isTitleEqualsHref = text.trim() === href.trim();\n    const actualTitle = isTitleEqualsHref ? cardInfo.title : text;\n    return {\n      title: actualTitle || '',\n      desc: cardInfo.desc || '',\n      imgURL: cardInfo.imgURL || '',\n    };\n  }, [cardInfo, text, href]);\n\n  const linkCardLocale = React.useMemo(() => {\n    const tooltipLocale = {\n      editTooltip: locale.edit,\n      copyTooltip: locale.copy,\n      unlinkTooltip: locale.unlink,\n      deleteTooltip: locale.delete,\n      switchStyleTooltip: locale.styleText,\n    };\n    return { ...locale, ...tooltipLocale };\n  }, [locale]);\n\n  const state = React.useMemo(() => {\n    return getBlockLinkCardState(node);\n  }, [node]);\n\n  const handleVisit = React.useCallback(() => {\n    if (openLinkOfConfig) {\n      const normalizedLink = normalizeLink(href, protocolAllowList);\n      openLinkOfConfig(normalizedLink);\n    } else {\n      openLink(href, protocolAllowList);\n    }\n  }, [href, protocolAllowList, openLinkOfConfig]);\n\n  const handleCopy = React.useCallback(() => {\n    // 卡片形式下，使用仓颉复制\n    controller.run('onAction', copyBlockLinkCard(node));\n    if (onCopyLink && typeof onCopyLink === 'function') {\n      onCopyLink(href);\n    }\n  }, [href, onCopyLink, node, controller]);\n\n  const handleCut = React.useCallback(() => {\n    controller.run('onAction', cutBlockLinkCard(node));\n  }, [controller, node]);\n\n  const handleRemove = React.useCallback(() => {\n    controller.run('onAction', deleteBlockLinkCard(node));\n  }, [controller, node]);\n\n  const handleUnlink = React.useCallback(() => {\n    controller.run('onAction', unlinkBlockCardData(node));\n  }, [controller, node]);\n\n  const handleSwitchStyle = React.useCallback(\n    (e: 'indoc' | 'popup') => {\n      if (e === 'popup') {\n        controller.run('onAction', convertBlockLinkCardToTextLink(node));\n      }\n    },\n    [controller, node],\n  );\n\n  const handleRefresh = React.useCallback(() => {\n    controller.run('onAction', updateBlockLinkCardData(node, text, href));\n  }, [controller, getLinkInfo, text, href, node]);\n\n  return (\n    <Wrapper>\n      <URLLinkCard\n        getContainer={getContainer}\n        isSelected={isSelected && selection.isCollapsed}\n        cardStyle={'indoc'}\n        state={state}\n        url={href}\n        readonly={false}\n        locale={linkCardLocale}\n        urlInfo={urlInfo}\n        isMobile={isMobile}\n        // @ts-ignore\n        onRefresh={handleRefresh}\n        onCopy={handleCopy}\n        onOpenURL={handleVisit}\n        onSwitchStyle={handleSwitchStyle}\n        onDelete={handleRemove}\n        onCut={handleCut}\n        onEdit={() => {}}\n        onUnlink={handleUnlink}\n        editBtnTestID=\"link-toolbar-edit\"\n        copyBtnTestID=\"link-toolbar-copy\"\n        cutBtnTestID=\"link-toolbar-cut\"\n        unlinkBtnTestID=\"link-toolbar-unlink\"\n        deleteBtnTestID=\"link-toolbar-remove\"\n        switchStyleBtnTestID=\"link-toolbar-switch\"\n        linkStyleBtnTestID=\"link-toolbar-switch-link\"\n        cardStyleBtnTestID=\"link-toolbar-switch-card\"\n        cardTestID=\"link-card\"\n      />\n    </Wrapper>\n  );\n}\n\nexport default function createRenderNode(\n  linkConfig: LinkPluginConfig,\n  isMobile: boolean,\n): CustomizedBiCardPluginType['renderNode'] {\n  const LazyLoad = linkConfig.lazyload || SimpleLazyLoad;\n  const URLLinkCard = LazyLoad(() =>\n    import('@ali/we-biz-link-card').then(({ URLLinkCard }) => URLLinkCard),\n  );\n  return (\n    nodeProps: RenderNodeProps<BlockLinkCard>,\n    controller: Controller,\n  ) => {\n    return (\n      <LinkCardNode\n        linkConfig={linkConfig}\n        isMobile={isMobile}\n        nodeProps={nodeProps}\n        URLLinkCard={URLLinkCard}\n        controller={controller}\n      />\n    );\n  };\n}\n"],"file":"createRenderNode.js"}