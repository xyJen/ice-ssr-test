{"version":3,"sources":["../../../../../src/plugins/link/linkCard/index.ts"],"names":["locale","LinkPlugin","cardFactory","createRenderNode","careateOnAction","actions","copyLink","createBiLinkCardPlugin","bizConfig","linkCardConfig","link","serializer","clipboard","renderNode","cardType","onAction","queries","getMinTableColWidth","getMinTableColWidthForBlockLinkCard","utils"],"mappings":";AAAA,OAAOA,MAAP;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,WAAT,QAAwD,oBAAxD;AAEA,OAAOC,gBAAP;AAEA,OAAOC,eAAP;AACA,OAAO,KAAKC,OAAZ;AACA,SAASC,QAAT;AAEA,SAASD,OAAT;;AAEA,SAASE,sBAAT,CAAgCC,SAAhC,EAA2D;AACzD,SAAON,WAAW,CAAC,UAACM,SAAD,EAA+B;AAAA;;AAEhD,QAAMC,cAAc;AAClBT,MAAAA,MAAM,eAAOA,MAAM,CAACU,IAAP,CAAYV,MAAnB;AADY,OAEfQ,SAAS,CAACE,IAFK,CAApB;;AAKA,QAAMC,UAAU,2BAAGH,SAAS,CAACI,SAAb,qBAAG,qBAAqBD,UAAxC;AAEA,QAAME,UAAoD,GAAGV,gBAAgB,CAACM,cAAD,EAAiB,KAAjB,CAA7E;AAEA,WAAO;AACLK,MAAAA,QAAQ,EAAE,MADL;AAELC,MAAAA,QAAQ,EAAEX,eAAe,CAACK,cAAD,EAAiBE,UAAjB,CAFpB;AAGLE,MAAAA,UAAU,EAAVA,UAHK;AAILG,MAAAA,OAAO,EAAE;AACPC,QAAAA,mBAAmB,EAAEhB,UAAU,CAACiB;AADzB;AAJJ,KAAP;AAQD,GAnBiB,CAAX,CAmBJV,SAnBI,CAAP;AAoBD;;AAAA;AAEDD,sBAAsB,CAACF,OAAvB,GAAiCA,OAAjC;AACAE,sBAAsB,CAACY,KAAvB,GAA+B;AAC7Bb,EAAAA,QAAQ,EAARA;AAD6B,CAA/B;AAKA,eAAeC,sBAAf","sourcesContent":["import locale from '../../../locales/zh_CN';\nimport { LinkPlugin } from '@ali/4ever-bamboo';\nimport { cardFactory, CustomizedBiCardPluginType } from '@ali/4ever-factory';\nimport { BiPlugin, BiPluginConfig } from '../../../types';\nimport createRenderNode from './createRenderNode';\nimport { LinkPluginConfig } from '../types';\nimport careateOnAction from './onAction';\nimport * as actions from './actions';\nimport { copyLink } from './commands';\n\nexport { actions };\n\nfunction createBiLinkCardPlugin(bizConfig: BiPluginConfig) {\n  return cardFactory((bizConfig: BiPluginConfig) => {\n\n    const linkCardConfig = {\n      locale: { ...locale.link.locale },\n      ...bizConfig.link\n    } as LinkPluginConfig;\n\n    const serializer = bizConfig.clipboard?.serializer;\n\n    const renderNode: CustomizedBiCardPluginType['renderNode'] = createRenderNode(linkCardConfig, false);\n\n    return {\n      cardType: 'link',\n      onAction: careateOnAction(linkCardConfig, serializer),\n      renderNode,\n      queries: {\n        getMinTableColWidth: LinkPlugin.getMinTableColWidthForBlockLinkCard\n      }\n    };\n  })(bizConfig) as any as BiPlugin\n};\n\ncreateBiLinkCardPlugin.actions = actions;\ncreateBiLinkCardPlugin.utils = {\n  copyLink\n};\n\n\nexport default createBiLinkCardPlugin;\n"],"file":"index.js"}