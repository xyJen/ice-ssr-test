{"version":3,"sources":["../../../../../../src/plugins/link/linkCard/commands/unwrapLinkCard.ts"],"names":["Inline","Text","Commands","Block","removeLink","unwrapLinkCard","controller","node","data","metadata","text","href","cardInfo","nodeText","length","command","moveToEndOfNode","inline","create","type","nodes","displayType","insertBlock","DEFAULT_TYPE","moveToRangeOfNode"],"mappings":";AAAA,SAAqBA,MAArB,EAA6BC,IAA7B,EAAmCC,QAAnC,EAA6CC,KAA7C,QAA0D,oBAA1D;AAEA,OAAOC,UAAP;AAEA,eAAe,SAASC,cAAT,CAAwBC,UAAxB,EAAgDC,IAAhD,EAAqE;AAAA,aAEjDA,IAAI,CAACC,IAAL,CAAUC,QAFuC;AAAA,MAE1EC,IAF0E,QAE1EA,IAF0E;AAAA,MAEpEC,IAFoE,QAEpEA,IAFoE;AAAA,MAE9DC,QAF8D,QAE9DA,QAF8D,EAIlF;;AACA,MAAMC,QAAQ,GAAGH,IAAI,CAACI,MAAL,GAAcJ,IAAd,GAAqBC,IAAtC;AAEAL,EAAAA,UAAU,CAACS,OAAX,CAAmBb,QAAQ,CAACc,eAA5B,EAA6CT,IAA7C;AAEA,MAAMU,MAAM,GAAGjB,MAAM,CAACkB,MAAP,CAAc;AAC3BC,IAAAA,IAAI,EAAE,MADqB;AAE3BC,IAAAA,KAAK,EAAE,CAACnB,IAAI,CAACiB,MAAL,CAAYL,QAAZ,CAAD,CAFoB;AAG3BL,IAAAA,IAAI,EAAE;AACJG,MAAAA,IAAI,EAAJA,IADI;AAEJC,MAAAA,QAAQ,eACHA,QADG;AAENS,QAAAA,WAAW,EAAE;AAFP;AAFJ;AAHqB,GAAd,CAAf,CATkF,CAoBlF;AACA;;AACAf,EAAAA,UAAU,CAACS,OAAX,CAAmBb,QAAQ,CAACc,eAA5B,EAA6CT,IAA7C,EACGQ,OADH,CACWb,QAAQ,CAACoB,WADpB,EACiC;AAC7BH,IAAAA,IAAI,EAAEhB,KAAK,CAACoB,YADiB;AAE7BH,IAAAA,KAAK,EAAE,CAACH,MAAD;AAFsB,GADjC,EAKGF,OALH,CAKWb,QAAQ,CAACsB,iBALpB,EAKuCP,MALvC,EAMGF,OANH,CAMW,YANX,EAOGA,OAPH,CAOWX,UAPX,EAOuBG,IAPvB;AASA,SAAOD,UAAP;AACD","sourcesContent":["import { Controller, Inline, Text, Commands, Block } from '@ali/4ever-cangjie';\nimport { BlockLinkCard } from '../../../link/types';\nimport removeLink from './removeLink';\n\nexport default function unwrapLinkCard(controller: Controller, node: BlockLinkCard) {\n\n  const { text, href, cardInfo } = node.data.metadata!;\n\n  // 将 text link 转换为 block link card\n  const nodeText = text.length ? text : href;\n\n  controller.command(Commands.moveToEndOfNode, node);\n\n  const inline = Inline.create({\n    type: 'link',\n    nodes: [Text.create(nodeText)],\n    data: {\n      href,\n      cardInfo: {\n        ...cardInfo,\n        displayType: 'link'\n      }\n    },\n  });\n  // 将 BlockLinkCard 转换为 textLink 后，调用原有的 unwrapLink 方法\n  // 这里需要先插入，再删除，否则会报找不到 path 的异常\n  controller.command(Commands.moveToEndOfNode, node)\n    .command(Commands.insertBlock, {\n      type: Block.DEFAULT_TYPE,\n      nodes: [inline],\n    })\n    .command(Commands.moveToRangeOfNode, inline)\n    .command('unwrapLink')\n    .command(removeLink, node);\n\n  return controller;\n}\n"],"file":"unwrapLinkCard.js"}