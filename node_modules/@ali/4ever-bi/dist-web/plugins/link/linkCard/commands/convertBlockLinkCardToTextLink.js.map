{"version":3,"sources":["../../../../../../src/plugins/link/linkCard/commands/convertBlockLinkCardToTextLink.ts"],"names":["Text","Commands","Block","Inline","removeLink","convertBlockLinkCardToTextLink","controller","node","data","metadata","cardInfo","text","href","nodeText","length","textLink","create","type","nodes","displayType","command","moveToEndOfNode","insertBlock","DEFAULT_TYPE"],"mappings":";AAAA,SAAqBA,IAArB,EAA2BC,QAA3B,EAAqCC,KAArC,EAA4CC,MAA5C,QAA0D,oBAA1D;AACA,OAAOC,UAAP;AAIA,eAAe,SAASC,8BAAT,CACbC,UADa,EAEbC,IAFa,EAGbC,IAHa,EAOb;AAAA,aAEqBD,IAAI,CAACC,IAAL,CAAUC,QAF/B;AAAA,MAEQC,QAFR,QAEQA,QAFR;AAAA,cAGqBH,IAAI,CAACC,IAAL,CAAUC,QAH/B;AAAA,MAGME,IAHN,SAGMA,IAHN;AAAA,MAGYC,IAHZ,SAGYA,IAHZ;;AAIA,MAAIJ,IAAJ,EAAU;AACRG,IAAAA,IAAI,GAAGH,IAAI,CAACG,IAAZ;AACAC,IAAAA,IAAI,GAAGJ,IAAI,CAACI,IAAZ;AACD,GAPD,CASA;;;AACA,MAAMC,QAAQ,GAAGF,IAAI,CAACG,MAAL,GAAcH,IAAd,GAAqBC,IAAtC;AAEA,MAAMG,QAAQ,GAAGZ,MAAM,CAACa,MAAP,CAAc;AAC7BC,IAAAA,IAAI,EAAE,MADuB;AAE7BC,IAAAA,KAAK,EAAE,CAAClB,IAAI,CAACgB,MAAL,CAAYH,QAAZ,CAAD,CAFsB;AAG7BL,IAAAA,IAAI,EAAE;AACJI,MAAAA,IAAI,EAAJA,IADI;AAEJF,MAAAA,QAAQ,eACHA,QADG;AAENS,QAAAA,WAAW,EAAE;AAFP;AAFJ;AAHuB,GAAd,CAAjB,CAZA,CAwBA;;AACAb,EAAAA,UAAU,CAACc,OAAX,CAAmBnB,QAAQ,CAACoB,eAA5B,EAA6Cd,IAA7C,EACGa,OADH,CACWnB,QAAQ,CAACqB,WADpB,EACiC;AAC7BL,IAAAA,IAAI,EAAEf,KAAK,CAACqB,YADiB;AAE7BL,IAAAA,KAAK,EAAE,CAACH,QAAD;AAFsB,GADjC,EAKGK,OALH,CAKWhB,UALX,EAKuBG,IALvB;AAQA,SAAOD,UAAP;AACD;AAAA","sourcesContent":["import { Controller, Text, Commands, Block, Inline } from '@ali/4ever-cangjie';\nimport removeLink from './removeLink';\nimport { BlockLinkCard, } from '../../types';\n\n\nexport default function convertBlockLinkCardToTextLink(\n  controller: Controller,\n  node: BlockLinkCard,\n  data?: {\n    text: string,\n    href: string,\n  }\n) {\n\n  const { cardInfo } = node.data.metadata!;\n  let { text, href } = node.data.metadata!;\n  if (data) {\n    text = data.text;\n    href = data.href;\n  }\n\n  // 将 text link 转换为 block link card\n  const nodeText = text.length ? text : href;\n\n  const textLink = Inline.create({\n    type: 'link',\n    nodes: [Text.create(nodeText)],\n    data: {\n      href,\n      cardInfo: {\n        ...cardInfo,\n        displayType: 'link'\n      }\n    },\n  });\n\n  // 这里需要先插入，再删除，否则会报找不到 path 的异常\n  controller.command(Commands.moveToEndOfNode, node)\n    .command(Commands.insertBlock, {\n      type: Block.DEFAULT_TYPE,\n      nodes: [textLink],\n    })\n    .command(removeLink, node);\n\n\n  return controller;\n};\n\n"],"file":"convertBlockLinkCardToTextLink.js"}