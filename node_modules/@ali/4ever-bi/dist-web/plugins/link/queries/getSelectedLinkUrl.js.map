{"version":3,"sources":["../../../../../src/plugins/link/queries/getSelectedLinkUrl.ts"],"names":["Link","Text","getSelectedLinkUrl","controller","tryGetSelectedTextLink","tryGetSelectedPureLink","shouldRenderContextMenu","Boolean","value","document","selection","startKey","getStart","key","linkNode","getClosest","node","isLink","data","cardInfo","displayType","href","view","startBlock","linkMark","getSelectedLinkMark","focus","anchor","isTextPoint","getLinkMark","textPoint","getNode","isText","leaves","leaf","marks","find","mark","type","offsetInNode","offset","length","some"],"mappings":"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","sourcesContent":["import { Link } from '@ali/4ever-mo';\nimport { Block, Node, Document, Text, Selection, Controller, TextPoint } from '@ali/4ever-cangjie';\n\nexport function getSelectedLinkUrl(\n  controller: Controller,\n): string {\n  return tryGetSelectedTextLink(controller) || tryGetSelectedPureLink(controller) || '';\n}\n\n\nexport function shouldRenderContextMenu(\n  controller: Controller,\n): boolean {\n  return Boolean(getSelectedLinkUrl(controller));\n}\n\n\nfunction tryGetSelectedTextLink(controller: Controller): false | string {\n  const { value } = controller;\n\n  const { document, selection } = value;\n\n  const startKey = selection.getStart(document).key;\n\n  if (!startKey) {\n    return false;\n  }\n\n  const linkNode = document.getClosest(\n    startKey,\n    (node) => Link.isLink(node)\n      && node.data?.cardInfo?.displayType !== 'card'\n      && node.data?.href,\n  );\n\n  if (linkNode) {\n    return linkNode.data.href;\n  }\n\n  return false;\n}\n\nfunction tryGetSelectedPureLink(controller: Controller): false | string {\n\n  const { value, view } = controller;\n\n  const { startBlock, selection, } = value;\n\n  if (!startBlock) {\n    return false;\n  }\n\n  const linkMark = getSelectedLinkMark(selection, view);\n\n  if (linkMark) {\n    return linkMark.data.href;\n  }\n\n  return false;\n}\n\nfunction getSelectedLinkMark(selection: Selection, view: Document) {\n  const { focus, anchor } = selection;\n  if (focus.isTextPoint()) {\n    const linkMark = getLinkMark(focus, view);\n    if (linkMark) {\n      return linkMark;\n    }\n  }\n\n  if (anchor.isTextPoint()) {\n    const linkMark = getLinkMark(anchor, view);\n    if (linkMark) {\n      return linkMark;\n    }\n  }\n  return null;\n}\n\nfunction getLinkMark(textPoint: TextPoint, view: Document) {\n  const node = view.getNode(textPoint.key);\n  if (Text.isText(node)) {\n    for (const leaf of node.leaves) {\n      const linkMark = leaf.marks.find(mark =>\n        mark.type === 'link'\n        && typeof mark.data?.offsetInNode === 'number'\n        && typeof mark.data?.href === 'string'\n        && mark.data.offsetInNode <= textPoint.offset\n        && (mark.data.offsetInNode + mark.data.href.length) >= textPoint.offset\n      );\n      if (linkMark && !leaf.marks.some(({ type }) => type === 'unlink')) {\n        return linkMark;\n      }\n    }\n  }\n  return null;\n}"],"file":"getSelectedLinkUrl.js"}