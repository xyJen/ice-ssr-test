{"version":3,"sources":["../../../../src/plugins/link/index.ts"],"names":["LinkPlugin","toolbar","menubar","createRenderNode","createRenderMark","onAction","createOnKeyDown","onCangjieCopyOrCut","onCangjieInput","createOnCangjiePaste","createInsertLink","createUnwrapLink","createCopyLink","createUpdatePureLinkWithCardInfo","createSaveLinkcard","quickInsert","actions","isSelectionInLink","locale","createShowLinkPastePanel","sidebar","queries","createRenderToolbar","moFactory","createLinkPlugin","config","linkConfig","hotkey","protocolAllowList","link","serializer","clipboard","linkPlugin","renderNode","draggable","renderToolbar","shouldNodeComponentUpdate","_props","_editor","next","node","type","onKeyDown","addLinkPlaceholder","onCangjieCopy","onCangjieCut","onCangjiePaste","commands","insertLink","unwrapLink","updatePureLinkWithCardInfo","getLinkInfo","saveLinkCard","copyLink","showLinkPastePanel","enableLinkCardBlock","models","klass","disableTextRecognize","decorateNode","createDecorateNode","renderMark","utils"],"mappings":"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","sourcesContent":["import { LinkPlugin } from '@ali/4ever-bamboo';\nimport { Inline } from '@ali/4ever-cangjie';\nimport toolbar from './toolbar';\nimport menubar from './menubar';\nimport createRenderNode from './createRenderNode';\nimport createRenderMark from './createRenderMark';\nimport onAction from './handlers/onAction';\nimport createOnKeyDown from './handlers/createOnKeyDown';\nimport onCangjieCopyOrCut from './handlers/onCangjieCopyorCut';\nimport onCangjieInput from './handlers/onCangjieInput';\nimport createOnCangjiePaste from './handlers/createOnCangjiePaste';\nimport createInsertLink from './commands/createInsertLink';\nimport createUnwrapLink from './commands/createUnwrapLink';\nimport createCopyLink from './commands/createCopyLink';\nimport createUpdatePureLinkWithCardInfo from './commands/createUpdatePureLinkWithCardInfo';\nimport createSaveLinkcard from './commands/createSaveLinkCard';\nimport quickInsert from './quickInsertConfig';\nimport { LinkPluginConfig } from './types';\nimport * as actions from './actions';\nimport { isSelectionInLink } from './utils';\nimport locale from '../../locales/zh_CN';\nimport { BiPluginConfig, BiPlugin } from '../../types';\nimport createShowLinkPastePanel from './commands/showLinkPastePanel';\nimport sidebar from './sidebar';\nimport { queries } from './queries';\nimport createRenderToolbar from './createRenderToolbar';\nimport { moFactory } from '@ali/4ever-plugin-link';\n\nexport { actions };\n\nfunction createLinkPlugin(config: BiPluginConfig = {}): BiPlugin {\n  const linkConfig: LinkPluginConfig = {\n    hotkey: 'mod+k',\n    protocolAllowList: ['http:', 'https:', 'dingtalk:', 'taobao:'],\n    locale: locale.link.locale,\n    ...config.link,\n  };\n\n  const serializer = config.clipboard?.serializer;\n\n  const linkPlugin: BiPlugin = {\n    ...moFactory({}),\n    toolbar: toolbar(linkConfig.locale),\n    menubar: menubar(linkConfig.locale),\n    sidebar: sidebar(linkConfig),\n    renderNode: createRenderNode(linkConfig, config.draggable),\n    renderToolbar: createRenderToolbar(linkConfig.locale),\n    shouldNodeComponentUpdate: (\n      { node },\n      _props,\n      _editor,\n      next,\n    ) => {\n      if ((node as Inline).type === 'link') {\n        return true;\n      }\n      return next();\n    },\n    // @ts-ignore onAction should return void\n    onAction,\n    onKeyDown: createOnKeyDown(linkConfig.hotkey || '', linkConfig.locale.addLinkPlaceholder),\n    onCangjieInput: onCangjieInput,\n    onCangjieCopy: onCangjieCopyOrCut,\n    onCangjieCut: onCangjieCopyOrCut,\n    onCangjiePaste: createOnCangjiePaste(config, linkConfig),\n    commands: {\n      insertLink: createInsertLink(linkConfig.locale),\n      unwrapLink: createUnwrapLink(linkConfig.protocolAllowList),\n      updatePureLinkWithCardInfo: createUpdatePureLinkWithCardInfo(linkConfig.getLinkInfo),\n      saveLinkCard: createSaveLinkcard(linkConfig.getLinkInfo),\n      copyLink: createCopyLink(serializer),\n      showLinkPastePanel: createShowLinkPastePanel(linkConfig.enableLinkCardBlock),\n    },\n    queries,\n    locale: linkConfig.locale || {},\n    quickInsert,\n    models: {\n      klass: 'inline',\n      type: 'link',\n    },\n  };\n\n  // 支持 purelink 识别的情况下，添加 decorateNode 和 renderMark\n  if (!linkConfig.disableTextRecognize) {\n    // @ts-ignore\n    linkPlugin.decorateNode = LinkPlugin.createDecorateNode(linkConfig.protocolAllowList || []);\n    linkPlugin.renderMark = createRenderMark(linkConfig);\n  }\n\n  return linkPlugin;\n}\n\ncreateLinkPlugin.actions = actions;\ncreateLinkPlugin.utils = {\n  isSelectionInLink,\n  createCopyLink,\n};\n\nexport default createLinkPlugin;\n"],"file":"index.js"}