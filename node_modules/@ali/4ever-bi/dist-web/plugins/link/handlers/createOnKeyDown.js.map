{"version":3,"sources":["../../../../../src/plugins/link/handlers/createOnKeyDown.ts"],"names":["isKeyHotkey","hotkeys","Commands","wrapLink","removeLink","isLink","isLinkCardNode","isSelectionInLink","hideCustomPastePanel","createOnKeyDown","hotkey","placeholder","isLinkHotkey","onKeyDown","event","controller","next","value","startText","startInline","document","selection","isCollapsed","start","getStart","tableSelection","query","preventDefault","stopPropagation","isEnter","command","moveToStartOfNextText","isDeleteBackward","text","length","run","link","isAtStartOfNode","getPreviousNode","key","isDeleteForward","isAtEndOfNode","getNextNode","shouldDeleteLink","data","href","isPlaceholder"],"mappings":"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","sourcesContent":["import { isKeyHotkey } from 'is-hotkey';\nimport { Plugin, hotkeys, Inline, Commands } from '@ali/4ever-cangjie';\nimport { wrapLink, removeLink } from '../commands';\nimport { isLink, isLinkCardNode } from '../utils';\nimport isSelectionInLink from '../utils/isSelectionInLink';\nimport { hideCustomPastePanel } from '@ali/4ever-plugin-clipboard';\n\nexport default function createOnKeyDown(hotkey: string, placeholder: string): Plugin['onKeyDown'] {\n  const isLinkHotkey = isKeyHotkey(hotkey);\n  return function onKeyDown(event, controller, next) {\n    const { value } = controller;\n    const { startText, startInline, document, selection } = value;\n\n    if (!selection) {\n      return next();\n    }\n\n    const { isCollapsed } = selection;\n    const start = selection.getStart(document);\n    const tableSelection = controller.query('hasTableSelection');\n    if (tableSelection) {\n      return next();\n    }\n\n    if (isLinkHotkey(event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      return wrapLink(controller);\n    }\n\n    if (hotkeys.isEnter(event) && isSelectionInLink(value)) {\n      controller.command(Commands.moveToStartOfNextText);\n      return next();\n    }\n\n    if (\n      hotkeys.isDeleteBackward(event) &&\n      isSelectionInLink(value) &&\n      startText!.text.length === 0\n    ) {\n      // 删除 link 的同时也要销毁粘贴快捷面板\n      controller.run('onAction', hideCustomPastePanel());\n      return removeLink(controller, startInline!);\n    }\n\n    // 向前、向后删除链接\n    if (startText && isCollapsed) {\n      let link: Inline | null = null;\n      if (hotkeys.isDeleteBackward(event) && start.isAtStartOfNode(startText)) {\n        link = document.getPreviousNode(startText.key) as Inline;\n      } else if (\n        hotkeys.isDeleteForward(event) &&\n        start.isAtEndOfNode(startText)\n      ) {\n        link = document.getNextNode(startText.key) as Inline;\n      }\n      if (link && isLink(link)) {\n        // 如果是链接卡片，直接删除\n        let shouldDeleteLink = isLinkCardNode(link!);\n        // 判断是否是空链接\n        if (!shouldDeleteLink && !link.data?.href && placeholder) {\n          // 如果是链接占位符，直接删除\n          const text = link.text;\n          const isPlaceholder = text === placeholder;\n          shouldDeleteLink = isPlaceholder;\n        }\n        if (shouldDeleteLink) {\n          event.preventDefault();\n          controller.run('onAction', hideCustomPastePanel());\n          return removeLink(controller, link!);\n        }\n      }\n\n    }\n\n    return next();\n  };\n}\n"],"file":"createOnKeyDown.js"}