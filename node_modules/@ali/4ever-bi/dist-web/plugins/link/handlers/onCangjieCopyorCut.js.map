{"version":3,"sources":["../../../../../src/plugins/link/handlers/onCangjieCopyorCut.ts"],"names":["transferUtils","constants","isLinkNode","MIME_TYPES","onCangjieCopyOrCut","event","controller","next","clipboardData","value","document","selection","anchor","focus","inline","getClosestInline","key","isInNode","newSelection","moveToRangeOfNode","fragment","getFragmentAtRange","data","href","setClipboardData","setData","TEXT","FRAGMENT","encodeFragment"],"mappings":"AAAA,SAGEA,aAHF,EAIEC,SAJF,QAKO,oBALP;AAMA,SAASC,UAAT;IAEQC,U,GAAeF,S,CAAfE,U;AAER,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAA0DC,UAA1D,EAAkFC,IAAlF,EAAkG;AAC/G,MAAI,CAACF,KAAK,CAACG,aAAX,EAA0B;AACxB,WAAOD,IAAI,EAAX;AACD;;AAH8G,0BAI/ED,UAAU,CAACG,KAJoE;AAAA,MAIvGC,QAJuG,qBAIvGA,QAJuG;AAAA,MAI7FC,SAJ6F,qBAI7FA,SAJ6F;AAAA,MAKvGC,MALuG,GAKrFD,SALqF,CAKvGC,MALuG;AAAA,MAK/FC,KAL+F,GAKrFF,SALqF,CAK/FE,KAL+F;AAM/G,MAAMC,MAAM,GAAGJ,QAAQ,CAACK,gBAAT,CAA0BH,MAAM,CAACI,GAAjC,CAAf,CAN+G,CAQ/G;;AACA,MAAI,CAACF,MAAD,IACC,CAACZ,UAAU,CAACY,MAAD,CADhB,EAC0B;AACxB,WAAOP,IAAI,EAAX;AACD;;AAED,MAAIK,MAAM,CAACK,QAAP,CAAgBH,MAAhB,KAA2BD,KAAK,CAACI,QAAN,CAAeH,MAAf,CAA/B,EAAuD;AACrD,QAAMI,YAAY,GAAGP,SAAS,CAACQ,iBAAV,CAA4BL,MAA5B,EAAoCR,UAApC,CAArB;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;;AACI,QAAMc,QAAQ,GAAGV,QAAQ,CAACW,kBAAT,CAA4BH,YAA5B,CAAjB;;AAEA,QAAI,OAAOJ,MAAM,CAACQ,IAAP,CAAYC,IAAnB,KAA4B,QAAhC,EAA0C;AACxC,aAAOhB,IAAI,CAACF,KAAK,CAACmB,gBAAN,CAAuBnB,KAAK,CAACG,aAAN,CAChCiB,OADgC,CACxBtB,UAAU,CAACuB,IADa,EACPZ,MAAM,CAACQ,IAAP,CAAYC,IADL,EAEhCE,OAFgC,CAExBtB,UAAU,CAACwB,QAFa,EAEH3B,aAAa,CAAC4B,cAAd,CAA6BR,QAA7B,CAFG,CAAvB,CAAD,CAAX;AAGD;AACF;;AAED,SAAOb,IAAI,EAAX;AACD","sourcesContent":["import {\n  Controller,\n  CangjieClipboardEvent,\n  transferUtils,\n  constants\n} from '@ali/4ever-cangjie';\nimport { isLinkNode } from '../utils';\n\nconst { MIME_TYPES } = constants;\n\nexport default function onCangjieCopyOrCut(event: CangjieClipboardEvent, controller: Controller, next: Function) {\n  if (!event.clipboardData) {\n    return next();\n  }\n  const { document, selection } = controller.value;\n  const { anchor, focus } = selection;\n  const inline = document.getClosestInline(anchor.key);\n\n  // 如果最近的节点不是卡片节点，直接返回\n  if (!inline\n    || !isLinkNode(inline)) {\n    return next();\n  }\n\n  if (anchor.isInNode(inline) && focus.isInNode(inline)) {\n    const newSelection = selection.moveToRangeOfNode(inline, controller);\n    /**\n     * linkcard 是一个伪 void 节点。\n     * 在 cangjie 的 onClick 事件中，针对 void 节点，会将光标移至节点末尾 packages/cangjie/src/plugins/core.tsx 200:1\n     * 导致在 copy 过程中，selection 是 isCollapsed 的，复制的 fragment 获得的是没有 text 内容的片段。\n     * 从而用户复制的 linkcard，会丢失标题。\n     * 这里覆盖默认 copy 逻辑，将真实的 fragment 注入\n     */\n    const fragment = document.getFragmentAtRange(newSelection);\n\n    if (typeof inline.data.href === 'string') {\n      return next(event.setClipboardData(event.clipboardData\n        .setData(MIME_TYPES.TEXT, inline.data.href)\n        .setData(MIME_TYPES.FRAGMENT, transferUtils.encodeFragment(fragment))));\n    }\n  }\n\n  return next();\n}\n"],"file":"onCangjieCopyorCut.js"}