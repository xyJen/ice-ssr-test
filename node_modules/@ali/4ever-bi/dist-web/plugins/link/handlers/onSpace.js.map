{"version":3,"sources":["../../../../../src/plugins/link/handlers/onSpace.ts"],"names":["Commands","Text","wrapLink","setJustCreated","END_WITH_MARKDOWN_LINK","onSpace","event","controller","next","value","anchorText","selection","document","isExpanded","convertToTextPoints","anchor","text","slice","offset","matches","match","matchText","title","href","length","preventDefault","command","moveAnchorBackward","del","dispatch","mdType","run","insertInline","type","nodes","create","data","encodeURI","node","anchorInline","key","moveToStartOfNextText"],"mappings":"AACA,SAAqBA,QAArB,EAA+BC,IAA/B,QAAqE,oBAArE;AACA,SAASC,QAAT;AACA,SAASC,cAAT;AACA,SAASC,sBAAT,QAAuC,wBAAvC;AAEA,eAAe,SAASC,OAAT,CACbC,KADa,EAEbC,UAFa,EAGbC,IAHa,EAIb;AAAA,MACQC,KADR,GACkBF,UADlB,CACQE,KADR;AAAA,MAEQC,UAFR,GAE4CD,KAF5C,CAEQC,UAFR;AAAA,MAEoBC,SAFpB,GAE4CF,KAF5C,CAEoBE,SAFpB;AAAA,MAE+BC,QAF/B,GAE4CH,KAF5C,CAE+BG,QAF/B;AAGA,MAAI,CAACD,SAAD,IAAc,CAACD,UAAf,IAA6BC,SAAS,CAACE,UAA3C,EAAuD,OAAOL,IAAI,EAAX;;AAHvD,8BAKmBG,SAAS,CAACG,mBAAV,CAA8BF,QAA9B,CALnB;AAAA,MAKQG,MALR,yBAKQA,MALR;;AAMA,MAAMC,IAAI,GAAGN,UAAU,CAACM,IAAX,CAAgBC,KAAhB,CAAsB,CAAtB,EAAyBF,MAAM,CAACG,MAAhC,CAAb;AAEA,MAAMC,OAAO,GAAGH,IAAI,CAACI,KAAL,CAAWhB,sBAAX,CAAhB;AAEA,MAAI,CAACe,OAAL,EAAc,OAAOX,IAAI,EAAX;AAVd,MAYOa,SAZP,GAYiCF,OAZjC;AAAA,MAYkBG,KAZlB,GAYiCH,OAZjC;AAAA,MAYyBI,IAZzB,GAYiCJ,OAZjC,KAcA;;AACA,MAAIH,IAAI,CAACQ,MAAL,GAAcH,SAAS,CAACG,MAAxB,IAAkCR,IAAI,CAACA,IAAI,CAACQ,MAAL,GAAcH,SAAS,CAACG,MAAxB,GAAiC,CAAlC,CAAJ,KAA6C,GAAnF,EAAwF,OAAOhB,IAAI,EAAX,CAfxF,CAgBA;;AACA,MAAI,CAACc,KAAD,IAAUC,IAAd,EAAoB,OAAOf,IAAI,EAAX;AAEpBF,EAAAA,KAAK,CAACmB,cAAN,GAnBA,CAoBA;;AACAlB,EAAAA,UAAU,CACPmB,OADH,CACW1B,QAAQ,CAAC2B,kBADpB,EACwCN,SAAS,CAACG,MADlD,EAEGE,OAFH,CAEW1B,QAAQ,CAAC4B,GAFpB,EAGGC,QAHH,CAGY,6BAHZ,EAG2C;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAH3C,EArBA,CA0BA;;AACA,MAAI,CAACR,KAAD,IAAU,CAACC,IAAf,EAAqB;AACnB,WAAOhB,UAAU,CAACwB,GAAX,CAAe,UAAf,EAA2B7B,QAAQ,EAAnC,CAAP;AACD,GA7BD,CA+BA;;;AACAK,EAAAA,UAAU,CACPmB,OADH,CACW1B,QAAQ,CAACgC,YADpB,EACkC;AAC9BC,IAAAA,IAAI,EAAE,MADwB;AAE9BC,IAAAA,KAAK,EAAE,CAACjC,IAAI,CAACkC,MAAL,CAAYb,KAAZ,CAAD,CAFuB;AAG9Bc,IAAAA,IAAI,EAAE;AACJb,MAAAA,IAAI,EAAEc,SAAS,CAACd,IAAD;AADX;AAHwB,GADlC,EAhCA,CAyCA;;AACA,MAAMe,IAAI,GAAG/B,UAAU,CAACE,KAAX,CAAiB8B,YAA9B;;AACA,MAAID,IAAI,KAAK,CAAChB,KAAD,IAAU,CAACC,IAAhB,CAAR,EAA+B;AAC7BpB,IAAAA,cAAc,CAACmC,IAAI,CAACE,GAAN,EAAW,IAAX,CAAd;AACA,WAAOjC,UAAP;AACD,GA9CD,CAgDA;;;AACA,SAAOA,UAAU,CAACmB,OAAX,CAAmB1B,QAAQ,CAACyC,qBAA5B,CAAP;AACD","sourcesContent":["import * as React from 'react';\nimport { Controller, Commands, Text, CangjieInputEvent, Block } from '@ali/4ever-cangjie';\nimport { wrapLink } from '../actions';\nimport { setJustCreated } from '../utils/linkStore';\nimport { END_WITH_MARKDOWN_LINK } from '@ali/4ever-plugin-link';\n\nexport default function onSpace(\n  event: React.KeyboardEvent | CangjieInputEvent,\n  controller: Controller,\n  next: Function,\n) {\n  const { value } = controller;\n  const { anchorText, selection, document } = value;\n  if (!selection || !anchorText || selection.isExpanded) return next();\n\n  const { anchor } = selection.convertToTextPoints(document);\n  const text = anchorText.text.slice(0, anchor.offset);\n\n  const matches = text.match(END_WITH_MARKDOWN_LINK);\n\n  if (!matches) return next();\n\n  const [matchText, title, href] = matches;\n\n  // 排除同时命中 ![]() 图片格式的情况\n  if (text.length > matchText.length && text[text.length - matchText.length - 1] === '!') return next();\n  // [](abc) 类似这样的文本暂时不予处理，可能导致空 text 的 Link 元素\n  if (!title && href) return next();\n\n  event.preventDefault();\n  // 删除 markdown 文本\n  controller\n    .command(Commands.moveAnchorBackward, matchText.length)\n    .command(Commands.del)\n    .dispatch('createTriggerMarkdownAction', { mdType: 'link' });\n\n  // []() 时插入 placeholder\n  if (!title && !href) {\n    return controller.run('onAction', wrapLink());\n  }\n\n  // 插入链接 Inline\n  controller\n    .command(Commands.insertInline, {\n      type: 'link',\n      nodes: [Text.create(title)],\n      data: {\n        href: encodeURI(href),\n      },\n    });\n\n  // 打开链接编辑框\n  const node = controller.value.anchorInline;\n  if (node && (!title || !href)) {\n    setJustCreated(node.key, true);\n    return controller;\n  }\n\n  // 链接填写完整，光标移动到下一个 Text 开头\n  return controller.command(Commands.moveToStartOfNextText);\n}\n"],"file":"onSpace.js"}