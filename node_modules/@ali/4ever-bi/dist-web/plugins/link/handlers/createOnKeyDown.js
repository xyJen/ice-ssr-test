import { isKeyHotkey } from 'is-hotkey';
import { hotkeys, Commands } from '@ali/4ever-cangjie';
import { wrapLink, removeLink } from "../commands";
import { isLink, isLinkCardNode } from "../utils";
import isSelectionInLink from "../utils/isSelectionInLink";
import { hideCustomPastePanel } from '@ali/4ever-plugin-clipboard';
export default function createOnKeyDown(hotkey, placeholder) {
  var isLinkHotkey = isKeyHotkey(hotkey);
  return function onKeyDown(event, controller, next) {
    var value = controller.value;
    var startText = value.startText,
        startInline = value.startInline,
        document = value.document,
        selection = value.selection;

    if (!selection) {
      return next();
    }

    var isCollapsed = selection.isCollapsed;
    var start = selection.getStart(document);
    var tableSelection = controller.query('hasTableSelection');

    if (tableSelection) {
      return next();
    }

    if (isLinkHotkey(event)) {
      event.preventDefault();
      event.stopPropagation();
      return wrapLink(controller);
    }

    if (hotkeys.isEnter(event) && isSelectionInLink(value)) {
      controller.command(Commands.moveToStartOfNextText);
      return next();
    }

    if (hotkeys.isDeleteBackward(event) && isSelectionInLink(value) && startText.text.length === 0) {
      // 删除 link 的同时也要销毁粘贴快捷面板
      controller.run('onAction', hideCustomPastePanel());
      return removeLink(controller, startInline);
    } // 向前、向后删除链接


    if (startText && isCollapsed) {
      var link = null;

      if (hotkeys.isDeleteBackward(event) && start.isAtStartOfNode(startText)) {
        link = document.getPreviousNode(startText.key);
      } else if (hotkeys.isDeleteForward(event) && start.isAtEndOfNode(startText)) {
        link = document.getNextNode(startText.key);
      }

      if (link && isLink(link)) {
        var _link$data;

        // 如果是链接卡片，直接删除
        var shouldDeleteLink = isLinkCardNode(link); // 判断是否是空链接

        if (!shouldDeleteLink && !((_link$data = link.data) != null && _link$data.href) && placeholder) {
          // 如果是链接占位符，直接删除
          var text = link.text;
          var isPlaceholder = text === placeholder;
          shouldDeleteLink = isPlaceholder;
        }

        if (shouldDeleteLink) {
          event.preventDefault();
          controller.run('onAction', hideCustomPastePanel());
          return removeLink(controller, link);
        }
      }
    }

    return next();
  };
}
//# sourceMappingURL=createOnKeyDown.js.map