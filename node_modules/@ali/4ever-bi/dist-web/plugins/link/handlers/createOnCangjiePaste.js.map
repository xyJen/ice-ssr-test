{"version":3,"sources":["../../../../../src/plugins/link/handlers/createOnCangjiePaste.ts"],"names":["createLinkify","Linkify","matchesLink","isUrl","RangeSelection","Commands","Selection","TextPoint","constants","hasLink","showLinkPastePanel","tryWrapLink","controller","text","linkify","next","value","selection","document","isCollapsed","fragment","getFragmentAtRange","create","test","command","wrapInline","type","data","href","moveToEnd","createOnCangjiePaste","config","linkConfig","protocolAllowList","getLinkInfo","enableCard","onCangjiePaste","event","clipboardData","query","receiveType","getFirstReceiveType","html","getData","hasRefblock","hasData","MIME_TYPES","REFBLOCK","isTextUrl","indexOf","focus","isTextPoint","offset","focusText","startText","insertedText","slice","insertText","anchor","key","length","customPanel","run"],"mappings":"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","sourcesContent":["import { createLinkify as Linkify, matchesLink } from '@ali/4ever-utils';\nimport isUrl from 'is-url';\nimport { Plugin, RangeSelection, Commands, Controller, Selection, TextPoint, constants } from '@ali/4ever-cangjie';\nimport { hasLink } from '../utils';\nimport { BiPluginConfig } from '../../../types';\nimport { LinkPluginConfig } from '../types';\nimport { showLinkPastePanel } from '../actions';\n\n/**\n * 粘贴面板会拦截回车事件，这里在需要在 wraplink 时，不走链接识别逻辑\n * @see https://aone.alibaba-inc.com/v2/project/897543/bug/41483477# 《在链接后按回车无反应》\n * @param controller\n * @param text\n * @param linkify\n * @param next\n * @returns\n */\nfunction tryWrapLink(controller: Controller, text: string, linkify: any, next: Function) {\n  const { value } = controller;\n  const { selection, document } = value;\n  if (selection && selection.isCollapsed) {\n    return next();\n  }\n\n  const fragment = document.getFragmentAtRange(\n    RangeSelection.create(selection!),\n  );\n  if (linkify.test(fragment.text)) {\n    return next();\n  }\n\n  if (hasLink(value)) {\n    controller.command('unwrapLink');\n  }\n\n  return controller.command(Commands.wrapInline, {\n    type: 'link',\n    data: {\n      href: text,\n    },\n  }).command(Commands.moveToEnd);\n}\n\n\nexport default function createOnCangjiePaste(config: BiPluginConfig, linkConfig: LinkPluginConfig): Plugin['onCangjiePaste'] {\n  const { protocolAllowList, getLinkInfo, enableCard } = linkConfig;\n\n  const linkify = Linkify(protocolAllowList);\n  return function onCangjiePaste(event, controller, next) {\n    const clipboardData = controller.query('getClipboardData', event);\n    if (!clipboardData) {\n      return next();\n    }\n    const receiveType = clipboardData.getFirstReceiveType();\n    const html = clipboardData.getData('text/html');\n    const text = clipboardData.getData('text/plain');\n\n    // BACKGROUND：引用块会将锚点地址 text/plain 中，方便发送到 IM 消息等时，其他用户能锚点定位回对应引用位置\n    // 因此，当检测到为引用块时，不做识别为 URL 的处理\n    const hasRefblock = clipboardData.hasData(constants.MIME_TYPES.REFBLOCK);\n    if (hasRefblock) {\n      return next();\n    }\n\n    // HACK: 处理 <a data-title=\"...\" href=\"...\">href</a>，以支持钉钉文档拷贝链接粘贴需求\n    // 需求背景：\n    //   1. 粘贴到钉钉文档内，显示文档标题\n    //   2. 粘贴到浏览器地址栏等，粘贴结果为链接\n    if (receiveType !== 'text' && receiveType !== 'html') {\n      return next();\n    }\n\n    const isTextUrl = isUrl(text);\n    if (\n      !isTextUrl ||\n      (html && html.indexOf('data-title') > -1)\n    ) {\n      return next();\n    }\n\n    // 粘贴纯文本 URL 时，若当前为 collased 选区，则判断是否在链接/图片 md 语法内\n    // 若是，则直接插入文本，不再转为 link\n    const { focus } = controller.value.selection;\n    if (\n      !html\n      && isTextUrl\n      && controller.value.selection.isCollapsed\n      && focus.isTextPoint()\n      && focus.offset > 0\n    ) {\n      const focusText = controller.value.startText?.text || '';\n      const insertedText = `${focusText.slice(0, focus.offset)}${text}${focusText.slice(focus.offset)}`;\n      if (!matchesLink(linkify, insertedText)) {\n        return controller\n          .command(Commands.insertText, text)\n          .command('showClipboard', Selection.create({\n            anchor: focus,\n            focus: TextPoint.create({ key: focus.key, offset: focus.offset + text.length }),\n          }));\n      }\n    }\n\n    return tryWrapLink(\n      controller,\n      text,\n      linkify, () => {\n        // 链接自动转卡片逻辑\n        const { customPanel } = controller.value.data;\n        // 文档链接不做转卡片处理，后续用 hetu 专门替代掉\n        if (!customPanel && enableCard) {\n          controller.run('onAction', showLinkPastePanel(text, getLinkInfo));\n        }\n        return next();\n      },\n    );\n  };\n}\n"],"file":"createOnCangjiePaste.js"}