{"version":3,"sources":["../../../../../src/plugins/link/mobile/link.tsx"],"names":["React","theme","LinkPlugin","getClosestContainerBlock","getInnerWidth","Link","LinkCardWrapper","getLinkCardState","injectCardInfo","removeInjectCardInfo","updateLinkWithCardInfo","copyLink","normalizeLink","openLink","link","height","margin","getMobileMaxWidth","value","node","closestBlock","noop","MobileLink","props","attributes","protocolAllowList","onOpenLink","children","getLinkInfo","controller","locale","displayType","isSelected","URLLinkCard","data","href","cardInfo","text","query","title","imgURL","desc","urlInfo","useMemo","trim","handleOpenLink","useCallback","normalizedLink","tooltipLocale","editTooltip","edit","copyTooltip","copy","unlinkTooltip","unlink","deleteTooltip","switchStyleTooltip","styleText","onRefresh","run","info","newInfo","cardState","useState","maxWidth","setMaxwidth","useEffect","handleCopy","e","stopPropagation","preventDefault","renderCard","width","memo"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { RenderNodeProps, Inline, Controller, Value } from '@ali/4ever-cangjie';\nimport { theme, LinkPlugin } from '@ali/4ever-bamboo';\nimport { getClosestContainerBlock, getInnerWidth } from '@ali/4ever-utils';\nimport { Link, LinkCardWrapper } from '../components/styled';\nimport { LinkPluginConfig, CardInfo, ILinkCardInfo, LinkDisplayType } from '../types';\nimport { getLinkCardState } from '../utils';\nimport { injectCardInfo, removeInjectCardInfo, updateLinkWithCardInfo, copyLink } from '../actions';\n\nconst { normalizeLink, openLink } = LinkPlugin;\n\nconst { height, margin } = theme.link;\n\ninterface MobileLinkProps extends RenderNodeProps<Inline> {\n  locale: LinkPluginConfig['locale'];\n  protocolAllowList: string[];\n  onOpenLink?: (href: string) => void;\n  getLinkInfo?: (href: string) => Promise<CardInfo>;\n  controller: Controller;\n  displayType: LinkDisplayType;\n  URLLinkCard: React.ComponentType<any>;\n}\n\nconst getMobileMaxWidth = (value: Value, node: Inline) => {\n  const closestBlock = getClosestContainerBlock(value, node);\n  if (closestBlock)\n    return getInnerWidth(closestBlock) ?? '100%';\n\n  return '100%';\n};\n\nconst noop = () => { };\n\nconst MobileLink: React.FC<MobileLinkProps> = (props) => {\n  const {\n    node,\n    attributes,\n    protocolAllowList,\n    onOpenLink,\n    children,\n    getLinkInfo,\n    controller,\n    locale,\n    displayType,\n    isSelected,\n    URLLinkCard,\n  } = props;\n\n  const { href = '', cardInfo } = node.data;\n\n  const text = controller.query('getText', { node }) || '';\n\n  const { title = '', imgURL = '', desc = '' } = cardInfo || {}\n\n  const urlInfo = React.useMemo(() => ({\n    title: text.trim() === href.trim() ? title : text,\n    imgURL,\n    desc,\n  }), [title, imgURL, desc, text, href]);\n\n  const handleOpenLink = React.useCallback(() => {\n\n    if (onOpenLink) {\n      const normalizedLink = normalizeLink(href, protocolAllowList);\n      onOpenLink(normalizedLink);\n    } else {\n      openLink(href, protocolAllowList)\n    }\n  }, [href, onOpenLink, protocolAllowList]);\n\n  const tooltipLocale = React.useMemo(() => ({\n    editTooltip: locale.edit,\n    copyTooltip: locale.copy,\n    unlinkTooltip: locale.unlink,\n    deleteTooltip: locale.delete,\n    switchStyleTooltip: locale.styleText,\n  }), [locale]);\n\n  const onRefresh = React.useCallback(\n    async () => {\n      if (getLinkInfo && typeof getLinkInfo === 'function') {\n        // 先设置卡片状态为 loading，刷新无需为节点注入信息\n        controller.run('onAction', injectCardInfo(node, { displayType: 'card' }));\n        try {\n          const info = await getLinkInfo(href);\n          if (info) {\n            // 请求成功\n            const { imgURL, title, desc } = info;\n            const newInfo: ILinkCardInfo = { imgURL, title, desc, displayType: 'card' };\n            controller.run('onAction', removeInjectCardInfo(node));\n            controller.run('onAction', updateLinkWithCardInfo(node, text, href, newInfo));\n            controller.run('onCangjieFocus');\n            // 清理临时状态\n            return;\n          }\n        } catch (e) {\n          console.debug(e);\n        }\n        // 请求失败,将状态设置为 error，数据填充 undefined\n        controller.run('onAction', removeInjectCardInfo(node));\n        controller.run('onAction', updateLinkWithCardInfo(node, text, href, { displayType: 'card' }));\n      }\n      controller.run('onCangjieFocus');\n    }, [controller, getLinkInfo, text, href, node],\n  );\n\n  const cardState = getLinkCardState(false, node);\n\n  const [maxWidth, setMaxwidth] = React.useState<number | string>('100%');\n\n  React.useEffect(() => {\n    setMaxwidth(getMobileMaxWidth(controller.value, node));\n  }, []);\n\n  const handleCopy = React.useCallback(\n    (e: MouseEvent) => {\n      e.stopPropagation();\n      e.preventDefault();\n      controller.run('onAction', copyLink(node))\n    },\n    [href, node, controller]);\n\n  const renderCard = (\n    <LinkCardWrapper {...attributes} style={{ width: maxWidth, height: height, margin: margin }}>\n      <URLLinkCard\n        isSelected={isSelected}\n        state={cardState}\n        url={href}\n        urlInfo={urlInfo}\n        readonly={false} // todo：参省 移动端复制目前会丢失样式，等待灯少这边支持后处理 \n        isMobile\n        onRefresh={onRefresh}\n        onOpenURL={handleOpenLink}\n        locale={{ ...locale, ...tooltipLocale }}\n        cardStyle={displayType === 'link' ? 'popup' : 'indoc'}\n        editBtnTestID=\"link-toolbar-edit\"\n        copyBtnTestID=\"link-toolbar-copy\"\n        unlinkBtnTestID=\"link-toolbar-unlink\"\n        deleteBtnTestID=\"link-toolbar-remove\"\n        switchStyleBtnTestID=\"link-toolbar-switch\"\n        linkStyleBtnTestID=\"link-toolbar-switch-link\"\n        cardStyleBtnTestID=\"link-toolbar-switch-card\"\n        // @ts-ignore 组件不存在 urlTestID 属性\n        urlTestID=\"link-toolbar-visit\"\n        cardTestID=\"link-card\"\n        width={maxWidth as number}\n        height={height}\n        onEdit={noop}\n        // @ts-ignore\n        onCopy={handleCopy}\n        onUnlink={noop}\n        onDelete={noop}\n        onSwitchStyle={noop}\n      />\n    </LinkCardWrapper>\n  );\n\n  return (\n    displayType === 'card' ?\n      renderCard :\n      <Link\n        {...attributes}\n        data-testid=\"link\"\n      >\n        {children()}\n      </Link>\n  );\n};\n\nexport default React.memo(MobileLink);\n"],"file":"link.js"}