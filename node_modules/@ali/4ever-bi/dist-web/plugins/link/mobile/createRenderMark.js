import _extends from "@babel/runtime/helpers/extends";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import Link from "./pureLink";
import { isLinkNode } from "../utils";
export default function createRenderMark(linkConfig) {
  var protocolAllowList = linkConfig.protocolAllowList,
      openLink = linkConfig.openLink;
  return function renderMark(props, controller, next) {
    var mark = props.mark,
        marks = props.marks,
        node = props.node;

    if (mark.type === 'link' && !marks.find(function (_ref) {
      var type = _ref.type;
      return type === 'unlink';
    })) {
      var href = mark.data.href;
      var document = controller.value.document;
      var inline = document.getClosestInline(node.key);

      if (!isLinkNode(inline)) {
        // 仅在父节点不是 link 节点时，渲染 purelink, 避免节点嵌套
        return /*#__PURE__*/_createElement(Link, _extends({}, props, {
          href: href,
          protocolAllowList: protocolAllowList || [],
          onOpenLink: openLink,
          controller: controller
        }));
      }
    }

    return next();
  };
}
//# sourceMappingURL=createRenderMark.js.map