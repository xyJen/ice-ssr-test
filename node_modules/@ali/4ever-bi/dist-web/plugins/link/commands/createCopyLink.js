import { transferUtils, Value, constants } from '@ali/4ever-cangjie';
import { getHtmlFromValue, createClipboardManager } from '@ali/4ever-plugin-clipboard';
import { createFragmentbyNodes } from "../utils/createFragmentbyNode";
var MIME_TYPES = constants.MIME_TYPES;
export default function createCopyLink(serializer) {
  return function copyLink(controller, node) {
    var _clip$write;

    var href = node.data.href;
    serializer = serializer || controller.serializer;
    var fragment = createFragmentbyNodes([node]);
    var value = Value.create({
      document: fragment
    });
    var clip = createClipboardManager();
    clip.write((_clip$write = {}, _clip$write[MIME_TYPES.FRAGMENT] = transferUtils.encodeFragment(fragment), _clip$write[MIME_TYPES.HTML] = getHtmlFromValue(serializer, value), _clip$write[MIME_TYPES.TEXT] = href || serializer.valueToText(value), _clip$write));
    return controller;
  };
}
//# sourceMappingURL=createCopyLink.js.map