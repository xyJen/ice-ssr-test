{"version":3,"sources":["../../../../../src/plugins/link/commands/wrapLink.ts"],"names":["Commands","Link","hasLink","setJustCreated","wrapLink","controller","data","value","selection","isCollapsed","href","command","wrapInline","type","linkNode","inlines","find","inline","isLink","key","newDocument","document","newRangeSelection","shrinkBoundarySelection","shrinkBoundary","select","moveToEndOfInline","isExpanded","query","insertBlock"],"mappings":"AAAA,SAAqBA,QAArB,QAAqC,oBAArC;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,OAAOC,OAAP;AAEA,SAASC,cAAT;AAEA,eAAe,SAASC,QAAT,CAAkBC,UAAlB,EAA0CC,IAA1C,EAAgF;AAAA,MACrFC,KADqF,GAC3EF,UAD2E,CACrFE,KADqF;AAAA,MAErFC,SAFqF,GAEvED,KAFuE,CAErFC,SAFqF;;AAG7F,MAAI,CAACA,SAAL,EAAgB;AACd,WAAOH,UAAP;AACD;;AAL4F,MAOrFI,WAPqF,GAOrED,SAPqE,CAOrFC,WAPqF;;AAAA,aASvEH,IAAI,IAAI,EAT+D;AAAA,uBASrFI,IATqF;AAAA,MASrFA,IATqF,0BAS9E,EAT8E;;AAU7F,MAAI,CAACD,WAAD,IAAgB,CAACP,OAAO,CAACK,KAAD,CAA5B,EAAqC;AACnCF,IAAAA,UAAU,CAACM,OAAX,CAAmBX,QAAQ,CAACY,UAA5B,EAAwC;AACtCC,MAAAA,IAAI,EAAE,MADgC;AAEtCP,MAAAA,IAAI,EAAE;AACJI,QAAAA,IAAI,EAAJA;AADI;AAFgC,KAAxC;AAMA,QAAMI,QAAQ,GAAGT,UAAU,CAACE,KAAX,CAAiBQ,OAAjB,CAAyBC,IAAzB,CAA8B,UAACC,MAAD;AAAA,aAAYhB,IAAI,CAACiB,MAAL,CAAYD,MAAZ,CAAZ;AAAA,KAA9B,CAAjB;;AACA,QAAI,CAACP,IAAD,IAASI,QAAb,EAAuB;AACrBX,MAAAA,cAAc,CAACW,QAAQ,CAACK,GAAV,EAAe,IAAf,CAAd;AACD;;AAVkC,4BAW6Bd,UAAU,CAACE,KAXxC;AAAA,QAWjBa,WAXiB,qBAW3BC,QAX2B;AAAA,QAWOC,iBAXP,qBAWJd,SAXI,EAYnC;;AACA,QAAMe,uBAAuB,GAAGD,iBAAiB,CAACE,cAAlB,CAAiCJ,WAAjC,CAAhC;AACA,WAAOf,UAAU,CAACM,OAAX,CAAmBX,QAAQ,CAACyB,MAA5B,EAAoCF,uBAApC,EACJZ,OADI,CACIX,QAAQ,CAAC0B,iBADb,CAAP;AAED;;AAED,MAAIxB,OAAO,CAACK,KAAD,CAAX,EAAoB;AAClB,WAAOF,UAAU,CAACM,OAAX,CAAmB,YAAnB,CAAP;AACD;;AACD,MAAIH,SAAS,CAACmB,UAAV,IAAwBtB,UAAU,CAACuB,KAAX,CAAiB,yBAAjB,CAA5B,EAAyE;AACvEvB,IAAAA,UAAU,CAACM,OAAX,CAAmBX,QAAQ,CAACY,UAA5B,EAAwC;AACtCC,MAAAA,IAAI,EAAE,MADgC;AAEtCP,MAAAA,IAAI,EAAE;AACJI,QAAAA,IAAI,EAAJA;AADI;AAFgC,KAAxC;AAMD,GAPD,MAOO,IAAIL,UAAU,CAACuB,KAAX,CAAiB,wBAAjB,CAAJ,EAAgD;AACrDvB,IAAAA,UAAU,CACPM,OADH,CACWX,QAAQ,CAAC6B,WADpB,EACiC,WADjC,EAEGlB,OAFH,CAEW,YAFX,EAEyBD,IAFzB;AAGD,GAJM,MAIA;AACLL,IAAAA,UAAU,CAACM,OAAX,CAAmB,YAAnB,EAAiCD,IAAjC;AACD;;AACD,SAAOL,UAAP;AACD","sourcesContent":["import { Controller, Commands } from '@ali/4ever-cangjie';\nimport { Link } from '@ali/4ever-mo';\nimport hasLink from '../utils/hasLink';\n\nimport { setJustCreated } from '../utils/linkStore';\n\nexport default function wrapLink(controller: Controller, data?: { href?: string }): Controller {\n  const { value } = controller;\n  const { selection } = value;\n  if (!selection) {\n    return controller;\n  }\n\n  const { isCollapsed } = selection;\n\n  const { href = '' } = data || {};\n  if (!isCollapsed && !hasLink(value)) {\n    controller.command(Commands.wrapInline, {\n      type: 'link',\n      data: {\n        href,\n      },\n    });\n    const linkNode = controller.value.inlines.find((inline) => Link.isLink(inline));\n    if (!href && linkNode) {\n      setJustCreated(linkNode.key, true);\n    }\n    const { document: newDocument, selection: newRangeSelection } = controller.value;\n    // 收缩选区\n    const shrinkBoundarySelection = newRangeSelection.shrinkBoundary(newDocument);\n    return controller.command(Commands.select, shrinkBoundarySelection)\n      .command(Commands.moveToEndOfInline);\n  }\n\n  if (hasLink(value)) {\n    return controller.command('unwrapLink');\n  }\n  if (selection.isExpanded || controller.query('isCollapsedInInlineVoid')) {\n    controller.command(Commands.wrapInline, {\n      type: 'link',\n      data: {\n        href,\n      },\n    });\n  } else if (controller.query('isCollapsedInBlockVoid')) {\n    controller\n      .command(Commands.insertBlock, 'paragraph')\n      .command('insertLink', href);\n  } else {\n    controller.command('insertLink', href);\n  }\n  return controller;\n}\n"],"file":"wrapLink.js"}