{"version":3,"sources":["../../../../../src/plugins/link/commands/createSaveLinkCard.ts"],"names":["injectCardInfo","removeinjectedCardInfo","updateLinkCardInfo","isLinkNode","isCardStyle","node","data","cardInfo","displayType","createSaveLinkCard","getLinkInfo","fetchLinkData","controller","href","text","command","info","imgURL","title","desc","saveLinkCard","refinedNode","value","document","getNode","key"],"mappings":";;AACA,OAAOA,cAAP;AACA,OAAOC,sBAAP;AACA,OAAOC,kBAAP;AAEA,SAASC,UAAT;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAoB;AAAA;;AAAA,MAC9BC,IAD8B,GACrBD,IADqB,CAC9BC,IAD8B;AAEtC,SAAOA,IAAI,IAAI,mBAAAA,IAAI,CAACC,QAAL,oCAAeC,WAAf,MAA+B,MAA9C;AACD,CAHD;;AAKA,eAAe,SAASC,kBAAT,CACbC,WADa,EAEJ;AAAA,WAEMC,aAFN;AAAA;AAAA;;AAAA;AAAA,8EAET,iBAA6BN,IAA7B,EAA2CO,UAA3C,EAAmEC,IAAnE,EAAiFC,IAAjF;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBACMJ,WAAW,IAAI,OAAOA,WAAP,KAAuB,UAD5C;AAAA;AAAA;AAAA;;AAEI;AACAE,cAAAA,UAAU,CAACG,OAAX,CAAmBf,cAAnB,EAAmCK,IAAnC,EAAyC;AAAEG,gBAAAA,WAAW,EAAE;AAAf,eAAzC,EAHJ,CAII;;AAJJ;AAAA;AAAA,qBAMyBE,WAAW,CAACG,IAAD,CANpC;;AAAA;AAMYG,cAAAA,IANZ;;AAAA,mBAOUA,IAPV;AAAA;AAAA;AAAA;;AAQQ;AARR,6BASuDA,IATvD,CASgBC,MAThB,EASgBA,MAThB,6BASyB,EATzB,+BASuDD,IATvD,CAS6BE,KAT7B,EAS6BA,KAT7B,4BASqC,EATrC,6BASuDF,IATvD,CASyCG,IATzC,EASyCA,IATzC,2BASgD,EAThD;AAUcZ,cAAAA,QAVd,GAUwC;AAAEU,gBAAAA,MAAM,EAANA,MAAF;AAAUC,gBAAAA,KAAK,EAALA,KAAV;AAAiBC,gBAAAA,IAAI,EAAJA,IAAjB;AAAuBX,gBAAAA,WAAW,EAAE;AAApC,eAVxC,EAWQ;;AACAI,cAAAA,UAAU,CAACG,OAAX,CAAmBd,sBAAnB,EAA2CI,IAA3C,EACGU,OADH,CACWb,kBADX,EAC+BG,IAD/B,EACqCS,IADrC,EAC2CD,IAD3C,EACiDN,QADjD;AAZR;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiBM;AAEA;AACAK,cAAAA,UAAU,CAACG,OAAX,CAAmBb,kBAAnB,EAAuCG,IAAvC,EAA6CS,IAA7C,EAAmDD,IAAnD,EAAyD;AAAEL,gBAAAA,WAAW,EAAE;AAAf,eAAzD;;AApBN;AAAA;AAsBM;AACAI,cAAAA,UAAU,CAACG,OAAX,CAAmBd,sBAAnB,EAA2CI,IAA3C;AAvBN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFS;AAAA;AAAA;;AA8BT,SAAO,SAASe,YAAT,CACLR,UADK,EAELP,IAFK,EAGLS,IAHK,EAILD,IAJK,EAKL;AACA;AACA;AACA,QAAIQ,WAAW,GAAGhB,IAAlB;;AACA,QAAIF,UAAU,CAACE,IAAD,CAAV,IAAoB,CAACD,WAAW,CAACC,IAAD,CAApC,EAA4C;AAC1CO,MAAAA,UAAU,CAACG,OAAX,CAAmBb,kBAAnB,EAAuCG,IAAvC,EAA6CS,IAA7C,EAAmDD,IAAnD,EAAyD;AAAEL,QAAAA,WAAW,EAAE;AAAf,OAAzD;AACAa,MAAAA,WAAW,GAAGT,UAAU,CAACU,KAAX,CAAiBC,QAAjB,CAA0BC,OAA1B,CAAkCnB,IAAI,CAACoB,GAAvC,CAAd;AACD;;AAEDd,IAAAA,aAAa,CAACU,WAAD,EAAcT,UAAd,EAA0BC,IAA1B,EAAgCC,IAAhC,CAAb;AAEA,WAAOF,UAAP;AACD,GAjBD;AAkBD","sourcesContent":["import { Controller, Inline, Command } from '@ali/4ever-cangjie';\nimport injectCardInfo from './injectCardInfo';\nimport removeinjectedCardInfo from './removeinjectedCardInfo';\nimport updateLinkCardInfo from './updateLinkCardInfo';\nimport { ILinkCardInfo, LinkPluginConfig, LinkNode } from '../types';\nimport { isLinkNode } from '../utils';\n\nconst isCardStyle = (node: LinkNode) => {\n  const { data } = node;\n  return data && data.cardInfo?.displayType === 'card';\n}\n\nexport default function createSaveLinkCard(\n  getLinkInfo?: LinkPluginConfig['getLinkInfo'],\n): Command {\n\n  async function fetchLinkData(node: Inline, controller: Controller, href: string, text: string) {\n    if (getLinkInfo && typeof getLinkInfo === 'function') {\n      // 先设置卡片状态为 loading，并且为节点注入信息，处理交互兼容\n      controller.command(injectCardInfo, node, { displayType: 'card' });\n      // 展示卡片\n      try {\n        const info = await getLinkInfo(href);\n        if (info) {\n          // 请求成功\n          const { imgURL = '', title = '', desc = '' } = info;\n          const cardInfo: ILinkCardInfo = { imgURL, title, desc, displayType: 'card' };\n          // 清理注入信息\n          controller.command(removeinjectedCardInfo, node)\n            .command(updateLinkCardInfo, node, text, href, cardInfo);\n          return;\n        }\n      } catch (e) {\n        // 获取信息失败，不添加任何数据\n        console.debug(e);\n        // 设置卡片imgURL, title, desc 为 undefined\n        controller.command(updateLinkCardInfo, node, text, href, { displayType: 'card' });\n      } finally {\n        // 清理注入信息\n        controller.command(removeinjectedCardInfo, node);\n      }\n    }\n  }\n\n  return function saveLinkCard(\n    controller: Controller,\n    node: Inline,\n    text: string,\n    href: string,\n  ) {\n    // 如果卡片原来是链接形式，需要先转为卡片形式，再获取信息，避免排版问题\n    // todo 排版 2.0 后清理下面代码\n    let refinedNode = node;\n    if (isLinkNode(node) && !isCardStyle(node)) {\n      controller.command(updateLinkCardInfo, node, text, href, { displayType: 'card' });\n      refinedNode = controller.value.document.getNode(node.key) as Inline;\n    }\n\n    fetchLinkData(refinedNode, controller, href, text);\n\n    return controller;\n  };\n}\n\n"],"file":"createSaveLinkCard.js"}