import _regeneratorRuntime from "@babel/runtime/regenerator";
import _extends from "@babel/runtime/helpers/extends";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import { Commands, Text, Inline } from '@ali/4ever-cangjie';
import removePureLink from "./removePureLink";
import injectCardInfo from "./injectCardInfo";
import removeinjectedCardInfo from "./removeinjectedCardInfo";
import updateLinkCardInfo from "./updateLinkCardInfo";
export default function createFetchLinkInfo(getLinkInfo) {
  function fetchLinkData(_x, _x2, _x3, _x4) {
    return _fetchLinkData.apply(this, arguments);
  }

  function _fetchLinkData() {
    _fetchLinkData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(node, controller, href, text) {
      var info, _info$imgURL, imgURL, _info$title, title, _info$desc, desc, cardInfo;

      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (!(getLinkInfo && typeof getLinkInfo === 'function')) {
                _context.next = 18;
                break;
              }

              // 先设置卡片状态为 loading，并且为节点注入信息，处理交互兼容
              controller.command(injectCardInfo, node, {
                displayType: 'card'
              }); // 展示卡片

              _context.prev = 2;
              _context.next = 5;
              return getLinkInfo(href);

            case 5:
              info = _context.sent;

              if (!info) {
                _context.next = 11;
                break;
              }

              // 请求成功
              _info$imgURL = info.imgURL, imgURL = _info$imgURL === void 0 ? '' : _info$imgURL, _info$title = info.title, title = _info$title === void 0 ? '' : _info$title, _info$desc = info.desc, desc = _info$desc === void 0 ? '' : _info$desc;
              cardInfo = {
                imgURL: imgURL,
                title: title,
                desc: desc,
                displayType: 'card'
              }; // 清理注入信息

              controller.command(removeinjectedCardInfo, node).command(updateLinkCardInfo, node, text, href, cardInfo);
              return _context.abrupt("return");

            case 11:
              _context.next = 15;
              break;

            case 13:
              _context.prev = 13;
              _context.t0 = _context["catch"](2);

            case 15:
              _context.prev = 15;
              // 清理注入信息
              controller.command(removeinjectedCardInfo, node);
              return _context.finish(15);

            case 18:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, null, [[2, 13, 15, 18]]);
    }));
    return _fetchLinkData.apply(this, arguments);
  }

  return function updatePureLink(controller, node, offset, text, href, srcHref, cardInfo, needFetchLinkInfo) {
    var originText = controller.query('getText', {
      node: node
    }) || ''; // 将 pure link 转换为 text link

    if (text !== originText || srcHref !== href || cardInfo) {
      var nodeText = text.length ? text : href;
      var selection = controller.value.selection;
      var range = selection.moveToStartOfNode(node, controller).moveForward(offset);

      if (cardInfo) {
        // 如果更新了卡片信息
        var inline = Inline.create({
          type: 'link',
          data: {
            href: href,
            cardInfo: _extends({}, cardInfo)
          },
          nodes: [Text.create(nodeText)]
        });
        removePureLink(controller, node, offset, srcHref).command(Commands.insertInlineAtRange, range, inline);

        if (needFetchLinkInfo) {
          fetchLinkData(inline, controller, href, text);
        }

        return controller;
      } else {
        var _inline = Inline.create({
          type: 'link',
          data: {
            href: href
          },
          nodes: [Text.create(nodeText)]
        });

        return removePureLink(controller, node, offset, srcHref).command(Commands.insertInlineAtRange, range, _inline);
      }
    }

    return controller;
  };
}
//# sourceMappingURL=createUpdatePureLinkWithCardInfo.js.map