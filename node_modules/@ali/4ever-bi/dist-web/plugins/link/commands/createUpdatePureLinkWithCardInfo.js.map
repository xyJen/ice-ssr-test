{"version":3,"sources":["../../../../../src/plugins/link/commands/createUpdatePureLinkWithCardInfo.ts"],"names":["Commands","Text","Inline","removePureLink","injectCardInfo","removeinjectedCardInfo","updateLinkCardInfo","createFetchLinkInfo","getLinkInfo","fetchLinkData","node","controller","href","text","command","displayType","info","imgURL","title","desc","cardInfo","updatePureLink","offset","srcHref","needFetchLinkInfo","originText","query","nodeText","length","selection","value","range","moveToStartOfNode","moveForward","inline","create","type","data","nodes","insertInlineAtRange"],"mappings":"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","sourcesContent":["import { Controller, Node, Commands, Text, RangeSelection, Point, Inline, Command } from '@ali/4ever-cangjie';\nimport removePureLink from './removePureLink';\nimport injectCardInfo from './injectCardInfo';\nimport removeinjectedCardInfo from './removeinjectedCardInfo';\nimport updateLinkCardInfo from './updateLinkCardInfo';\nimport { ILinkCardInfo, LinkPluginConfig } from '../types';\n\nexport default function createFetchLinkInfo(\n  getLinkInfo?: LinkPluginConfig['getLinkInfo'],\n): Command {\n\n  async function fetchLinkData(node: Inline, controller: Controller, href: string, text: string) {\n    if (getLinkInfo && typeof getLinkInfo === 'function') {\n      // 先设置卡片状态为 loading，并且为节点注入信息，处理交互兼容\n      controller.command(injectCardInfo, node, { displayType: 'card' });\n      // 展示卡片\n      try {\n        const info = await getLinkInfo(href);\n        if (info) {\n          // 请求成功\n          const { imgURL = '', title = '', desc = '' } = info;\n          const cardInfo: ILinkCardInfo = { imgURL, title, desc, displayType: 'card' };\n          // 清理注入信息\n          controller.command(removeinjectedCardInfo, node)\n            .command(updateLinkCardInfo, node, text, href, cardInfo);\n          return;\n        }\n      } catch (e) {\n        // 获取信息失败，不添加任何数据\n        console.debug(e);\n      } finally {\n        // 清理注入信息\n        controller.command(removeinjectedCardInfo, node);\n      }\n    }\n  }\n\n  return function updatePureLink(\n    controller: Controller,\n    node: Node,\n    offset: number,\n    text: string,\n    href: string,\n    srcHref: string,\n    cardInfo?: ILinkCardInfo,\n    needFetchLinkInfo?: boolean\n  ) {\n    const originText = controller.query('getText', { node }) || '';\n    // 将 pure link 转换为 text link\n    if (text !== originText || srcHref !== href || cardInfo) {\n      const nodeText = text.length ? text : href;\n      const { selection } = controller.value;\n      const range = selection\n        .moveToStartOfNode(node, controller)\n        .moveForward(offset);\n      if (cardInfo) {\n        // 如果更新了卡片信息\n        const inline = Inline.create({\n          type: 'link',\n          data: { href, cardInfo: { ...cardInfo } },\n          nodes: [Text.create(nodeText)],\n        });\n        removePureLink(controller, node, offset, srcHref).command(Commands.insertInlineAtRange, range, inline);\n        if (needFetchLinkInfo) {\n          fetchLinkData(inline, controller, href, text);\n        }\n        return controller;\n      } else {\n        const inline = Inline.create({\n          type: 'link',\n          data: { href },\n          nodes: [Text.create(nodeText)],\n        });\n        return removePureLink(controller, node, offset, srcHref).command(Commands.insertInlineAtRange, range, inline);\n      }\n    }\n\n    return controller;\n  }\n}\n\n"],"file":"createUpdatePureLinkWithCardInfo.js"}