{"version":3,"sources":["../../../../../src/plugins/link/commands/createInsertLink.ts"],"names":["Commands","Text","RangeSelection","Link","wrapLink","isSelectionInLink","setJustCreated","createInsertLink","locale","insertLink","controller","href","text","addLinkPlaceholder","value","selection","document","focus","wordRange","selectWordAtPoint","isTextPoint","isExpanded","offset","anchor","command","select","insertInline","type","nodes","create","data","linkNode","inlines","find","inline","isLink","key"],"mappings":"AAAA,SAGEA,QAHF,EAIEC,IAJF,EAKEC,cALF,QAOO,oBAPP;AAQA,SAASC,IAAT,QAAqB,eAArB;AAEA,OAAOC,QAAP;AACA,SAASC,iBAAT;AACA,SAASC,cAAT;AAEA,eAAe,SAASC,gBAAT,CACbC,MADa,EAEJ;AACT,SAAO,SAASC,UAAT,CAAoBC,UAApB,EAA4CC,IAA5C,EAA0D;AAC/D,QAAMC,IAAI,GAAGJ,MAAM,CAACK,kBAApB;AAD+D,4BAE/BH,UAAU,CAACI,KAFoB;AAAA,QAEvDC,SAFuD,qBAEvDA,SAFuD;AAAA,QAE5CC,QAF4C,qBAE5CA,QAF4C;;AAG/D,QAAI,CAACD,SAAD,IAAcV,iBAAiB,CAACK,UAAU,CAACI,KAAZ,CAAnC,EAAuD;AACrD,aAAOJ,UAAP;AACD;;AAL8D,QAOvDO,KAPuD,GAO7CF,SAP6C,CAOvDE,KAPuD;AAQ/D,QAAMC,SAAS,GAAGhB,cAAc,CAACiB,iBAAf,CAAiCH,QAAjC,EAA2CC,KAA3C,CAAlB;;AAEA,QACEC,SAAS,IACTD,KAAK,CAACG,WAAN,EADA,IAEAF,SAAS,CAACG,UAFV,IAGCH,SAAS,CAACD,KAAX,CAA+BK,MAA/B,KAA0CL,KAAK,CAACK,MAHhD,IAICJ,SAAS,CAACK,MAAX,CAAgCD,MAAhC,KAA2CL,KAAK,CAACK,MALnD,EAME;AACAZ,MAAAA,UAAU,CACPc,OADH,CACWxB,QAAQ,CAACyB,MADpB,EAC4BP,SAD5B,EAEGM,OAFH,CAEWpB,QAFX,EAEqB;AAAEO,QAAAA,IAAI,EAAJA;AAAF,OAFrB;AAGD,KAVD,MAUO;AACLD,MAAAA,UAAU,CAACc,OAAX,CAAmBxB,QAAQ,CAAC0B,YAA5B,EAA0C;AACxCC,QAAAA,IAAI,EAAE,MADkC;AAExCC,QAAAA,KAAK,EAAE,CAAC3B,IAAI,CAAC4B,MAAL,CAAYjB,IAAZ,CAAD,CAFiC;AAGxCkB,QAAAA,IAAI,EAAE;AACJnB,UAAAA,IAAI,EAAJA;AADI;AAHkC,OAA1C;AAOD;;AACD,QAAMoB,QAAQ,GAAGrB,UAAU,CAACI,KAAX,CAAiBkB,OAAjB,CAAyBC,IAAzB,CAA8B,UAACC,MAAD;AAAA,aAAY/B,IAAI,CAACgC,MAAL,CAAYD,MAAZ,CAAZ;AAAA,KAA9B,CAAjB;;AACA,QAAI,CAACvB,IAAD,IAASoB,QAAb,EAAuB;AACrBzB,MAAAA,cAAc,CAACyB,QAAQ,CAACK,GAAV,EAAe,IAAf,CAAd;AACD;;AACD,WAAO1B,UAAP;AACD,GAlCD;AAmCD","sourcesContent":["import {\n  Command,\n  Controller,\n  Commands,\n  Text,\n  RangeSelection,\n  TextPoint,\n} from '@ali/4ever-cangjie';\nimport { Link } from '@ali/4ever-mo';\nimport { LinkPluginConfig } from '../types';\nimport wrapLink from './wrapLink';\nimport { isSelectionInLink } from '../utils';\nimport { setJustCreated } from '../utils/linkStore';\n\nexport default function createInsertLink(\n  locale: LinkPluginConfig['locale'],\n): Command {\n  return function insertLink(controller: Controller, href: string) {\n    const text = locale.addLinkPlaceholder;\n    const { selection, document } = controller.value;\n    if (!selection || isSelectionInLink(controller.value)) {\n      return controller;\n    }\n\n    const { focus } = selection;\n    const wordRange = RangeSelection.selectWordAtPoint(document, focus);\n\n    if (\n      wordRange &&\n      focus.isTextPoint() &&\n      wordRange.isExpanded &&\n      (wordRange.focus as TextPoint).offset !== focus.offset &&\n      (wordRange.anchor as TextPoint).offset !== focus.offset\n    ) {\n      controller\n        .command(Commands.select, wordRange)\n        .command(wrapLink, { href });\n    } else {\n      controller.command(Commands.insertInline, {\n        type: 'link',\n        nodes: [Text.create(text)],\n        data: {\n          href,\n        },\n      });\n    }\n    const linkNode = controller.value.inlines.find((inline) => Link.isLink(inline));\n    if (!href && linkNode) {\n      setJustCreated(linkNode.key, true);\n    }\n    return controller;\n  };\n}\n"],"file":"createInsertLink.js"}