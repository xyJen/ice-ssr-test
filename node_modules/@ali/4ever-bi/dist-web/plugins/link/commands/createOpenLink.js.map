{"version":3,"sources":["../../../../../src/plugins/link/commands/createOpenLink.ts"],"names":["LinkPlugin","normalizeLink","openLink","createOpenLink","protocolAllowList","openLinkOfConfig","controller","href","normalizedLink"],"mappings":"AAEA,SAASA,UAAT,QAA2B,mBAA3B;IAEQC,a,GAA4BD,U,CAA5BC,a;IAAeC,Q,GAAaF,U,CAAbE,Q;AAEvB,eAAe,SAASC,cAAT,CACbC,iBADa,EAEbC,gBAFa,EAGb;AACA,SAAO,UACLC,UADK,EAELC,IAFK,EAGL;AACA,QAAIF,gBAAJ,EAAsB;AACpB,UAAMG,cAAc,GAAGP,aAAa,CAACM,IAAD,EAAOH,iBAAP,CAApC;AACAC,MAAAA,gBAAgB,CAACG,cAAD,CAAhB;AACD,KAHD,MAGO;AACLN,MAAAA,QAAQ,CAACK,IAAD,EAAOH,iBAAP,CAAR;AACD;;AACD,WAAOE,UAAP;AACD,GAXD;AAYD","sourcesContent":["import { Controller } from '@ali/4ever-cangjie';\nimport { LinkPluginConfig } from '../types';\nimport { LinkPlugin } from '@ali/4ever-bamboo';\n\nconst { normalizeLink, openLink } = LinkPlugin;\n\nexport default function createOpenLink(\n  protocolAllowList: Required<LinkPluginConfig>['protocolAllowList'],\n  openLinkOfConfig?: LinkPluginConfig['openLink'],\n) {\n  return function (\n    controller: Controller,\n    href: string,\n  ) {\n    if (openLinkOfConfig) {\n      const normalizedLink = normalizeLink(href, protocolAllowList);\n      openLinkOfConfig(normalizedLink);\n    } else {\n      openLink(href, protocolAllowList);\n    }\n    return controller;\n  };\n}\n"],"file":"createOpenLink.js"}