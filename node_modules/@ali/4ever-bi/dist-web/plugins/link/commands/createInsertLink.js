import { Commands, Text, RangeSelection } from '@ali/4ever-cangjie';
import { Link } from '@ali/4ever-mo';
import wrapLink from "./wrapLink";
import { isSelectionInLink } from "../utils";
import { setJustCreated } from "../utils/linkStore";
export default function createInsertLink(locale) {
  return function insertLink(controller, href) {
    var text = locale.addLinkPlaceholder;
    var _controller$value = controller.value,
        selection = _controller$value.selection,
        document = _controller$value.document;

    if (!selection || isSelectionInLink(controller.value)) {
      return controller;
    }

    var focus = selection.focus;
    var wordRange = RangeSelection.selectWordAtPoint(document, focus);

    if (wordRange && focus.isTextPoint() && wordRange.isExpanded && wordRange.focus.offset !== focus.offset && wordRange.anchor.offset !== focus.offset) {
      controller.command(Commands.select, wordRange).command(wrapLink, {
        href: href
      });
    } else {
      controller.command(Commands.insertInline, {
        type: 'link',
        nodes: [Text.create(text)],
        data: {
          href: href
        }
      });
    }

    var linkNode = controller.value.inlines.find(function (inline) {
      return Link.isLink(inline);
    });

    if (!href && linkNode) {
      setJustCreated(linkNode.key, true);
    }

    return controller;
  };
}
//# sourceMappingURL=createInsertLink.js.map