{"version":3,"sources":["../../../../../src/plugins/link/commands/createUnwrapLink.ts"],"names":["Commands","RangeSelection","Point","Mark","Link","createLinkify","isLink","createUnwrapLink","protocolAllowList","linkify","unwrapLink","controller","value","selection","document","inlines","focusInline","shrinkRangeSelection","shrinkBoundary","start","getStart","end","getEnd","startText","getNode","key","endText","isCollapsed","href","data","text","trim","test","unlinkRangeSelection","create","anchor","createFromParams","focus","length","command","addMarkAtRange","type","unwrapInline","offset","startInline","getClosest","endInline","startKey","startOffset","endKey","endOffset","preText","getPreviousText","changedPreText","fromStart","unwrapText","getNextText","select","fromJSON","wrapInline","moveToEndOfPreviousText","moveToEnd","allLinks","filter","moveToEndOfInline"],"mappings":"AAAA,SAAqBA,QAArB,EAA+BC,cAA/B,EAA+CC,KAA/C,EAAsDC,IAAtD,QAAsF,oBAAtF;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,SAASC,MAAT;AAEA,eAAe,SAASC,gBAAT,CACbC,iBADa,EAEb;AACA,MAAMC,OAAO,GAAGJ,aAAa,CAACG,iBAAD,CAA7B;AAEA,SAAO,SAASE,UAAT,CAAoBC,UAApB,EAA4C;AAAA,4BACKA,UAAU,CAACC,KADhB;AAAA,QACzCC,SADyC,qBACzCA,SADyC;AAAA,QAC9BC,QAD8B,qBAC9BA,QAD8B;AAAA,QACpBC,OADoB,qBACpBA,OADoB;AAAA,QACXC,WADW,qBACXA,WADW;AAEjD,QAAMC,oBAAoB,GAAGJ,SAAS,CAAEK,cAAX,CAA0BJ,QAA1B,CAA7B;AACA,QAAMK,KAAK,GAAGF,oBAAoB,CAACG,QAArB,CAA8BN,QAA9B,CAAd;AACA,QAAMO,GAAG,GAAGJ,oBAAoB,CAACK,MAArB,CAA4BR,QAA5B,CAAZ;AACA,QAAMS,SAAS,GAAGT,QAAQ,CAACU,OAAT,CAAiBL,KAAK,CAACM,GAAvB,CAAlB;AACA,QAAMC,OAAO,GAAGZ,QAAQ,CAACU,OAAT,CAAiBH,GAAG,CAACI,GAArB,CAAhB,CANiD,CAQjD;;AACA,QAAIR,oBAAoB,CAACU,WAAzB,EAAsC;AACpC,UAAIvB,IAAI,CAACE,MAAL,CAAYU,WAAZ,CAAJ,EAA8B;AAAA,YACpBY,IADoB,GACXZ,WAAW,CAACa,IADD,CACpBD,IADoB;AAE5B,YAAME,IAAI,GAAGd,WAAW,CAACc,IAAZ,CAAiBC,IAAjB,EAAb;;AACA,YAAID,IAAI,KAAKF,IAAI,CAACG,IAAL,EAAT,IAAwBtB,OAAO,CAACuB,IAAR,CAAaF,IAAb,CAA5B,EAAgD;AAC9C;AACA,cAAMG,oBAAoB,GAAGhC,cAAc,CAACiC,MAAf,CAAsB;AACjDC,YAAAA,MAAM,EAAEjC,KAAK,CAACkC,gBAAN,CAAuBjB,KAAK,CAACM,GAA7B,EAAkC,CAAlC,CADyC;AAEjDY,YAAAA,KAAK,EAAEnC,KAAK,CAACkC,gBAAN,CAAuBV,OAAO,CAAED,GAAhC,EAAqCC,OAAO,CAAEI,IAAT,CAAcQ,MAAnD;AAF0C,WAAtB,CAA7B;AAIA3B,UAAAA,UAAU,CAAC4B,OAAX,CAAmBvC,QAAQ,CAACwC,cAA5B,EAA4CP,oBAA5C,EAAkE9B,IAAI,CAAC+B,MAAL,CAAY;AAAEO,YAAAA,IAAI,EAAE;AAAR,WAAZ,CAAlE;AACD;AACF;;AACD9B,MAAAA,UAAU,CAAC4B,OAAX,CAAmBvC,QAAQ,CAACqC,KAA5B,EAAmCE,OAAnC,CAA2CvC,QAAQ,CAAC0C,YAApD,EAAkE,MAAlE;AACA,aAAO/B,UAAP;AACD,KAxBgD,CA0BjD;;;AACA,QAAIY,SAAS,CAAEE,GAAX,KAAmBN,KAAK,CAACM,GAAzB,IACFN,KAAK,CAACwB,MAAN,KAAiB,CADf,IAEFjB,OAAO,CAAED,GAAT,KAAiBJ,GAAG,CAACI,GAFnB,IAGFJ,GAAG,CAACsB,MAAJ,KAAejB,OAAO,CAAEI,IAAT,CAAcQ,MAH/B,EAGuC;AACrC,UAAIlC,IAAI,CAACE,MAAL,CAAYU,WAAZ,CAAJ,EAA8B;AAC5B,YAAMc,KAAI,GAAGd,WAAW,CAACc,IAAZ,CAAiBC,IAAjB,EAAb;;AACA,YAAItB,OAAO,CAACuB,IAAR,CAAaF,KAAb,CAAJ,EAAwB;AACtB;AACA,cAAMG,qBAAoB,GAAGhC,cAAc,CAACiC,MAAf,CAAsB;AACjDC,YAAAA,MAAM,EAAEjC,KAAK,CAACkC,gBAAN,CAAuBjB,KAAK,CAACM,GAA7B,EAAkC,CAAlC,CADyC;AAEjDY,YAAAA,KAAK,EAAEnC,KAAK,CAACkC,gBAAN,CAAuBV,OAAO,CAAED,GAAhC,EAAqCC,OAAO,CAAEI,IAAT,CAAcQ,MAAnD;AAF0C,WAAtB,CAA7B;;AAIA3B,UAAAA,UAAU,CAAC4B,OAAX,CAAmBvC,QAAQ,CAACwC,cAA5B,EAA4CP,qBAA5C,EAAkE9B,IAAI,CAAC+B,MAAL,CAAY;AAAEO,YAAAA,IAAI,EAAE;AAAR,WAAZ,CAAlE;AACD;AACF;;AACD9B,MAAAA,UAAU,CAAC4B,OAAX,CAAmBvC,QAAQ,CAACqC,KAA5B,EAAmCE,OAAnC,CAA2CvC,QAAQ,CAAC0C,YAApD,EAAkE,MAAlE;AACA,aAAO/B,UAAP;AACD,KA5CgD,CA6CjD;;;AACA,QAAMiC,WAAW,GAAG9B,QAAQ,CAAC+B,UAAT,CAAoB1B,KAAK,CAACM,GAA1B,EAA+BnB,MAA/B,CAApB;AACA,QAAMwC,SAAS,GAAGhC,QAAQ,CAAC+B,UAAT,CAAoBxB,GAAG,CAACI,GAAxB,EAA6BnB,MAA7B,CAAlB;;AACA,QAAIsC,WAAW,IACbE,SADE,IAEFF,WAAW,CAACnB,GAAZ,KAAoBqB,SAAS,CAACrB,GAF5B,KAGDN,KAAK,CAACwB,MAAN,KAAiB,CAAjB,IAAsBtB,GAAG,CAACsB,MAAJ,KAAejB,OAAO,CAAEI,IAAT,CAAcQ,MAHlD,CAAJ,EAG+D;AAC7D3B,MAAAA,UAAU,CAAC4B,OAAX,CAAmBvC,QAAQ,CAAC0C,YAA5B,EAA0C,MAA1C;AACA,UAAIK,QAAuB,GAAG,IAA9B;AACA,UAAIC,WAA0B,GAAG,IAAjC;AACA,UAAIC,MAAqB,GAAG,IAA5B;AACA,UAAIC,SAAwB,GAAG,IAA/B;AACA,UAAMC,OAAO,GAAGrC,QAAQ,CAACsC,eAAT,CAAyBjC,KAAK,CAACM,GAA/B,CAAhB;AACA,UAAM4B,cAAc,GAAG1C,UAAU,CAACC,KAAX,CAAiBE,QAAjB,CAA0BU,OAA1B,CAAkC2B,OAAO,CAAE1B,GAA3C,CAAvB;AACA,UAAM6B,SAAS,GAAGnC,KAAK,CAACwB,MAAN,KAAiB,CAAnC;;AACA,UAAIU,cAAc,CAAEvB,IAAhB,CAAqBQ,MAArB,KAAgCa,OAAO,CAAErB,IAAT,CAAcQ,MAAlD,EAA0D;AACxD;AACA,YAAMiB,UAAU,GAAG5C,UAAU,CAACC,KAAX,CAAiBE,QAAjB,CAA0B0C,WAA1B,CAAsCH,cAAc,CAAE5B,GAAtD,CAAnB;AACAsB,QAAAA,QAAQ,GAAGQ,UAAU,CAAE9B,GAAvB;AACAuB,QAAAA,WAAW,GAAGM,SAAS,GAAGjC,GAAG,CAACsB,MAAP,GAAgB,CAAvC;AACAM,QAAAA,MAAM,GAAGF,QAAT;AACAG,QAAAA,SAAS,GAAGI,SAAS,GAAGR,SAAS,CAAChB,IAAV,CAAeQ,MAAlB,GAA2BnB,KAAK,CAACwB,MAAtD;AACD,OAPD,MAOO;AACLI,QAAAA,QAAQ,GAAGM,cAAc,CAAE5B,GAA3B;AACAuB,QAAAA,WAAW,GAAGM,SAAS,GAAIH,OAAO,CAAErB,IAAT,CAAcQ,MAAd,GAAuBjB,GAAG,CAACsB,MAA/B,GAAyCQ,OAAO,CAAErB,IAAT,CAAcQ,MAA9E;AACAW,QAAAA,MAAM,GAAGF,QAAT;AACAG,QAAAA,SAAS,GAAGI,SAAS,GAAIH,OAAO,CAAErB,IAAT,CAAcQ,MAAd,GAAuBQ,SAAS,CAAChB,IAAV,CAAeQ,MAA1C,GAAqDa,OAAO,CAAErB,IAAT,CAAcQ,MAAd,GAAuBnB,KAAK,CAACwB,MAAvG;AACD;;AACD,UAAII,QAAQ,IAAIE,MAAhB,EAAwB;AACtBtC,QAAAA,UAAU,CAAC4B,OAAX,CAAmBvC,QAAQ,CAACyD,MAA5B,EAAoCxD,cAAc,CAACyD,QAAf,CAAwB;AAC1DvB,UAAAA,MAAM,EAAE;AAAEV,YAAAA,GAAG,EAAEsB,QAAP;AAAiBJ,YAAAA,MAAM,EAAEK;AAAzB,WADkD;AAE1DX,UAAAA,KAAK,EAAE;AAAEZ,YAAAA,GAAG,EAAEwB,MAAP;AAAeN,YAAAA,MAAM,EAAEO;AAAvB;AAFmD,SAAxB,CAApC,EAGIX,OAHJ,CAGYvC,QAAQ,CAAC2D,UAHrB,EAGiC;AAAElB,UAAAA,IAAI,EAAE,MAAR;AAAgBZ,UAAAA,IAAI,EAAEiB,SAAS,CAACjB;AAAhC,SAHjC,EAIGU,OAJH,CAIWe,SAAS,GAAGtD,QAAQ,CAAC4D,uBAAZ,GAAsC5D,QAAQ,CAAC6D,SAJnE;AAKD;;AACD,aAAOlD,UAAP;AACD;;AACDA,IAAAA,UAAU,CAAC4B,OAAX,CAAmBvC,QAAQ,CAACqC,KAA5B,EAAmCE,OAAnC,CAA2CvC,QAAQ,CAAC0C,YAApD,EAAkE,MAAlE;AACA,QAAMoB,QAAQ,GAAG/C,OAAO,CAACgD,MAAR,CAAezD,MAAf,CAAjB;AACA,QAAMuB,IAAI,GAAGiC,QAAQ,CAACxB,MAAT,KAAoB,CAApB,GAAwBwB,QAAQ,CAAC,CAAD,CAAR,CAAYjC,IAApC,GAA2C;AAAED,MAAAA,IAAI,EAAE;AAAR,KAAxD,CApFiD,CAqFjD;;AACAjB,IAAAA,UAAU,CACP4B,OADH,CACWvC,QAAQ,CAAC2D,UADpB,EACgC;AAC5BlB,MAAAA,IAAI,EAAE,MADsB;AAE5BZ,MAAAA,IAAI,EAAJA;AAF4B,KADhC,EAKGU,OALH,CAKWvC,QAAQ,CAACqC,KALpB,EAMGE,OANH,CAMWvC,QAAQ,CAACgE,iBANpB;AAOA,WAAOrD,UAAP;AACD,GA9FD;AA+FD","sourcesContent":["import { Controller, Commands, RangeSelection, Point, Mark, TextPoint, Element } from '@ali/4ever-cangjie';\nimport { Link } from '@ali/4ever-mo';\nimport { createLinkify } from '@ali/4ever-utils';\nimport { LinkPluginConfig } from '../types';\nimport { isLink } from '../utils';\n\nexport default function createUnwrapLink(\n  protocolAllowList?: LinkPluginConfig['protocolAllowList'],\n) {\n  const linkify = createLinkify(protocolAllowList);\n\n  return function unwrapLink(controller: Controller) {\n    const { selection, document, inlines, focusInline } = controller.value;\n    const shrinkRangeSelection = selection!.shrinkBoundary(document);\n    const start = shrinkRangeSelection.getStart(document) as TextPoint;\n    const end = shrinkRangeSelection.getEnd(document) as TextPoint;\n    const startText = document.getNode(start.key);\n    const endText = document.getNode(end.key);\n\n    // 1. 闭合选区\n    if (shrinkRangeSelection.isCollapsed) {\n      if (Link.isLink(focusInline)) {\n        const { href } = focusInline.data;\n        const text = focusInline.text.trim();\n        if (text === href.trim() && linkify.test(text)) {\n          // Rule: 避免 link 中的 text 是一个合法的 url，导致 unwrapInline 后继续被 decorate 识别\n          const unlinkRangeSelection = RangeSelection.create({\n            anchor: Point.createFromParams(start.key, 0),\n            focus: Point.createFromParams(endText!.key, endText!.text.length),\n          });\n          controller.command(Commands.addMarkAtRange, unlinkRangeSelection, Mark.create({ type: 'unlink' }));\n        }\n      }\n      controller.command(Commands.focus).command(Commands.unwrapInline, 'link');\n      return controller;\n    }\n\n    // 2. 选区跟link完全一致\n    if (startText!.key === start.key &&\n      start.offset === 0 &&\n      endText!.key === end.key &&\n      end.offset === endText!.text.length) {\n      if (Link.isLink(focusInline)) {\n        const text = focusInline.text.trim();\n        if (linkify.test(text)) {\n          // Rule: 避免 link 中的 text 是一个合法的 url，导致 unwrapInline 后继续被 decorate 识别\n          const unlinkRangeSelection = RangeSelection.create({\n            anchor: Point.createFromParams(start.key, 0),\n            focus: Point.createFromParams(endText!.key, endText!.text.length),\n          });\n          controller.command(Commands.addMarkAtRange, unlinkRangeSelection, Mark.create({ type: 'unlink' }));\n        }\n      }\n      controller.command(Commands.focus).command(Commands.unwrapInline, 'link');\n      return controller;\n    }\n    // 3. 选区在inline内，且要么在开头，要么在结束\n    const startInline = document.getClosest(start.key, isLink);\n    const endInline = document.getClosest(end.key, isLink) as Element;\n    if (startInline &&\n      endInline &&\n      startInline.key === endInline.key &&\n      (start.offset === 0 || end.offset === endText!.text.length)) {\n      controller.command(Commands.unwrapInline, 'link');\n      let startKey: string | null = null;\n      let startOffset: number | null = null;\n      let endKey: string | null = null;\n      let endOffset: number | null = null;\n      const preText = document.getPreviousText(start.key);\n      const changedPreText = controller.value.document.getNode(preText!.key);\n      const fromStart = start.offset === 0;\n      if (changedPreText!.text.length === preText!.text.length) {\n        // 说明preText本身也在一个inline元素中，unwrapInline的数据没有合并到preText中\n        const unwrapText = controller.value.document.getNextText(changedPreText!.key);\n        startKey = unwrapText!.key;\n        startOffset = fromStart ? end.offset : 0;\n        endKey = startKey;\n        endOffset = fromStart ? endInline.text.length : start.offset;\n      } else {\n        startKey = changedPreText!.key;\n        startOffset = fromStart ? (preText!.text.length + end.offset) : preText!.text.length;\n        endKey = startKey;\n        endOffset = fromStart ? (preText!.text.length + endInline.text.length) : (preText!.text.length + start.offset);\n      }\n      if (startKey && endKey) {\n        controller.command(Commands.select, RangeSelection.fromJSON({\n          anchor: { key: startKey, offset: startOffset },\n          focus: { key: endKey, offset: endOffset },\n        })).command(Commands.wrapInline, { type: 'link', data: endInline.data })\n          .command(fromStart ? Commands.moveToEndOfPreviousText : Commands.moveToEnd);\n      }\n      return controller;\n    }\n    controller.command(Commands.focus).command(Commands.unwrapInline, 'link');\n    const allLinks = inlines.filter(isLink);\n    const data = allLinks.length === 1 ? allLinks[0].data : { href: '' };\n    // 跟yuque交互保持一直，当选中区域中存在link且同时存在非link选区时，取消选区内所有的链接，同时将选区设置为新的link\n    controller\n      .command(Commands.wrapInline, {\n        type: 'link',\n        data,\n      })\n      .command(Commands.focus)\n      .command(Commands.moveToEndOfInline);\n    return controller;\n  };\n}\n"],"file":"createUnwrapLink.js"}