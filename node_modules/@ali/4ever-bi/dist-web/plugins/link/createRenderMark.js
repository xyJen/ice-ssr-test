import _extends from "@babel/runtime/helpers/extends";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import PureLink from "./components/pureLink";
import { isLinkNode } from "./utils";
export default function createRenderMark(linkConfig) {
  var locale = linkConfig.locale,
      protocolAllowList = linkConfig.protocolAllowList,
      onCopyLink = linkConfig.onCopyLink,
      getLinkInfo = linkConfig.getLinkInfo,
      _linkConfig$enableCar = linkConfig.enableCard,
      enableCard = _linkConfig$enableCar === void 0 ? false : _linkConfig$enableCar,
      openLink = linkConfig.openLink,
      enableLinkCardBlock = linkConfig.enableLinkCardBlock,
      _linkConfig$mountRoot = linkConfig.mountRoot,
      mountRoot = _linkConfig$mountRoot === void 0 ? false : _linkConfig$mountRoot;
  return function renderMark(props, controller, next) {
    var mark = props.mark,
        marks = props.marks,
        node = props.node;

    if (mark.type === 'link' && !marks.find(function (_ref) {
      var type = _ref.type;
      return type === 'unlink';
    })) {
      var document = controller.value.document;
      var inline = document.getClosestInline(node.key);

      if (!isLinkNode(inline)) {
        // 仅在父节点不是 link 节点时，渲染 purelink, 避免节点嵌套
        return /*#__PURE__*/_createElement(PureLink, _extends({}, props, {
          controller: controller,
          protocolAllowList: protocolAllowList || [],
          locale: locale,
          onCopyLink: onCopyLink,
          getLinkInfo: getLinkInfo,
          enableCard: enableCard,
          openLink: openLink,
          enableLinkCardBlock: enableLinkCardBlock,
          mountRoot: mountRoot
        }));
      }
    }

    return next();
  };
}
//# sourceMappingURL=createRenderMark.js.map