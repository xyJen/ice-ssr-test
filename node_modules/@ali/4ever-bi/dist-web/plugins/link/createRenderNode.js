import _extends from "@babel/runtime/helpers/extends";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import Link from "./components/textLink";
import { isLinkCardNode } from "./utils";
export default function createRenderNode(linkConfig, draggable) {
  var locale = linkConfig.locale,
      protocolAllowList = linkConfig.protocolAllowList,
      onCopyLink = linkConfig.onCopyLink,
      getLinkInfo = linkConfig.getLinkInfo,
      _linkConfig$enableCar = linkConfig.enableCard,
      enableCard = _linkConfig$enableCar === void 0 ? false : _linkConfig$enableCar,
      openLink = linkConfig.openLink,
      enableLinkCardBlock = linkConfig.enableLinkCardBlock,
      _linkConfig$mountRoot = linkConfig.mountRoot,
      mountRoot = _linkConfig$mountRoot === void 0 ? false : _linkConfig$mountRoot;
  return {
    link: function link(props, _) {
      var node = props.node;
      var linkType = 'link'; // 当 link 是卡片形式

      if (isLinkCardNode(node)) {
        var cardInfo = node.data.cardInfo;

        var _ref = cardInfo || {},
            displayType = _ref.displayType;

        if (displayType === 'card') {
          linkType = 'card';
        }
      }

      return /*#__PURE__*/_createElement(Link, _extends({}, props, {
        displayType: linkType,
        node: node,
        protocolAllowList: protocolAllowList || [],
        locale: locale,
        getLinkInfo: getLinkInfo,
        onCopyLink: onCopyLink,
        enableCard: enableCard,
        draggable: draggable,
        openLink: openLink,
        enableLinkCardBlock: enableLinkCardBlock,
        mountRoot: mountRoot
      }));
    }
  };
}
//# sourceMappingURL=createRenderNode.js.map