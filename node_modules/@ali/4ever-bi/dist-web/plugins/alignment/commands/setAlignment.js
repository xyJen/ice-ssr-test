import _extends from "@babel/runtime/helpers/extends";
import { Commands } from '@ali/4ever-cangjie';
import { getClosestParagraph } from '@ali/4ever-utils';
import { isEqualWithDefault, getBlocksFromEditor } from '@ali/4ever-utils';
import { DEFAULT_ALIGNMENT } from "../utils";
/* eslint-disable max-len */

export default function setAlignment(controller, align, key) {
  var value = controller.value;
  var blocks;

  if (key) {
    var curBlock = value.document.getClosestBlock(key);
    blocks = curBlock ? [curBlock] : [];
  } else {
    blocks = getBlocksFromEditor(controller);
  }

  blocks.forEach(function (block) {
    var currentAlignment = getClosestParagraph(value, block);

    if (currentAlignment) {
      var prevAlignment = currentAlignment.data.jc ? {
        jc: currentAlignment.data.jc
      } : {};
      var newAlignment = {
        jc: align
      };

      if (isEqualWithDefault(prevAlignment, newAlignment, DEFAULT_ALIGNMENT)) {
        return;
      }

      controller.command(Commands.setNodeByKey, currentAlignment.key, {
        data: _extends({}, currentAlignment.data, {
          jc: align
        })
      });
    }
  });
  return controller;
}
//# sourceMappingURL=setAlignment.js.map