import _extends from "@babel/runtime/helpers/extends";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { ItemSlot, SlotType, IconSelectSingleLineDefaultWidth } from '@ali/4ever-component';
import AlignmentButton from "./components/next/AlignmentButton";
import AlignLeftButton from "./components/next/AlignmentLeftButton";
import AlignRightButton from "./components/next/AlignmentRightButton";
import AlignCenterButton from "./components/next/AlignmentCenterButton";
import AlignJustifyButton from "./components/next/AlignmentJustifyButton";
var buttons = {
  'alignment.left': AlignLeftButton,
  'alignment.right': AlignRightButton,
  'alignment.center': AlignCenterButton,
  'alignment.justify': AlignJustifyButton
};
export default function createRenderToolbar(locale) {
  return function (props, controller) {
    var buttonName = props.buttonName,
        extraProps = props.extraProps;

    if (buttonName === 'alignment') {
      return /*#__PURE__*/_createElement(ItemSlot, {
        display: SlotType.iconSelect,
        width: IconSelectSingleLineDefaultWidth
      }, /*#__PURE__*/_createElement(AlignmentButton, _extends({
        controller: controller,
        locale: locale
      }, extraProps)));
    }

    var Component = buttons[buttonName];

    if (Component) {
      return /*#__PURE__*/_createElement(ItemSlot, {
        display: SlotType.iconButton
      }, /*#__PURE__*/_createElement(Component, _extends({
        controller: controller,
        locale: locale
      }, extraProps)));
    }

    return null;
  };
}
//# sourceMappingURL=createRenderToolbar.js.map