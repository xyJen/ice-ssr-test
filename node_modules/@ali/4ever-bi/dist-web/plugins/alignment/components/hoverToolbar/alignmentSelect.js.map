{"version":3,"sources":["../../../../../../src/plugins/alignment/components/hoverToolbar/alignmentSelect.tsx"],"names":["React","TBIconSelect","PluginRoles","IconAlignCenter","IconAlignJustify","IconAlignLeft","IconAlignRight","HoverToolbarHooks","shortcut","setAlignment","AlignmentSelect","props","controller","getNode","onOverlayVisibleChange","locale","getContainer","useGetContainer","usePopoverVisible","isOverlayVisible","setOverlayVisible","node","alignment","query","handleChange","useCallback","v","run","key","icon","title","dropdownLeft","tooltip","left","dropdownCenter","right","dropdownRight","center","dropdownJustify","justify","buttonTitle","alignSelect"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,SAASC,YAAT,QAA6B,qBAA7B;AAEA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,eAAT,EAA0BC,gBAA1B,EAA4CC,aAA5C,EAA2DC,cAA3D,EAA2EC,iBAA3E,QAAoG,sBAApG;AACA,SAASC,QAAT;AACA,SAASC,YAAT;;wBA2B6B,eAAC,aAAD,O;;yBACE,eAAC,eAAD,O;;yBACD,eAAC,cAAD,O;;yBACE,eAAC,gBAAD,O;;AArBhC,OAAO,IAAMC,eAAgD,GAAG,SAAnDA,eAAmD,CAACC,KAAD,EAAW;AAAA,MACjEC,UADiE,GACTD,KADS,CACjEC,UADiE;AAAA,MACrDC,OADqD,GACTF,KADS,CACrDE,OADqD;AAAA,MAC5CC,sBAD4C,GACTH,KADS,CAC5CG,sBAD4C;AAAA,MACpBC,MADoB,GACTJ,KADS,CACpBI,MADoB;AAEzE,MAAMC,YAAY,GAAGT,iBAAiB,CAACU,eAAlB,EAArB;;AAFyE,8BAG3BV,iBAAiB,CAACW,iBAAlB,CAAoC,mBAApC,EAAyDJ,sBAAzD,CAH2B;AAAA,MAGlEK,gBAHkE;AAAA,MAGhDC,iBAHgD;;AAIzE,MAAMC,IAAI,GAAGR,OAAO,EAApB;AACA,MAAMS,SAAS,GAAGV,UAAU,CAACW,KAAX,CAAiB,cAAjB,EAAiCF,IAAjC,CAAlB;AAEA,MAAMG,YAAY,GAAGxB,KAAK,CAACyB,WAAN,CAAkB,UAACC,CAAD,EAAe;AACpDL,IAAAA,IAAI,IAAIT,UAAU,CAACe,GAAX,CAAe,UAAf,EAA2BlB,YAAY,CAACiB,CAAD,EAAIL,IAAI,CAACO,GAAT,CAAvC,CAAR;AACD,GAFoB,EAElB,CAAChB,UAAD,EAAaS,IAAb,CAFkB,CAArB;AAIA,MAAI,CAACA,IAAL,EAAW,OAAO,IAAP;AAEX,sBACE,eAAC,YAAD;AACE,IAAA,KAAK,EAAEC,SADT;AAEE,IAAA,KAAK,EAAE,GAFT;AAGE,IAAA,OAAO,EAAE,CACP;AAAEM,MAAAA,GAAG,EAAE,MAAP;AAAeC,MAAAA,IAAI,MAAnB;AAAwCC,MAAAA,KAAK,EAAEf,MAAM,CAACgB,YAAP,IAAuB,KAAtE;AAA6EC,MAAAA,OAAO,EAAExB,QAAQ,CAACyB;AAA/F,KADO,EAEP;AAAEL,MAAAA,GAAG,EAAE,QAAP;AAAiBC,MAAAA,IAAI,OAArB;AAA4CC,MAAAA,KAAK,EAAEf,MAAM,CAACmB,cAAP,IAAyB,MAA5E;AAAoFF,MAAAA,OAAO,EAAExB,QAAQ,CAAC2B;AAAtG,KAFO,EAGP;AAAEP,MAAAA,GAAG,EAAE,OAAP;AAAgBC,MAAAA,IAAI,OAApB;AAA0CC,MAAAA,KAAK,EAAEf,MAAM,CAACqB,aAAP,IAAwB,KAAzE;AAAgFJ,MAAAA,OAAO,EAAExB,QAAQ,CAAC6B;AAAlG,KAHO,EAIP;AAAET,MAAAA,GAAG,EAAE,SAAP;AAAkBC,MAAAA,IAAI,OAAtB;AAA8CC,MAAAA,KAAK,EAAEf,MAAM,CAACuB,eAAP,IAA0B,MAA/E;AAAuFN,MAAAA,OAAO,EAAExB,QAAQ,CAAC+B;AAAzG,KAJO,CAHX;AASE,IAAA,QAAQ,EAAEf,YATZ;AAUE,IAAA,eAAe,EAAEJ,iBAVnB;AAWE,IAAA,cAAc,EAAED,gBAXlB;AAYE,IAAA,YAAY,EAAEH,YAZhB;AAaE,IAAA,OAAO,EAAED,MAAM,CAACyB,WAblB;AAcE,IAAA,MAAM,EAAC,4BAdT;AAeE,IAAA,IAAI,EAAEtC,WAAW,CAACuC;AAfpB,IADF;AAmBD,CAhCM","sourcesContent":["import * as React from 'react';\nimport { TBIconSelect } from '@ali/we-design-next';\nimport { Controller, Node } from '@ali/4ever-cangjie';\nimport { PluginRoles } from '@ali/4ever-bamboo';\nimport { IconAlignCenter, IconAlignJustify, IconAlignLeft, IconAlignRight, HoverToolbarHooks } from '@ali/4ever-component';\nimport { shortcut } from '../../utils/getTipsByType';\nimport { setAlignment } from '../../actions';\n\nexport interface IAlignmentSelectProps {\n  controller: Controller;\n  getNode: () => Node | null;\n  onOverlayVisibleChange: (v: boolean) => void;\n  locale: Record<string, string>;\n}\n\nexport const AlignmentSelect: React.FC<IAlignmentSelectProps> = (props) => {\n  const { controller, getNode, onOverlayVisibleChange, locale } = props;\n  const getContainer = HoverToolbarHooks.useGetContainer();\n  const [isOverlayVisible, setOverlayVisible] = HoverToolbarHooks.usePopoverVisible('alignment.default', onOverlayVisibleChange);\n  const node = getNode();\n  const alignment = controller.query('getAlignment', node);\n\n  const handleChange = React.useCallback((v: string) => {\n    node && controller.run('onAction', setAlignment(v, node.key));\n  }, [controller, node]);\n\n  if (!node) return null;\n\n  return (\n    <TBIconSelect\n      value={alignment}\n      width={100}\n      options={[\n        { key: 'left', icon: <IconAlignLeft />, title: locale.dropdownLeft || '左对齐', tooltip: shortcut.left },\n        { key: 'center', icon: <IconAlignCenter />, title: locale.dropdownCenter || '居中对齐', tooltip: shortcut.right },\n        { key: 'right', icon: <IconAlignRight />, title: locale.dropdownRight || '右对齐', tooltip: shortcut.center },\n        { key: 'justify', icon: <IconAlignJustify />, title: locale.dropdownJustify || '两端对齐', tooltip: shortcut.justify },\n      ]}\n      onChange={handleChange}\n      onVisibleChange={setOverlayVisible}\n      overlayVisible={isOverlayVisible}\n      getContainer={getContainer}\n      tooltip={locale.buttonTitle}\n      testid=\"bi-hover-toolbar-alignment\"\n      role={PluginRoles.alignSelect}\n    />\n  );\n};\n"],"file":"alignmentSelect.js"}