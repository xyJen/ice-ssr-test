import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { TBIconSelect } from '@ali/we-design-next';
import { PluginRoles } from '@ali/4ever-bamboo';
import { IconAlignCenter, IconAlignJustify, IconAlignLeft, IconAlignRight, HoverToolbarHooks } from '@ali/4ever-component';
import { shortcut } from "../../utils/getTipsByType";
import { setAlignment } from "../../actions";

var _ref = /*#__PURE__*/_createElement(IconAlignLeft, null);

var _ref2 = /*#__PURE__*/_createElement(IconAlignCenter, null);

var _ref3 = /*#__PURE__*/_createElement(IconAlignRight, null);

var _ref4 = /*#__PURE__*/_createElement(IconAlignJustify, null);

export var AlignmentSelect = function AlignmentSelect(props) {
  var controller = props.controller,
      getNode = props.getNode,
      onOverlayVisibleChange = props.onOverlayVisibleChange,
      locale = props.locale;
  var getContainer = HoverToolbarHooks.useGetContainer();

  var _HoverToolbarHooks$us = HoverToolbarHooks.usePopoverVisible('alignment.default', onOverlayVisibleChange),
      isOverlayVisible = _HoverToolbarHooks$us[0],
      setOverlayVisible = _HoverToolbarHooks$us[1];

  var node = getNode();
  var alignment = controller.query('getAlignment', node);
  var handleChange = React.useCallback(function (v) {
    node && controller.run('onAction', setAlignment(v, node.key));
  }, [controller, node]);
  if (!node) return null;
  return /*#__PURE__*/_createElement(TBIconSelect, {
    value: alignment,
    width: 100,
    options: [{
      key: 'left',
      icon: _ref,
      title: locale.dropdownLeft || '左对齐',
      tooltip: shortcut.left
    }, {
      key: 'center',
      icon: _ref2,
      title: locale.dropdownCenter || '居中对齐',
      tooltip: shortcut.right
    }, {
      key: 'right',
      icon: _ref3,
      title: locale.dropdownRight || '右对齐',
      tooltip: shortcut.center
    }, {
      key: 'justify',
      icon: _ref4,
      title: locale.dropdownJustify || '两端对齐',
      tooltip: shortcut.justify
    }],
    onChange: handleChange,
    onVisibleChange: setOverlayVisible,
    overlayVisible: isOverlayVisible,
    getContainer: getContainer,
    tooltip: locale.buttonTitle,
    testid: "bi-hover-toolbar-alignment",
    role: PluginRoles.alignSelect
  });
};
//# sourceMappingURL=alignmentSelect.js.map