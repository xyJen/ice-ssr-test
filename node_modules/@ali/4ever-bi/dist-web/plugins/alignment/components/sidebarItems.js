import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { ToolbarAlignCenterNormal, ToolbarAlignLeftNormal, ToolbarAlignRightNormal } from '@ali/we-icon';
import * as actions from "../actions";
;
import { Select } from '@ali/4ever-bamboo';
import logger from '@ali/4ever-logger';

var _ref = /*#__PURE__*/_createElement(ToolbarAlignLeftNormal, null);

var _ref2 = /*#__PURE__*/_createElement(ToolbarAlignCenterNormal, null);

var _ref3 = /*#__PURE__*/_createElement(ToolbarAlignRightNormal, null);

var AlignMenu = function AlignMenu(props) {
  var controller = props.controller,
      locale = props.locale;
  var activeAlign = controller.query('getAlignment');
  var isCollapsedAtEdge = controller.value.selection.isCollapsedAtEdge;
  var handleClick = React.useCallback(function (type) {
    controller.run('onAction', actions.setAlignment(type));
    logger.sum("alignment-sidebar-" + type);
  }, [controller]);
  var isDisabled = isCollapsedAtEdge || controller.query('isSelectionInHr') || controller.query('isSelectionInTaskList') || controller.query('isSelectionInListSymbol');
  var alignItems = React.useMemo(function () {
    return [{
      icon: _ref,
      title: locale.buttonLeft,
      key: 'left'
    }, {
      icon: _ref2,
      title: locale.buttonCenter,
      key: 'center'
    }, {
      icon: _ref3,
      title: locale.buttonRight,
      key: 'right'
    }];
  }, [locale]);
  return !isDisabled ? /*#__PURE__*/_createElement(Select, {
    items: alignItems,
    value: activeAlign,
    onChange: handleClick
  }) : null;
};

export default AlignMenu;
//# sourceMappingURL=sidebarItems.js.map