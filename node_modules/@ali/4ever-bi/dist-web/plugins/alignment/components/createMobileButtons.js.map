{"version":3,"sources":["../../../../../src/plugins/alignment/components/createMobileButtons.tsx"],"names":["React","setAlignment","MOBILE_TOOLBAR","left","right","center","justify","useDisabledAndClick","controller","type","handleClick","useCallback","run","isCollapsedAtEdge","value","selection","isDisabled","createMobileHeading","locale","Object","keys","reduce","result","props","Wrapper","item","isActive","query","icon"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\nimport * as React from 'react';\nimport { setAlignment } from '../actions';\nimport type { MobileToolbarButtonProps } from '@ali/4ever-component';\n\nconst MOBILE_TOOLBAR = {\n  left: 'alignLeft',\n  right: 'alignRight',\n  center: 'alignCenter',\n  justify: 'alignBoth',\n};\n\nfunction useDisabledAndClick(controller, type) {\n  const handleClick = React.useCallback(\n    () => controller.run('onAction', setAlignment(type)),\n    [controller, type],\n  );\n\n  const { isCollapsedAtEdge } = controller.value.selection;\n  const isDisabled = isCollapsedAtEdge;\n  return { isDisabled, handleClick };\n}\n\nexport default function createMobileHeading(locale: any) {\n  return Object.keys(MOBILE_TOOLBAR).reduce((result, type) => {\n    result[`${type}MobileBig`] = (props: MobileToolbarButtonProps) => {\n      const { controller, Wrapper, item } = props;\n      const isActive = controller.query('getAlignment') === type;\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const { isDisabled, handleClick } = useDisabledAndClick(controller, type);\n      const icon = MOBILE_TOOLBAR[type];\n\n      return (\n        <Wrapper\n          item={item}\n          type=\"big\"\n          isFocused={isActive}\n          isDisabled={isDisabled}\n          icon={icon}\n          onClick={handleClick}\n        />\n      );\n    };\n    result[`${type}Mobile`] = (props: MobileToolbarButtonProps) => {\n      const { controller, Wrapper, item } = props;\n      const isActive = controller.query('getAlignment') === type;\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const { isDisabled, handleClick } = useDisabledAndClick(controller, type);\n      const icon = MOBILE_TOOLBAR[type];\n\n      return (\n        <Wrapper\n          item={item}\n          type=\"horiz\"\n          isActive={isActive}\n          isDisabled={isDisabled}\n          icon={icon}\n          onClick={handleClick}\n        />\n      );\n    };\n    return result;\n  }, {});\n}\n"],"file":"createMobileButtons.js"}