{"version":3,"sources":["../../../../../src/plugins/alignment/components/getAlignmentMenuList.tsx"],"names":["React","SubMenu","MenuItem","capitalize","getAlignment","setAlignment","ALIGN_LEFT_HOT_KEY","ALIGN_CENTER_HOT_KEY","ALIGN_JUSTIFY_HOT_KEY","ALIGN_RIGHT_HOT_KEY","getActionList","locale","actionList","key","text","dropdownLeft","shortcut","dropdownCenter","dropdownRight","dropdownJustify","getAlimentFromProps","controller","isDisabled","isCollapsedAtEdge","value","selection","query","renderSubMenu","props","menuItem","alignment","handleClick","alignType","split","run","aligns","map","align","title"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { SubMenu, MenuItem } from '@ali/we-design';\nimport { capitalize } from 'lodash-es';\nimport { SubMenuInnerProps } from '@ali/4ever-component';\nimport getAlignment from '../queries/getAlignment';\nimport { setAlignment } from '../actions';\nimport {\n  ALIGN_LEFT_HOT_KEY,\n  ALIGN_CENTER_HOT_KEY,\n  ALIGN_JUSTIFY_HOT_KEY,\n  ALIGN_RIGHT_HOT_KEY,\n} from '../utils/hotkeyTips';\nimport { Controller } from '@ali/4ever-cangjie';\n\ninterface IConfigItem {\n  key: string;\n  text: string;\n  shortcut: string;\n}\n\nfunction getActionList(locale) {\n  const actionList: IConfigItem[] = [\n    {\n      key: 'left',\n      text: locale.dropdownLeft,\n      shortcut: ALIGN_LEFT_HOT_KEY,\n    },\n    {\n      key: 'center',\n      text: locale.dropdownCenter,\n      shortcut: ALIGN_CENTER_HOT_KEY,\n    },\n    {\n      key: 'right',\n      text: locale.dropdownRight,\n      shortcut: ALIGN_RIGHT_HOT_KEY,\n    },\n    {\n      key: 'justify',\n      text: locale.dropdownJustify,\n      shortcut: ALIGN_JUSTIFY_HOT_KEY,\n    },\n  ];\n\n  return actionList;\n}\n\nconst getAlimentFromProps = (controller) => getAlignment(controller) || 'left';\n\nconst isDisabled = (controller: Controller) => {\n  const { isCollapsedAtEdge } = controller.value.selection;\n  if (isCollapsedAtEdge) {\n    return false;\n  }\n  return !!controller.query('isSelectionInHr');\n};\n\nconst renderSubMenu = (props: SubMenuInnerProps) => {\n  const { controller, locale, menuItem } = props;\n  const alignment = getAlimentFromProps(controller);\n  const actionList = getActionList(locale);\n  const handleClick = (key) => {\n    const alignType = key.split('_')[1];\n    controller.run('onAction', setAlignment(alignType));\n  };\n  const aligns = actionList.map(align => {\n    const key = `alignment_${align.key}`;\n    return (\n      <MenuItem\n        selected={alignment === align.key}\n        menuKey={key}\n        key={key}\n        onClick={handleClick}\n        extra={align.shortcut}\n        role={`align${capitalize(align.key)}`}\n      >{align.text}\n      </MenuItem>\n    );\n  });\n\n  return (\n    <SubMenu\n      {...menuItem}\n      title={menuItem.title || ''}\n      disabled={isDisabled(controller)}\n    >\n      {aligns}\n    </SubMenu>\n  );\n};\n\nexport default renderSubMenu;\n"],"file":"getAlignmentMenuList.js"}