{"version":3,"sources":["../../../../../src/plugins/alignment/components/sidebarItems.tsx"],"names":["React","ToolbarAlignCenterNormal","ToolbarAlignLeftNormal","ToolbarAlignRightNormal","actions","Select","logger","AlignMenu","props","controller","locale","activeAlign","query","isCollapsedAtEdge","value","selection","handleClick","useCallback","type","run","setAlignment","sum","isDisabled","alignItems","useMemo","icon","title","buttonLeft","key","buttonCenter","buttonRight"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;qBAC4B,a;AAC5B,SAASC,wBAAT,EAAmCC,sBAAnC,EAA2DC,uBAA3D,QAA0F,cAA1F;AACA,OAAO,KAAKC,OAAZ;AACA;AACA,SAASC,MAAT,QAA6C,mBAA7C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;wBAwBY,eAAC,sBAAD,O;;yBAKA,eAAC,wBAAD,O;;yBAKA,eAAC,uBAAD,O;;AA3BZ,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAA4B;AAAA,MACpCC,UADoC,GACbD,KADa,CACpCC,UADoC;AAAA,MACxBC,MADwB,GACbF,KADa,CACxBE,MADwB;AAE5C,MAAMC,WAAW,GAAGF,UAAU,CAACG,KAAX,CAAiB,cAAjB,CAApB;AAF4C,MAGpCC,iBAHoC,GAGdJ,UAAU,CAACK,KAAX,CAAiBC,SAHH,CAGpCF,iBAHoC;AAK5C,MAAMG,WAAW,GAAGhB,KAAK,CAACiB,WAAN,CAAkB,UAACC,IAAD,EAAU;AAC9CT,IAAAA,UAAU,CAACU,GAAX,CAAe,UAAf,EAA2Bf,OAAO,CAACgB,YAAR,CAAqBF,IAArB,CAA3B;AACAZ,IAAAA,MAAM,CAACe,GAAP,wBAAgCH,IAAhC;AACD,GAHmB,EAGjB,CAACT,UAAD,CAHiB,CAApB;AAKA,MAAMa,UAAU,GAAGT,iBAAiB,IAC7BJ,UAAU,CAACG,KAAX,CAAiB,iBAAjB,CADY,IAEZH,UAAU,CAACG,KAAX,CAAiB,uBAAjB,CAFY,IAGZH,UAAU,CAACG,KAAX,CAAiB,yBAAjB,CAHP;AAKA,MAAMW,UAAkC,GAAGvB,KAAK,CAACwB,OAAN,CAAc;AAAA,WAAM,CAC7D;AACEC,MAAAA,IAAI,MADN;AAEEC,MAAAA,KAAK,EAAEhB,MAAM,CAACiB,UAFhB;AAGEC,MAAAA,GAAG,EAAE;AAHP,KAD6D,EAM7D;AACEH,MAAAA,IAAI,OADN;AAEEC,MAAAA,KAAK,EAAEhB,MAAM,CAACmB,YAFhB;AAGED,MAAAA,GAAG,EAAE;AAHP,KAN6D,EAW7D;AACEH,MAAAA,IAAI,OADN;AAEEC,MAAAA,KAAK,EAAEhB,MAAM,CAACoB,WAFhB;AAGEF,MAAAA,GAAG,EAAE;AAHP,KAX6D,CAAN;AAAA,GAAd,EAgBxC,CAAClB,MAAD,CAhBwC,CAA3C;AAkBA,SAAO,CAACY,UAAD,gBACL,eAAC,MAAD;AACE,IAAA,KAAK,EAAEC,UADT;AAEE,IAAA,KAAK,EAAEZ,WAFT;AAGE,IAAA,QAAQ,EAAEK;AAHZ,IADK,GAMH,IANJ;AAOD,CAxCD;;AA0CA,eAAeT,SAAf","sourcesContent":["import React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { ToolbarAlignCenterNormal, ToolbarAlignLeftNormal, ToolbarAlignRightNormal } from '@ali/we-icon';\nimport * as actions from '../actions';\n;\nimport { Select, StyleSelectItemProps } from '@ali/4ever-bamboo';\nimport logger from '@ali/4ever-logger';\n\nexport interface IAlignMenuProps {\n  controller: Controller;\n  locale: any;\n}\n\nconst AlignMenu = (props: IAlignMenuProps) => {\n  const { controller, locale } = props;\n  const activeAlign = controller.query('getAlignment');\n  const { isCollapsedAtEdge } = controller.value.selection;\n\n  const handleClick = React.useCallback((type) => {\n    controller.run('onAction', actions.setAlignment(type));\n    logger.sum(`alignment-sidebar-${type}`);\n  }, [controller]);\n\n  const isDisabled = isCollapsedAtEdge\n      || controller.query('isSelectionInHr')\n      || controller.query('isSelectionInTaskList')\n      || controller.query('isSelectionInListSymbol');\n\n  const alignItems: StyleSelectItemProps[] = React.useMemo(() => [\n    {\n      icon: <ToolbarAlignLeftNormal />,\n      title: locale.buttonLeft,\n      key: 'left',\n    },\n    {\n      icon: <ToolbarAlignCenterNormal />,\n      title: locale.buttonCenter,\n      key: 'center',\n    },\n    {\n      icon: <ToolbarAlignRightNormal />,\n      title: locale.buttonRight,\n      key: 'right',\n    },\n  ], [locale]);\n\n  return !isDisabled ? (\n    <Select\n      items={alignItems}\n      value={activeAlign}\n      onChange={handleClick}\n    />\n  ) : null;\n};\n\nexport default AlignMenu;\n"],"file":"sidebarItems.js"}