{"version":3,"sources":["../../../../../../src/plugins/alignment/components/next/AlignmentButton.tsx"],"names":["React","HorizontalAlignSelect","PluginRoles","setAlignment","AlignmentButton","props","controller","locale","options","rest","alignment","query","isCollapsedAtEdge","value","selection","isDisabled","handleChange","useCallback","run","selectOptions","useMemo","left","title","dropdownLeft","icon","center","dropdownCenter","right","dropdownRight","justify","dropdownJustify","buttonTitle","alignSelect"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAC5B,SAASC,qBAAT,QAAyE,sBAAzE;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,YAAT;AACA;AAQA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAsD;AAAA,MAC3DC,UAD2D,GAClBD,KADkB,CAC3DC,UAD2D;AAAA,MAC/CC,MAD+C,GAClBF,KADkB,CAC/CE,MAD+C;AAAA,MACvCC,OADuC,GAClBH,KADkB,CACvCG,OADuC;AAAA,MAC3BC,IAD2B,iCAClBJ,KADkB;;AAEnE,MAAMK,SAAS,GAAGJ,UAAU,CAACK,KAAX,CAAiB,cAAjB,KAAoC,MAAtD;AAFmE,MAG3DC,iBAH2D,GAGrCN,UAAU,CAACO,KAAX,CAAiBC,SAHoB,CAG3DF,iBAH2D;AAInE,MAAMG,UAAU,GAAGH,iBAAiB,IAAIN,UAAU,CAACK,KAAX,CAAiB,yBAAjB,CAAxC;AACA,MAAMK,YAAY,GAAGhB,KAAK,CAACiB,WAAN,CAAkB,UAACJ,KAAD,EAAmB;AACxDP,IAAAA,UAAU,CAACY,GAAX,CAAe,UAAf,EAA2Bf,YAAY,CAACU,KAAD,CAAvC;AACD,GAFoB,EAElB,CAACP,UAAD,CAFkB,CAArB;AAKA,MAAMa,aAAa,GAAGnB,KAAK,CAACoB,OAAN,CAA6E;AAAA;;AAAA,WAAO;AACxGC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE,CAAAd,OAAO,QAAP,6BAAAA,OAAO,CAAEa,IAAT,mCAAeC,KAAf,KAAwBf,MAAM,CAACgB,YADlC;AAEJC,QAAAA,IAAI,EAAEhB,OAAF,sCAAEA,OAAO,CAAEa,IAAX,qBAAE,eAAeG;AAFjB,OADkG;AAKxGC,MAAAA,MAAM,EAAE;AACNH,QAAAA,KAAK,EAAE,CAAAd,OAAO,QAAP,+BAAAA,OAAO,CAAEiB,MAAT,qCAAiBH,KAAjB,KAA0Bf,MAAM,CAACmB,cADlC;AAENF,QAAAA,IAAI,EAAEhB,OAAF,wCAAEA,OAAO,CAAEiB,MAAX,qBAAE,iBAAiBD;AAFjB,OALgG;AASxGG,MAAAA,KAAK,EAAE;AACLL,QAAAA,KAAK,EAAE,CAAAd,OAAO,QAAP,8BAAAA,OAAO,CAAEmB,KAAT,oCAAgBL,KAAhB,KAAyBf,MAAM,CAACqB,aADlC;AAELJ,QAAAA,IAAI,EAAEhB,OAAF,uCAAEA,OAAO,CAAEmB,KAAX,qBAAE,gBAAgBH;AAFjB,OATiG;AAaxGK,MAAAA,OAAO,EAAE;AACPP,QAAAA,KAAK,EAAE,CAAAd,OAAO,QAAP,gCAAAA,OAAO,CAAEqB,OAAT,sCAAkBP,KAAlB,KAA2Bf,MAAM,CAACuB,eADlC;AAEPN,QAAAA,IAAI,EAAEhB,OAAF,yCAAEA,OAAO,CAAEqB,OAAX,qBAAE,kBAAkBL;AAFjB;AAb+F,KAAP;AAAA,GAA7E,EAkBlB,CAACjB,MAAD,EAASC,OAAT,CAlBkB,CAAtB;AAqBA,sBACE,eAAC,qBAAD;AACE,IAAA,QAAQ,EAAEQ,YADZ;AAEE,IAAA,KAAK,EAAEN,SAFT;AAGE,IAAA,MAAM,EAAC,kBAHT;AAIE,IAAA,QAAQ,EAAE,CAAC,CAACK,UAJd;AAKE,IAAA,OAAO,EAAE,CAAAR,MAAM,QAAN,YAAAA,MAAM,CAAEwB,WAAR,KAAuB,EALlC;AAME,IAAA,IAAI,EAAE7B,WAAW,CAAC8B,WANpB;AAOE,IAAA,OAAO,EAAEb;AAPX,KAQMV,IARN,EADF;AAYD","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { HorizontalAlignSelect, IIconButtonProps, HorizontalAlign } from '@ali/4ever-component';\nimport { PluginRoles } from '@ali/4ever-bamboo';\nimport { setAlignment } from '../../actions';\n;\n\nexport interface AlignmentButtonProps extends IIconButtonProps {\n  controller: Controller;\n  locale: Record<string, string>;\n  options?: Partial<Record<HorizontalAlign, { title?: string, icon?: React.ReactElement }>>;\n}\n\nexport default function AlignmentButton(props: AlignmentButtonProps) {\n  const { controller, locale, options, ...rest } = props;\n  const alignment = controller.query('getAlignment') || 'left';\n  const { isCollapsedAtEdge } = controller.value.selection;\n  const isDisabled = isCollapsedAtEdge || controller.query('isSelectionInListSymbol');\n  const handleChange = React.useCallback((value: string) => {\n    controller.run('onAction', setAlignment(value));\n  }, [controller]);\n\n\n  const selectOptions = React.useMemo<React.ComponentProps<typeof HorizontalAlignSelect>['options']>(() => ({\n    left: {\n      title: options?.left?.title || locale.dropdownLeft,\n      icon: options?.left?.icon,\n    },\n    center: {\n      title: options?.center?.title || locale.dropdownCenter,\n      icon: options?.center?.icon,\n    },\n    right: {\n      title: options?.right?.title || locale.dropdownRight,\n      icon: options?.right?.icon,\n    },\n    justify: {\n      title: options?.justify?.title || locale.dropdownJustify,\n      icon: options?.justify?.icon,\n    },\n\n  }), [locale, options])\n\n\n  return (\n    <HorizontalAlignSelect\n      onChange={handleChange}\n      value={alignment}\n      testid=\"bi-toolbar-align\"\n      disabled={!!isDisabled}\n      tooltip={locale?.buttonTitle || ''}\n      role={PluginRoles.alignSelect}\n      options={selectOptions}\n      {...rest}\n    />\n  );\n}\n"],"file":"AlignmentButton.js"}