import { Heading, Paragraph } from '@ali/4ever-mo';
import { getBlocksFromEditor } from '@ali/4ever-utils';
var DEFAULT_ALIGNMENT = 'left';

function getAlignmentOfBlock(block) {
  var alignment = block ? block.data.jc || DEFAULT_ALIGNMENT : DEFAULT_ALIGNMENT;
  return alignment === 'distribute' ? 'justify' : alignment;
}

export default function getAlignment(controller, node) {
  var paragraphs;

  if (node) {
    var curBlock = controller.value.document.getClosestBlock(node.key);
    paragraphs = curBlock ? [curBlock] : [];
  } else {
    var blocks = getBlocksFromEditor(controller);
    paragraphs = blocks.filter(function (block) {
      return Paragraph.isParagraph(block) || Heading.isHeading(block);
    });
  }

  if (paragraphs.length === 1) {
    return getAlignmentOfBlock(paragraphs[0]);
  }

  var commonAlignment;
  paragraphs.some(function (paragraph) {
    var currentAlignment = getAlignmentOfBlock(paragraph);

    if (commonAlignment && currentAlignment !== commonAlignment) {
      commonAlignment = undefined;
      return true;
    }

    commonAlignment = currentAlignment;
    return false;
  });
  return commonAlignment;
}
//# sourceMappingURL=getAlignment.js.map