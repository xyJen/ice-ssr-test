import { hotkeys } from '@ali/4ever-cangjie';
import isKeyHotkey from 'is-hotkey';
import setAlignment from "../commands/setAlignment";
import { getClosestParagraph } from '@ali/4ever-utils';
import { getData } from '@ali/4ever-utils';
var isAlignLeftHotKey = isKeyHotkey('mod+shift+l');
var isAlignCenterHotkey = isKeyHotkey('mod+shift+e');
var isAlignRightHotkey = isKeyHotkey('mod+shift+r');
var isAlignJustifyHotkey = isKeyHotkey('mod+shift+j');
export default function onKeyDown(event, controller, next) {
  var value = controller.value;
  /* 在行首backspace/delete撤销对齐 */

  if (hotkeys.isDeleteBackward(event)) {
    var currentParagraph = getClosestParagraph(value);

    if (!currentParagraph || getData(currentParagraph.data, 'jc', 'left') === 'left') {
      return next();
    }

    var selection = value.selection,
        startBlock = value.startBlock;
    var isDeleteAtFirstChar = selection.isCollapsed && selection.anchor.isAtStartOfNode(currentParagraph);
    var isNewLineFirstChar = selection.isCollapsed && selection.anchor.isAtStartOfNode(startBlock);
    if (!isDeleteAtFirstChar && !isNewLineFirstChar) return next();

    if (isDeleteAtFirstChar) {
      return setAlignment(controller, 'left');
    }
  }

  if (isAlignLeftHotKey(event)) {
    event.preventDefault();
    return setAlignment(controller, 'left');
  }

  if (isAlignCenterHotkey(event)) {
    event.preventDefault();
    return setAlignment(controller, 'center');
  }

  if (isAlignRightHotkey(event)) {
    event.preventDefault();
    return setAlignment(controller, 'right');
  }

  if (isAlignJustifyHotkey(event)) {
    event.preventDefault();
    return setAlignment(controller, 'justify');
  }

  return next();
}
//# sourceMappingURL=onKeyDown.js.map