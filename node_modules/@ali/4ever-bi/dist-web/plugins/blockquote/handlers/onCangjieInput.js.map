{"version":3,"sources":["../../../../../src/plugins/blockquote/handlers/onCangjieInput.ts"],"names":["Commands","toggleQuote","isBlockquoteDisabled","validDelimiters","onCangjieInput","event","controller","next","value","startBlock","selection","document","detail","data","char","text","slice","convertToTextPoints","start","offset","includes","type","list","blockquote","preventDefault","command","moveFocusToStartOfNode","del","dispatch","mdType"],"mappings":"AAAA,SAAwCA,QAAxC,QAAwD,oBAAxD;AACA,OAAOC,WAAP;AACA,OAAOC,oBAAP;AAEA,IAAMC,eAAe,GAAG,CAAC,GAAD,EAAM,GAAN,CAAxB;AAEA,eAAe,SAASC,cAAT,CACbC,KADa,EAEbC,UAFa,EAGbC,IAHa,EAIb;AAAA,0BAC4CD,UAAU,CAACE,KADvD;AAAA,MACQC,UADR,qBACQA,UADR;AAAA,MACoBC,SADpB,qBACoBA,SADpB;AAAA,MAC+BC,QAD/B,qBAC+BA,QAD/B;AAEA,MAAIN,KAAK,CAACO,MAAN,CAAaC,IAAb,KAAsB,GAAtB,IAA6B,CAACJ,UAAlC,EAA8C,OAAOF,IAAI,EAAX;;AAE9C,MAAMO,KAAI,GAAGL,UAAU,CAACM,IAAX,CAAgBC,KAAhB,CACX,CADW,EAEXN,SAAS,CAACO,mBAAV,CAA8BN,QAA9B,EAAwCO,KAAxC,CAA8CC,MAFnC,CAAb;;AAIA,MACEhB,eAAe,CAACiB,QAAhB,CAAyBN,KAAzB,KACAL,UAAU,CAACY,IAAX,KAAoB,WADpB,IAEA,CAACZ,UAAU,CAACI,IAAX,CAAgBS,IAFjB,IAGA,CAACb,UAAU,CAACI,IAAX,CAAgBU,UAHjB,IAIA,CAACrB,oBAAoB,CAACI,UAAD,CALvB,EAME;AACAD,IAAAA,KAAK,CAACmB,cAAN;AACAlB,IAAAA,UAAU,CACPmB,OADH,CACWzB,QAAQ,CAAC0B,sBADpB,EAC4CjB,UAD5C,EAEGgB,OAFH,CAEWzB,QAAQ,CAAC2B,GAFpB;AAIA,WAAO1B,WAAW,CAACK,UAAD,CAAX,CACJsB,QADI,CACK,6BADL,EACoC;AAAEC,MAAAA,MAAM,EAAE;AAAV,KADpC,CAAP;AAED;;AACD,SAAOtB,IAAI,EAAX;AACD","sourcesContent":["import { CangjieInputEvent, Controller, Commands } from '@ali/4ever-cangjie';\nimport toggleQuote from '../commands/toggleQuote';\nimport isBlockquoteDisabled from '../utils/isBlockquoteDisabled';\n\nconst validDelimiters = ['>', 'ã€‹'];\n\nexport default function onCangjieInput(\n  event: CangjieInputEvent,\n  controller: Controller,\n  next: () => void,\n) {\n  const { startBlock, selection, document } = controller.value;\n  if (event.detail.data !== ' ' || !startBlock) return next();\n\n  const char = startBlock.text.slice(\n    0,\n    selection.convertToTextPoints(document).start.offset,\n  );\n  if (\n    validDelimiters.includes(char) &&\n    startBlock.type === 'paragraph' &&\n    !startBlock.data.list &&\n    !startBlock.data.blockquote &&\n    !isBlockquoteDisabled(controller)\n  ) {\n    event.preventDefault();\n    controller\n      .command(Commands.moveFocusToStartOfNode, startBlock)\n      .command(Commands.del);\n\n    return toggleQuote(controller)\n      .dispatch('createTriggerMarkdownAction', { mdType: 'blockquote' });\n  }\n  return next();\n}\n"],"file":"onCangjieInput.js"}