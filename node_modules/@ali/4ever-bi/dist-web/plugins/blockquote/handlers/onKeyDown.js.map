{"version":3,"sources":["../../../../../src/plugins/blockquote/handlers/onKeyDown.ts"],"names":["isKeyHotkey","toggleQuote","getClosestParagraph","isBackspaceHotKey","isEnterHotKey","event","editor","next","value","startBlock","selection","document","currentParagraph","isAtQuoteBlockStart","data","blockquote","isCollapsed","anchor","isAtStartOfNode","previousBlock","getPreviousBlock","getEnd","key","preventDefault","isEmptyBlockQuote","text","nodes","length","getFirstNode","isText"],"mappings":"AACA,SAASA,WAAT,QAA4B,WAA5B;AACA,OAAOC,WAAP;AACA,SAASC,mBAAT,QAAoC,kBAApC;AAEA,IAAMC,iBAAiB,GAAGH,WAAW,CAAC,WAAD,CAArC;AACA,IAAMI,aAAa,GAAGJ,WAAW,CAAC,OAAD,CAAjC;AAEA,gBAAe,UAACK,KAAD,EAAQC,MAAR,EAA4BC,IAA5B,EAAqC;AAAA,MAC1CC,KAD0C,GAChCF,MADgC,CAC1CE,KAD0C;AAAA,MAE1CC,UAF0C,GAEND,KAFM,CAE1CC,UAF0C;AAAA,MAE9BC,SAF8B,GAENF,KAFM,CAE9BE,SAF8B;AAAA,MAEnBC,QAFmB,GAENH,KAFM,CAEnBG,QAFmB,EAIlD;;AACA,MAAMC,gBAAgB,GAAGV,mBAAmB,CAACM,KAAD,CAA5C;AACA,MAAMK,mBAAmB,GACvBD,gBAAgB,IAChBA,gBAAgB,CAACE,IAAjB,CAAsBC,UADtB,IAEAL,SAAS,CAACM,WAFV,IAGAN,SAAS,CAACO,MAAV,CAAiBC,eAAjB,CAAiCN,gBAAjC,CAJF;AAKA,MAAMO,aAAa,GAAGR,QAAQ,CAACS,gBAAT,CACpBV,SAAS,CAACW,MAAV,CAAiBV,QAAjB,EAA2BW,GADP,CAAtB;;AAGA,MAAIT,mBAAmB,IAAIV,iBAAiB,CAACE,KAAD,CAA5C,EAAqD;AACnDA,IAAAA,KAAK,CAACkB,cAAN;;AACA,QAAIJ,aAAa,IAAIA,aAAa,CAACL,IAAd,CAAmBC,UAAxC,EAAoD;AAClD;AACA,aAAOd,WAAW,CAACK,MAAD,EAASC,IAAT,CAAlB;AACD;;AACD,WAAON,WAAW,CAACK,MAAD,CAAlB;AACD,GArBiD,CAuBlD;;;AACA,MAAMkB,iBAAiB,GACrB,CAAAZ,gBAAgB,QAAhB,YAAAA,gBAAgB,CAAEE,IAAlB,CAAuBC,UAAvB,KACA,CAACN,UAAU,CAACgB,IADZ,IAEAhB,UAAU,CAACiB,KAAX,CAAiBC,MAAjB,KAA4B,CAF5B,IAGAlB,UAAU,CAACmB,YAAX,GAA0BC,MAA1B,EAJF;;AAMA,MAAIL,iBAAiB,IAAIpB,aAAa,CAACC,KAAD,CAAtC,EAA+C;AAC7CA,IAAAA,KAAK,CAACkB,cAAN;AACA,WAAOtB,WAAW,CAACK,MAAD,CAAlB;AACD;;AAED,SAAOC,IAAI,EAAX;AACD,CApCD","sourcesContent":["import { Controller, Commands } from '@ali/4ever-cangjie';\nimport { isKeyHotkey } from 'is-hotkey';\nimport toggleQuote from '../commands/toggleQuote';\nimport { getClosestParagraph } from '@ali/4ever-utils';\n\nconst isBackspaceHotKey = isKeyHotkey('backspace');\nconst isEnterHotKey = isKeyHotkey('enter');\n\nexport default (event, editor: Controller, next) => {\n  const { value } = editor;\n  const { startBlock, selection, document } = value;\n\n  // 在 block 顶部 delete，移除引用状态\n  const currentParagraph = getClosestParagraph(value);\n  const isAtQuoteBlockStart =\n    currentParagraph &&\n    currentParagraph.data.blockquote &&\n    selection.isCollapsed &&\n    selection.anchor.isAtStartOfNode(currentParagraph);\n  const previousBlock = document.getPreviousBlock(\n    selection.getEnd(document).key,\n  );\n  if (isAtQuoteBlockStart && isBackspaceHotKey(event)) {\n    event.preventDefault();\n    if (previousBlock && previousBlock.data.blockquote) {\n      // 当前一个 block 也是引用时，执行 next 回退一行\n      return toggleQuote(editor, next);\n    }\n    return toggleQuote(editor);\n  }\n\n  // 空 blockquote ，回车删除引用\n  const isEmptyBlockQuote =\n    currentParagraph?.data.blockquote &&\n    !startBlock.text &&\n    startBlock.nodes.length === 1 &&\n    startBlock.getFirstNode().isText();\n\n  if (isEmptyBlockQuote && isEnterHotKey(event)) {\n    event.preventDefault();\n    return toggleQuote(editor);\n  }\n\n  return next();\n};\n"],"file":"onKeyDown.js"}