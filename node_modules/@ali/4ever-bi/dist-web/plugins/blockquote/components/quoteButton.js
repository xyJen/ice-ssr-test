import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { Button, ReferenceLightNormal, ReferenceNormal } from '@ali/we-design';
import { PluginRoles } from '@ali/4ever-bamboo';
import getBlockquoteState from "../utils/getBlockquoteState";
import isBlockquoteDisabled from "../utils/isBlockquoteDisabled";
import { toggleBlockquote } from "../actions";
import { ToolbarMode } from '@ali/4ever-component';

var _ref = /*#__PURE__*/_createElement(ReferenceNormal, null);

var _ref2 = /*#__PURE__*/_createElement(ReferenceLightNormal, null);

export default function QuoteButton(props) {
  var controller = props.controller,
      locale = props.locale,
      toolbarMode = props.toolbarMode;
  var isActive = getBlockquoteState(controller);
  var handleClick = React.useCallback(function () {
    return controller.run('onAction', toggleBlockquote());
  }, [controller]);
  var icon = React.useMemo(function () {
    return toolbarMode === ToolbarMode.single ? _ref : _ref2;
  }, [toolbarMode]);
  return /*#__PURE__*/_createElement(Button, {
    title: locale.quickInsertTitle,
    testid: "bi-toolbar-blockquote",
    icon: icon,
    active: isActive,
    onClick: handleClick,
    bordered: false,
    disabled: isBlockquoteDisabled(controller),
    role: PluginRoles.blockquote
  });
}
//# sourceMappingURL=quoteButton.js.map