import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { MenuItem, InlineMenuItem } from '@ali/we-design';
import { PluginRoles } from '@ali/4ever-bamboo';
import { toggleBlockquote } from "../actions";
import isBlockquoteDisabled from "../utils/isBlockquoteDisabled"; // 目前 menu 不支持样式上的禁用，待统一调整

function withBlockquoteMenu(Component) {
  return function BlockquoteMenu(props) {
    var menuItem = props.menuItem,
        controller = props.controller;
    var value = controller.value;

    var action = menuItem.action,
        title = menuItem.title,
        rest = _objectWithoutPropertiesLoose(menuItem, ["action", "title"]);

    var isDisabled = isBlockquoteDisabled(controller) || controller.query('isSelectionInSubjectHeading');

    var handleClick = function handleClick() {
      // 转换逻辑不再是单向强制转换了，不再使用，避免以后逻辑更改暂时保留注释
      // if (action === 'format') {
      //   return controller.run('onAction', transformBlockquote());
      // }
      controller.run('onAction', toggleBlockquote());
    };

    return /*#__PURE__*/_createElement(Component, _extends({
      disabled: isDisabled
    }, rest, {
      onClick: handleClick,
      role: PluginRoles.paragraph
    }), title);
  };
}

export var menu = withBlockquoteMenu(MenuItem);
export var inlineMenu = withBlockquoteMenu(InlineMenuItem);
//# sourceMappingURL=quoteMenu.js.map