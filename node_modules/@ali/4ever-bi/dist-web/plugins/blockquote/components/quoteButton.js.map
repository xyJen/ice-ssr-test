{"version":3,"sources":["../../../../../src/plugins/blockquote/components/quoteButton.tsx"],"names":["React","Button","ReferenceLightNormal","ReferenceNormal","PluginRoles","getBlockquoteState","isBlockquoteDisabled","toggleBlockquote","ToolbarMode","QuoteButton","props","controller","locale","toolbarMode","isActive","handleClick","useCallback","run","icon","useMemo","single","quickInsertTitle","blockquote"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAC5B,SAASC,MAAT,EAAiBC,oBAAjB,EAAuCC,eAAvC,QAA8D,gBAA9D;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,OAAOC,kBAAP;AACA,OAAOC,oBAAP;AACA,SAASC,gBAAT;AACA,SAASC,WAAT,QAA4B,sBAA5B;;wBAiBgD,eAAC,eAAD,O;;yBAAsB,eAAC,oBAAD,O;;AATtE,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA+C;AAAA,MACpDC,UADoD,GAChBD,KADgB,CACpDC,UADoD;AAAA,MACxCC,MADwC,GAChBF,KADgB,CACxCE,MADwC;AAAA,MAChCC,WADgC,GAChBH,KADgB,CAChCG,WADgC;AAE5D,MAAMC,QAAQ,GAAGT,kBAAkB,CAACM,UAAD,CAAnC;AAEA,MAAMI,WAAW,GAAGf,KAAK,CAACgB,WAAN,CAAkB,YAAM;AAC1C,WAAOL,UAAU,CAACM,GAAX,CAAe,UAAf,EAA2BV,gBAAgB,EAA3C,CAAP;AACD,GAFmB,EAEjB,CAACI,UAAD,CAFiB,CAApB;AAIA,MAAMO,IAAI,GAAGlB,KAAK,CAACmB,OAAN,CAAc,YAAM;AAC/B,WAAON,WAAW,KAAKL,WAAW,CAACY,MAA5B,eAAP;AACD,GAFY,EAEV,CAACP,WAAD,CAFU,CAAb;AAIA,sBACE,eAAC,MAAD;AACE,IAAA,KAAK,EAAED,MAAM,CAACS,gBADhB;AAEE,IAAA,MAAM,EAAC,uBAFT;AAGE,IAAA,IAAI,EAAEH,IAHR;AAIE,IAAA,MAAM,EAAEJ,QAJV;AAKE,IAAA,OAAO,EAAEC,WALX;AAME,IAAA,QAAQ,EAAE,KANZ;AAOE,IAAA,QAAQ,EAAET,oBAAoB,CAACK,UAAD,CAPhC;AAQE,IAAA,IAAI,EAAEP,WAAW,CAACkB;AARpB,IADF;AAYD","sourcesContent":["import * as React from 'react';\nimport { Controller } from '@ali/4ever-cangjie';\nimport { Button, ReferenceLightNormal, ReferenceNormal } from '@ali/we-design';\nimport { PluginRoles } from '@ali/4ever-bamboo';\nimport getBlockquoteState from '../utils/getBlockquoteState';\nimport isBlockquoteDisabled from '../utils/isBlockquoteDisabled';\nimport { toggleBlockquote } from '../actions';\nimport { ToolbarMode } from '@ali/4ever-component';\n\ninterface IQuoteButtonProps {\n  controller: Controller;\n  locale: Record<string, string>;\n  toolbarMode?: ToolbarMode;\n}\n\nexport default function QuoteButton(props: IQuoteButtonProps) {\n  const { controller, locale, toolbarMode } = props;\n  const isActive = getBlockquoteState(controller);\n\n  const handleClick = React.useCallback(() => {\n    return controller.run('onAction', toggleBlockquote());\n  }, [controller]);\n\n  const icon = React.useMemo(() => {\n    return toolbarMode === ToolbarMode.single ? <ReferenceNormal /> : <ReferenceLightNormal />;\n  }, [toolbarMode]);\n\n  return (\n    <Button\n      title={locale.quickInsertTitle}\n      testid=\"bi-toolbar-blockquote\"\n      icon={icon}\n      active={isActive}\n      onClick={handleClick}\n      bordered={false}\n      disabled={isBlockquoteDisabled(controller)}\n      role={PluginRoles.blockquote}\n    />\n  );\n}\n"],"file":"quoteButton.js"}