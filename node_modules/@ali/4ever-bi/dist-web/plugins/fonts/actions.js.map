{"version":3,"sources":["../../../../src/plugins/fonts/actions.ts"],"names":["FONTS_SET","Symbol","setFonts","fonts","type","payload","isSetFonts","action","actions","isActions","DEPRECATED_ACTIONS"],"mappings":"AAEA;AACA,OAAO,IAAMA,SAAS,GAAGC,MAAM,CAAC,WAAD,CAAxB;AAEP,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAiD;AACtD,SAAO;AACLC,IAAAA,IAAI,EAAEJ,SADD;AAELK,IAAAA,OAAO,EAAE;AAAEF,MAAAA,KAAK,EAALA;AAAF;AAFJ,GAAP;AAID;AASD,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACC,MAAD,EAA8C;AACtE,SAAOA,MAAM,CAACH,IAAP,KAAgBJ,SAAvB;AACD,CAFM;AAIP,OAAO,IAAMQ,OAAO,GAAG;AACrBN,EAAAA,QAAQ,EAARA;AADqB,CAAhB;AAIP,OAAO,IAAMO,SAAS,GAAG;AACvBH,EAAAA,UAAU,EAAVA;AADuB,CAAlB;AAIP;;AACA,OAAO,IAAMI,kBAAkB,GAAG;AAChCV,EAAAA,SAAS,EAATA,SADgC;AAEhCE,EAAAA,QAAQ,EAARA;AAFgC,CAA3B","sourcesContent":["import type { Action, ConvertToPluginActionCreators, ConvertToPluginActionPredicates } from '@ali/4ever-cangjie';\n\n/** fonts */\nexport const FONTS_SET = Symbol('FONTS_SET');\n\nexport function setFonts(fonts: string): SetFontsAction {\n  return {\n    type: FONTS_SET,\n    payload: { fonts },\n  };\n}\n\nexport interface SetFontsAction {\n  type: typeof FONTS_SET;\n  payload: {\n    fonts: string;\n  };\n}\n\nexport const isSetFonts = (action: Action): action is SetFontsAction => {\n  return action.type === FONTS_SET;\n};\n\nexport const actions = {\n  setFonts,\n};\n\nexport const isActions = {\n  isSetFonts,\n};\n\n/** @deprecated */\nexport const DEPRECATED_ACTIONS = {\n  FONTS_SET,\n  setFonts,\n};\n\ndeclare module '@ali/4ever-cangjie' {\n  interface PluginActionCreators extends ConvertToPluginActionCreators<typeof actions> {}\n  interface PluginActionPredicates extends ConvertToPluginActionPredicates<typeof isActions> {}\n}\n"],"file":"actions.js"}