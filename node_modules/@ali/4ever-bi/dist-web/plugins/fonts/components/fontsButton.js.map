{"version":3,"sources":["../../../../../src/plugins/fonts/components/fontsButton.tsx"],"names":["React","useStyle","FontFamilySelect","OriginFontFamilySelect","PluginRoles","NewToolbarMode","ToolbarMode","setFonts","defaultFonts","getFontsTip","memo","FontsButton","props","controller","locale","toolbarMode","rest","docStyle","fonts","query","docDefaults","data","rPr","isCollapsedAtEdge","value","selection","isDisabled","isDouble","handleChange","useCallback","fontsValue","run","realWidth","title","buttonTitle","fontFamilySelect"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,SAAqBC,QAArB,QAAqC,oBAArC;AACA,SAASC,gBAAgB,IAAIC,sBAA7B,QAA2D,iBAA3D;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,cAAc,IAAIC,WAA3B,QAA8C,sBAA9C;AACA,SAASC,QAAT;AACA,SAASC,YAAT;AACA,OAAOC,WAAP;AAEA,IAAMP,gBAAgB,gBAAGF,KAAK,CAACU,IAAN,CAAWP,sBAAX,CAAzB;AAQA,eAAe,SAASQ,WAAT,CAAqBC,KAArB,EAA8C;AAAA;;AAAA,MACnDC,UADmD,GACND,KADM,CACnDC,UADmD;AAAA,MACvCC,MADuC,GACNF,KADM,CACvCE,MADuC;AAAA,MAC/BC,WAD+B,GACNH,KADM,CAC/BG,WAD+B;AAAA,MACfC,IADe,iCACNJ,KADM;;AAE3D,MAAMK,QAAQ,GAAGhB,QAAQ,EAAzB;AACA,MAAMiB,KAAK,GAAGL,UAAU,CAACM,KAAX,CAAiB,UAAjB,EAA6BF,QAA7B,6CAA6BA,QAAQ,CAAEG,WAAvC,+CAA6B,sBAAuBC,IAApD,+CAA6B,uBAA6BC,GAA1D,qBAA6B,uBAAkCJ,KAA/D,CAAd;AAH2D,MAInDK,iBAJmD,GAI7BV,UAAU,CAACW,KAAX,CAAiBC,SAJY,CAInDF,iBAJmD;AAK3D,MAAMG,UAAU,GAAGH,iBAAiB,IAC/BV,UAAU,CAACM,KAAX,CAAiB,oBAAjB,CADc,IAEdN,UAAU,CAACM,KAAX,CAAiB,iBAAjB,CAFc,IAGdN,UAAU,CAACM,KAAX,CAAiB,uBAAjB,CAHL;AAIA,MAAMQ,QAAQ,GAAGZ,WAAW,KAAKT,WAAW,UAA5C;AACA,MAAMsB,YAAY,GAAG5B,KAAK,CAAC6B,WAAN,CAAkB,UAACC,UAAD;AAAA,WAAwBjB,UAAU,CAACkB,GAAX,CAAe,UAAf,EAA2BxB,QAAQ,CAACuB,UAAD,CAAnC,CAAxB;AAAA,GAAlB,EAA4F,CAACjB,UAAD,CAA5F,CAArB;AACA,MAAMmB,SAAS,GAAGL,QAAQ,GAAG,GAAH,GAAS,EAAnC;AAEA,MAAIM,KAAK,GAAG,CAAAnB,MAAM,QAAN,YAAAA,MAAM,CAAEoB,WAAR,KAAuB,EAAnC;;AAEA,MAAIhB,KAAK,IAAIA,KAAK,KAAKV,YAAvB,EAAqC;AACnC;AACAyB,IAAAA,KAAK,UAAQxB,WAAW,CAACS,KAAD,EAAQJ,MAAR,CAAxB;AACD;;AAED,sBACE,eAAC,gBAAD,eACME,IADN;AAEE,IAAA,MAAM,EAAC,kBAFT;AAGE,IAAA,KAAK,EAAEiB,KAHT;AAIE,IAAA,QAAQ,EAAE,CAAC,CAACP,UAJd;AAKE,IAAA,KAAK,EAAER,KAAK,KAAIJ,MAAJ,oBAAIA,MAAM,CAAEoB,WAAZ,CALd;AAME,IAAA,QAAQ,EAAEP,QANZ;AAOE,IAAA,QAAQ,EAAEC,YAPZ;AAQE,IAAA,KAAK,EAAEI,SART;AASE,IAAA,YAAY,EAAElB,MAAF,oBAAEA,MAAM,CAAEoB,WATxB;AAUE,IAAA,IAAI,EAAE9B,WAAW,CAAC+B;AAVpB,KADF;AAcD","sourcesContent":["import * as React from 'react';\nimport { Controller, useStyle } from '@ali/4ever-cangjie';\nimport { FontFamilySelect as OriginFontFamilySelect } from '@ali/we-toolbar';\nimport { PluginRoles } from '@ali/4ever-bamboo';\nimport { NewToolbarMode as ToolbarMode } from '@ali/4ever-component';\nimport { setFonts } from '../actions';\nimport { defaultFonts } from '../utils/getActiveFontsMark';\nimport getFontsTip from '../utils/getFontsTip';\n\nconst FontFamilySelect = React.memo(OriginFontFamilySelect);\n\nexport interface FontsButtonProps {\n  controller: Controller;\n  locale?: Record<string, string>;\n  toolbarMode?: ToolbarMode;\n}\n\nexport default function FontsButton(props: FontsButtonProps) {\n  const { controller, locale, toolbarMode, ...rest } = props;\n  const docStyle = useStyle();\n  const fonts = controller.query('getFonts', docStyle?.docDefaults?.data?.rPr?.fonts);\n  const { isCollapsedAtEdge } = controller.value.selection;\n  const isDisabled = isCollapsedAtEdge\n    || controller.query('isSelectionInImage')\n    || controller.query('isSelectionInHr')\n    || controller.query('isSelectionInLinkCard');\n  const isDouble = toolbarMode === ToolbarMode.double;\n  const handleChange = React.useCallback((fontsValue: string) => controller.run('onAction', setFonts(fontsValue)), [controller]);\n  const realWidth = isDouble ? 133 : 66;\n\n  let title = locale?.buttonTitle || '';\n\n  if (fonts && fonts !== defaultFonts) {\n    // 提示显示当前字体\n    title += ` ${getFontsTip(fonts, locale)}`;\n  }\n\n  return (\n    <FontFamilySelect\n      {...rest}\n      testid=\"bi-toolbar-fonts\"\n      title={title}\n      disabled={!!isDisabled}\n      value={fonts || locale?.buttonTitle}\n      bordered={isDouble}\n      onChange={handleChange}\n      width={realWidth}\n      shortcutText={locale?.buttonTitle}\n      role={PluginRoles.fontFamilySelect}\n    />\n  );\n}\n"],"file":"fontsButton.js"}