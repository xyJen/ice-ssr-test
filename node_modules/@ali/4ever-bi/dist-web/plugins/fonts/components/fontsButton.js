import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { useStyle } from '@ali/4ever-cangjie';
import { FontFamilySelect as OriginFontFamilySelect } from '@ali/we-toolbar';
import { PluginRoles } from '@ali/4ever-bamboo';
import { NewToolbarMode as ToolbarMode } from '@ali/4ever-component';
import { setFonts } from "../actions";
import { defaultFonts } from "../utils/getActiveFontsMark";
import getFontsTip from "../utils/getFontsTip";
var FontFamilySelect = /*#__PURE__*/React.memo(OriginFontFamilySelect);
export default function FontsButton(props) {
  var _docStyle$docDefaults, _docStyle$docDefaults2, _docStyle$docDefaults3;

  var controller = props.controller,
      locale = props.locale,
      toolbarMode = props.toolbarMode,
      rest = _objectWithoutPropertiesLoose(props, ["controller", "locale", "toolbarMode"]);

  var docStyle = useStyle();
  var fonts = controller.query('getFonts', docStyle == null ? void 0 : (_docStyle$docDefaults = docStyle.docDefaults) == null ? void 0 : (_docStyle$docDefaults2 = _docStyle$docDefaults.data) == null ? void 0 : (_docStyle$docDefaults3 = _docStyle$docDefaults2.rPr) == null ? void 0 : _docStyle$docDefaults3.fonts);
  var isCollapsedAtEdge = controller.value.selection.isCollapsedAtEdge;
  var isDisabled = isCollapsedAtEdge || controller.query('isSelectionInImage') || controller.query('isSelectionInHr') || controller.query('isSelectionInLinkCard');
  var isDouble = toolbarMode === ToolbarMode["double"];
  var handleChange = React.useCallback(function (fontsValue) {
    return controller.run('onAction', setFonts(fontsValue));
  }, [controller]);
  var realWidth = isDouble ? 133 : 66;
  var title = (locale == null ? void 0 : locale.buttonTitle) || '';

  if (fonts && fonts !== defaultFonts) {
    // 提示显示当前字体
    title += " " + getFontsTip(fonts, locale);
  }

  return /*#__PURE__*/_createElement(FontFamilySelect, _extends({}, rest, {
    testid: "bi-toolbar-fonts",
    title: title,
    disabled: !!isDisabled,
    value: fonts || (locale == null ? void 0 : locale.buttonTitle),
    bordered: isDouble,
    onChange: handleChange,
    width: realWidth,
    shortcutText: locale == null ? void 0 : locale.buttonTitle,
    role: PluginRoles.fontFamilySelect
  }));
}
//# sourceMappingURL=fontsButton.js.map