{"version":3,"sources":["../../../../../../src/plugins/fonts/components/next/fontsButton.tsx"],"names":["React","useStyle","PluginRoles","FontFamilySelect","setFonts","defaultFonts","getFontsTip","FontsButton","props","controller","locale","width","rest","docStyle","fonts","query","docDefaults","data","rPr","isCollapsedAtEdge","value","selection","isDisabled","handleChange","useCallback","fontsValue","run","title","buttonTitle","fontFamilySelect"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;qBAC4B,a;AAA5B,SAAqBC,QAArB,QAAqC,oBAArC;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,gBAAT,QAAuD,sBAAvD;AACA;AACA,SAASC,QAAT;AACA,SAASC,YAAT;AACA,OAAOC,WAAP;AAQA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA8C;AAAA;;AAAA,MACnDC,UADmD,GACND,KADM,CACnDC,UADmD;AAAA,MACvCC,MADuC,GACNF,KADM,CACvCE,MADuC;AAAA,qBACNF,KADM,CAC/BG,KAD+B;AAAA,MAC/BA,KAD+B,6BACvB,GADuB;AAAA,MACfC,IADe,iCACNJ,KADM;;AAE3D,MAAMK,QAAQ,GAAGZ,QAAQ,EAAzB;AACA,MAAMa,KAAK,GAAGL,UAAU,CAACM,KAAX,CAAiB,UAAjB,EAA6BF,QAA7B,6CAA6BA,QAAQ,CAAEG,WAAvC,+CAA6B,sBAAuBC,IAApD,+CAA6B,uBAA6BC,GAA1D,qBAA6B,uBAAkCJ,KAA/D,CAAd;AAH2D,MAInDK,iBAJmD,GAI7BV,UAAU,CAACW,KAAX,CAAiBC,SAJY,CAInDF,iBAJmD;AAM3D,MAAMG,UAAU,GAAGH,iBAAiB,IAC/BV,UAAU,CAACM,KAAX,CAAiB,oBAAjB,CADc,IAEdN,UAAU,CAACM,KAAX,CAAiB,iBAAjB,CAFc,IAGdN,UAAU,CAACM,KAAX,CAAiB,uBAAjB,CAHL;AAIA,MAAMQ,YAAY,GAAGvB,KAAK,CAACwB,WAAN,CAAkB,UAACC,UAAD;AAAA,WAAwBhB,UAAU,CAACiB,GAAX,CAAe,UAAf,EAA2BtB,QAAQ,CAACqB,UAAD,CAAnC,CAAxB;AAAA,GAAlB,EAA4F,CAAChB,UAAD,CAA5F,CAArB;AAEA,MAAIkB,KAAK,GAAG,CAAAjB,MAAM,QAAN,YAAAA,MAAM,CAAEkB,WAAR,KAAuB,EAAnC;;AAEA,MAAId,KAAK,IAAIA,KAAK,KAAKT,YAAvB,EAAqC;AACnC;AACAsB,IAAAA,KAAK,UAAQrB,WAAW,CAACQ,KAAD,EAAQJ,MAAR,CAAxB;AACD;;AAED,sBACE,eAAC,gBAAD;AACE,IAAA,MAAM,EAAC,kBADT;AAEE,IAAA,QAAQ,EAAE,CAAC,CAACY,UAFd;AAGE,IAAA,KAAK,EAAER,KAAK,KAAIJ,MAAJ,oBAAIA,MAAM,CAAEkB,WAAZ,CAHd;AAIE,IAAA,QAAQ,EAAEL,YAJZ;AAKE,IAAA,IAAI,EAAErB,WAAW,CAAC2B,gBALpB;AAME,IAAA,KAAK,EAAElB,KANT;AAOE,IAAA,OAAO,EAAEgB,KAAK,IAAI;AAPpB,KAQMf,IARN,EADF;AAYD","sourcesContent":["import * as React from 'react';\nimport { Controller, useStyle } from '@ali/4ever-cangjie';\nimport { PluginRoles } from '@ali/4ever-bamboo';\nimport { FontFamilySelect, IToolbarButtonConfig } from '@ali/4ever-component';\n;\nimport { setFonts } from '../../actions';\nimport { defaultFonts } from '../../utils/getActiveFontsMark';\nimport getFontsTip from '../../utils/getFontsTip';\n\nexport interface FontsButtonProps extends IToolbarButtonConfig {\n  controller: Controller;\n  locale?: Record<string, string>;\n  width?: number;\n}\n\nexport default function FontsButton(props: FontsButtonProps) {\n  const { controller, locale, width = 133, ...rest } = props;\n  const docStyle = useStyle();\n  const fonts = controller.query('getFonts', docStyle?.docDefaults?.data?.rPr?.fonts);\n  const { isCollapsedAtEdge } = controller.value.selection;\n\n  const isDisabled = isCollapsedAtEdge\n    || controller.query('isSelectionInImage')\n    || controller.query('isSelectionInHr')\n    || controller.query('isSelectionInLinkCard');\n  const handleChange = React.useCallback((fontsValue: string) => controller.run('onAction', setFonts(fontsValue)), [controller]);\n\n  let title = locale?.buttonTitle || '';\n\n  if (fonts && fonts !== defaultFonts) {\n    // 提示显示当前字体\n    title += ` ${getFontsTip(fonts, locale)}`;\n  }\n\n  return (\n    <FontFamilySelect\n      testid=\"bi-toolbar-fonts\"\n      disabled={!!isDisabled}\n      value={fonts || locale?.buttonTitle}\n      onChange={handleChange}\n      role={PluginRoles.fontFamilySelect}\n      width={width}\n      tooltip={title || 'Font Family'}\n      {...rest}\n    />\n  );\n}\n"],"file":"fontsButton.js"}