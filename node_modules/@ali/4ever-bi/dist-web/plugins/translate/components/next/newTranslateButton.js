import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { PluginRoles } from '@ali/4ever-bamboo';
import { TranslationSelect } from '@ali/4ever-component';
var TranslationItemType;

(function (TranslationItemType) {
  TranslationItemType["wordTranslation"] = "wordTranslation";
  TranslationItemType["docTranslation"] = "docTranslation";
})(TranslationItemType || (TranslationItemType = {}));

var TranslationButton = function TranslationButton(props) {
  var config = props.config;
  var _config$locale = config.locale,
      locale = _config$locale === void 0 ? {} : _config$locale;
  var handleChange = React.useCallback(function (value) {
    if (config.onClickMenuItem) {
      config.onClickMenuItem(value);
    }
  }, [config]);
  var menuItems = React.useMemo(function () {
    return [{
      key: TranslationItemType.wordTranslation,
      title: locale.wordTranslation || ''
    }, {
      key: TranslationItemType.docTranslation,
      title: locale.docTranslation || ''
    }];
  }, [locale.docTranslation, locale.wordTranslation]);
  return /*#__PURE__*/_createElement(TranslationSelect, {
    testid: "translate_button",
    onChange: handleChange,
    tooltip: locale == null ? void 0 : locale.buttonTitle,
    role: PluginRoles.lineHeightSelect,
    title: locale == null ? void 0 : locale.title,
    menuItems: menuItems
  });
};

export default TranslationButton;
//# sourceMappingURL=newTranslateButton.js.map