{"version":3,"sources":["../../../../../src/plugins/laserPointer/components/RegisterEvent.tsx"],"names":["React","debounce","actions","findClosesetBlock","LaserPointerRole","DELAY_TIME","RegisterEvent","controller","getRole","getHighlightType","useEffect","prevLeaveNode","mouseEnter","event","HOST","node","target","highlightType","path","value","document","getPath","key","run","highlight","mouseleave","cancel","removeHighlight","addEventListener","capture","removeEventListener"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAO,KAAKC,OAAZ;AACA,SAASC,iBAAT;AACA,SAASC,gBAAT;AAEA;;AACA,IAAMC,UAAU,GAAG,EAAnB;AAQA,eAAe,SAASC,aAAT,OAAyE;AAAA,MAAhDC,UAAgD,QAAhDA,UAAgD;AAAA,MAApCC,OAAoC,QAApCA,OAAoC;AAAA,MAA3BC,gBAA2B,QAA3BA,gBAA2B;AACtFT,EAAAA,KAAK,CAACU,SAAN,CAAgB,YAAM;AACpB,QAAIC,aAA2B,GAAG,IAAlC;AAEA,QAAMC,UAAU,GAAGX,QAAQ,CAAC,UAACY,KAAD,EAAuB;AACjD,UAAIL,OAAO,OAAOJ,gBAAgB,CAACU,IAAnC,EAAyC;AACvC;AACD;;AACD,UAAMC,IAAI,GAAGZ,iBAAiB,CAACU,KAAK,CAACG,MAAP,EAA0BT,UAA1B,CAA9B;AACA,UAAMU,aAAa,GAAGF,IAAI,IAAIN,gBAAgB,CAACM,IAAD,EAAOR,UAAP,CAA9C;;AACA,UAAIU,aAAJ,EAAmB;AACjB,YAAMC,IAAI,GAAGX,UAAU,CAACY,KAAX,CAAiBC,QAAjB,CAA0BC,OAA1B,CAAkCN,IAAI,CAACO,GAAvC,CAAb;AACAf,QAAAA,UAAU,CAACgB,GAAX,CACE,UADF,EAEErB,OAAO,CAACsB,SAAR,CAAkB;AAChBN,UAAAA,IAAI,EAAJA;AADgB,SAAlB,CAFF;AAMD;AACF,KAf0B,EAexBb,UAfwB,CAA3B;;AAiBA,QAAMoB,UAAU,GAAG,SAAbA,UAAa,CAACZ,KAAD,EAAuB;AACxCD,MAAAA,UAAU,CAACc,MAAX;;AACA,UAAIlB,OAAO,OAAOJ,gBAAgB,CAACU,IAAnC,EAAyC;AACvC;AACD;;AACD,UAAMC,IAAI,GAAGZ,iBAAiB,CAACU,KAAK,CAACG,MAAP,EAA0BT,UAA1B,CAA9B;AACA,UAAMU,aAAa,GAAGF,IAAI,IAAIN,gBAAgB,CAACM,IAAD,EAAOR,UAAP,CAA9C;;AACA,UAAIU,aAAa,IAAIN,aAAa,KAAKI,IAAvC,EAA6C;AAC3CR,QAAAA,UAAU,CAACgB,GAAX,CACE,UADF,EAEErB,OAAO,CAACyB,eAAR,EAFF;AAID;;AACDhB,MAAAA,aAAa,GAAGI,IAAhB;AACD,KAdD;;AAeAK,IAAAA,QAAQ,CAACQ,gBAAT,CAA0B,YAA1B,EAAwChB,UAAxC,EAAoD;AAAEiB,MAAAA,OAAO,EAAE;AAAX,KAApD;AACAT,IAAAA,QAAQ,CAACQ,gBAAT,CAA0B,YAA1B,EAAwCH,UAAxC,EAAoD;AAAEI,MAAAA,OAAO,EAAE;AAAX,KAApD;AACA,WAAO,YAAM;AACXT,MAAAA,QAAQ,CAACU,mBAAT,CAA6B,YAA7B,EAA2ClB,UAA3C,EAAuD;AAAEiB,QAAAA,OAAO,EAAE;AAAX,OAAvD;AACAT,MAAAA,QAAQ,CAACU,mBAAT,CAA6B,YAA7B,EAA2CL,UAA3C,EAAuD;AAAEI,QAAAA,OAAO,EAAE;AAAX,OAAvD,EAFW,CAGX;;AACAjB,MAAAA,UAAU,CAACc,MAAX;AACD,KALD,CArCoB,CA2CtB;AACC,GA5CD,EA4CG,EA5CH;AA8CA,SAAO,IAAP;AACD","sourcesContent":["import React from 'react';\nimport { Controller, Node, Block } from '@ali/4ever-cangjie';\nimport { debounce } from 'lodash-es';\nimport * as actions from '../actions';\nimport { findClosesetBlock } from '../utils';\nimport { LaserPointerRole } from '../types';\n\n/** 高亮延迟 */\nconst DELAY_TIME = 50;\n\nexport interface Props {\n  getRole: () => LaserPointerRole;\n  controller: Controller;\n  getHighlightType: (node: Node, controller: Controller) => string | null;\n}\n\nexport default function RegisterEvent({ controller, getRole, getHighlightType }: Props) {\n  React.useEffect(() => {\n    let prevLeaveNode: Block | null = null;\n\n    const mouseEnter = debounce((event: MouseEvent) => {\n      if (getRole() !== LaserPointerRole.HOST) {\n        return;\n      }\n      const node = findClosesetBlock(event.target as Element, controller);\n      const highlightType = node && getHighlightType(node, controller);\n      if (highlightType) {\n        const path = controller.value.document.getPath(node.key)!;\n        controller.run(\n          'onAction',\n          actions.highlight({\n            path,\n          }),\n        );\n      }\n    }, DELAY_TIME);\n\n    const mouseleave = (event: MouseEvent) => {\n      mouseEnter.cancel();\n      if (getRole() !== LaserPointerRole.HOST) {\n        return;\n      }\n      const node = findClosesetBlock(event.target as Element, controller);\n      const highlightType = node && getHighlightType(node, controller);\n      if (highlightType && prevLeaveNode !== node) {\n        controller.run(\n          'onAction',\n          actions.removeHighlight(),\n        );\n      }\n      prevLeaveNode = node;\n    };\n    document.addEventListener('mouseenter', mouseEnter, { capture: true });\n    document.addEventListener('mouseleave', mouseleave, { capture: true });\n    return () => {\n      document.removeEventListener('mouseenter', mouseEnter, { capture: true });\n      document.removeEventListener('mouseleave', mouseleave, { capture: true });\n      // 防止内存泄漏\n      mouseEnter.cancel();\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return null;\n}\n"],"file":"RegisterEvent.js"}