import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import Highlight from "./components/highlight";
import { isHighlighted } from "./utils";
export default function createRenderNode(config) {
  var renderNode = function renderNode(props, controller, next) {
    var node = props.node,
        attributes = props.attributes;

    if (!(config != null && config.isLaserPointerEnabled) || !config.isLaserPointerEnabled()) {
      return next();
    }

    var getRole = config.getRole,
        renderHighlight = config.renderHighlight,
        getHighlightType = config.getHighlightType;
    var type = getHighlightType(node, controller);

    if (type) {
      var highlighted = isHighlighted(node.key, controller.value.injections);
      return /*#__PURE__*/_createElement(Highlight, {
        type: type,
        controller: controller,
        node: node,
        domRef: attributes.ref,
        getRole: getRole,
        highlighted: highlighted,
        renderHighlight: renderHighlight
      }, next());
    }

    return next();
  };

  return renderNode;
}
//# sourceMappingURL=createRenderNode.js.map