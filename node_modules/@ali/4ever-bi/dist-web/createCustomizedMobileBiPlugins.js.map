{"version":3,"sources":["../../src/createCustomizedMobileBiPlugins.ts"],"names":["createSchema","mobileBiFactory","exception","sortPlugins","autoClose","createUnknownCardMobilePlugin","createUnknownTagMobilePlugin","biFactory","basic","clipboard","history","paragraph","container","createCustomizedBiPlugins","plugins","paragraphPlugin","unknownCard","unknownTag","rest","allPlugins","createBiPlugins","configs","array","hash","forEach","key","factory","plugin","push","schema","lang"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA,SAASA,YAAT,QAAqC,oBAArC;AACA,SAASC,eAAe,IAAIC,SAA5B,QAA6C,6BAA7C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,SAAP;AACA,SAASC,6BAAT,EAAwCC,4BAAxC,QAA4E,oBAA5E;AAEA,SAASC,SAAS,IAAIC,KAAtB,QAAmC,yBAAnC;AACA,OAAOC,SAAP;AACA,OAAOC,OAAP;AACA,SAAST,eAAe,IAAIU,SAA5B,QAA6C,6BAA7C;AACA,SAASJ,SAAS,IAAIK,SAAtB,QAAuC,6BAAvC;AAUA,eAAe,SAASC,yBAAT,CACbC,OADa,EAEb;AACA,MAAMC,eAAe,GAAGD,OAAO,CAACH,SAAR,IAAqBA,SAA7C;;AADA,6BAMIG,OANJ,CAGEE,WAHF;AAAA,MAGEA,WAHF,qCAGgBX,6BAHhB;AAAA,4BAMIS,OANJ,CAIEG,UAJF;AAAA,MAIEA,UAJF,oCAIeX,4BAJf;AAAA,MAKKY,IALL,iCAMIJ,OANJ;;AAQA,MAAMK,UAAU;AACdjB,IAAAA,SAAS,EAATA;AADc,KAEXgB,IAFW;AAGdN,IAAAA,SAAS,EAATA,SAHc;AAIdI,IAAAA,WAAW,EAAXA,WAJc;AAKdC,IAAAA,UAAU,EAAVA,UALc;AAMdb,IAAAA,SAAS,EAATA,SANc;AAOdK,IAAAA,SAAS,EAATA,SAPc;AAQdC,IAAAA,OAAO,EAAPA,OARc;AASdC,IAAAA,SAAS,EAAEI,eATG;AAUdP,IAAAA,KAAK,EAALA;AAVc,IAAhB;;AAaA,SAAO,SAASY,eAAT,CAAyBC,OAAzB,EAAkE;AAAA,QAAzCA,OAAyC;AAAzCA,MAAAA,OAAyC,GAAf,EAAe;AAAA;;AACvE,QAAMC,KAAe,GAAG,EAAxB;AACA,QAAMC,IAAI,GAAG,EAAb,CAFuE,CAGvE;;AACApB,IAAAA,WAAW,CAACgB,UAAD,CAAX,CAAwBK,OAAxB,CAAgC,gBAAsB;AAAA,UAAnBC,GAAmB,QAAnBA,GAAmB;AAAA,UAAdC,OAAc,QAAdA,OAAc;AACpD,UAAMC,MAAM,GAAGD,OAAO,CAACL,OAAD,EAAUE,IAAV,CAAtB;AACAD,MAAAA,KAAK,CAACM,IAAN,CAAWD,MAAX;AACAJ,MAAAA,IAAI,CAACE,GAAD,CAAJ,GAAYE,MAAZ;AACD,KAJD;AAKA,QAAME,MAAM,GAAG7B,YAAY,CAACsB,KAAD,CAA3B;AACAA,IAAAA,KAAK,CAACM,IAAN,CAAW;AAAEC,MAAAA,MAAM,EAANA;AAAF,KAAX;AACA,WAAO;AACLP,MAAAA,KAAK,EAALA,KADK;AAELC,MAAAA,IAAI,EAAJA,IAFK;AAGLO,MAAAA,IAAI,EAAET,OAAO,CAACS,IAAR,IAAgB;AAHjB,KAAP;AAKD,GAhBD;AAiBD","sourcesContent":["/**\n * @packageDocumentation\n * @module Editor(Bi)\n */\nimport { createSchema, Plugin } from '@ali/4ever-cangjie';\nimport { mobileBiFactory as exception } from '@ali/4ever-plugin-exception';\nimport { sortPlugins } from '@ali/4ever-utils';\nimport autoClose from './plugins/autoClose';\nimport { createUnknownCardMobilePlugin, createUnknownTagMobilePlugin } from '@ali/4ever-factory';\n\nimport { biFactory as basic } from '@ali/4ever-plugin-basic';\nimport clipboard from './plugins/clipboard/mobile';\nimport history from './plugins/history/mobile';\nimport { mobileBiFactory as paragraph } from '@ali/4ever-plugin-paragraph';\nimport { biFactory as container } from '@ali/4ever-plugin-container';\nimport { BiPluginConfig, PluginFactory } from './types';\n\n\nexport interface BiPlugins {\n  array: Plugin[];\n  hash: Record<string, Plugin>;\n  lang?: string | Record<string, any>;\n}\n\nexport default function createCustomizedBiPlugins(\n  plugins: Record<string, PluginFactory>,\n) {\n  const paragraphPlugin = plugins.paragraph || paragraph;\n  const {\n    unknownCard = createUnknownCardMobilePlugin,\n    unknownTag = createUnknownTagMobilePlugin,\n    ...rest\n  } = plugins;\n\n  const allPlugins = {\n    exception,\n    ...rest,\n    container,\n    unknownCard,\n    unknownTag,\n    autoClose,\n    clipboard,\n    history,\n    paragraph: paragraphPlugin,\n    basic,\n  };\n\n  return function createBiPlugins(configs: BiPluginConfig = {}): BiPlugins {\n    const array: Plugin[] = [];\n    const hash = {};\n    // @ts-ignore\n    sortPlugins(allPlugins).forEach(({ key, factory }) => {\n      const plugin = factory(configs, hash);\n      array.push(plugin);\n      hash[key] = plugin;\n    });\n    const schema = createSchema(array as any);\n    array.push({ schema });\n    return {\n      array,\n      hash,\n      lang: configs.lang || 'zh-CN',\n    };\n  };\n}\n"],"file":"createCustomizedMobileBiPlugins.js"}