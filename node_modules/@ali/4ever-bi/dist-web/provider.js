import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";

/**
 * @packageDocumentation
 * @module Provider
 */
import * as React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { LocaleProvider as WeUtilLocaleProvider } from '@ali/we-util';
import { LocaleProvider as DesignNextLocaleProvider } from '@ali/we-design-next'; // 等待 we-ui 完全去除

import { LocaleProvider } from '@ali/we-ui';
import { Provider, createPlaceholderPlugin } from '@ali/4ever-cangjie';
import { PluginsContext, ActiveInteractionProvider } from '@ali/4ever-component';
import { isPlaceholderVisible } from '@ali/4ever-utils';
/**
 * 继承于编辑器内核的Props，由于TypeDoc限制，继承的选项没能在本页面显示：[「仓颉」Provider Props](https://pds.alibaba-inc.com/renquan.wrq/cangjie-beta-docs/interfaces/controller.providerprops.html)
 */

/**
 * 编辑器顶层Provider，提供编辑数据、插件、配置
 * @ignore
 */
var BiProvider = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(BiProvider, _React$Component);

  function BiProvider() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.state = {
      value: null
    };
    _this.plugins = null;

    _this.handleChange = function (change) {
      var onChange = _this.props.onChange;
      onChange == null ? void 0 : onChange(change);
    };

    return _this;
  }

  var _proto = BiProvider.prototype;

  _proto.resolveCangjiePlugins = function resolveCangjiePlugins() {
    if (!this.plugins) {
      var _this$props = this.props,
          plugins = _this$props.plugins,
          onAction = _this$props.onAction;
      this.plugins = [// @ts-ignore
      createPlaceholderPlugin({
        isPlaceholderVisible: isPlaceholderVisible
      }), {
        onAction: onAction
      }].concat((plugins == null ? void 0 : plugins.array) || []);
    }

    return this.plugins;
  };

  _proto.render = function render() {
    var _this$props2 = this.props,
        controllerRef = _this$props2.controllerRef,
        children = _this$props2.children,
        plugins = _this$props2.plugins,
        rest = _objectWithoutPropertiesLoose(_this$props2, ["controllerRef", "children", "plugins"]);

    var value = this.state.value;
    return /*#__PURE__*/_createElement(DesignNextLocaleProvider, {
      value: (plugins == null ? void 0 : plugins.lang) || 'zh-CN'
    }, /*#__PURE__*/_createElement(LocaleProvider, {
      value: (plugins == null ? void 0 : plugins.lang) || 'zh-CN'
    }, /*#__PURE__*/_createElement(WeUtilLocaleProvider, {
      value: (plugins == null ? void 0 : plugins.lang) || 'zh-CN'
    }, /*#__PURE__*/_createElement(Provider, _extends({}, rest, {
      controllerRef: controllerRef,
      plugins: this.resolveCangjiePlugins(),
      value: value || this.props.value,
      onChange: this.handleChange
    }), /*#__PURE__*/_createElement(PluginsContext.Provider, {
      value: plugins || {
        array: [],
        hash: {}
      }
    }, /*#__PURE__*/_createElement(ActiveInteractionProvider, null, children))))));
  };

  return BiProvider;
}(React.Component);

BiProvider.defaultProps = {
  readOnly: false,
  onAction: function onAction(action, controller, next) {
    return next();
  },
  onCatch: function onCatch() {},
  onChange: function onChange() {}
};
export { BiProvider as default };
//# sourceMappingURL=provider.js.map