{"version":3,"sources":["../../src/createCustomizedBiPlugins.ts"],"names":["createSchema","biFactory","exception","sortPlugins","autoClose","createUnknownCardPlugin","createUnknownTagPlugin","basic","clipboard","history","paragraph","container","snippets","quickInsert","createCustomizedBiPlugins","plugins","paragraphPlugin","unknownCard","unknownTag","rest","allPlugins","createBiPlugins","configs","array","hash","forEach","key","factory","plugin","push","schema","lang"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA,SAASA,YAAT,QAAqC,oBAArC;AACA,SAASC,SAAS,IAAIC,SAAtB,QAAuC,6BAAvC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,SAAP;AACA,SAASC,uBAAT,EAAkCC,sBAAlC,QAAgE,oBAAhE;AACA,SAASL,SAAS,IAAIM,KAAtB,QAAmC,yBAAnC;AACA,OAAOC,SAAP;AACA,OAAOC,OAAP;AACA,SAASR,SAAS,IAAIS,SAAtB,QAAsC,6BAAtC;AACA,SAAST,SAAS,IAAIU,SAAtB,QAAuC,6BAAvC;AACA,SAASV,SAAS,IAAIW,QAAtB,QAAsC,4BAAtC;AACA,OAAOC,WAAP;;AASA;AACA;AACA;AACA;AACA,eAAe,SAASC,yBAAT,CACbC,OADa,EAEb;AACA,MAAMC,eAAe,GAAGD,OAAO,CAACL,SAAR,IAAqBA,SAA7C;;AADA,6BAEgGK,OAFhG,CAEQE,WAFR;AAAA,MAEQA,WAFR,qCAEsBZ,uBAFtB;AAAA,4BAEgGU,OAFhG,CAE+CG,UAF/C;AAAA,MAE+CA,UAF/C,oCAE4DZ,sBAF5D;AAAA,MAEuFa,IAFvF,iCAEgGJ,OAFhG;;AAIA,MAAMK,UAAU;AACdlB,IAAAA,SAAS,EAATA,SADc;AAEd;AACAU,IAAAA,QAAQ,EAARA;AAHc,KAIXO,IAJW;AAKd;AACAR,IAAAA,SAAS,EAATA,SANc;AAOdM,IAAAA,WAAW,EAAXA,WAPc;AAQdC,IAAAA,UAAU,EAAVA,UARc;AASdd,IAAAA,SAAS,EAATA,SATc;AAUdI,IAAAA,SAAS,EAATA,SAVc;AAUH;AACXC,IAAAA,OAAO,EAAPA,OAXc;AAYdC,IAAAA,SAAS,EAAEM,eAZG;AAadH,IAAAA,WAAW,EAAXA,WAbc;AAcdN,IAAAA,KAAK,EAALA,KAdc,CAcP;;AAdO,IAAhB;;AAiBA,SAAO,SAASc,eAAT,CAAyBC,OAAzB,EAAkE;AAAA,QAAzCA,OAAyC;AAAzCA,MAAAA,OAAyC,GAAf,EAAe;AAAA;;AACvE,QAAMC,KAAe,GAAG,EAAxB;AACA,QAAMC,IAAI,GAAG,EAAb,CAFuE,CAGvE;;AACArB,IAAAA,WAAW,CAACiB,UAAD,CAAX,CAAwBK,OAAxB,CAAgC,gBAAsB;AAAA,UAAnBC,GAAmB,QAAnBA,GAAmB;AAAA,UAAdC,OAAc,QAAdA,OAAc;AACpD,UAAMC,MAAM,GAAGD,OAAO,CAACL,OAAD,EAAUE,IAAV,CAAtB,CADoD,CAEpD;AACA;AACA;AACA;AACA;AACA;;AACAD,MAAAA,KAAK,CAACM,IAAN,CAAWD,MAAX;AACAJ,MAAAA,IAAI,CAACE,GAAD,CAAJ,GAAYE,MAAZ;AACD,KAVD;AAWA,QAAME,MAAM,GAAG9B,YAAY,CAACuB,KAAD,CAA3B;AACAA,IAAAA,KAAK,CAACM,IAAN,CAAW;AAAEC,MAAAA,MAAM,EAANA;AAAF,KAAX;AACA,WAAO;AACLP,MAAAA,KAAK,EAALA,KADK;AAELC,MAAAA,IAAI,EAAJA,IAFK;AAGLO,MAAAA,IAAI,EAAET,OAAO,CAACS,IAAR,IAAgB;AAHjB,KAAP;AAKD,GAtBD;AAuBD","sourcesContent":["/**\n * @packageDocumentation\n * @module Editor(Bi)\n */\nimport { createSchema, Plugin } from '@ali/4ever-cangjie';\nimport { biFactory as exception } from '@ali/4ever-plugin-exception';\nimport { sortPlugins } from '@ali/4ever-utils';\nimport autoClose from './plugins/autoClose';\nimport { createUnknownCardPlugin, createUnknownTagPlugin } from '@ali/4ever-factory';\nimport { biFactory as basic } from '@ali/4ever-plugin-basic';\nimport clipboard from './plugins/clipboard';\nimport history from './plugins/history';\nimport { biFactory as paragraph} from '@ali/4ever-plugin-paragraph';\nimport { biFactory as container } from '@ali/4ever-plugin-container';\nimport { biFactory as snippets } from '@ali/4ever-plugin-snippets';\nimport quickInsert from './plugins/quickInsert';\nimport { BiPluginConfig, PluginFactory } from './types';\n\nexport interface BiPlugins {\n  array: Plugin[];\n  hash: Record<string, Plugin>;\n  lang?: string | Record<string, any>;\n}\n\n/**\n * 创建自定义插件。传入自定义的插件 Map，返回一个插件创建函数（createBiPlugins）。\n * 传入内容格式：{ PluginName: PluginFactory }\n */\nexport default function createCustomizedBiPlugins(\n  plugins: Record<string, PluginFactory>,\n) {\n  const paragraphPlugin = plugins.paragraph || paragraph;\n  const { unknownCard = createUnknownCardPlugin, unknownTag = createUnknownTagPlugin, ...rest } = plugins;\n\n  const allPlugins = {\n    exception,\n    // 必须在 callout、code 等配置了 snippet 的插件之前\n    snippets,\n    ...rest,\n    // unknown 卡片/标签必须放在最后做兜底显示\n    container,\n    unknownCard,\n    unknownTag,\n    autoClose,\n    clipboard, // 默认需要 clipboard 插件\n    history,\n    paragraph: paragraphPlugin,\n    quickInsert,\n    basic, // 必须放在最后，以便其他插件覆盖行为\n  };\n\n  return function createBiPlugins(configs: BiPluginConfig = {}): BiPlugins {\n    const array: Plugin[] = [];\n    const hash = {};\n    // @ts-ignore\n    sortPlugins(allPlugins).forEach(({ key, factory }) => {\n      const plugin = factory(configs, hash);\n      // TODO 在 provider 中遍历通过 models 识别节点，unknown 节点报 warning\n      // warning(\n      //   checkModels(plugin),\n      //\n      //   'You should configure models field when register a plugin',\n      // );\n      array.push(plugin);\n      hash[key] = plugin;\n    });\n    const schema = createSchema(array as any);\n    array.push({ schema });\n    return {\n      array,\n      hash,\n      lang: configs.lang || 'zh-CN',\n    };\n  };\n}\n"],"file":"createCustomizedBiPlugins.js"}