{"version":3,"sources":["../../../src/utils/PCContextMenu.tsx"],"names":["PADDING","useActiveInteraction","ActiveInteractionHooks","ContextMenu","props","controller","scrollableContent","contextData","x","y","zoom","containerRef","React","useRef","handleMouseDown","useCallback","ev","target","tagName","toLocaleLowerCase","preventDefault","stopPropagation","close","run","useEffect","node","current","child","firstElementChild","animId","window","requestAnimationFrame","style","innerWidth","innerHeight","containerClientRect","getBoundingClientRect","width","height","left","top","Object","keys","forEach","key","opacity","cancelAnimationFrame","menus","menuGroups","menu","groupId","options","group","push","menuGroupKeys","sort","a","b","Number","createActionHandler","action","onClick","keepMenu","onKeyDown","event","document","addEventListener","removeEventListener","activeType","setActiveType","activeRef","length","EMenuMode","vertical","map","index","renderMenus","showDivider","name","menuKey","role","disable","checked","icon","hotKey","inline","itemStyle","display","minWidth","backgroundColor","undefined","padding","borderRadius","PCContextMenu","mountRoot","Controller","useController","defaultContent","body","data","isFocused","selection","value","shouldRenderContextMenu","ReactDOM","createPortal"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Controller, ContextMenuItem, useZoom, useScrollableContent } from '@ali/4ever-cangjie';\nimport { ActiveInteractionHooks } from '@ali/4ever-component';\nimport { EMenuMode, Menu, MenuDivider, MenuItem, Tooltip } from '@ali/we-design';\nimport { memoize } from 'lodash-es';\nimport { hotKeyToReadableString, toPx } from './util';\nimport {\n  MenuGroup,\n  MenuWrapper,\n  MenuItem as MenuInnerItem,\n  Icon,\n  HotKey,\n  Inflat,\n  Name,\n} from './styled';\nimport { closeContextMenu } from './actions';\n\ninterface ContextMenuProps {\n  controller: Controller;\n  scrollableContent: HTMLElement;\n  contextData: { x: number; y: number };\n  zoom: number;\n}\n\nconst PADDING = 28;\n\ninterface IProps {\n  // 是否挂在到 root 节点（document.body）\n  mountRoot?: boolean;\n}\n\nconst { useActiveInteraction } = ActiveInteractionHooks;\n\nconst ContextMenu = (props: ContextMenuProps) => {\n  const { controller, scrollableContent, contextData = { x: 100, y: 100 }, zoom } = props;\n\n  const containerRef = React.useRef<HTMLDivElement>(null);\n\n  /**\n   * 阻止默认事件，防止文档区域失焦\n   */\n  const handleMouseDown = React.useCallback((ev) => {\n    if (ev.target?.tagName.toLocaleLowerCase() !== 'input') {\n      // 放过input，以便输入地方可以正常输入\n      ev.preventDefault && ev.preventDefault();\n      ev.stopPropagation && ev.stopPropagation();\n    }\n  }, []);\n\n  const close = React.useCallback(() => {\n    controller.run('onAction', closeContextMenu());\n  }, [controller]);\n\n  React.useEffect(() => {\n    const node = containerRef.current;\n    const child = node?.firstElementChild;\n    if (!node || !child) {\n      return () => {};\n    }\n    const animId = window.requestAnimationFrame(() => {\n      const style: React.CSSProperties = {};\n\n      const { innerWidth, innerHeight } = window;\n      const containerClientRect = scrollableContent.getBoundingClientRect();\n      const { width, height } = child.getBoundingClientRect();\n      if (contextData.x + width <= innerWidth - PADDING) {\n        style.left = toPx((contextData.x - containerClientRect.left) / zoom);\n      } else {\n        style.left = toPx((innerWidth - PADDING - width - containerClientRect.left) / zoom);\n      }\n      if (contextData.y + height <= innerHeight - PADDING) {\n        style.top = toPx((contextData.y - containerClientRect.top) / zoom);\n      } else {\n        style.top = toPx((innerHeight - PADDING - height - containerClientRect.top) / zoom);\n      }\n\n      Object.keys(style).forEach((key) => {\n        node.style[key] = style[key];\n      });\n      node.style.opacity = '1';\n    });\n\n    return () => {\n      if (animId) {\n        window.cancelAnimationFrame(animId);\n      }\n    };\n  }, [scrollableContent, contextData.x, contextData.y, zoom]);\n\n  const menus = controller.run('contextMenu');\n  const menuGroups: ContextMenuItem[][] = [];\n  menus.forEach((menu) => {\n    const groupId = menu.options?.group || 0;\n    const group = menuGroups[groupId] || [];\n    group.push(menu);\n    menuGroups[groupId] = group;\n  });\n  const menuGroupKeys = Object.keys(menuGroups).sort(\n    (a, b) => Number(a) - Number(b),\n  );\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const createActionHandler = React.useCallback(\n    memoize((menu: ContextMenuItem) => () => {\n      const { action, options, onClick } = menu;\n      action && controller.run('onAction', action);\n      onClick && onClick();\n      if (!options?.keepMenu) {\n        close();\n      }\n    }),\n    [close],\n  );\n\n  React.useEffect(() => {\n    function onKeyDown(event: KeyboardEvent) {\n      if (event.key === 'Escape' || event.key === 'Esc') {\n        close();\n      }\n    }\n    document.addEventListener('keydown', onKeyDown);\n    return () => {\n      document.removeEventListener('keydown', onKeyDown);\n    };\n  }, [controller, close]);\n\n  const [activeType, setActiveType] = useActiveInteraction();\n  const activeRef = React.useRef('');\n  activeRef.current = activeType;\n\n  React.useEffect(() => {\n    if (menus.length > 0) {\n      setActiveType('contextMenu');\n    } else if (activeRef.current === 'contextMenu'){\n      setActiveType('');\n    }\n  }, [menus, setActiveType]);\n\n  React.useEffect(() => {\n    return () => {\n      setActiveType('');\n    }\n  }, []);\n\n  if (!menus.length) {\n    close();\n    return null;\n  }\n\n  return (\n    <MenuWrapper\n      data-testid=\"bi-contextmenu\"\n      data-role=\"pcContextMenu\"\n      onMouseDown={handleMouseDown}\n      ref={containerRef}\n    >\n      <Menu mode={EMenuMode.vertical}>\n        {menuGroupKeys.map((group, index) => {\n          const renderMenus = menuGroups[group];\n          const showDivider = index !== menuGroupKeys.length - 1;\n\n          return (\n            <MenuGroup key={group} data-testid=\"contextmenu-group\">\n              {renderMenus.map((menu) => {\n                const { name, options = {}, key: menuKey, role } = menu;\n                const { disable, checked, icon, hotKey, inline } = options;\n                const itemStyle: React.CSSProperties = inline\n                  ? {\n                    display: 'inline-flex',\n                    minWidth: 0,\n                    backgroundColor: checked\n                      ? 'rgba(25,31,37,0.12)'\n                      : undefined,\n                    height: 26,\n                    padding: '0 4px',\n                    borderRadius: 5,\n                  }\n                  : {};\n                return (\n                  <MenuItem\n                    key={menuKey}\n                    menuKey={menuKey}\n                    testid={menuKey}\n                    onClick={createActionHandler(menu)}\n                    selected={inline ? false : checked}\n                    disabled={disable}\n                    autoClose={false}\n                    style={itemStyle}\n                    role={role}\n                  >\n                    <Tooltip title={name} placement=\"top\" zIndex={10001} disabled={!(inline && icon)}>\n                      <MenuInnerItem\n                        data-checked={checked}\n                        data-testid={`${group}-${menuKey}`}\n                        inline={inline}\n                      >\n                        {icon ? <Icon>{icon}</Icon> : null}\n                        {inline && icon ? null : <Name>{name}</Name>}\n                        <Inflat />\n                        <HotKey disabled={disable}>\n                          {hotKeyToReadableString(hotKey || '')}\n                        </HotKey>\n                      </MenuInnerItem>\n                    </Tooltip>\n                  </MenuItem>\n                );\n              })}\n              {showDivider ? (\n                <div data-testid=\"contextmenu-divider\">\n                  <MenuDivider />\n                </div>\n              ) : null}\n            </MenuGroup>\n          );\n        })}\n      </Menu>\n    </MenuWrapper>\n  );\n};\n\nexport default function PCContextMenu(props: IProps): JSX.Element | null {\n  const { mountRoot } = props;\n  const controller = Controller.useController();\n  const defaultContent = useScrollableContent() || document.body;\n  const scrollableContent = mountRoot ? document.body : defaultContent;\n  // 由于挂载点变更，zoom 暂时不需要了。后续如果再有变更，可以重新在这里加回来\n  const { data, isFocused, selection } = controller.value;\n  const { contextData } = data;\n  const shouldRenderContextMenu = isFocused && contextData;\n  if (!shouldRenderContextMenu || !selection) {\n    return null;\n  }\n  return ReactDOM.createPortal(\n    <ContextMenu\n      controller={controller}\n      scrollableContent={scrollableContent}\n      contextData={contextData}\n      zoom={1}\n    />,\n    scrollableContent,\n  );\n}\n"],"file":"PCContextMenu.js"}