import React, { useState, useCallback, useMemo } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { SplitButton } from "../button";
import { IncreaseindentNormal, DecreaseindentNormal } from "../icons";
import styled from 'styled-components';
import { withTheme } from "../theme";
import { Tooltip } from "../tooltip";
import { getTitlePlacement, getTitleContent } from "../select/SelectOption";
import { useTranslate } from "../../locale/locales";
var OverlayWrap = withTheme(styled.div(["padding:", " 0;"], function (_ref) {
  var theme = _ref.theme;
  return theme.ui.padding;
}));
var OverlayItem = withTheme(styled.div(["position:relative;display:flex;justify-content:space-between;align-items:center;padding:", " 20px;margin:0 ", ";cursor:pointer;transition:all .1s ease-in-out;font-size:", ";border-radius:", ";height:32px;box-sizing:border-box;&:hover{background-color:", ";}.indent-icon{margin-right:8px;color:", ";}"], function (_ref2) {
  var theme = _ref2.theme;
  return theme.ui.paddingSmall;
}, function (_ref3) {
  var theme = _ref3.theme;
  return theme.ui.marginMedium;
}, function (_ref4) {
  var theme = _ref4.theme;
  return theme.ui.fontSizeSmall;
}, function (_ref5) {
  var theme = _ref5.theme;
  return theme.ui.radiusLarge;
}, function (_ref6) {
  var theme = _ref6.theme;
  return theme.ui.backgroundColor;
}, function (_ref7) {
  var theme = _ref7.theme;
  return theme.ui.commonBaseColor2;
}));
var TextSpan = /*#__PURE__*/styled.span([""]);

var _ref8 = /*#__PURE__*/_createElement(IncreaseindentNormal, null);

export var IndentButton = function IndentButton(props) {
  var style = props.style,
      className = props.className,
      disabled = props.disabled,
      onSelect = props.onSelect,
      onClick = props.onClick,
      title = props.title,
      titles = props.titles,
      locale = props.locale,
      size = props.size;

  var _useState = useState(false),
      active = _useState[0],
      setActive = _useState[1];

  var t = useTranslate(locale);
  var options = [{
    title: t('we_ui_indent_button_increase_indent'),
    Icon: IncreaseindentNormal,
    value: 'increase'
  }, {
    title: t('we_ui_indent_button_decrease_indent'),
    Icon: DecreaseindentNormal,
    value: 'decrease'
  }];
  var handleClickOption = useCallback(function (e) {
    if (onSelect) onSelect(e);
  }, [onSelect]);
  var handleClickLeft = useCallback(function () {
    if (onClick) onClick();
  }, [onClick]);
  var getOverlay = useMemo(function () {
    return /*#__PURE__*/_createElement(OverlayWrap, null, options.map(function (item) {
      return /*#__PURE__*/_createElement(Tooltip, {
        key: item.value,
        title: getTitleContent(titles[item.value]),
        placement: getTitlePlacement(titles[item.value])
      }, /*#__PURE__*/_createElement(OverlayItem, {
        onClick: function onClick() {
          return handleClickOption(item.value);
        },
        "data-testid": "option-" + item.value
      }, /*#__PURE__*/_createElement(item.Icon, {
        className: "indent-icon"
      }), /*#__PURE__*/_createElement(TextSpan, null, item.title)));
    }));
  }, [options, handleClickOption, titles]);
  return /*#__PURE__*/_createElement(SplitButton, {
    overlay: getOverlay,
    onClickLeft: handleClickLeft,
    active: active,
    onActiveChange: setActive,
    className: className,
    disabled: disabled,
    style: style,
    testid: "IndentButton",
    title: title,
    size: size
  }, _ref8);
};
IndentButton.defaultProps = {
  titles: {}
};