import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import React, { useMemo, useCallback } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import useControlledValue from "../../hooks/useControlledValue";
import { useTranslate } from "../../locale/locales";
import { LeftalignNormal, RightalignNormal, JustifyNormal, CenteralignNormal } from "../icons";
import { Select } from "../select";
import { TriggerWrap, OptionWrap } from "./styled";

var HorizontalAlignSelect = function HorizontalAlignSelect(props) {
  var locale = props.locale,
      onChange = props.onChange,
      disabledKeys = props.disabledKeys,
      title = props.title,
      titles = props.titles,
      style = props.style,
      restProps = _objectWithoutPropertiesLoose(props, ["locale", "onChange", "disabledKeys", "title", "titles", "style"]);

  var _useControlledValue = useControlledValue(props.value, props.defaultValue),
      value = _useControlledValue[0],
      setValue = _useControlledValue[1];

  var t = useTranslate(locale); // 垂直对齐的选项

  var options = useMemo(function () {
    return [{
      title: t('we_ui_align_left'),
      value: 'left',
      Icon: LeftalignNormal
    }, {
      title: t('we_ui_align_center'),
      value: 'center',
      Icon: CenteralignNormal
    }, {
      title: t('we_ui_align_right'),
      value: 'right',
      Icon: RightalignNormal
    }, {
      title: t('we_ui_align_justify'),
      value: 'justify',
      Icon: JustifyNormal
    }];
  }, [t]); // 该组件的trigger区域只显示Icon

  var renderTrigger = useCallback(function (align) {
    var index = options.findIndex(function (option) {
      return option.value === align;
    });
    var currentOption = options[index];
    return /*#__PURE__*/_createElement(TriggerWrap, {
      style: {
        minWidth: 16
      }
    }, currentOption && /*#__PURE__*/_createElement(currentOption.Icon, null));
  }, [options]);
  var handleChange = useCallback(function (e) {
    if (onChange) {
      onChange(e);
    }

    setValue(e);
  }, [onChange, setValue]);
  return /*#__PURE__*/_createElement(Select, _extends({}, restProps, {
    value: value,
    style: style || {
      padding: '0 0 0 6px',
      marginRight: -1
    },
    onChange: handleChange,
    renderTrigger: renderTrigger,
    testid: "HorizontalAlignSelect",
    title: title
  }), options.map(function (option) {
    return /*#__PURE__*/_createElement(OptionWrap, {
      value: option.value,
      key: option.value,
      testid: option.value,
      disabled: disabledKeys == null ? void 0 : disabledKeys.includes(option.value),
      title: titles[option.value]
    }, /*#__PURE__*/_createElement(option.Icon, {
      className: "icon"
    }), /*#__PURE__*/_createElement("span", null, option.title));
  }));
};

HorizontalAlignSelect.defaultProps = {
  defaultValue: 'left',
  titles: {}
};
export default HorizontalAlignSelect;