import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { Tooltip } from "../../tooltip";
import { BoxSingleWrap, BoxVerticalWrap, BoxHorizontalWrap, ToolBoxText } from "./styled";
import { Button } from "../../button";
import { classnames } from "../../../utils";
export var EToolBoxLayout;

(function (EToolBoxLayout) {
  EToolBoxLayout["Single"] = "single";
  EToolBoxLayout["Vertical"] = "vertical";
  EToolBoxLayout["Horizontal"] = "horizontal";
})(EToolBoxLayout || (EToolBoxLayout = {}));

export var ToolBox = /*#__PURE__*/function (_React$PureComponent) {
  _inheritsLoose(ToolBox, _React$PureComponent);

  function ToolBox() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;

    _this.handleMouseEnter = function () {
      var onMouseEnter = _this.props.onMouseEnter;

      if (typeof onMouseEnter === 'function') {
        onMouseEnter();
      }
    };

    _this.handleMouseLeave = function () {
      var onMouseLeave = _this.props.onMouseLeave;

      if (typeof onMouseLeave === 'function') {
        onMouseLeave();
      }
    };

    _this.renderSingle = function () {
      var _this$props = _this.props,
          children = _this$props.children,
          name = _this$props.name,
          className = _this$props.className,
          disabled = _this$props.disabled,
          disabledTip = _this$props.disabledTip;
      var child = React.Children.only(children);

      var innerNode = /*#__PURE__*/_createElement(BoxSingleWrap, {
        className: className,
        disabled: disabled
      }, child);

      return /*#__PURE__*/_createElement(Tooltip, {
        title: disabled ? disabledTip || name : name
      }, innerNode);
    };

    _this.renderVertical = function () {
      var _this$props2 = _this.props,
          children = _this$props2.children,
          name = _this$props2.name,
          onClick = _this$props2.onClick,
          onDoubleClick = _this$props2.onDoubleClick,
          className = _this$props2.className,
          disabled = _this$props2.disabled,
          disabledTip = _this$props2.disabledTip;
      return /*#__PURE__*/_createElement(Tooltip, {
        title: disabled && disabledTip
      }, /*#__PURE__*/_createElement(BoxVerticalWrap, {
        onClick: onClick,
        onDoubleClick: onDoubleClick,
        className: className,
        onMouseEnter: _this.handleMouseEnter,
        onMouseLeave: _this.handleMouseLeave,
        disabled: disabled
      }, children, /*#__PURE__*/_createElement(ToolBoxText, null, name)));
    };

    _this.renderHorizontal = function () {
      var _this$props3 = _this.props,
          children = _this$props3.children,
          name = _this$props3.name,
          onClick = _this$props3.onClick,
          onDoubleClick = _this$props3.onDoubleClick,
          className = _this$props3.className,
          disabled = _this$props3.disabled,
          disabledTip = _this$props3.disabledTip;
      return /*#__PURE__*/_createElement(Tooltip, {
        title: disabled && disabledTip
      }, /*#__PURE__*/_createElement(BoxHorizontalWrap, {
        onClick: onClick,
        onDoubleClick: onDoubleClick,
        className: className,
        onMouseEnter: _this.handleMouseEnter,
        onMouseLeave: _this.handleMouseLeave,
        disabled: disabled
      }, children, /*#__PURE__*/_createElement(ToolBoxText, null, name)));
    };

    return _this;
  }

  var _proto = ToolBox.prototype;

  _proto.render = function render() {
    var layout = this.props.layout;
    return /*#__PURE__*/_createElement(React.Fragment, null, layout === EToolBoxLayout.Single ? this.renderSingle() : null, layout === EToolBoxLayout.Vertical ? this.renderVertical() : null, layout === EToolBoxLayout.Horizontal ? this.renderHorizontal() : null);
  };

  return ToolBox;
}(React.PureComponent);
ToolBox.defaultProps = {
  layout: EToolBoxLayout.Single,
  disabled: false
};
export var ToolButton = /*#__PURE__*/React.memo(function (props) {
  var _props$layout = props.layout,
      layout = _props$layout === void 0 ? EToolBoxLayout.Single : _props$layout,
      name = props.name,
      icon = props.icon,
      disabled = props.disabled,
      active = props.active,
      style = props.style,
      className = props.className,
      testid = props.testid,
      boxClassName = props.boxClassName,
      size = props.size,
      disabledTip = props.disabledTip;

  var _React$useState = React.useState(false),
      hovered = _React$useState[0],
      setHovered = _React$useState[1];

  var cName = hovered ? 'toolBoxHover' : '';
  var onClick = disabled ? undefined : props.onClick;
  var onDoubleClick = disabled ? undefined : props.onDoubleClick;
  return /*#__PURE__*/_createElement(ToolBox, {
    layout: layout,
    name: name // vertical 或者 horizontal 布局时，点击文字区域也能响应 click 事件
    ,
    onClick: layout === EToolBoxLayout.Single ? undefined : onClick,
    onDoubleClick: layout === EToolBoxLayout.Single ? undefined : onDoubleClick,
    className: boxClassName,
    onMouseEnter: function onMouseEnter() {
      return setHovered(true);
    },
    onMouseLeave: function onMouseLeave() {
      return setHovered(false);
    },
    disabled: disabled,
    disabledTip: disabledTip
  }, /*#__PURE__*/_createElement(Button, {
    bordered: false,
    shape: "rect",
    icon: icon,
    active: active,
    onClick: layout === EToolBoxLayout.Single ? onClick : undefined,
    onDoubleClick: layout === EToolBoxLayout.Single ? onDoubleClick : undefined,
    tabIndex: "false",
    style: style,
    className: classnames('tool-button', cName, className),
    testid: testid,
    size: size
  }));
});