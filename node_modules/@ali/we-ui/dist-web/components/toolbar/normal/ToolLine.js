import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import warning from 'warning';
import { ToolBox, ToolButton } from "./ToolBox";
import { ToolSubGroupWrap } from "./styled";
export var ToolLine = /*#__PURE__*/function (_React$PureComponent) {
  _inheritsLoose(ToolLine, _React$PureComponent);

  function ToolLine(props) {
    var _this;

    _this = _React$PureComponent.call(this, props) || this;
    var hasIllegalChild = false;
    React.Children.forEach(props.children, function (child) {
      if (child.type !== ToolBox && child.type !== ToolButton) {
        hasIllegalChild = true;
      }
    });
    warning(!hasIllegalChild, 'Children of ToolLine must be ToolBox or ToolButton');
    return _this;
  }

  var _proto = ToolLine.prototype;

  _proto.render = function render() {
    var _this$props = this.props,
        children = _this$props.children,
        isSingleLine = _this$props.isSingleLine,
        style = _this$props.style;
    return /*#__PURE__*/_createElement(ToolSubGroupWrap, {
      isSingleLine: isSingleLine,
      style: style
    }, children);
  };

  return ToolLine;
}(React.PureComponent);
ToolLine.defaultProps = {
  isSingleLine: true
};
export var HiddenToolLine = /*#__PURE__*/function (_ToolLine) {
  _inheritsLoose(HiddenToolLine, _ToolLine);

  function HiddenToolLine() {
    return _ToolLine.apply(this, arguments) || this;
  }

  return HiddenToolLine;
}(ToolLine);