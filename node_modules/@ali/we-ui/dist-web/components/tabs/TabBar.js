import _extends from "@babel/runtime/helpers/extends";

/* eslint-disable @typescript-eslint/explicit-function-return-type */

/* eslint-disable react/prefer-stateless-function */
import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import InkTabBarNodeTop from "./InkTabBarNodeTop";
import TabBarTabsNode from "./TabBarTabsNode";
import TabBarRootNode from "./TabBarRootNode";
import TabBarNode from "./TabBarNode";
import SaveRef from "./SaveRef";
import InkTabBarNodeLeft from "./InkTabBarNodeLeft";
import { NavBarDivider } from "./styled";
var inkTabBarNodeStyles = {
  inkBar: {
    height: '32px',
    width: '24px'
  }
};

var _ref = /*#__PURE__*/_createElement(NavBarDivider, null);

var TabBar = function TabBar(props) {
  var singleTab = React.Children.count(props.panes) === 1;
  return /*#__PURE__*/_createElement(SaveRef, null, function (saveRef, getRef) {
    return /*#__PURE__*/_createElement(TabBarRootNode, _extends({}, props, {
      saveRef: saveRef,
      getRef: getRef
    }), /*#__PURE__*/_createElement(TabBarNode, _extends({}, props, {
      getRef: getRef,
      saveRef: saveRef
    }), /*#__PURE__*/_createElement(TabBarTabsNode, _extends({
      saveRef: saveRef
    }, props, {
      className: singleTab ? 'single-tab' : undefined
    })), (props == null ? void 0 : props.tabPosition) !== 'left' && _ref, (props.type === 'line' || props.type === 'editable-line') && !singleTab && ((props == null ? void 0 : props.tabPosition) === 'left' ? /*#__PURE__*/_createElement(InkTabBarNodeLeft, _extends({}, props, {
      saveRef: saveRef,
      getRef: getRef,
      styles: inkTabBarNodeStyles
    })) : /*#__PURE__*/_createElement(InkTabBarNodeTop, _extends({}, props, {
      saveRef: saveRef,
      getRef: getRef,
      styles: inkTabBarNodeStyles
    })))));
  });
};

export default TabBar;