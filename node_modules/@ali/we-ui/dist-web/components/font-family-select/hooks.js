import { useEffect, useMemo, useState } from 'react';
import { useTranslate } from "../../locale/locales";
import FontDetector from "../../utils/FontDetector";

/**
 * 获取fontFamily, 字体探测结果, 语言转换函数
 * @param locale 本地语言类型
 * @returns {[options, installedRecord, t]}
 */
export var useFontFamily = function useFontFamily(locale) {
  var detector = useMemo(function () {
    return new FontDetector();
  }, []);

  var _useState = useState({
    "default": true
  }),
      installedRecord = _useState[0],
      setInstalledRecord = _useState[1];

  var t = useTranslate(locale); // 字体列表选项

  var options = useMemo(function () {
    var fontFamilies = [{
      title: t('we_ui_font_family_default'),
      value: 'default',
      installed: true
    }, {
      title: 'Arial',
      value: 'Arial',
      installed: false
    }, {
      title: 'Comic Sans MS',
      value: 'Comic Sans MS',
      installed: false
    }, {
      title: 'Courier New',
      value: 'Courier New',
      installed: false
    }, {
      title: 'Georgia',
      value: 'Georgia',
      installed: false
    }, {
      title: 'Helvetica',
      value: 'Helvetica',
      installed: false
    }, {
      title: 'Impact',
      value: 'Impact',
      installed: false
    }, {
      title: 'Times New Roman',
      value: 'Times New Roman',
      installed: false
    }, {
      title: 'Trebuchet MS',
      value: 'Trebuchet MS',
      installed: false
    }, {
      title: 'Verdana',
      value: 'Verdana',
      installed: false
    }, {
      title: t('we_ui_font_family_TheSongS'),
      value: 'FangSong',
      installed: false
    }, {
      title: t('we_ui_font_family_ChineseTheSongS'),
      value: 'STFangsong',
      installed: false
    }, {
      title: t('we_ui_font_family_ChineseFntimesNewRoman'),
      value: 'STSong',
      installed: false
    }, {
      title: t('we_ui_font_family_ChineseItalics'),
      value: 'STKaiti',
      installed: false
    }, {
      title: t('we_ui_font_family_FntimesNewRoman'),
      value: 'SimSun',
      installed: false
    }, {
      title: t('we_ui_font_family_MicrosoftIt'),
      value: 'Microsoft YaHei',
      installed: false
    }, {
      title: t('we_ui_font_family_Italics'),
      value: 'KaiTi',
      installed: false
    }, {
      title: t('we_ui_font_family_ItalicsJane'),
      value: 'Kaiti SC',
      installed: false
    }, {
      title: t('we_ui_font_family_BlackBody'),
      value: 'SimHei',
      installed: false
    }, {
      title: t('we_ui_font_family_BlackBody_Jane'),
      value: 'Heiti SC',
      installed: false
    }, {
      title: t('we_ui_font_family_ChineseFZHei'),
      value: 'FZHei-B01S',
      installed: false
    }, {
      title: t('we_ui_font_family_ChineseFZKai'),
      value: 'FZKai-Z03S',
      installed: false
    }, {
      title: t('we_ui_font_family_ChineseFZFangSong'),
      value: 'FZFangSong-Z02S',
      installed: false
    }];
    return fontFamilies;
  }, [t]); // 设置字体探测

  useEffect(function () {
    detector.detect(options.map(function (f) {
      return f.value;
    }), function (results) {
      var newInstalledRecord = {};
      results.forEach(function (result, index) {
        if (index !== 0) {
          newInstalledRecord[options[index].value] = result;
        }
      });
      newInstalledRecord["default"] = true;
      setInstalledRecord(newInstalledRecord);
    });
    return function () {
      setInstalledRecord({
        "default": true
      });
    };
  }, [detector, options]);
  return [options, installedRecord, t];
};