/* eslint-disable consistent-return */

/* eslint-disable @typescript-eslint/no-non-null-assertion */

/* eslint-disable no-unused-expressions */

/* eslint-disable arrow-body-style */
import React, { useRef, useEffect, useState } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { NumberSliderWrap, NumberSliderNumber } from "./styled";
import { classnames } from "../../utils";
import useComponentDidUpdate from "../../hooks/useComponentDidUpdate";
import Animation from "../../utils/Animation";
export var NumberSlider = /*#__PURE__*/React.memo(function (props) {
  var numbers = props.numbers,
      _props$number = props.number,
      number = _props$number === void 0 ? 0 : _props$number,
      onChange = props.onChange,
      visible = props.visible,
      testid = props.testid;
  var containerRef = useRef(null); // 滚动的时候避免hover样式造成的鼠标闪动

  var _useState = useState(false),
      scrolling = _useState[0],
      setScrolling = _useState[1];
  /**
   * 初始化进来定位不需要动画
   */


  useEffect(function () {
    if (containerRef.current && visible) {
      containerRef.current.scrollTop = 32 * number;
    } // eslint-disable-next-line react-hooks/exhaustive-deps

  }, [visible]);
  /**
   * 滚动处理，一旦number更新了，就开始执行动画
   */

  useComponentDidUpdate(function () {
    if (containerRef.current && visible) {
      var targetValue = 32 * number;
      var currentValue = containerRef.current.scrollTop;
      setScrolling(true);
      var animation = new Animation({
        duration: 240,
        progress: function progress(p) {
          containerRef.current.scrollTop = p * (targetValue - currentValue) + currentValue;
        },
        done: function done() {
          containerRef.current.scrollTop = targetValue;
          setScrolling(false);
        }
      }).start();
      return function () {
        animation.clear();
      };
    }
  }, [number, visible]);
  return /*#__PURE__*/_createElement(NumberSliderWrap, {
    ref: containerRef,
    "data-testid": testid
  }, numbers.map(function (num) {
    return /*#__PURE__*/_createElement(NumberSliderNumber, {
      key: num,
      className: classnames({
        actived: num === number,
        scrolling: scrolling
      }),
      onClick: function onClick() {
        number !== num && onChange(num);
      }
    }, num);
  }));
});