/* eslint-disable no-param-reassign */
import React, { useCallback } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { SwitchButton, SwitchInner } from "./styled";
import useControlledValue from "../../hooks/useControlledValue";
import { KEY_CODES } from "../../utils/consts";
import { Tooltip } from "../tooltip";
var Switch = /*#__PURE__*/React.memo(function (props) {
  var className = props.className,
      style = props.style,
      onChange = props.onChange,
      size = props.size,
      disabled = props.disabled,
      id = props.id,
      title = props.title,
      testid = props.testid;

  var _useControlledValue = useControlledValue(props.checked, props.defaultChecked),
      checked = _useControlledValue[0],
      setChecked = _useControlledValue[1];
  /**
   * 变化处理函数
   *
   * @param {boolean|undefined}
   * @return void
   */


  var handleToggleChecked = useCallback(function (newValue) {
    if (typeof newValue !== 'boolean') {
      newValue = !checked;
    }

    if (newValue !== checked && !disabled) {
      if (onChange) {
        onChange(newValue);
      }

      setChecked(newValue);
    }
  }, [checked, disabled, setChecked, onChange]);
  /**
   * 键盘左右键处理
   *
   * @param {React.KeyboardEvent<HTMLButtonElement>} e
   * @return {void}
   */

  var handleKeyDown = useCallback(function (e) {
    if (e.which === KEY_CODES.LEFT) {
      handleToggleChecked(false);
    } else if (e.which === KEY_CODES.RIGHT) {
      handleToggleChecked(true);
    }
  }, [handleToggleChecked]);

  var switchNode = /*#__PURE__*/_createElement(SwitchButton, {
    autoFocus: true,
    checked: checked,
    className: className,
    style: style,
    onClick: handleToggleChecked,
    onKeyDown: handleKeyDown,
    size: size,
    disabled: disabled,
    id: id,
    "data-testid": testid ? "Switch-" + testid : undefined
  }, /*#__PURE__*/_createElement(SwitchInner, {
    size: size,
    checked: checked
  }));

  return title ? /*#__PURE__*/_createElement(Tooltip, {
    title: title
  }, switchNode) : switchNode;
});
Switch.displayName = 'Switch';
export { Switch };