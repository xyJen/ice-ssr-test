import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";

/* eslint-disable @typescript-eslint/explicit-function-return-type */
import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import { WatermarkWrapper } from "./styled";
import { generateWatermark } from "./generateWatermark";
export var Watermark = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(Watermark, _React$Component);

  function Watermark() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.waterRef = /*#__PURE__*/React.createRef();

    _this.updateBackgroundImage = function () {
      var _this$props = _this.props,
          watermarkEnable = _this$props.watermarkEnable,
          nickName = _this$props.nickName,
          orgName = _this$props.orgName,
          markStyle = _this$props.markStyle,
          maxTextLength = _this$props.maxTextLength;

      if (!watermarkEnable) {
        if (_this.waterRef && _this.waterRef.current) {
          _this.waterRef.current.style.backgroundImage = 'none';
        }

        return;
      }

      if (_this.waterRef && _this.waterRef.current) {
        _this.waterRef.current.style.backgroundImage = "url(" + generateWatermark({
          nickName: nickName,
          orgName: orgName,
          markStyle: markStyle,
          maxTextLength: maxTextLength
        }) + ")";
      }
    };

    return _this;
  }

  var _proto = Watermark.prototype;

  _proto.componentDidMount = function componentDidMount() {
    this.updateBackgroundImage();
  };

  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var _this$props2 = this.props,
        nickName = _this$props2.nickName,
        orgName = _this$props2.orgName,
        watermarkEnable = _this$props2.watermarkEnable;

    if (watermarkEnable !== prevProps.watermarkEnable || nickName !== prevProps.nickName || orgName !== prevProps.orgName) {
      // 仅在文本内容变化时重绘
      this.updateBackgroundImage();
    }
  };

  _proto.render = function render() {
    var _this$props3 = this.props,
        style = _this$props3.style,
        markProps = _objectWithoutPropertiesLoose(_this$props3, ["style"]);

    var watermarkEnable = markProps.watermarkEnable,
        _markProps$markStyle = markProps.markStyle,
        markStyle = _markProps$markStyle === void 0 ? {} : _markProps$markStyle;
    var _markStyle$width = markStyle.width,
        width = _markStyle$width === void 0 ? 256 : _markStyle$width,
        _markStyle$height = markStyle.height,
        height = _markStyle$height === void 0 ? 300 : _markStyle$height;
    var bgStyle = {
      backgroundSize: width + "px " + height + "px",
      display: watermarkEnable ? 'block' : 'none'
    };
    return /*#__PURE__*/_createElement(WatermarkWrapper, {
      ref: this.waterRef,
      style: _extends({}, bgStyle, style)
    });
  };

  return Watermark;
}(React.Component);