import _extends from "@babel/runtime/helpers/extends";
import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";

/* eslint-disable no-invalid-this */
import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
export var handleFocus = function handleFocus(Component, Span) {
  var _temp;

  if (Span === void 0) {
    Span = 'span';
  }

  return _temp = /*#__PURE__*/function (_React$Component) {
    _inheritsLoose(Focus, _React$Component);

    function Focus() {
      var _this;

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
      _this.state = {
        focus: false
      };

      _this.handleFocus = function () {
        return _this.setState({
          focus: true
        });
      };

      _this.handleBlur = function () {
        return _this.setState({
          focus: false
        });
      };

      return _this;
    }

    var _proto = Focus.prototype;

    _proto.render = function render() {
      return /*#__PURE__*/_createElement(Span, {
        onFocus: this.handleFocus,
        onBlur: this.handleBlur
      }, /*#__PURE__*/_createElement(Component, _extends({}, this.props, this.state)));
    };

    return Focus;
  }(React.Component), _temp;
};