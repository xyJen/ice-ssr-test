import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import React, { Component, PureComponent } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import reactCSS from 'reactcss'; // import throttle from 'lodash/throttle';

import { debounce } from "../../../../utils";
import * as saturation from "../helpers/saturation";

var _ref3 = /*#__PURE__*/_createElement("style", null, "\n          .saturation-white {\n            background: -webkit-linear-gradient(to right, #fff, rgba(255,255,255,0));\n            background: linear-gradient(to right, #fff, rgba(255,255,255,0));\n          }\n          .saturation-black {\n            background: -webkit-linear-gradient(to top, #000, rgba(0,0,0,0));\n            background: linear-gradient(to top, #000, rgba(0,0,0,0));\n          }\n        ");

export var Saturation = /*#__PURE__*/function (_ref) {
  _inheritsLoose(Saturation, _ref);

  function Saturation(props) {
    var _this;

    _this = _ref.call(this, props) || this; // todo
    // this.throttle = throttle((fn, data, e) => {
    //   fn(data, e);
    // }, 50);

    _this.handleChange = function (e) {
      typeof _this.props.onChange === 'function' && _this.throttle(_this.props.onChange, saturation.calculateChange(e, _this.props.hsl, _this.container), e);
    };

    _this.handleMouseDown = function (e) {
      _this.handleChange(e);

      window.addEventListener('mousemove', _this.handleChange);
      window.addEventListener('mouseup', _this.handleMouseUp);
    };

    _this.handleMouseUp = function () {
      _this.unbindEventListeners();
    };

    _this.throttle = debounce(function (fn, data, e) {
      fn(data, e);
    }, 5);
    return _this;
  }

  var _proto = Saturation.prototype;

  _proto.componentWillUnmount = function componentWillUnmount() {
    // this.throttle.cancel();
    this.unbindEventListeners();
  };

  _proto.unbindEventListeners = function unbindEventListeners() {
    window.removeEventListener('mousemove', this.handleChange);
    window.removeEventListener('mouseup', this.handleMouseUp);
  };

  _proto.render = function render() {
    var _this2 = this;

    var _ref2 = this.props.style || {},
        color = _ref2.color,
        white = _ref2.white,
        black = _ref2.black,
        pointer = _ref2.pointer,
        circle = _ref2.circle;

    var styles = reactCSS({
      "default": {
        color: {
          absolute: '0px 0px 0px 0px',
          background: "hsl(" + this.props.hsl.h + ",100%, 50%)",
          borderRadius: this.props.radius
        },
        white: {
          absolute: '0px 0px 0px 0px',
          borderRadius: this.props.radius
        },
        black: {
          absolute: '0px 0px 0px 0px',
          boxShadow: this.props.shadow,
          borderRadius: this.props.radius
        },
        pointer: {
          position: 'absolute',
          top: -(this.props.hsv.v * 100) + 100 + "%",
          left: this.props.hsv.s * 100 + "%",
          cursor: 'default'
        },
        circle: {
          width: '4px',
          height: '4px',
          boxShadow: "0 0 0 1.5px #fff, inset 0 0 1px 1px rgba(0,0,0,.3),\n            0 0 1px 2px rgba(0,0,0,.4)",
          borderRadius: '50%',
          cursor: 'hand',
          transform: 'translate(-2px, -2px)'
        }
      },
      custom: {
        color: color,
        white: white,
        black: black,
        pointer: pointer,
        circle: circle
      }
    }, {
      custom: !!this.props.style
    });
    return /*#__PURE__*/_createElement("div", {
      style: styles.color,
      ref: function ref(container) {
        _this2.container = container;
      },
      onMouseDown: this.handleMouseDown,
      onTouchMove: this.handleChange,
      onTouchStart: this.handleChange
    }, _ref3, /*#__PURE__*/_createElement("div", {
      style: styles.white,
      className: "saturation-white"
    }, /*#__PURE__*/_createElement("div", {
      style: styles.black,
      className: "saturation-black"
    }), /*#__PURE__*/_createElement("div", {
      style: styles.pointer
    }, this.props.pointer ? /*#__PURE__*/_createElement(this.props.pointer, this.props) : /*#__PURE__*/_createElement("div", {
      style: styles.circle
    }))));
  };

  return Saturation;
}(PureComponent || Component);
export default Saturation;