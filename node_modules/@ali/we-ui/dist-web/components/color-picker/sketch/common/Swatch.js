import _extends from "@babel/runtime/helpers/extends";
import React from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import reactCSS from 'reactcss';
import { handleFocus } from "./interaction"; // eslint-disable-next-line import/no-named-as-default

import Checkboard from "./Checkboard";
var ENTER = 13;
export var Swatch = function Swatch(_ref) {
  var color = _ref.color,
      style = _ref.style,
      _ref$onClick = _ref.onClick,
      onClick = _ref$onClick === void 0 ? function () {} : _ref$onClick,
      onHover = _ref.onHover,
      _ref$title = _ref.title,
      title = _ref$title === void 0 ? color : _ref$title,
      children = _ref.children,
      focus = _ref.focus,
      _ref$focusStyle = _ref.focusStyle,
      focusStyle = _ref$focusStyle === void 0 ? {} : _ref$focusStyle;
  var transparent = color === 'transparent';
  var styles = reactCSS({
    "default": {
      swatch: _extends({
        background: color,
        height: '100%',
        width: '100%',
        cursor: 'pointer',
        position: 'relative',
        outline: 'none'
      }, style, focus ? focusStyle : {})
    }
  });

  var handleClick = function handleClick(e) {
    return onClick(color, e);
  };

  var handleKeyDown = function handleKeyDown(e) {
    return e.keyCode === ENTER && onClick(color, e);
  };

  var handleHover = function handleHover(e) {
    return onHover(color, e);
  };

  var optionalEvents = {};

  if (onHover) {
    optionalEvents.onMouseOver = handleHover;
  }

  return /*#__PURE__*/_createElement("div", _extends({
    style: styles.swatch,
    onClick: handleClick,
    title: title,
    tabIndex: 0,
    onKeyDown: handleKeyDown
  }, optionalEvents), children, transparent && /*#__PURE__*/_createElement(Checkboard, {
    borderRadius: styles.swatch.borderRadius,
    boxShadow: "inset 0 0 0 1px rgba(0,0,0,0.1)"
  }));
};
export default handleFocus(Swatch);