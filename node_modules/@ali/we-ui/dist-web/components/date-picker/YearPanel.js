import React, { useMemo, useCallback } from 'react';
var _createElement = /*#__PURE__*/React.createElement;
import dayjs from 'dayjs';
import useControlledValue from "../../hooks/useControlledValue";
import { classnames } from "../../utils";
import { Control } from "./Control";
import { YearPanelWrap, YearPanelBody, YearPanelItem, ControlWrap, PanelControlWrap } from "./styled";
// eslint-disable-next-line max-lines-per-function
var YearPanel = /*#__PURE__*/React.memo(function (props) {
  var onChange = props.onChange,
      control = props.control,
      onChangeStartYear = props.onChangeStartYear,
      onClickControl = props.onClickControl,
      style = props.style,
      disabledDate = props.disabledDate,
      testid = props.testid; // 可传dayjs值进来，受控

  var _useControlledValue = useControlledValue(props.value, props.defaultValue),
      value = _useControlledValue[0],
      setValue = _useControlledValue[1]; // 临时值


  var _useControlledValue2 = useControlledValue(props.startYear, value.year() - 4),
      startYear = _useControlledValue2[0],
      setStartYear = _useControlledValue2[1]; // 拿到语言包短月份数组


  var years = useMemo(function () {
    return Object.keys(Array.from({
      length: 12
    })).map(function (_, i) {
      return i + startYear;
    });
  }, [startYear]);
  var yearDates = useMemo(function () {
    return years.map(function (y) {
      return value.year(y);
    });
  }, [years, value]);
  /**
   * 修改dayjs值
   *
   * @param {number} e
   * @return {void}
   */

  var handleChange = function handleChange(e) {
    var newValue = value.year(e);

    if (onChange) {
      onChange(newValue);
    }

    setValue(newValue);
  };
  /**
   * 按下右按钮修改年份
   *
   * @param {number} e year
   * @return {void}
   */


  var handleAddYear = useCallback(function () {
    var newStartYear = startYear + 12;

    if (onChangeStartYear) {
      onChangeStartYear(newStartYear);
    }

    setStartYear(newStartYear);
  }, [startYear, onChangeStartYear, setStartYear]);
  /**
   * 按下左按钮修改年份
   *
   * @param {number} e year
   * @return {void}
   */

  var hanldeSubtract = useCallback(function () {
    var newStartYear = startYear - 12;

    if (onChangeStartYear) {
      onChangeStartYear(newStartYear);
    }

    setStartYear(newStartYear);
  }, [startYear, setStartYear, onChangeStartYear]);
  return /*#__PURE__*/_createElement(YearPanelWrap, {
    style: style
  }, control !== false && /*#__PURE__*/_createElement(ControlWrap, null, /*#__PURE__*/_createElement(Control, {
    hasNext: false,
    hasPrev: false,
    onClickSuperNext: handleAddYear,
    onClickSuperPrev: hanldeSubtract,
    testid: testid ? "YearPanel-" + testid : ''
  }, /*#__PURE__*/_createElement(PanelControlWrap, {
    className: classnames({
      clickable: !!onClickControl
    }),
    onClick: onClickControl
  }, startYear, " - ", startYear + 11))), /*#__PURE__*/_createElement(YearPanelBody, null, years.map(function (item, index) {
    var isDisabled = typeof disabledDate === 'function' ? disabledDate(yearDates[index], 'year') : false;
    return /*#__PURE__*/_createElement(YearPanelItem, {
      key: item
    }, /*#__PURE__*/_createElement("span", {
      className: classnames({
        actived: item === value.year(),
        isDisabled: isDisabled
      }),
      onClick: function onClick() {
        !isDisabled && handleChange(item);
      }
    }, item));
  })));
});
YearPanel.defaultProps = {
  control: true,
  defaultValue: dayjs()
};
export { YearPanel };