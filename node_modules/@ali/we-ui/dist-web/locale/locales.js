import React, { useContext } from 'react';
import dayjs from 'dayjs';
import localeData from 'dayjs/plugin/localeData';
import i18next from 'i18next';
dayjs.extend(localeData);
var resources = {};
var defaultLocale = 'zh-CN';
var LocaleContext = /*#__PURE__*/React.createContext(defaultLocale);
export var LocaleProvider = LocaleContext.Provider;
export function defineLocale(lang, res) {
  resources[lang] = {
    translation: res
  };
}
export function useTranslate(locale) {
  var contextLocale = useContext(LocaleContext);
  var l = locale || contextLocale || defaultLocale;
  return getT(l);
}
var cacheT = {};

function getT(locale) {
  if (cacheT[locale]) {
    return cacheT[locale];
  }

  var inst = i18next.createInstance();
  inst.init({
    fallbackLng: defaultLocale,
    lng: locale,
    resources: resources
  });
  cacheT[locale] = inst.t.bind(inst);
  return cacheT[locale];
}

export function useDayjsLocale(locale) {
  var contextLocale = useContext(LocaleContext);
  var l = locale || contextLocale || defaultLocale;
  var DAYJS_LOCALE_MAP = {
    'zh-CN': 'zh-cn',
    zh_CN: 'zh-cn',
    'zh-TW': 'zh-tw',
    zh_TW: 'zh-tw',
    'zh-HK': 'zh-hk',
    zh_HK: 'zh-hk',
    ja: 'ja',
    ja_JP: 'ja',
    'en-US': 'en',
    en_US: 'en'
  };
  return DAYJS_LOCALE_MAP[l];
}

/** 用于class组件 */
export var TranslateComp = /*#__PURE__*/React.memo(function (props) {
  var locale = props.locale,
      textKey = props.textKey;
  var t = useTranslate(locale);
  return t(textKey);
});