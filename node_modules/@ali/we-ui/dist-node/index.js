'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _extends = require('@babel/runtime/helpers/extends');
var React = require('react');
var styled = require('styled-components');
var ReactDOM = require('react-dom');
var tinycolor = require('tinycolor2');
var ResizeObserver = require('resize-observer-polyfill');
var domAlign = require('dom-align');
var dayjs = require('dayjs');
var localeData = require('dayjs/plugin/localeData');
var i18next = require('i18next');
var warning = require('warning');
var reactCSS = require('reactcss');
var PropTypes = require('prop-types');
var CSSTransitionGroup = require('react-transition-group/CSSTransitionGroup');
var reactBeautifulDnd = require('react-beautiful-dnd');
var reactWindow = require('react-window');
var memoize = require('memoize-one');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _extends__default = /*#__PURE__*/_interopDefaultLegacy(_extends);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);
var ReactDOM__default = /*#__PURE__*/_interopDefaultLegacy(ReactDOM);
var tinycolor__default = /*#__PURE__*/_interopDefaultLegacy(tinycolor);
var ResizeObserver__default = /*#__PURE__*/_interopDefaultLegacy(ResizeObserver);
var domAlign__default = /*#__PURE__*/_interopDefaultLegacy(domAlign);
var dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);
var localeData__default = /*#__PURE__*/_interopDefaultLegacy(localeData);
var i18next__default = /*#__PURE__*/_interopDefaultLegacy(i18next);
var warning__default = /*#__PURE__*/_interopDefaultLegacy(warning);
var reactCSS__default = /*#__PURE__*/_interopDefaultLegacy(reactCSS);
var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);
var CSSTransitionGroup__default = /*#__PURE__*/_interopDefaultLegacy(CSSTransitionGroup);
var memoize__default = /*#__PURE__*/_interopDefaultLegacy(memoize);

/* eslint-disable no-param-reassign */
function supportRef(nodeOrComponent) {
  // any component node
  if (nodeOrComponent.type && nodeOrComponent.type.prototype && !nodeOrComponent.type.prototype.render) {
    return false;
  } // Class component，from rc-utils ?? 比较旧的react版本？


  if (typeof nodeOrComponent === 'function' && nodeOrComponent.prototype && !nodeOrComponent.prototype.render) {
    return false;
  }

  return true;
}
function composeRef(...refs) {
  return node => {
    refs.forEach(ref => {
      fillRef(ref, node);
    });
  };
}
function fillRef(ref, node) {
  if (typeof ref === 'function') {
    ref(node);
  } else if (typeof ref === 'object' && ref && 'current' in ref) {
    ref.current = node;
  }
}

function elementContain(box, el) {
  if (!box) return false;
  let target = el;

  while (target) {
    if (target === box) return true;
    target = target.parentElement;
  }

  return false;
}
const mobileReg = /(android|iphone|symbianos|windows phone|ipad|ipod)/i;
const isMobile = mobileReg.test(navigator.userAgent.toLocaleLowerCase());
const iosReg = /os ([\\.\\_\d]+) like mac os/i;
const isIOS = iosReg.test(navigator.userAgent.toLocaleLowerCase());
/**
 * Return if a node is a DOM node. Else will return by `findDOMNode`
 */

function findDOMNode(node) {
  if (node instanceof HTMLElement) {
    return node;
  } // eslint-disable-next-line react/no-find-dom-node


  return ReactDOM__default['default'].findDOMNode(node);
}

function copyToClipboard(text, onCopied) {
  const el = document.createElement('textarea');
  el.value = text;
  document.body.appendChild(el);
  el.setAttribute('readonly', '');
  el.style.position = 'absolute';
  el.style.left = '-9999px';

  if (isIOS) {
    el.setSelectionRange(0, text.length);
  } else {
    el.select();
  }

  document.execCommand('copy');
  document.body.removeChild(el);

  if (typeof onCopied === 'function') {
    onCopied(text);
  }
}

const _createElement = /*#__PURE__*/React.createElement;
class Portal extends React.Component {
  constructor(props) {
    super(props);
    this.triggerRef = /*#__PURE__*/React.createRef();
    this.portalRef = /*#__PURE__*/React.createRef();
    this.portal = void 0;
    this.oContainer = document.body;
    this.hasAppended = false;

    this.updatePortalPosition = () => {
      const {
        visible,
        portalMatchTrigger,
        triggerRect
      } = this.props;

      if (!visible) {
        return;
      }

      if (!this.triggerRef.current && !triggerRect || !this.portalRef.current) {
        return;
      }

      const trigger = this.triggerRef.current;
      const portal = this.portalRef.current;
      let curTriggerRect = triggerRect;

      if (!triggerRect && trigger) {
        const tRect = trigger.getBoundingClientRect();
        const {
          left: tLeft,
          top: tTop,
          width: tWidth,
          height: tHeight
        } = tRect;
        curTriggerRect = {
          left: tLeft,
          top: tTop,
          width: tWidth,
          height: tHeight
        };
      }

      if (!curTriggerRect) {
        return;
      }

      const {
        offset,
        position
      } = this.props;
      const {
        height: portalHeight,
        width: portalWidth
      } = portal.getBoundingClientRect();

      if (portalMatchTrigger) {
        portal.style.minWidth = `${curTriggerRect.width}px`;
      }
      /* 当有外部传入固定position时，优先采用position */


      if (position) {
        portal.style.top = `${position.top - portalHeight}px`;
        portal.style.left = `${position.left}px`;
      } else {
        // 计算底部剩余空间，若剩余空间能够容纳 portal，则向下展示 portal
        // 如果下方剩余空间无法容纳 portal，还需要判断上方空间能否容纳
        // 若上方也无法容纳(triggerRect.top < height)，则仍然放到下方
        // 左右则优先放右侧
        const [offsetX, offsetY] = offset;
        const top = curTriggerRect.top + curTriggerRect.height + window.scrollY;
        const left = curTriggerRect.left + window.scrollX;
        const bottomSpace = this.oContainer.clientHeight - top;
        const rightSpace = this.oContainer.clientWidth - left;
        portal.style.top = bottomSpace < portalHeight && curTriggerRect.top > portalHeight ? `${curTriggerRect.top + window.scrollY + offsetY - portalHeight - 4}px` // 放到上方
        : `${top + offsetY}px`;
        portal.style.left = rightSpace < portalWidth && curTriggerRect.left + curTriggerRect.width > portalWidth ? `${left + curTriggerRect.width + offsetX - portalWidth - 4}px` : `${left + offsetX}px`;
      }

      portal.style.zIndex = '999';
    };

    const {
      className
    } = props; // Ref: https://reactjs.org/docs/portals.html#event-bubbling-through-portals

    this.portal = document.createElement('div');

    if (className) {
      this.portal.classList.add(className);
    }
  } // todo add throttle


  componentDidMount() {
    const {
      getContainer
    } = this.props; // container 可能是 portal 的父组件，因此在 mount 后再获取 container

    if (getContainer) this.oContainer = getContainer() || document.body;
    this.appendIfVisible();
    this.updatePortalPosition();
  }

  componentDidUpdate() {
    this.appendIfVisible();
    this.updatePortalPosition();
  }

  componentWillUnmount() {
    if (this.hasAppended && this.portal) {
      this.oContainer.removeChild(this.portal);
    }

    if (this.portal) {
      this.portal = null;
    } // this.updatePortalPosition.cancel();

  }

  appendIfVisible() {
    if (this.hasAppended) return;
    const {
      oContainer,
      portal
    } = this;
    const {
      visible
    } = this.props;

    if (visible && portal) {
      oContainer.appendChild(portal);
      this.hasAppended = true;
    }
  }

  render() {
    const {
      children,
      overlay,
      visible
    } = this.props;
    return /*#__PURE__*/_createElement(React.Fragment, null, children && /*#__PURE__*/React.cloneElement(children, {
      ref: this.triggerRef
    }), visible && this.portal ? /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/React.cloneElement(overlay, {
      ref: this.portalRef
    }), this.portal) : null);
  }

}
Portal.defaultProps = {
  offset: [0, 0],
  portalMatchTrigger: true,
  className: '',
  visible: false
};

const isEscHotKey = event => {
  const {
    key,
    keyCode
  } = event;

  if (!key || !keyCode) {
    return false;
  }

  if (key.toLowerCase() === 'escape' || keyCode === 27) {
    return true;
  }

  return false;
};
const isEnterHotKey = event => {
  const {
    key,
    keyCode
  } = event;

  if (!key || !keyCode) {
    return false;
  }

  if (key.toLowerCase() === 'enter' || keyCode === 13) {
    return true;
  }

  return false;
};
const isShiftEnterHotKey = event => {
  const {
    key,
    keyCode
  } = event;

  if (!key || !keyCode) {
    return false;
  }

  if (event.shiftKey && (key.toLowerCase() === 'enter' || keyCode === 13)) {
    return true;
  }

  return false;
};
const isUpHotKey = event => {
  const {
    key,
    keyCode
  } = event;

  if (!key || !keyCode) {
    return false;
  }

  if (key.toLowerCase() === 'up arrow' || keyCode === 38) {
    return true;
  }

  return false;
};
const isDownHotKey = event => {
  const {
    key,
    keyCode
  } = event;

  if (!key || !keyCode) {
    return false;
  }

  if (key.toLowerCase() === 'down arrow' || keyCode === 40) {
    return true;
  }

  return false;
};

/* eslint-disable max-len */

(function (ENumberStrategy) {
  ENumberStrategy[ENumberStrategy["ROUND"] = 1] = "ROUND";
  ENumberStrategy[ENumberStrategy["FLOOR"] = 2] = "FLOOR";
})(exports.ENumberStrategy || (exports.ENumberStrategy = {}));

/**
 * 浮点数匹配处理
 * @param num1 比较的数字1
 * @param num2 比较的数字2
 * @param accuracy 两个小数的最小差异, 0.000001
 */
const equalFloat = (num1, num2, accuracy = 0.000001) => {
  return Math.abs(num1 - num2) <= accuracy;
};
/**
 * 浮点数精确度处理
 * @param num 要处理的浮点数
 * @param accuracy 保存的精度位数，默认2位小数
 */

const formatNumber = (num, accuracy = 2, strategy = exports.ENumberStrategy.ROUND) => {
  const multiple = Math.pow(10, accuracy);
  let newNum = num;

  if (strategy === exports.ENumberStrategy.ROUND) {
    newNum = Math.floor(num * multiple + 0.5) / multiple;
  } else if (strategy === exports.ENumberStrategy.FLOOR) {
    newNum = Math.floor(num * multiple) / multiple;
  }

  return newNum;
};
/**
 * 先放大为整数，再完成浮点数相加，以（在日常场景）获得更接近数学的结果
 * @param num1 浮点数1
 * @param num2 浮点数2
 * 参考：https://github.com/camsong/blog/issues/9
 */

const addFloat = (num1, num2) => {
  const num1Digits = (num1.toString().split('.')[1] || '').length;
  const num2Digits = (num2.toString().split('.')[1] || '').length;
  const baseNum = Math.pow(10, Math.max(num1Digits, num2Digits));
  return (num1 * baseNum + num2 * baseNum) / baseNum;
};
/**
 * 判断数字在给定精度（位数）下是否需要圆整
 * @param num 需判断的数字
 * @param accuracy 小数点位数
 */

const needsRounding = function (num, accuracy) {
  const numStr = String(num);
  if (!accuracy) return numStr.indexOf('.') !== -1;
  return numStr.length - 1 - numStr.indexOf('.') > accuracy;
};

const KEY_CODES = {
  LEFT: 37,
  UP: 38,
  RIGHT: 39,
  DOWN: 40,
  ENTER: 13,
  ESC: 27
};

const PortalWrapper = /*#__PURE__*/styled__default['default'].div(["position:fixed;display:", ";top:", "px;right:", "px;cursor:", ";"], ({
  visible
}) => visible ? 'block' : 'none', ({
  top
}) => top, ({
  right
}) => right, ({
  dragging
}) => dragging ? 'grabbing' : 'grab');

const _createElement$1 = /*#__PURE__*/React__default['default'].createElement;
const dragAndDropHOC = function (WrappedComponent, handlers) {
  var _temp;

  return _temp = class DragAndDrop extends React__default['default'].PureComponent {
    constructor(props) {
      super(props);
      this.startPageX = 0;
      this.startPageY = 0;
      this.startMarginTop = 0;
      this.startMarginRight = 0;
      this.maxMarginTop = 0;
      this.maxMarginRight = 0;
      this.modalRef = /*#__PURE__*/React__default['default'].createRef();

      this.handleMouseDown = event => {
        if (!event.target || !event.target.tagName) {
          return;
        }

        if (!handlers.shouldDragElement || handlers.shouldDragElement(event)) {
          this.handleDragStart(event);
        }
      };

      this.setMax = () => {
        const {
          draggableArea
        } = this.props;
        const dom = this.modalRef.current;

        if (dom) {
          this.startMarginTop = parseInt(dom.style.marginTop, 10) || 0;
          this.startMarginRight = parseInt(dom.style.marginRight, 10) || 0;
          this.maxMarginTop = window.innerHeight - dom.offsetHeight - draggableArea.top - draggableArea.bottom;
          this.maxMarginRight = window.innerWidth - dom.offsetWidth - draggableArea.left - draggableArea.right;
        }
      };

      this.handleResize = debounce(() => {
        this.setMax();
        const dom = this.modalRef.current;

        if (dom && this.props.visible) {
          dom.style.marginTop = parseInt(dom.style.marginTop, 10) >= this.maxMarginTop ? `${Math.max(this.maxMarginTop, 0)}px` : dom.style.marginTop;
          dom.style.marginRight = parseInt(dom.style.marginRight, 10) >= this.maxMarginRight ? `${Math.max(this.maxMarginRight, 0)}px` : dom.style.marginRight;
        }
      }, 300);

      this.handleDragStart = event => {
        const {
          pageX,
          pageY
        } = event;
        this.startPageX = pageX;
        this.startPageY = pageY;
        this.setMax();
        document.addEventListener('mousemove', this.handleDragging);
        document.addEventListener('mouseup', this.handleDragEnd);
        this.setState({
          dragging: true
        });
      };

      this.handleDragging = event => {
        const {
          dragging
        } = this.state;

        if (!dragging) {
          return;
        }

        const {
          pageX,
          pageY
        } = event;
        const offsetX = pageX - this.startPageX;
        const offsetY = pageY - this.startPageY;
        const dom = this.modalRef.current;

        if (dom) {
          const modalMarginTop = this.startMarginTop + offsetY;

          if (modalMarginTop >= 0 && modalMarginTop <= this.maxMarginTop) {
            dom.style.marginTop = `${modalMarginTop}px`;
          }

          const modalMarginRight = this.startMarginRight - offsetX;

          if (modalMarginRight >= 0 && modalMarginRight <= this.maxMarginRight) {
            dom.style.marginRight = `${modalMarginRight}px`;
          }
        }
      };

      this.handleDragEnd = () => {
        this.startPageX = 0;
        this.startPageY = 0;
        document.removeEventListener('mousemove', this.handleDragging);
        document.removeEventListener('mouseup', this.handleDragEnd);
        this.setState({
          dragging: false
        });
      };

      this.renderFindAndReplace = () => {
        const {
          draggableArea,
          initialPosition,
          visible,
          zIndex,
          wrappedRef,
          onVisibleChange
        } = this.props;
        const {
          dragging
        } = this.state; // 设置Modal对话框起始位置(marginTop, marginRight)

        const {
          marginTop: initMarginTop = 0,
          marginRight: initMarginRight = 0
        } = initialPosition;
        const styleModal = {
          zIndex: zIndex === undefined ? 'auto' : zIndex,
          marginTop: initMarginTop,
          marginRight: initMarginRight
        };
        return /*#__PURE__*/_createElement$1(PortalWrapper, {
          top: draggableArea.top,
          right: draggableArea.right,
          dragging: dragging,
          onMouseDown: this.handleMouseDown,
          ref: this.modalRef,
          visible: visible,
          style: styleModal
        }, visible && /*#__PURE__*/_createElement$1(WrappedComponent, _extends__default['default']({}, this.props, {
          ref: wrappedRef,
          onClose: () => onVisibleChange(false)
        })));
      };

      this.state = {
        dragging: false
      };
    }

    componentDidMount() {
      window.addEventListener('resize', this.handleResize);
    }

    componentWillUnmount() {
      document.removeEventListener('mousemove', this.handleDragging);
      document.removeEventListener('mouseup', this.handleDragEnd);
      window.removeEventListener('resize', this.handleResize);
    }

    render() {
      return /*#__PURE__*/ReactDOM__default['default'].createPortal(this.renderFindAndReplace(), document.body);
    }

  }, _temp;
};

/* eslint-disable no-param-reassign */
/* eslint-disable @typescript-eslint/no-explicit-any */

const runNextTime = fn => {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  const ref = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;

  if (ref) {
    ref(fn);
  } else {
    setTimeout(fn, 0);
  }
};
const pick = (target, fields) => {
  const newTarget = {};

  for (let i = 0; i < fields.length; i += 1) {
    const key = fields[i];
    newTarget[key] = target[key];
  }

  return newTarget;
};
const omit = (target, fields) => {
  const newTarget = { ...target
  };

  for (let i = 0; i < fields.length; i += 1) {
    const key = fields[i];
    delete newTarget[key];
  }

  return newTarget;
};
const throttle = (callback, delay) => {
  let canExecute = true;
  return (...args) => {
    if (canExecute) {
      canExecute = false;
      callback(...args);
      setTimeout(() => {
        canExecute = true;
      }, delay);
    }
  };
};
const debounce = (callback, delay) => {
  let debounceTimer;

  const handler = (...args) => {
    clearTimeout(debounceTimer);
    debounceTimer = window.setTimeout(() => callback(...args), delay);
  };

  handler.cancel = () => {
    if (debounceTimer) {
      clearTimeout(debounceTimer);
      debounceTimer = 0;
    }
  };

  return handler;
};
const uuid = (() => {
  let id = 0;
  return () => (+new Date()).toString(36) + id++;
})();
const uniq = targets => {
  if (!Array.isArray(targets)) {
    return targets;
  }

  return Array.from(new Set(targets));
};
const uniqBy = (targets, key) => {
  if (!Array.isArray(targets)) {
    return targets;
  }

  const results = [];
  const resultValues = [];
  const targetKeyValues = targets.map(item => item[key]);
  targetKeyValues.forEach((item, index) => {
    if (resultValues.indexOf(item) === -1) {
      resultValues.push(item);
      results.push(targets[index]);
    }
  });
  return results;
};
const typeOf = target => {
  return Object.prototype.toString.call(target).slice(8, -1).toLowerCase();
};
const isEqual = (target, ref) => {
  if (typeOf(target) !== typeOf(ref)) {
    return false;
  }

  if (typeOf(target) !== 'array' && typeOf(target) !== 'object') {
    return target === ref;
  }

  if (Array.isArray(target)) {
    if (target.length !== ref.length) {
      return false;
    }

    return target.every(t => ref.indexOf(t) !== -1);
  }

  const targetKeys = Object.keys(target);
  const refKeys = Object.keys(ref);

  if (targetKeys.length !== refKeys.length) {
    return false;
  }

  return targetKeys.every(k => target[k] === ref[k]);
};
const camelCase = target => {
  return target.replace(/_([a-zA-Z])/g, (...args) => args[1].toUpperCase());
};
const classnames = (...args) => {
  const names = [];
  args.forEach(item => {
    if (!item) return;

    if (typeof item === 'string') {
      names.push(item);
      return;
    }

    Object.keys(item).forEach(k => {
      if (item[k]) names.push(k);
    });
  });
  return names.join(' ');
};
const getAlignPointsAndOffsets = (placement, offset = 8) => {
  switch (placement) {
    case 'right':
      return {
        points: ['cl', 'cr'],
        offsets: [offset, 0]
      };

    case 'rightTop':
      return {
        points: ['tl', 'tr'],
        offsets: [offset, 0]
      };

    case 'rightBottom':
      return {
        points: ['bl', 'br'],
        offsets: [offset, 0]
      };

    case 'left':
      return {
        points: ['cr', 'cl'],
        offsets: [-offset, 0]
      };

    case 'leftTop':
      return {
        points: ['tr', 'tl'],
        offsets: [-offset, 0]
      };

    case 'leftBottom':
      return {
        points: ['br', 'bl'],
        offsets: [-offset, 0]
      };

    case 'top':
      return {
        points: ['bc', 'tc'],
        offsets: [0, -offset]
      };

    case 'topRight':
      return {
        points: ['br', 'tr'],
        offsets: [0, -offset]
      };

    case 'topLeft':
      return {
        points: ['bl', 'tl'],
        offsets: [0, -offset]
      };

    case 'bottom':
      return {
        points: ['tc', 'bc'],
        offsets: [0, offset]
      };

    case 'bottomRight':
      return {
        points: ['tr', 'br'],
        offsets: [0, offset]
      };

    case 'bottomLeft':
      return {
        points: ['tl', 'bl'],
        offsets: [0, offset]
      };
  }
}; // 检测是否为白色

const isWhite = function (c) {
  if (!c) return false;
  return tinycolor__default['default'](c).toHex() === 'ffffff';
}; // 检测是否透明

const isTransparent = function (c) {
  if (!c) return false;
  return tinycolor__default['default'](c).getAlpha() === 0;
};

const useControlledValue = (propsValue, propsDefaultValue) => {
  // 存进state中
  const [value, setValue] = React.useState(propsValue === undefined ? propsDefaultValue : propsValue); // 如果是value不是undefined，说明受控

  const noop = React.useCallback(() => {}, []);

  if (propsValue !== undefined) {
    return [propsValue, noop];
  }

  return [value, setValue];
};

const PortalComponent = props => {
  const {
    visible,
    getContainer,
    children
  } = props;
  const isAppended = React.useRef(false);
  const oContainer = getContainer ? getContainer() || document.body : document.body;
  const oComponentContainer = React.useMemo(() => {
    const node = document.createElement('div');
    node.style.position = 'absolute';
    node.style.left = '0px';
    node.style.top = '0px';
    node.style.width = '100%';
    isAppended.current = false;
    return node; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [oContainer]); // 首次visible append 到body中

  if (!isAppended.current) {
    if (visible) {
      isAppended.current = true;
      oContainer.appendChild(oComponentContainer);
    }
  }

  React.useEffect(() => {
    const didAppended = isAppended.current;
    return () => {
      if (didAppended && oComponentContainer.parentElement === oContainer) {
        oContainer.removeChild(oComponentContainer);
        isAppended.current = false;
      }
    };
  }, [oComponentContainer, oContainer]);
  return /*#__PURE__*/ReactDOM__default['default'].createPortal(children, oComponentContainer);
};

/**
 * ·················································>
 * 🎉 @module : 🌋 色板颜色变量
 * ·················································>
 */
const commonColors = {
  // 灰色
  colorGray1: '#ffffff',
  colorGray2: 'rgba(17, 31, 44, 0.06)',
  colorGray3: '#f5f5f5',
  colorGray4: '#e8e8e8',
  colorGray5: '#d9d9d9',
  colorGray6: '#BFBFBF',
  // fade(#000, 25%);
  colorGray7: '#8C8C8C',
  // fade(#000, 45%);
  colorGray8: '#595959',
  // fade(#000, 65%);
  colorGray9: '#262626',
  // fade(#000, 85%);
  colorGray10: '#000000',
  // 分割线颜色
  colorLine2: 'rgba(17, 31, 44, 0.12)',
  colorLine1: 'rgba(17, 31, 44, 0.08)',
  // 文字颜色
  colorText5: 'rgba(17, 31, 44, 1)',
  colorText4: 'rgba(17, 31, 44, 0.56)',
  colorText3: 'rgba(17, 31, 44, 0.4)',
  colorText2: 'rgba(17, 31, 44, 0.24)',
  colorText1: 'rgba(17, 31, 44, 0.12)',
  colorBlue1: '#0089FF',
  // 通用蓝色
  colorBlue2: '#94CCFB',
  // 蓝色浅色
  colorBlue3: '#DEEFFD',
  // 蓝色浅x2色
  colorRed1: '#FB602D',
  // 通用红色
  colorRed2: '#F9BCA7',
  // 红色浅色
  colorRed3: '#FDEAE4',
  // 红色浅x2色
  colorOrange1: '#FF9F00',
  // 通用橙色
  colorOrange2: '#FAD595',
  // 橙色浅色
  colorOrange3: '#FDF2DE',
  // 橙色浅x2色
  colorGreen1: '#00B853',
  // 通用绿色
  colorGreen2: '#94DFB7',
  // 绿色浅色
  colorGreen3: '#DEF5E9' // 绿色浅x2色

};
/* 通用 key 组件表单（7.24） */

const desktopCommon = {
  commonBaseColor1: 'rgba(17, 31, 44, 1)',
  commonBaseColor2: 'rgba(17, 31, 44, 0.56)',
  commonBaseColor3: 'rgba(17, 31, 44, 0.4)',
  commonBaseColor4: 'rgba(17, 31, 44, 0.24)',
  commonLinkColor: 'rgba(80, 116, 154, 1)',
  commonLinkPressColor: 'rgba(80, 116, 154, 0.4)',
  commonLinkHardColor: 'rgba(17, 31, 44, 0.12)',
  commonLineLightColor: 'rgba(17, 31, 44, 0.08)',
  commonFGColor: '#FFFFFF',
  commonFGz1Color: '#FFFFFF',
  commonBgColor: '#F6F6F7',
  commonBgLightColor: '#F7F8Fa',
  commonBgHoverColor: 'rgba(17, 31, 44, 0.08)',
  commonBgPressColor: 'rgba(17, 31, 44, 0.12)',
  commonActionIconColor: 'rgba(17, 31, 44, 0.72)'
};
const bizColors = {
  // 主题色
  primaryColor: commonColors.colorBlue1,
  primaryColor1: '#f0faff',
  primaryColor2: '#d6f0ff',
  primaryHoverColor: '#38A2FF',
  primaryDisabledColor: commonColors.colorBlue2,
  primaryPressColor: '#027CE6',
  successColor: '#52c41a',
  infoColor: '#1890ff',
  errorColor: '#f5222d',
  errorColor2: '#FDEAE4',
  warningColor: '#faad14',
  warningColor2: '#FDF2DE',
  // 水印颜色
  stampColor: 'rgba(17,31,44,0.6)',
  // 背景颜色
  backgroundColor: '#F2F4F5',
  backgroundColorLight: '#f7f8fa',
  backgroundColorPress: 'rgba(17,31,44,0.12)',
  backgroundColorHover: 'rgba(17,31,44,0.5)',
  hoverbg: 'rgb(237, 236, 238)',
  // 禁止
  disabledColor: desktopCommon.commonBaseColor4,
  backgroundDisabledColor: commonColors.colorGray2,
  // 链接颜色
  linkColor: 'rgba(80,116,154,1)',
  linkHoverColor: '#1890FF',
  linkPressColor: 'rgba(80,116,154,0.12)',
  // 边框颜色
  borderColor: 'rgba(0,0,0,0.15)',
  borderColor2: commonColors.colorGray5,
  // #d9d9d9
  placeholderColor: 'rgba(25, 31, 37, 0.4)',
  disabledBackgroundColor: 'rgba(0, 0, 0, 0.04)',
  disabledBorderColor: 'rgba(0, 0, 0, 0.15)',
  colorFill4: '#ECEDEF',
  colorFill3: '#EDF0F2',
  colorFill2: '#F2F4F5',
  colorFill1: '#F6F8F9',
  normalColor: '#d9d9d9'
};
var colors = { ...commonColors,
  ...bizColors,
  ...desktopCommon
};

/**
 * ·················································>
 * 🎉 @module : 🌋 z-index变量
 * ·················································>
 */
// 按程度定义，取值可调整商议
const levels = {
  zIndexMin: -10000,
  // 极限低，理论上应该是负无穷
  zIndexLower: 100,
  zIndexLow: 200,
  zIndexNormal: 500,
  // 常用值
  zIndexHigh: 1000,
  zIndexHigher: 2000,
  zIndexMax: 100000 // 极限高，理论上应该是正无穷

};
var zindex = { ...levels,
  zIndexBackTop: levels.zIndexMax,
  zIndexModal: levels.zIndexNormal,
  zIndexModalMask: levels.zIndexNormal,
  zIndexDropdown: levels.zIndexHigh,
  zIndexTooltip: levels.zIndexHigher,
  zIndexMessage: levels.zIndexMax
};

/**
 * ·················································>
 * 🎉 @module : 🌋 盒子模型尺寸相关变量
 * ·················································>
 * mini,tiny,small,medium,large,big,huge,massive
 * 取值待商议
 * -------------------------------------------------
 */
var size = {
  // Input、Button、FormItem、Select等应该统一高度
  elementHeightSmall: '24px',
  elementHeight: '28px',
  elementHeightLarge: '32px',
  // padding
  paddingMini: '2px',
  paddingTiny: '4px',
  paddingSmall: '6px',
  paddingMedium: '8px',
  padding: '12px',
  paddingLarge: '16px',
  paddingBig: '18px',
  paddingHug: '24px',
  paddingMassive: '32px',
  // margin
  marginMini: '2px',
  marginTiny: '4px',
  marginSmall: '6px',
  marginMedium: '8px',
  margin: '12px',
  marginLarge: '16px',
  marginBig: '18px',
  marginHug: '24px',
  marginMassive: '32px',
  // 圆角
  radiusSmall: '4px',
  radius: '4px',
  radiusMedium: '8px',
  radiusLarge: '8px',
  radiusBig: '12px',
  radiusHug: '16px',
  // 行高
  lineHeightBase: 1.5715
};

/**
 * ·················································>
 * 🎉 @module : 🌋 字体相关变量
 * ·················································>
 */
const font = {
  fontFamily: `~"'Chinese Quote', -appleSystem, BlinkMacSystemFont, 'Segoe UI', Roboto, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sansSerif"`,
  // eslint-disable-line
  codeFamily: 'Consolas, Menlo, Courier, monospace',
  // 👁 https://ant.design/docs/spec/font-cn#字阶与行高
  fontSize: '14px',
  fontSizeSmall: '12px',
  fontSizeMedium: '14px',
  fontSizeLarge: '16px',
  fontSizeHug: '18px',
  fontSizeH1: '30px',
  fontSizeH2: '24px',
  fontSizeH3: '20px',
  fontSizeH4: '18px',
  fontSizeMenu: '13px',
  fontSizeIcon: '15px',
  // 👁 https://ant.design/docs/spec/font-cn#字体颜色
  titleColor: colors.colorText5,
  // #262626 85%
  textColor: colors.colorText5,
  // #595959 65%
  textColor2: colors.colorGray7,
  // #8C8C8C 45%
  textColor3: colors.colorGray6,
  // #BFBFBF 25%
  textColorDisable: colors.colorText1 // #BFBFBF 25%

};

/**
 * ·················································>
 * 🎉 @module : 🌋 过渡与动效相关变量
 * ·················································>
 */

/**
 * 过度相关
 * 命名 👁 @see https://easings.net/zh-tw#
 * 预览 👁 @see http://cubic-bezier.com/#.3,1.2,.2,1
 */
const transitions = {
  transEaseInOut: '0.2s ease-in-out',
  transEaseInOutSlow: '0.3s ease-in-out'
};

const shadows = {
  boxShadow: '0 10px 20px 0 rgba(0,0,0,0.20)',
  shadow1: '0px 2px 6px 0px rgba(17, 31, 44, 0.06)',
  shadow2: '0px 1px 8px 0px rgba(17, 31, 44, 0.08)',
  shadow2Down: '0px 1px 8px 0px rgba(17, 31, 44, 0.08)',
  // 顶部功能区
  shadow3: '0px 2px 10px 0px rgba(17, 31, 44, 0.08)',
  // 行内工具栏
  shadow3Left: '0px -2px 10px 0px rgba(17, 31, 44, 0.08)',
  // 协同工具栏, 耳朵使用
  shadow4: '0px 10px 20px rgba(0, 0, 0, 0.2)' // Menu 使用

};

var switchTheme = {
  switchWidthSmall: '26px',
  switchWidth: '44px',
  switchHeightSmall: '16px',
  switchHeight: '22px'
};

var button = {
  // 普通按钮
  buttonNormalHoverBgColor: 'rgba(17, 31, 44, 0.08)',
  buttonNormalActiveBgColor: 'rgba(17, 31, 44, 0.12)',
  // 激活状态
  buttonNormalClickBgColor: '#dee0e1',
  // 点击过程
  buttonNormalDisabledBorderColor: 'rgba(17, 31, 44, 0.08)',
  // buttonNormalDisabledBgColor: colorGray1, // 略
  // 警告按钮
  buttonDangerBgColor: '#FB602D',
  buttonDangerHoverBgColor: 'rgba(251, 96, 45, 0.88)',
  buttonDangerActiveBgColor: '#DE582C',
  buttonDangerDisabledBgColor: '#FDBFAB',
  // 幽灵按钮
  buttonGhostHoverBgColor: 'rgba(255, 255, 255, 0.12)',
  buttonGhostHoverBorderColor: 'rgba(255, 255, 255, 0.56)',
  buttonGhostActiveBorderColor: 'rgba(255, 255, 255, 0.56)',
  buttonGhostActiveBgColor: 'rgba(17, 31, 44, 0.12)',
  buttonGhostDisabledBorderColor: 'rgba(255, 255, 255, 0.5)',
  // 分割按钮
  splitButtonBgColor: 'rgba(17, 31, 44, 0.08)',
  splitButtonLeftActiveBgColor: 'rgba(17, 31, 44, 0.12)',
  splitButtonActiveBgColor: 'rgba(17, 31, 44, 0.16)',
  splitButtonHoverBgColor: 'rgba(17, 31, 44, 0.12)'
};

var alert = {
  alertVerticalPadding: '11px',
  alertHorizontalPadding: '17px'
};

var colorPicker = {
  fillColorAreaWidth: 14,
  fillColorAreaHeight: 14,
  fillColorAreaMargin: '4px 2px 4px 4px'
};

var datePicker = {
  datePickerArrowColor: 'rgba(0,0,0,.85)',
  datePickerArrowHoverColor: 'rgba(0,0,0,.45)'
};

var toolbar = {
  toolbarAlignment: 'center',
  toolbarBg: '#fff'
};

var dropdown = {
  dropdownBorderColor: 'rgba(17,31,44,0.12)',
  dropdownBorderRadius: 6
};

var tabs = {
  tabsTransChange: '0.3s cubic-bezier(0.645, 0.045, 0.355, 1)',
  tabsScrollingSize: '32px',
  tabsCardHeadActivedBackground: '#fff'
};

var tooltip = {
  tooltipBackgroundColor: 'rgba(17, 31, 44, 0.85)'
};

var notification = {
  notificationPadding: '17px 20px 20px 20px'
};

var modal = {
  modalMaskBackground: 'rgba(0, 0, 0, 0.4)',
  modalContentPadding: '20px 24px'
};

var menu = {
  menuGroupTitleColor: '#a0a5ab'
};

var select = {
  selectActiveColor: 'rgba(17, 31, 44, 0.12)'
};

/**
 * ··············································································>
 * 🐝 @命名规范：
 * @param {尺度}   ⚖️ mini,tiny,small,medium,large,big,huge,massive(参考sematic-ui)
 * @param {优先级} ⚖ primary,second,third
 * @param {层级}   ⚖ lower,low,normal,high,higher
 * @param {程度}   ⚖ lighter,light, normal, medium,heavy,heavier
 * -------------------------------------------------------------------------------
 *
 * ··············································································>
 * 🐝 @使用规范：
 * @param {颜色值}    🔨 严格使用主题变量，不要使用自定义值
 * @param {zindex}    🔨 严格使用主题变量，不要使用自定义值
 * @param {动画&过渡} 🔨 严格使用主题变量，不要使用自定义值
 * @param {字体相关}  🔨 严格使用主题变量，不要使用自定义值
 * @param {盒子尺寸}  🔨 padding,margin,尽量使用主题变量，border属性严格使用主题变量
 * -------------------------------------------------------------------------------
 */
const theme = { ...colors,
  ...size,
  ...font,
  ...zindex,
  ...transitions,
  ...shadows,
  ...switchTheme,
  ...button,
  ...colorPicker,
  ...alert,
  ...toolbar,
  ...dropdown,
  ...tabs,
  ...tooltip,
  ...notification,
  ...modal,
  ...datePicker,
  ...menu,
  ...select
};
const withTheme = C => {
  C.defaultProps = {
    theme: {
      ui: theme
    }
  };
  return C;
};

const OverlayWrap = withTheme(styled__default['default'].div(["position:absolute;left:-9999px;top:-9999px;border:1px solid ", ";box-shadow:1px 3px 8px 0 rgba(0,0,0,0.10);background-color:", ";border-radius:", ";z-index:", ";&.hidden{left:-9999px;top:-9999px;}"], ({
  theme
}) => theme.ui.dropdownBorderColor, ({
  theme
}) => theme.ui.colorGray1, ({
  theme
}) => theme.ui.radiusLarge, ({
  theme
}) => theme.ui.zIndexDropdown));
const OverlayMask = withTheme(styled__default['default'].div(["position:fixed;left:0;right:0;top:0;bottom:0;z-index:", ";&.hidden{display:none;}"], ({
  theme
}) => theme.ui.zIndexDropdown - 1));

var usePrevious = (value => {
  const valueRef = React.useRef();
  React.useEffect(() => {
    valueRef.current = value;
  });
  return valueRef.current;
});

var useClickOuterRef = ((handler, on = true, eventName) => {
  const ref = React.useRef(null);
  const callback = React.useRef(() => {});

  callback.current = handler || (() => {});

  React.useEffect(() => {
    /**
     * 点击处理
     */
    const handleClickBody = event => {
      const isOuter = !ref.current || !elementContain(ref.current, event.target);

      if (isOuter) {
        callback.current(event);
      }
    };

    if (on) {
      document.body.addEventListener(eventName || 'mousedown', handleClickBody);
    }

    return () => {
      if (on) {
        document.body.removeEventListener(eventName || 'mousedown', handleClickBody);
      }
    };
  }, [on, eventName]);
  return ref;
});

/* eslint-disable @typescript-eslint/no-explicit-any */
var useComponentDidUpdate = ((fn, conditions) => {
  const isMounted = React.useRef(false);
  React.useEffect(() => {
    if (isMounted.current) {
      fn();
    } else {
      isMounted.current = true;
    }
  }, conditions);
});

var useFlush = (() => {
  const [, setRandom] = React.useState(-2);
  const handleUpdate = React.useCallback(() => {
    setRandom(Math.random());
  }, []);
  return handleUpdate;
});

/* eslint-disable react/no-find-dom-node */
const _createElement$2 = /*#__PURE__*/React__default['default'].createElement;
// eslint-disable-next-line max-lines-per-function
const Popup = props => {
  const {
    visible,
    getContainer,
    overlayStyle,
    overlay,
    triggerNode,
    placement,
    onMouseEnter,
    onMouseLeave,
    zIndex,
    onClickOuter,
    offsetX,
    offsetY,
    mask,
    onClickMask,
    overlayClassName,
    pageX,
    pageY,
    testid
  } = props; // 容器

  const oPopupContainer = getContainer ? getContainer() : document.body;
  const overlayRef = useClickOuterRef(onClickOuter, visible);
  /**
   * 计算位置
   *
   * @param {HTMLElement} trigger node
   * @return {void}
   */

  const handleAlign = React.useCallback(oTrigger => {
    if (!overlayRef.current) return;
    const overflow = {
      adjustX: true,
      adjustY: true
    };
    const targetOffset = [0, 0];
    const {
      points,
      offsets
    } = getAlignPointsAndOffsets(placement, 2);

    if (typeof pageX === 'number' && typeof pageY === 'number') {
      domAlign.alignPoint(overlayRef.current, {
        pageX,
        pageY
      }, {
        targetOffset,
        overflow,
        offset: [offsetX, offsetY],
        points
      });
    } else if (oTrigger) {
      domAlign__default['default'](overlayRef.current, oTrigger, {
        targetOffset,
        overflow,
        points,
        offset: [offsets[0] + offsetX, offsets[1] + offsetY]
      });
    }

    if (testid) {
      overlayRef.current.setAttribute('data-testid', `Popup-${testid || ''}`);
    }
  }, [pageX, pageY, offsetY, offsetX, placement, overlayRef, testid]);
  React.useEffect(() => {
    let resizeObserver;
    const handleResize = debounce(() => {
      if (overlayRef.current && triggerNode) {
        handleAlign(triggerNode);
      }
    }, 300);

    if (visible && oPopupContainer && overlayRef.current && triggerNode) {
      resizeObserver = new ResizeObserver__default['default'](handleResize);
    }

    if (resizeObserver) {
      resizeObserver.observe(oPopupContainer);
    }

    return () => {
      if (resizeObserver) {
        resizeObserver.disconnect();

        if (typeof handleResize.cancel === 'function') {
          handleResize.cancel();
        }
      }
    };
  }, [visible, oPopupContainer, overlayRef, triggerNode, handleAlign]);
  /**
   * 阻止blur
   */

  const handleClick = React.useCallback(e => {
    const whiteTags = ['input', 'textarea'];
    const tagName = (e.target.tagName || '').toLowerCase();

    if (!whiteTags.includes(tagName)) {
      e.preventDefault();
    }
  }, []);
  /**
   * 做位置计算的
   */

  React.useEffect(() => {
    if (visible) {
      if (triggerNode) {
        handleAlign(triggerNode);
      } else {
        handleAlign();
      }
    } else if (overlayRef.current) {
      overlayRef.current.style.top = '-9999px';
      overlayRef.current.style.left = '-9999px';
    }
  }, [visible, handleAlign, triggerNode, overlayRef]);
  /**
   * 合并样式
   */

  const styleCombined = React.useMemo(() => {
    const styles = { ...(overlayStyle || {})
    };

    if (typeof zIndex === 'number') {
      styles.zIndex = zIndex;
    }

    return styles;
  }, [overlayStyle, zIndex]);
  return /*#__PURE__*/_createElement$2(PortalComponent, {
    visible: !!visible,
    getContainer: getContainer
  }, mask && /*#__PURE__*/_createElement$2(OverlayMask, {
    className: visible ? undefined : 'hidden',
    style: {
      zIndex
    },
    onClick: onClickMask,
    onContextMenu: e => e.preventDefault()
  }), /*#__PURE__*/_createElement$2(OverlayWrap, {
    ref: overlayRef,
    style: styleCombined,
    className: visible ? overlayClassName : `${overlayClassName} hidden`,
    onMouseDown: handleClick,
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave
  }, overlay));
};

/* eslint-disable react/no-find-dom-node */
const _createElement$3 = /*#__PURE__*/React__default['default'].createElement;
const DELAY_TO_SHOW = 300;
const DELAY_TO_HIDE = 200;
// eslint-disable-next-line max-lines-per-function
const Trigger = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    children,
    overlay,
    action,
    onVisibleChange,
    getContainer,
    placement,
    overlayStyle,
    zIndex,
    offsetX,
    offsetY,
    pageX,
    pageY,
    overlayClassName,
    mask,
    triggerNode,
    title,
    testid
  } = props;
  const triggerRef = React.useRef(null);
  const [visible, setVisible] = useControlledValue(props.visible, props.defaultVisible);
  const coord = React.useRef({
    x: 0,
    y: 0
  }).current;
  const [isTriggerFocused, setTriggerFocuesed] = React.useState(false);
  const hasFocusAction = action.includes('focus');
  const hasHoverAction = action.includes('hover');
  const hasClickAction = action.includes('click');
  const hasContextMenuAction = action.includes('contextMenu');
  const child = children ? React__default['default'].Children.only(children) : null;
  const cloneProps = {};
  const {
    onFocus,
    onBlur,
    onMouseEnter,
    onMouseLeave,
    onClick,
    onContextMenu,
    onKeyDown
  } = child && child.props || {};
  const timerEnter = React.useRef(0);
  const timerLeave = React.useRef(0);
  const isEntered = React.useRef({
    trigger: false,
    overlay: false
  }).current;
  const getTriggerNode = React.useCallback(() => {
    if (triggerRef.current) {
      return findDOMNode(triggerRef.current);
    }

    return triggerNode;
  }, [triggerNode]);
  /**
   * visible变化
   *
   * @param {boolean}
   * @return {void}
   */

  const handleVisibleChange = React.useCallback(e => {
    if (visible !== e) {
      if (onVisibleChange) {
        onVisibleChange(e);
      }

      setVisible(e);
    }
  }, [onVisibleChange, setVisible, visible]);
  /**
   * 清除进入的定时器
   *
   * @param {void}
   */

  const handleClearTimerEnter = React.useCallback(() => {
    if (timerEnter.current) {
      window.clearTimeout(timerEnter.current);
      timerEnter.current = 0;
    }
  }, []);
  /**
   * 清除离开的定时器
   *
   * @param {void}
   */

  const handleClearTimerLeave = React.useCallback(() => {
    if (timerLeave.current) {
      window.clearTimeout(timerLeave.current);
      timerLeave.current = 0;
    }
  }, []);
  /**
   * 进入trigger/overlay
   *
   * @return void
   */

  const handleEnter = React.useCallback(() => {
    handleClearTimerEnter();
    handleClearTimerLeave();
    const newVisible = isEntered.trigger || isEntered.overlay;

    if (newVisible && !visible) {
      timerLeave.current = window.setTimeout(() => {
        handleVisibleChange(true);
      }, DELAY_TO_SHOW);
    }
  }, [isEntered, handleClearTimerEnter, handleClearTimerLeave, handleVisibleChange, visible]);
  /**
   * 离开trigger/overlay
   *
   * @return void
   */

  const handleLeave = React.useCallback(() => {
    handleClearTimerEnter();
    handleClearTimerLeave();
    const newVisible = isEntered.trigger || isEntered.overlay;

    if (!newVisible && visible) {
      timerLeave.current = window.setTimeout(() => {
        handleVisibleChange(false);
      }, DELAY_TO_HIDE);
    }
  }, [handleClearTimerEnter, handleClearTimerLeave, isEntered, visible, handleVisibleChange]);
  /**
   * 进入trigger
   *
   * @param {React.MouseEvent<HTMLElement>} e
   * @return {void}
   */

  const handleEnterTrigger = React.useCallback(e => {
    const tNode = getTriggerNode();

    if (tNode) {
      // 等于或者包含
      if (elementContain(tNode, e.target)) {
        onMouseEnter && onMouseEnter(e);
        isEntered.trigger = true;
        handleEnter();
      }
    }
  }, [onMouseEnter, isEntered, handleEnter, getTriggerNode]);
  /**
   * 聚焦
   *
   * @param {React.FocusEvent<HTMLElement>} e
   * @return {void}
   */

  const handleTriggerFocus = React.useCallback(e => {
    const tNode = getTriggerNode();

    if (tNode) {
      // 等于或者包含
      if (elementContain(tNode, e.target)) {
        onFocus && onFocus(e);
        setTriggerFocuesed(true);
      }
    }
  }, [onFocus, getTriggerNode]);
  /**
   * 失焦
   *
   * @param {React.FocusEvent<HTMLElement>} e
   * @return {void}
   */

  const handleTriggerBlur = React.useCallback(e => {
    const tNode = getTriggerNode();

    if (tNode) {
      // 等于或者包含
      if (elementContain(tNode, e.target)) {
        onBlur && onBlur(e);
        setTriggerFocuesed(false);

        if (visible) {
          handleVisibleChange(false);
        }
      }
    }
  }, [onBlur, handleVisibleChange, visible, getTriggerNode]);
  /**
   * 离开trigger
   *
   * @param {React.MouseEvent<HTMLElement>} e
   * @return {void}
   */

  const handleLeaveTrigger = React.useCallback(e => {
    const tNode = getTriggerNode();

    if (tNode) {
      // 等于或者包含
      if (elementContain(tNode, e.target)) {
        onMouseLeave && onMouseLeave(e);
        isEntered.trigger = false;
        handleLeave();
      }
    }
  }, [onMouseLeave, isEntered, handleLeave, getTriggerNode]);
  /**
   * 进入overlay
   *
   * @return {void}
   */

  const handleEnterOverlay = React.useCallback(() => {
    isEntered.overlay = true;
    handleEnter();
  }, [handleEnter, isEntered]);
  /**
   * 离开overlay
   *
   * @return {void}
   */

  const handleLeaveOverlay = React.useCallback(() => {
    isEntered.overlay = false;
    handleLeave();
  }, [handleLeave, isEntered]);
  /**
   * 点击overlay外需要收起
   */

  const handleClickOverlayOuter = React.useCallback(e => {
    const tNode = getTriggerNode();

    if (tNode) {
      // 等于或者包含
      if (!elementContain(tNode, e.target)) {
        handleVisibleChange(false);
      }
    } else {
      handleVisibleChange(false);
    }
  }, [handleVisibleChange, getTriggerNode]);
  /**
   * 点击trigger
   *
   * @param {React.MouseEvent<HTMLElement>}
   * @return {void}
   */

  const handleClickTrigger = React.useCallback(e => {
    const tNode = getTriggerNode();

    if (tNode) {
      // 等于或者包含
      if (elementContain(tNode, e.target)) {
        if (onClick) {
          const rst = onClick(e);

          if (rst === false) {
            return false;
          }
        }

        handleVisibleChange(!visible);
      }
    }
  }, [onClick, visible, handleVisibleChange, getTriggerNode]);
  /**
   * 右键惨淡展开
   *
   * @param {React.MouseEvent<HTMLElement>}
   * @return {void}
   */

  const handleContextMenuTrigger = React.useCallback(e => {
    const tNode = getTriggerNode();

    if (tNode) {
      // 等于或者包含
      if (elementContain(tNode, e.target)) {
        e.preventDefault();

        if (onContextMenu) {
          onContextMenu(e);
        }

        if (tNode.getBoundingClientRect) {
          const clientRect = tNode.getBoundingClientRect();
          coord.x = e.clientX - clientRect.left;
          coord.y = e.clientY - clientRect.top - clientRect.height;
        } else {
          coord.x = e.clientX;
          coord.y = e.clientY;
        }

        handleVisibleChange(!visible);
      }
    }
  }, [onContextMenu, handleVisibleChange, getTriggerNode, visible, coord]);
  /**
   * 遮罩
   */

  const handleClickMask = React.useCallback(() => {
    handleVisibleChange(false);
  }, [handleVisibleChange]);
  const handleKeyDown = React.useCallback(e => {
    if (onKeyDown) {
      onKeyDown(e);
    }

    if (isTriggerFocused) {
      // 方向键展开
      if ([KEY_CODES.UP, KEY_CODES.DOWN, KEY_CODES.LEFT, KEY_CODES.RIGHT].includes(e.which)) {
        e.preventDefault();

        if (!visible) {
          handleVisibleChange(true);
        }
      } // ESC 关闭


      if (e.which === KEY_CODES.ESC) {
        e.preventDefault();

        if (visible) {
          handleVisibleChange(false);
        }
      }
    }
  }, [isTriggerFocused, handleVisibleChange, visible, onKeyDown]);

  if (child && supportRef(child)) {
    cloneProps.ref = composeRef(triggerRef, child.ref);
  }

  if (hasHoverAction) {
    cloneProps.onMouseEnter = handleEnterTrigger;
    cloneProps.onMouseLeave = handleLeaveTrigger;
  } else {
    cloneProps.onMouseEnter = onMouseEnter;
    cloneProps.onMouseLeave = onMouseLeave;
  }

  if (hasFocusAction) {
    cloneProps.onFocus = handleTriggerFocus;
    cloneProps.onBlur = handleTriggerBlur;
    cloneProps.onKeyDown = handleKeyDown;
  }

  if (hasClickAction) {
    cloneProps.onClick = handleClickTrigger;
  }

  if (hasContextMenuAction) {
    cloneProps.onContextMenu = handleContextMenuTrigger;
  }

  return /*#__PURE__*/_createElement$3(React__default['default'].Fragment, null, !!child && /*#__PURE__*/_createElement$3(Tooltip, {
    title: title,
    disabled: visible
  }, /*#__PURE__*/React__default['default'].cloneElement(child, cloneProps)), /*#__PURE__*/_createElement$3(Popup, {
    zIndex: zIndex,
    overlay: overlay,
    visible: !!visible,
    placement: hasContextMenuAction ? 'bottomLeft' : placement,
    triggerNode: getTriggerNode(),
    overlayStyle: overlayStyle,
    overlayClassName: overlayClassName,
    mask: hasContextMenuAction || !!mask,
    getContainer: getContainer,
    offsetX: hasContextMenuAction ? coord.x + offsetX : offsetX,
    offsetY: hasContextMenuAction ? coord.y + offsetY : offsetY,
    pageX: pageX,
    pageY: pageY,
    onMouseEnter: hasHoverAction ? handleEnterOverlay : undefined,
    onMouseLeave: hasHoverAction ? handleLeaveOverlay : undefined,
    onClickOuter: hasClickAction ? handleClickOverlayOuter : undefined,
    onClickMask: hasContextMenuAction ? handleClickMask : undefined,
    testid: testid
  }));
});
Trigger.defaultProps = {
  action: [],
  placement: 'bottomLeft',
  overlayStyle: {},
  defaultVisible: false,
  offsetX: 0,
  offsetY: 0
};

const _createElement$4 = /*#__PURE__*/React__default['default'].createElement;
const Dropdown = props => {
  const {
    children,
    trigger,
    overlay,
    getContainer,
    onVisibleChange,
    placement,
    overlayStyle,
    visible,
    zIndex,
    overlayClassName,
    offsetX,
    offsetY,
    pageX,
    pageY,
    triggerNode,
    title,
    testid
  } = props; // trigger's action

  const action = React.useMemo(() => trigger === 'contextMenu' ? [trigger] : [trigger, 'focus'], [trigger]);
  return /*#__PURE__*/_createElement$4(Trigger, {
    action: action,
    overlay: overlay,
    getContainer: getContainer,
    onVisibleChange: onVisibleChange,
    placement: placement,
    visible: visible,
    overlayStyle: overlayStyle,
    zIndex: zIndex,
    overlayClassName: overlayClassName,
    offsetX: offsetX,
    offsetY: offsetY,
    pageX: pageX,
    pageY: pageY,
    triggerNode: triggerNode,
    title: title,
    testid: testid
  }, children);
};
Dropdown.defaultProps = {
  trigger: 'click'
};

const TooltipContent = withTheme(styled__default['default'].div(["padding:6px ", ";border-radius:", ";font-size:", ";line-height:20px;background-color:", ";color:", ";text-align:center;user-select:none;z-index:", ";line-height:1.2;"], ({
  theme
}) => theme.ui.padding, ({
  theme
}) => theme.ui.radiusHug, ({
  theme
}) => theme.ui.fontSizeSmall, ({
  theme
}) => theme.ui.tooltipBackgroundColor, ({
  theme
}) => theme.ui.colorGray1, ({
  theme
}) => theme.ui.zIndexTooltip));

const _createElement$5 = /*#__PURE__*/React__default['default'].createElement;
const DELAY_TO_SHOW$1 = 200;
const tooltipOverlayStyle = {
  background: 'transparent',
  border: 0,
  boxShadow: 'none'
}; // 单例 Ref

const tooltipRef = /*#__PURE__*/React__default['default'].createRef();
let inited = false; // 组件

const TooltipSingleton = /*#__PURE__*/React__default['default'].memo( /*#__PURE__*/React__default['default'].forwardRef((_, ref) => {
  const currentId = React.useRef('');
  const [state, setState] = React.useState({
    visible: false,
    title: '',
    zIndex: undefined,
    triggerNode: undefined
  });
  const showTooltip = React.useCallback(debounce((id, props) => {
    if (currentId.current !== id) return;
    setState(prevState => ({ ...prevState,
      ...props,
      visible: true
    }));
  }, DELAY_TO_SHOW$1), []);
  React.useImperativeHandle(ref, () => ({
    handleEnter(id, props) {
      currentId.current = id;
      showTooltip.cancel();
      showTooltip(id, props);
    },

    handleLeave(id) {
      if (currentId.current !== id) return;
      showTooltip.cancel();
      setState(prevState => ({ ...prevState,
        visible: false
      }));
    },

    handleUpdate(id, props) {
      if (currentId.current !== id) return;
      setState(prevState => ({ ...prevState,
        ...props
      }));
    }

  }));
  return /*#__PURE__*/_createElement$5(Dropdown, {
    visible: state.visible && !state.disabled,
    overlay: /*#__PURE__*/_createElement$5(TooltipContent, {
      className: state.overlayClassName,
      style: state.overlayStyle
    }, state.title),
    zIndex: state.zIndex,
    placement: state.placement,
    overlayStyle: tooltipOverlayStyle,
    triggerNode: state.triggerNode,
    trigger: "hover"
  });
}));

function init() {
  if (inited) {
    return;
  }

  inited = true; // 单例初始化

  const container = document.createElement('div');
  container.setAttribute('style', 'position: absolute; left: 0; top: 0; width: 100%; line-height: 0;');
  document.body.appendChild(container);
  ReactDOM__default['default'].render( /*#__PURE__*/_createElement$5(TooltipSingleton, {
    ref: tooltipRef
  }), container);
}
/**
 * useSingleton
 */


var useSingleton = (() => {
  const id = React.useMemo(() => uuid(), []); // 节点被清除的时候应该也把tooltip清除

  React.useEffect(() => {
    return () => {
      if (tooltipRef.current) {
        tooltipRef.current.handleLeave(id);
      }
    };
  }, [id]);
  return React.useRef({
    enter: e => {
      init();

      if (tooltipRef.current && !e.disabled) {
        tooltipRef.current.handleEnter(id, e);
      }
    },
    leave: () => {
      if (tooltipRef.current) {
        tooltipRef.current.handleLeave(id);
      }
    },
    update: e => {
      init();

      if (tooltipRef.current) {
        tooltipRef.current.handleUpdate(id, e);
      }
    }
  }).current;
});

const Tooltip = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    zIndex,
    children,
    placement,
    title,
    disabled
  } = props;
  const triggerRef = React.useRef(null);
  const child = React__default['default'].Children.only(children);
  const {
    onMouseEnter,
    onMouseLeave
  } = child.props;
  const singleton = useSingleton();
  React.useEffect(() => {
    if (singleton) {
      singleton.update({
        title,
        placement,
        zIndex,
        disabled: !!disabled
      });
    }
  }, [title, placement, zIndex, singleton, disabled]);
  /**
   * 鼠标进入trigger区域
   *
   * @param {React.MouseEvent<HTMLElement>} e
   * @return {void}
   */

  const handleMouseEnter = React.useCallback(e => {
    if (onMouseEnter) {
      onMouseEnter(e);
    }

    if (singleton) {
      const triggerNode = triggerRef.current // eslint-disable-next-line react/no-find-dom-node
      ? findDOMNode(triggerRef.current) : undefined;
      singleton.enter({
        title,
        placement,
        zIndex,
        triggerNode,
        disabled: !!disabled
      });
    }
  }, [onMouseEnter, title, placement, zIndex, singleton, disabled]);
  /**
   * 鼠标离开trigger区域
   *
   * @param {React.MouseEvent<HTMLElement>} e
   * @return {void}
   */

  const handleMouseLeave = React.useCallback(e => {
    if (onMouseLeave) {
      onMouseLeave(e);
    }

    if (singleton) {
      singleton.leave();
    }
  }, [onMouseLeave, singleton]);
  const cloneProps = {};

  if (supportRef(child)) {
    cloneProps.ref = composeRef(triggerRef, child.ref);
  }

  cloneProps.onMouseEnter = handleMouseEnter;
  cloneProps.onMouseLeave = handleMouseLeave;
  return title ? /*#__PURE__*/React__default['default'].cloneElement(child, cloneProps) : child;
});
Tooltip.defaultProps = {
  placement: 'bottom',
  zIndex: 2000
};

const _createElement$6 = /*#__PURE__*/React__default['default'].createElement;
const loadingCircle = /*#__PURE__*/styled.keyframes(["100%{transform:rotate(360deg);}"]);
const Weicon = /*#__PURE__*/styled__default['default'].span(["display:inline-block;color:inherit;font-style:normal;line-height:0;text-align:center;text-transform:none;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;outline:none;font-size:16px;> *{line-height:1;}> svg{display:inline-block;}::before{display:none;}> .weicon-icon{display:block;}> .weicon[tabindex]{cursor:pointer;}> .weicon-spin::before,> .weicon-spin{display:inline-block;animation:", " 1s infinite linear;}"], loadingCircle); // Icon 暴露给应用层的接口

const svgDefaultProps = {
  width: '1em',
  height: '1em',
  fill: 'currentColor',
  'aria-hidden': true,
  focusable: false
};
const IconBase = icon => {
  const {
    name,
    path,
    pathColors,
    viewBox,
    className,
    onClick,
    onMouseDown,
    spin,
    style,
    rotate,
    tabIndex,
    title,
    testid,
    ...restProps
  } = icon;
  const classString = `weicon weicon-${name} ${className || ''}`;
  let svgClassString = '';

  if (!!spin || name === 'loading') {
    svgClassString = 'weicon-spin';
  }

  const rotateStyle = rotate ? {
    msTransform: `rotate(${rotate}deg)`,
    transform: `rotate(${rotate}deg)`
  } : {};
  const svgStyle = Object.assign(rotateStyle, style || {});
  let iconTabIndex = tabIndex;

  if (iconTabIndex === undefined && onClick) {
    iconTabIndex = -1;
  }

  let pathes = null;

  if (typeof path === 'string') {
    pathes = /*#__PURE__*/_createElement$6("path", {
      d: path
    });
  } else if (path instanceof Array) {
    // eslint-disable-next-line react/no-array-index-key
    pathes = path.map((p, index) => /*#__PURE__*/_createElement$6("path", {
      d: p,
      key: index,
      style: {
        fill: pathColors && pathColors[index] ? pathColors[index] : 'inherit'
      }
    }));
  }

  const iconNode = /*#__PURE__*/_createElement$6(Weicon, _extends__default['default']({
    role: "img",
    "aria-label": name,
    "data-testid": testid ? `Icon_${testid}` : undefined
  }, restProps, {
    tabIndex: iconTabIndex,
    className: classString
  }), /*#__PURE__*/_createElement$6("svg", _extends__default['default']({}, svgDefaultProps, {
    viewBox: viewBox,
    className: svgClassString,
    style: svgStyle,
    onClick: onClick,
    onMouseDown: onMouseDown
  }), pathes));

  return title ? /*#__PURE__*/_createElement$6(Tooltip, {
    title: title
  }, iconNode) : iconNode;
};

const _createElement$7 = /*#__PURE__*/React__default['default'].createElement;
/**
 * 通用的icon生成函数
 */

function createSvgIcon(iconProps) {
  return /*#__PURE__*/_createElement$7(IconBase, iconProps);
}

const AbstractBetaNormal = props => createSvgIcon({
  name: 'abstract-beta',
  viewBox: '0 0 1092 1024',
  path: ['M887.47 34.13a153.6 153.6 0 01153.6 153.6v546.14a153.6 153.6 0 01-153.6 153.6h-297.1L416.63 992.8a105.81 105.81 0 01-139.6-27.17l-5.74-8.46A105.81 105.81 0 01256 902.28v-14.81h-51.2A153.6 153.6 0 0151.54 744.38l-.34-10.51V187.73a153.6 153.6 0 01153.6-153.6zM393.83 324.27c-30.24 0-55.1 10.37-74.55 31.06-19.45 20.68-29.15 45.05-29.15 73.11 0 17.82 4.92 34.89 14.82 51.13 9.9 16.25 21.84 28.2 35.84 35.84a24.37 24.37 0 0112.42 21.99c0 8.87-3.2 19.8-9.56 32.49-6.34 12.77-9.55 23.07-9.55 31.06 0 7.99 6.07 15.63 18.16 22.94 12.08 7.3 22.46 10.99 31.06 10.99a46.35 46.35 0 0020.55-3.82 39.05 39.05 0 0014.33-13.86c4.44-6.7 14.47-26.76 30.1-60.21s27.59-60.7 35.85-81.72c8.26-21.02 12.42-37.89 12.42-50.65 0-26.76-9.56-50.18-28.67-70.25s-43.83-30.1-74.07-30.1zm307.2 0c-30.24 0-55.1 10.37-74.55 31.06-19.45 20.68-29.15 45.05-29.15 73.11 0 17.82 4.92 34.89 14.82 51.13 9.9 16.25 21.84 28.2 35.84 35.84a24.37 24.37 0 0112.42 21.99c0 8.87-3.2 19.8-9.56 32.49-6.34 12.77-9.55 23.07-9.55 31.06 0 7.99 6.07 15.63 18.16 22.94 12.08 7.3 22.46 10.99 31.06 10.99a46.35 46.35 0 0020.55-3.82 39.05 39.05 0 0014.33-13.86c4.44-6.7 14.47-26.76 30.1-60.21s27.59-60.7 35.85-81.72c8.26-21.02 12.42-37.89 12.42-50.65 0-26.76-9.56-50.18-28.67-70.25s-43.83-30.1-74.07-30.1z'],
  ...props
});

const AddBetaNormal = props => createSvgIcon({
  name: 'add-beta',
  viewBox: '0 0 1024 1024',
  path: ['M512 160a64 64 0 0164 64v224h224a64 64 0 0163.55 56.51L864 512a64 64 0 01-64 64H576v224a64 64 0 01-56.51 63.55L512 864a64 64 0 01-64-64V576H224a64 64 0 01-63.55-56.51L160 512a64 64 0 0164-64h224V224a64 64 0 0156.51-63.55z'],
  ...props
});

const AddDownBetaNormal = props => createSvgIcon({
  name: 'add-down-beta',
  viewBox: '0 0 1024 1024',
  path: ['M725.25 810.67a42.67 42.67 0 01-4.95-85.04l4.95-.3H768c22.83 0 39.85-13.35 42.37-28.24l.3-3.76V512H213.33v181.33c0 15.06 15.28 29.57 37.12 31.75l5.55.25h42.58a42.67 42.67 0 014.95 85.04l-4.95.3H256c-67.03 0-123.82-47.58-127.79-110.3l-.21-7.04v-448c0-63.78 54.36-113.66 120.58-117.12L256 128h512c67.03 0 123.82 47.57 127.79 110.3l.21 7.03v448c0 63.79-54.36 113.67-120.58 117.12l-7.42.22h-42.75zm-511.92-384h597.34V245.33c0-15.06-15.28-29.56-37.12-31.74l-5.55-.26H256c-22.83 0-39.85 13.36-42.37 28.25l-.3 3.75v181.34zM512 896a42.67 42.67 0 01-42.67-42.67v-42.66h-42.66a42.67 42.67 0 01-5-85.04l5-.3h42.66v-42.66a42.67 42.67 0 0137.68-42.37l4.99-.3a42.67 42.67 0 0142.67 42.67v42.66h42.66a42.67 42.67 0 015 85.04l-5 .3h-42.66v42.66a42.67 42.67 0 01-37.68 42.37z'],
  ...props
});

const AddFill = props => createSvgIcon({
  name: 'add',
  viewBox: '64 64 896 896',
  path: ['M753.24 106.67c57.04 0 77.74 5.97 98.6 17.06a116.12 116.12 0 0148.38 48.43c11.18 20.86 17.11 41.56 17.11 98.56v482.56c0 57-5.97 77.7-17.06 98.56a116.3 116.3 0 01-48.43 48.38c-20.86 11.18-41.56 17.11-98.56 17.11h-482.6c-57 0-77.7-5.97-98.56-17.06a116.3 116.3 0 01-48.39-48.47c-11.18-20.87-17.1-41.56-17.1-98.56V270.68c0-57 5.97-77.7 17.06-98.56a116.3 116.3 0 0148.51-48.39c20.87-11.18 41.56-17.1 98.56-17.1h482.56zm7.93 85.33h-490.4c-39.13 0-48.73 1.83-58.38 7a31.02 31.02 0 00-13.4 13.4c-4.77 8.95-6.7 17.83-6.95 50.43l-.04 490.4c0 39.13 1.83 48.73 7 58.38a31.24 31.24 0 0013.4 13.4c9.64 5.11 19.2 6.99 58.36 6.99h482.48c39.12 0 48.72-1.83 58.37-7a31.02 31.02 0 0013.4-13.4c5.11-9.64 6.99-19.2 6.99-58.36V270.76c0-39.12-1.83-48.72-7-58.37a31.02 31.02 0 00-13.4-13.4c-8.95-4.77-17.83-6.7-50.43-6.95zM510 277.55l4.7-.22c21.97 0 40.06 14.08 42.37 41.52l.25 6.1v146.3h146.14c29.3 0 47.53 16.64 49.83 38.06l.21 4.65c0 21.98-16.21 40.1-43.94 42.41l-6.1.26-146.14-.04v157.95c0 29.35-16.64 44.12-37.97 45.95l-4.7.21c-21.97 0-40.1-12.8-42.4-40.1l-.26-6.06V556.59H317.74c-29.36 0-46.5-16.64-48.73-37.98l-.21-4.69c0-21.97 15.23-40.06 42.84-42.37l6.1-.25 154.24-.05V324.91c0-29.32 16.64-45.36 38.01-47.36l4.7-.22z'],
  ...props
});

const AddFillBetaNormal = props => createSvgIcon({
  name: 'add-fill-beta',
  viewBox: '0 0 1024 1024',
  path: ['M790.37 44.35c65.85 0 89.72 6.85 113.74 19.69 24.1 12.84 43.01 31.74 55.93 55.85 12.76 24.02 19.7 47.89 19.7 113.74v556.74c0 65.85-6.94 89.72-19.7 113.74a134.22 134.22 0 01-55.93 55.93c-24.02 12.76-47.89 19.7-113.74 19.7H233.63c-65.85 0-89.72-6.94-113.74-19.7a134.22 134.22 0 01-55.93-55.93c-12.76-24.02-19.7-47.89-19.7-113.74V233.63c0-65.85 6.94-89.72 19.7-113.74 12.92-24.1 31.82-43.01 55.93-55.93 24.02-12.76 47.89-19.7 113.74-19.7h556.74zM507.83 241.59c-23.8 3.15-41.99 21.5-41.99 54.5v168.88H287.82l-9.45.48c-30.33 3.54-46.95 24.02-46.95 48.76l.48 7.24c3.3 23.71 23 41.99 55.92 41.99h178.02v182.19l.55 9.45c3.47 29.78 23.95 43.8 48.68 43.8l7.25-.4c23.79-2.83 41.98-19.85 41.98-52.77V563.44h168.57l9.53-.56c30.48-3.54 48.29-24.02 48.29-48.67l-.56-7.33c-3.46-23.71-24.26-41.9-57.26-41.9H564.3v-168.8l-.55-9.46c-3.54-30.09-23.94-45.53-48.68-45.53z'],
  ...props
});

const AddLeftBetaNormal = props => createSvgIcon({
  name: 'add-left-beta',
  viewBox: '0 0 1024 1024',
  path: ['M213.33 725.25a42.67 42.67 0 0185.04-4.95l.3 4.95V768c0 22.83 13.35 39.85 28.24 42.37l3.76.3H512V213.33H330.67c-15.06 0-29.57 15.28-31.75 37.12l-.25 5.55v42.58a42.67 42.67 0 01-85.04 4.95l-.3-4.95V256c0-67.03 47.58-123.82 110.3-127.79l7.04-.21h448c63.78 0 113.66 54.36 117.12 120.58L896 256v512c0 67.03-47.57 123.82-110.3 127.79l-7.03.21h-448c-63.79 0-113.67-54.36-117.12-120.58l-.22-7.42v-42.75zm384-511.92v597.34h181.34c15.06 0 29.56-15.28 31.74-37.12l.26-5.55V256c0-22.83-13.36-39.85-28.25-42.37l-3.75-.3H597.33zM128 512a42.67 42.67 0 0142.67-42.67h42.66v-42.66a42.67 42.67 0 0185.04-5l.3 5v42.66h42.66a42.67 42.67 0 0142.37 37.68l.3 4.99a42.67 42.67 0 01-42.67 42.67h-42.66v42.66a42.67 42.67 0 01-85.04 5l-.3-5v-42.66h-42.66a42.67 42.67 0 01-42.37-37.68z'],
  ...props
});

const AddRightBetaNormal = props => createSvgIcon({
  name: 'add-right-beta',
  viewBox: '0 0 1024 1024',
  path: ['M810.67 298.75a42.67 42.67 0 01-85.04 4.95l-.3-4.95V256c0-22.83-13.35-39.85-28.24-42.37l-3.76-.3H512v597.34h181.33c15.06 0 29.57-15.28 31.75-37.12l.25-5.55v-42.58a42.67 42.67 0 0185.04-4.95l.3 4.95V768c0 67.03-47.58 123.82-110.3 127.79l-7.04.21h-448c-63.78 0-113.66-54.36-117.12-120.58L128 768V256c0-67.03 47.57-123.82 110.3-127.79l7.03-.21h448c63.79 0 113.67 54.36 117.12 120.58l.22 7.42v42.75zm-384 511.92V213.33H245.33c-15.06 0-29.56 15.28-31.74 37.12l-.26 5.55v512c0 22.83 13.36 39.85 28.25 42.37l3.75.3h181.34zM896 512a42.67 42.67 0 01-42.67 42.67h-42.66v42.66a42.67 42.67 0 01-85.04 5l-.3-5v-42.66h-42.66a42.67 42.67 0 01-42.37-37.68L640 512a42.67 42.67 0 0142.67-42.67h42.66v-42.66a42.67 42.67 0 0185.04-5l.3 5v42.66h42.66a42.67 42.67 0 0142.37 37.68z'],
  ...props
});

const AddTopBetaNormal = props => createSvgIcon({
  name: 'add-top-beta',
  viewBox: '0 0 1024 1024',
  path: ['M298.75 213.33a42.67 42.67 0 014.95 85.04l-4.95.3H256c-22.83 0-39.85 13.35-42.37 28.24l-.3 3.76V512h597.34V330.67c0-15.06-15.28-29.57-37.12-31.75l-5.55-.25h-42.58a42.67 42.67 0 01-4.95-85.04l4.95-.3H768c67.03 0 123.82 47.58 127.79 110.3l.21 7.04v448c0 63.78-54.36 113.66-120.58 117.12L768 896H256c-67.03 0-123.82-47.57-127.79-110.3l-.21-7.03v-448c0-63.79 54.36-113.67 120.58-117.12l7.42-.22h42.75zm511.92 384H213.33v181.34c0 15.06 15.28 29.56 37.12 31.74l5.55.26h512c22.83 0 39.85-13.36 42.37-28.25l.3-3.75V597.33zM512 128a42.67 42.67 0 0142.67 42.67v42.66h42.66a42.67 42.67 0 015 85.04l-5 .3h-42.66v42.66a42.67 42.67 0 01-37.68 42.37l-4.99.3a42.67 42.67 0 01-42.67-42.67v-42.66h-42.66a42.67 42.67 0 01-5-85.04l5-.3h42.66v-42.66a42.67 42.67 0 0137.68-42.37z'],
  ...props
});

const AlignBothBetaNormal = props => createSvgIcon({
  name: 'align-both-beta',
  viewBox: '0 0 1024 1024',
  path: ['M159.87 785.07h687.2c22.3 0 40.4 19.11 40.4 42.66 0 21.9-15.62 39.94-35.72 42.37l-4.69.3H159.87c-22.31 0-40.4-19.11-40.4-42.67 0-21.88 15.61-39.93 35.7-42.36l4.7-.3h687.2zm684.25-213.34c22.35 0 40.45 19.12 40.45 42.67 0 21.89-15.62 39.94-35.72 42.37l-4.69.3H159.83c-22.32 0-40.4-19.12-40.4-42.67 0-21.89 15.61-39.94 35.7-42.37l4.7-.3h684.24zm2.94-213.33c22.32 0 40.4 19.11 40.4 42.67 0 21.88-15.6 39.93-35.7 42.36l-4.7.3H159.87c-22.31 0-40.4-19.11-40.4-42.66 0-21.9 15.61-39.94 35.7-42.37l4.7-.3h687.2zm-4.9-207.06c22.35 0 40.44 19.11 40.44 42.67s-18.09 42.66-40.45 42.66H159.91c-22.35 0-40.44-19.11-40.44-42.66s18.09-42.67 40.4-42.67z'],
  ...props
});

const AlignCenterBetaNormal = props => createSvgIcon({
  name: 'align-center-beta',
  viewBox: '0 0 1024 1024',
  path: ['M145.07 785.07H870.4a42.67 42.67 0 015 85.03l-5 .3H145.07a42.67 42.67 0 01-5-85.03l5-.3H870.4zM742.4 571.73a42.67 42.67 0 015 85.04l-5 .3H273.07a42.67 42.67 0 01-5-85.04l5-.3H742.4zm128-213.33a42.67 42.67 0 015 85.03l-5 .3H145.07a42.67 42.67 0 01-5-85.03l5-.3H870.4zm-128-213.33a42.67 42.67 0 010 85.33H273.07a42.67 42.67 0 110-85.33z'],
  ...props
});

const AlignLeftBetaNormal = props => createSvgIcon({
  name: 'align-left-beta',
  viewBox: '0 0 1024 1024',
  path: ['M145.07 785.07H870.4a42.67 42.67 0 015 85.03l-5 .3H145.07a42.67 42.67 0 01-5-85.03l5-.3H870.4zM614.4 571.73a42.67 42.67 0 015 85.04l-5 .3H145.07a42.67 42.67 0 01-5-85.04l5-.3H614.4zm256-213.33a42.67 42.67 0 015 85.03l-5 .3H145.07a42.67 42.67 0 01-5-85.03l5-.3H870.4zm-256-207.06a42.67 42.67 0 010 85.33H145.07a42.67 42.67 0 110-85.33z'],
  ...props
});

const AlignRightBetaNormal = props => createSvgIcon({
  name: 'align-right-beta',
  viewBox: '0 0 1024 1024',
  path: ['M870.4 785.07H145.07a42.67 42.67 0 00-5 85.03l5 .3H870.4a42.67 42.67 0 005-85.03l-5-.3H145.07zM401.07 571.73a42.67 42.67 0 00-5 85.04l5 .3H870.4a42.67 42.67 0 005-85.04l-5-.3H401.07zm-256-213.33a42.67 42.67 0 00-5 85.03l5 .3H870.4a42.67 42.67 0 005-85.03l-5-.3H145.07zm256-207.06a42.67 42.67 0 000 85.33H870.4a42.67 42.67 0 100-85.33z'],
  ...props
});

const AlignStretchBetaNormal = props => createSvgIcon({
  name: 'align-stretch-beta',
  viewBox: '0 0 1024 1024',
  path: ['M159.87 785.07h687.2c22.3 0 40.4 19.11 40.4 42.66 0 21.9-15.62 39.94-35.72 42.37l-4.69.3H159.87c-22.31 0-40.4-19.11-40.4-42.67 0-21.88 15.61-39.93 35.7-42.36l4.7-.3h687.2zm684.25-213.34c22.35 0 40.45 19.12 40.45 42.67 0 21.89-15.62 39.94-35.72 42.37l-4.69.3H159.83c-22.32 0-40.4-19.12-40.4-42.67 0-21.89 15.61-39.94 35.7-42.37l4.7-.3h684.24zm2.94-213.33c22.32 0 40.4 19.11 40.4 42.67 0 21.88-15.6 39.93-35.7 42.36l-4.7.3H159.87c-22.31 0-40.4-19.11-40.4-42.66 0-21.9 15.61-39.94 35.7-42.37l4.7-.3h687.2zm-4.9-207.06c22.35 0 40.44 19.11 40.44 42.67s-18.09 42.66-40.45 42.66H159.91c-22.35 0-40.44-19.11-40.44-42.66s18.09-42.67 40.4-42.67z'],
  ...props
});

const AntiClockwiseBetaNormal = props => createSvgIcon({
  name: 'anti-clockwise-beta',
  viewBox: '0 0 1024 1024',
  path: ['M522.42 102.4A407 407 0 11189.2 743.2a40.69 40.69 0 1166.58-46.88 325.63 325.63 0 10-55.61-234.1v.04l20.2-15.2 4.24-2.83a40.69 40.69 0 0144.92 67.72l-85.8 65-4.77 3.09a40.69 40.69 0 01-46.51-4.87L52.7 505.63l-3.91-3.92a40.69 40.69 0 0157.39-57.43l12.74 11.1A407.1 407.1 0 01522.47 102.4zm-119.2 284.9c52.98 0 93.3 23.94 93.3 98.4 0 93.88-37.72 145.81-150 145.81v-42.69c54.84 0 91.39-18.43 95.53-56.34h-1.5c-10.1 7.83-26.49 13.29-47.38 13.29-53.38 0-82.1-25.58-82.1-75.1 0-48.87 28.35-83.37 92.16-83.37zm221.2 0c57.1 0 93.65 24.26 93.65 121.6 0 97.67-36.54 122.3-93.61 122.3s-94.4-24.58-94.4-122.3c0-97.34 37.33-121.6 94.4-121.6zm0 42.32c-28.68 0-40.24 15.75-40.24 79.65 0 64.17 11.56 79.19 40.28 79.19s40.28-15.02 40.28-79.2c0-63.89-11.56-79.64-40.28-79.64zm-220.05-3.04c-28.36 0-43.7 16.38-43.7 43.37 0 26.3 15.34 39.96 41.83 39.96 31.68 0 42.87-16.02 42.87-37.91 0-27.31-13.06-45.42-41-45.42z'],
  ...props
});

const ArrowDownBetaNormal = props => createSvgIcon({
  name: 'arrow-down-beta',
  viewBox: '0 0 1024 1024',
  path: ['M143.42 392.53c-11.85-11.6-11.76-30.08.33-41.4l50.36-47.18c12.04-11.28 31.4-11.02 43.3.61l255.98 250.28a29.78 29.78 0 0042.44-.83l249.22-260.23c11.56-12.08 30.48-12.52 42.23-1.04l53.35 52.17c11.76 11.5 11.62 30.36-.01 41.85l-348.38 344.1a30.62 30.62 0 01-42.77.04L143.42 392.53z'],
  ...props
});

const ArrowDownSmallBetaNormal = props => createSvgIcon({
  name: 'arrow-down-small-beta',
  viewBox: '0 0 1024 1024',
  path: ['M436.8 716.49L195.6 447.43a100 100 0 0174.46-166.76H746.1a100 100 0 0175.34 165.76L586.6 715.5a100 100 0 01-141.1 9.58'],
  ...props
});

const ArrowLeftBetaNormal = props => createSvgIcon({
  name: 'arrow-left-beta',
  viewBox: '0 0 1024 1024',
  path: ['M631.47 143.42c11.6-11.85 30.08-11.76 41.4.33l47.18 50.36c11.28 12.04 11.02 31.4-.61 43.3L469.16 493.38a29.78 29.78 0 00.83 42.44l260.23 249.22c12.07 11.56 12.52 30.48 1.04 42.22l-52.17 53.36c-11.5 11.76-30.36 11.62-41.85-.01l-344.1-348.38a30.62 30.62 0 01-.04-42.77l338.37-346.05z'],
  ...props
});

const ArrowRightBetaNormal = props => createSvgIcon({
  name: 'arrow-right-beta',
  viewBox: '0 0 1024 1024',
  path: ['M392.53 880.58c-11.6 11.85-30.08 11.76-41.4-.33l-47.18-50.36c-11.28-12.04-11.02-31.4.61-43.3l250.28-255.98a29.78 29.78 0 00-.83-42.44L293.78 238.95c-12.08-11.56-12.52-30.48-1.04-42.22l52.17-53.36c11.5-11.76 30.36-11.62 41.85.01l344.1 348.38a30.62 30.62 0 01.04 42.77L392.53 880.58z'],
  ...props
});

const ArrowRightOutlineSmallBetaNormal = props => createSvgIcon({
  name: 'arrow-right-outline-small-beta',
  viewBox: '0 0 1024 1024',
  path: ['M425.48 778.92c-8.4 8.59-21.78 8.52-29.99-.23l-34.16-36.48c-8.17-8.71-7.98-22.73.44-31.35l181.26-185.38a21.57 21.57 0 00-.6-30.73l-188.47-180.5c-8.74-8.36-9.06-22.07-.75-30.57L391 245.04a21.26 21.26 0 0130.31 0l249.2 252.3a22.18 22.18 0 01.03 30.97L425.48 778.92z'],
  ...props
});

const ArrowRightSmallBetaNormal = props => createSvgIcon({
  name: 'arrow-right-small-beta',
  viewBox: '0 0 1024 1024',
  path: ['M717.2 578.72L448.16 819.94a100 100 0 01-166.74-74.46V269.44a100 100 0 01165.74-75.34l269.06 234.82a100 100 0 019.6 141.1'],
  ...props
});

const ArrowUpBetaNormal = props => createSvgIcon({
  name: 'arrow-up-beta',
  viewBox: '0 0 1024 1024',
  path: ['M880.58 631.47c11.85 11.6 11.76 30.08-.33 41.4l-50.36 47.18c-12.04 11.28-31.4 11.02-43.3-.61L530.62 469.16a29.78 29.78 0 00-42.44.83L238.95 730.22c-11.56 12.07-30.48 12.52-42.22 1.04l-53.36-52.17c-11.76-11.5-11.62-30.36.01-41.85l348.38-344.1a30.62 30.62 0 0142.77-.04l346.05 338.37z'],
  ...props
});

const ArrowUpSmallBetaNormal = props => createSvgIcon({
  name: 'arrow-up-small-beta',
  viewBox: '0 0 1024 1024',
  path: ['M587.2 286.18l241.2 269.06A100 100 0 01753.94 722H277.9a100 100 0 01-75.34-165.76L437.4 287.16a100 100 0 01141.1-9.58'],
  ...props
});

const AtBetaNormal = props => createSvgIcon({
  name: 'at-beta',
  viewBox: '0 0 1024 1024',
  path: ['M150.37 337.6A412.3 412.3 0 01613.8 118.62c186.58 43.55 318.52 209.87 318.35 406.26-11.58 129.4-67.58 204.15-167.6 192.08-39.84-4.85-68.56-25.54-89.26-59.28a207.5 207.5 0 11-46.83-314.64 53.9 53.9 0 01104.82 17.79v23.44c.33 43.76 1.94 77.5 6.63 114.47 4.74 37.62 12.07 68.4 21.67 89.36 7.43 16.17 12.93 21.5 15.84 21.83 24.85 3.02 40.53-17.84 47.16-89.85A304.5 304.5 0 10705.2 761.86a53.9 53.9 0 1165.54 85.58A412.3 412.3 0 01150.42 337.6zm369.71 82.78a99.7 99.7 0 100 199.4 99.7 99.7 0 000-199.4z'],
  ...props
});

const BoldBetaNormal = props => createSvgIcon({
  name: 'bold-beta',
  viewBox: '0 0 1024 1024',
  path: ['M697.81 481.4A193.32 193.32 0 00752 347.1v-10.2C752 229.3 663.9 142 555.3 142H274.66a42.67 42.67 0 00-42.67 42.66v650.67a42.67 42.67 0 0042.67 42.66h305.53c117.04 0 211.8-94.2 211.8-210.47v-11c0-73.01-37.38-137.3-94.17-175.11zM327.98 238H552.7c57.1 0 103.3 44.37 103.3 99.28v9.51c0 54.79-46.3 99.29-103.3 99.29H327.98V237.99zM694.6 667.4c0 62.88-51.7 113.91-115.5 113.91H327.98V542.72H579.1c63.8 0 115.5 50.99 115.5 113.92v10.75z'],
  ...props
});

const BorderAllBetaNormal = props => createSvgIcon({
  name: 'border-all-beta-normal',
  viewBox: '0 0 1024 1024',
  path: ['M910.933333 42.666667A70.4 70.4 0 0 1 981.333333 113.066667v797.866666a70.4 70.4 0 0 1-70.4 70.4H113.066667A70.4 70.4 0 0 1 42.666667 910.933333V113.066667A70.4 70.4 0 0 1 113.066667 42.666667h797.866666zM149.333333 874.666667h311.296V575.978667H149.333333V874.666667z m725.333334-298.688H588.629333V874.666667H874.666667V575.978667z m0-128V149.333333H588.629333v298.645334H874.666667zM460.629333 149.333333H149.333333v298.645334h311.296V149.333333z', 'M892.8 64A67.2 67.2 0 0 1 960 131.2v761.6A67.2 67.2 0 0 1 892.8 960H131.2A67.2 67.2 0 0 1 64 892.8V131.2A67.2 67.2 0 0 1 131.2 64h761.6zM128 896h354.112V554.666667H128v341.333333z m768-341.333333H567.445333v341.333333H896V554.666667z m0-85.333334V128H567.445333v341.333333H896zM482.112 128H128v341.333333h354.112V128z'],
  ...props
});

const BorderBottomBetaNormal = props => createSvgIcon({
  // 可以支持不同 path 使用不同颜色的 icon 可将 IIconProps 的 pathColors 接口暴露给应用层
  name: 'border-bottom-beta-normal',
  viewBox: '0 0 1024 1024',
  path: ['M960 844.010667v146.666666c0 6.613333-5.376 11.989333-12.010667 11.989334H76.010667A11.989333 11.989333 0 0 1 64 990.677333v-146.666666c0-6.634667 5.376-12.010667 12.010667-12.010667h871.978666c6.634667 0 12.010667 5.376 12.010667 12.010667z', 'M910.144 874.666667H113.856a7.210667 7.210667 0 0 0-7.210667 7.210666v70.933334c0 3.968 3.221333 7.189333 7.210667 7.189333h796.266667a7.189333 7.189333 0 0 0 7.189333-7.189333v-70.933334a7.210667 7.210667 0 0 0-7.189333-7.210666z', 'M182.528 751.018667H116.138667A9.514667 9.514667 0 0 1 106.666667 741.525333v-66.346666c0-5.226667 4.266667-9.493333 9.472-9.493334h66.389333c5.205333 0 9.472 4.266667 9.472 9.472v66.368c0 5.226667-4.266667 9.493333-9.472 9.493334z m0-562.965334H116.138667A9.514667 9.514667 0 0 1 106.666667 178.581333V112.213333c0-5.226667 4.266667-9.493333 9.472-9.493333h66.389333c5.205333 0 9.472 4.266667 9.472 9.493333v66.346667c0 5.226667-4.266667 9.493333-9.472 9.493333z m0 375.317334H116.138667A9.514667 9.514667 0 0 1 106.666667 553.877333v-66.346666c0-5.226667 4.266667-9.493333 9.472-9.493334h66.389333c5.205333 0 9.472 4.266667 9.472 9.472v66.368c0 5.226667-4.266667 9.493333-9.472 9.493334z m0-187.669334H116.138667A9.514667 9.514667 0 0 1 106.666667 366.229333v-66.368c0-5.226667 4.266667-9.493333 9.472-9.493333h66.389333c5.205333 0 9.472 4.266667 9.472 9.493333v66.368c0 5.205333-4.266667 9.472-9.472 9.472z m187.648 187.669334H303.786667a9.514667 9.514667 0 0 1-9.493334-9.493334v-66.346666c0-5.226667 4.266667-9.493333 9.493334-9.493334h66.346666c5.226667 0 9.493333 4.266667 9.493334 9.472v66.368c0 5.226667-4.266667 9.493333-9.472 9.493334z m0-375.317334H303.786667a9.514667 9.514667 0 0 1-9.493334-9.472V112.213333c0-5.226667 4.266667-9.493333 9.493334-9.493333h66.346666c5.226667 0 9.493333 4.266667 9.493334 9.493333v66.346667c0 5.226667-4.266667 9.493333-9.472 9.493333z m375.296 0h-66.368a9.514667 9.514667 0 0 1-9.472-9.472V112.213333c0-5.226667 4.266667-9.493333 9.472-9.493333h66.368c5.226667 0 9.493333 4.266667 9.493333 9.493333v66.346667c0 5.226667-4.266667 9.493333-9.493333 9.493333z m0 375.317334h-66.368a9.514667 9.514667 0 0 1-9.472-9.493334v-66.346666c0-5.226667 4.266667-9.493333 9.472-9.493334h66.368c5.226667 0 9.493333 4.266667 9.493333 9.472v66.368c0 5.226667-4.266667 9.493333-9.493333 9.493334z m187.648 0h-66.346667a9.514667 9.514667 0 0 1-9.493333-9.493334v-66.346666c0-5.226667 4.266667-9.493333 9.472-9.493334h66.368c5.226667 0 9.493333 4.266667 9.493333 9.472v66.368c0 5.226667-4.266667 9.493333-9.493333 9.493334z m-375.296 0h-66.368a9.514667 9.514667 0 0 1-9.493333-9.493334v-66.346666c0-5.226667 4.266667-9.493333 9.493333-9.493334h66.346667c5.226667 0 9.493333 4.266667 9.493333 9.472v66.368c0 5.226667-4.266667 9.493333-9.472 9.493334zM933.12 188.053333h-66.346667a9.514667 9.514667 0 0 1-9.493333-9.472V112.213333c0-5.226667 4.266667-9.493333 9.472-9.493333h66.368c5.226667 0 9.493333 4.266667 9.493333 9.493333v66.346667c0 5.226667-4.266667 9.493333-9.493333 9.493333z m-375.296 0h-66.368a9.514667 9.514667 0 0 1-9.493333-9.472V112.213333c0-5.226667 4.266667-9.493333 9.493333-9.493333h66.346667c5.226667 0 9.493333 4.266667 9.493333 9.493333v66.346667c0 5.226667-4.266667 9.493333-9.472 9.493333zM933.12 751.018667h-66.346667a9.514667 9.514667 0 0 1-9.493333-9.493334v-66.346666c0-5.226667 4.266667-9.493333 9.472-9.493334h66.368c5.226667 0 9.493333 4.266667 9.493333 9.472v66.368c0 5.226667-4.266667 9.493333-9.493333 9.493334z m-375.296 0h-66.368a9.514667 9.514667 0 0 1-9.493333-9.493334v-66.346666c0-5.226667 4.266667-9.493333 9.493333-9.493334h66.346667c5.226667 0 9.493333 4.266667 9.493333 9.472v66.368c0 5.226667-4.266667 9.493333-9.472 9.493334zM933.12 375.68h-66.346667a9.514667 9.514667 0 0 1-9.493333-9.472v-66.368c0-5.226667 4.266667-9.493333 9.472-9.493333h66.368c5.226667 0 9.493333 4.266667 9.493333 9.493333v66.368c0 5.205333-4.266667 9.472-9.493333 9.472z m-375.296 0h-66.368a9.514667 9.514667 0 0 1-9.493333-9.472v-66.368c0-5.226667 4.266667-9.493333 9.493333-9.493333h66.346667c5.226667 0 9.493333 4.266667 9.493333 9.493333v66.368c0 5.205333-4.266667 9.472-9.472 9.472z'],
  ...props
});

const BorderHorizonBetaNormal = props => createSvgIcon({
  name: 'border-horizon-beta-normal',
  viewBox: '0 0 1024 1024',
  path: ['M960 438.656l0 146.666667a11.989333 11.989333 0 0 1-12.01066701 12.010666L76.01066701 597.333333c-6.634667 0-12.010667-5.376-12.01066701-12.010666l0-146.666667c0-6.613333 5.376-11.989333 11.989333-11.989333l872.021334 0c6.613333 0 11.989333 5.376 11.989333 11.989333z', 'M910.144 469.33333299L113.856 469.33333299A7.210667 7.210667 0 0 0 106.666667 476.522667l0 70.954666a7.210667 7.210667 0 0 0 7.210666 7.18933401l796.266667 0c3.968 0 7.189333-3.221333 7.189333-7.21066701l0-70.933333a7.210667 7.210667 0 0 0-7.189333-7.18933401z', 'M856.106667 751.018667l66.346666 0c5.226667 0 9.493333-4.266667 9.493334-9.493334l0-66.346666c0-5.226667-4.266667-9.493333-9.493334-9.493334l-66.346666 0c-5.226667 0-9.493333 4.266667-9.493334 9.47199999L846.613333 741.54666699c0 5.226667 4.266667 9.493333 9.47200001 9.49333301z m0-584.298667l66.346666 0c5.226667 0 9.493333-4.266667 9.493334-9.472l0-66.368c0-5.226667-4.266667-9.493333-9.493334-9.493333l-66.346666 0c-5.226667 0-9.493333 4.266667-9.493334 9.493333l0 66.346667c0 5.226667 4.266667 9.493333 9.472 9.493333z m0 780.650667l66.346666 0c5.226667 0 9.493333-4.266667 9.493334-9.493334l0-66.346666c0-5.226667-4.266667-9.493333-9.493334-9.493334l-66.346666 0c-5.226667 0-9.493333 4.266667-9.493334 9.47199999L846.613333 937.877333c0 5.226667 4.266667 9.493333 9.47200001 9.493334z m0-593.002667l66.346666 0c5.226667 0 9.493333-4.266667 9.493334-9.472l0-66.368c0-5.226667-4.266667-9.493333-9.493334-9.493333l-66.346666 0c-5.226667 0-9.493333 4.266667-9.493334 9.493333l0 66.368c0 5.205333 4.266667 9.472 9.472 9.472zM668.416 947.370667l66.368 1e-8c5.226667 0 9.493333-4.266667 9.493333-9.49333401l0-66.346666c0-5.226667-4.266667-9.493333-9.493333-9.493334l-66.368 0c-5.205333 0-9.472 4.266667-9.472 9.472L658.944 937.877333c0 5.226667 4.266667 9.493333 9.472 9.493334z m0-780.650667l66.368 0c5.226667 0 9.493333-4.266667 9.493333-9.472l0-66.368c0-5.226667-4.266667-9.493333-9.493333-9.49333299l-66.368-1e-8c-5.205333 0-9.472 4.266667-9.472 9.493333l0 66.346667c0 5.226667 4.266667 9.493333 9.472 9.493333z m-375.296 0l66.346667 0c5.226667 0 9.493333-4.266667 9.493333-9.472l0-66.368c0-5.226667-4.266667-9.493333-9.472-9.493333L293.12 81.386667c-5.226667 0-9.493333 4.266667-9.493333 9.493333l0 66.346667c0 5.226667 4.266667 9.493333 9.493333 9.493333z m0 780.650667l66.34666699 0c5.226667 0 9.493333-4.266667 9.49333301-9.493334l0-66.346666c0-5.226667-4.266667-9.493333-9.472-9.493334L293.12 862.037333c-5.226667 0-9.493333 4.266667-9.493333 9.472L283.626667 937.877333c0 5.226667 4.266667 9.493333 9.493333 9.493334z m-187.66933301 0l66.38933301 0c5.205333 0 9.472-4.266667 9.472-9.493334l0-66.346666c0-5.226667-4.266667-9.493333-9.472-9.493334L105.472 862.037333c-5.205333 0-9.472 4.266667-9.472 9.472L96 937.877333c0 5.226667 4.266667 9.493333 9.472 9.493334z m375.31733301 1e-8l66.346667-1e-8c5.226667 0 9.493333-4.266667 9.493333-9.493334l0-66.34666599c0-5.226667-4.266667-9.493333-9.472-9.49333401l-66.368 0c-5.226667 0-9.493333 4.266667-9.493333 9.47199999L471.274667 937.877333c0 5.226667 4.266667 9.493333 9.493333 9.49333401zM105.472 166.72l66.389333 0c5.205333 0 9.472-4.266667 9.472-9.472l0-66.368c0-5.226667-4.266667-9.493333-9.472-9.49333299L105.472 81.386667c-5.205333 0-9.472 4.266667-9.472 9.493333l0 66.346667c0 5.226667 4.266667 9.493333 9.472 9.493333z m375.317333 0l66.346667 0c5.226667 0 9.493333-4.266667 9.49333299-9.472l1e-8-66.368c0-5.226667-4.266667-9.493333-9.472-9.493333l-66.368 1e-8c-5.226667 0-9.493333 4.266667-9.493333 9.49333299l0 66.346667c0 5.226667 4.266667 9.493333 9.493333 9.493333zM105.472 751.018667l66.389333 1e-8c5.205333 0 9.472-4.266667 9.472-9.49333401l0-66.346666c0-5.226667-4.266667-9.493333-9.472-9.493334L105.472 665.685333c-5.205333 0-9.472 4.266667-9.472 9.472L96 741.546667c0 5.226667 4.266667 9.493333 9.472 9.493333z m375.31733299 0l66.34666701 0c5.226667 0 9.493333-4.266667 9.493333-9.493334l-1e-8-66.346666c0-5.226667-4.266667-9.493333-9.47199999-9.493334l-66.368 0c-5.226667 0-9.493333 4.266667-9.49333301 9.472L471.29599999 741.546667c0 5.226667 4.266667 9.493333 9.493333 9.493333zM105.472 354.346667l66.389333 0c5.205333 0 9.472-4.266667 9.472-9.472l0-66.368c0-5.226667-4.266667-9.493333-9.472-9.49333399L105.472 269.013333c-5.205333 0-9.472 4.266667-9.472 9.493334l0 66.368c0 5.205333 4.266667 9.472 9.472 9.472z m375.317333 0l66.34666699 0c5.226667 0 9.493333-4.266667 9.49333301-9.472l0-66.368c0-5.226667-4.266667-9.493333-9.472-9.493334l-66.368 1e-8c-5.226667 0-9.493333 4.266667-9.49333301 9.49333399l1e-8 66.368c0 5.205333 4.266667 9.472 9.493333 9.472z'],
  ...props
});

const BorderInnerBetaNormal = props => createSvgIcon({
  name: 'border-inner-beta-normal',
  viewBox: '0 0 1024 1024',
  path: ['M553.088 85.333333c7.808 0 14.208 4.181333 14.208 9.28v353.365334L908.288 448c4.48 0 8.213333 5.184 8.917333 11.925333l0.128 2.304v99.541334c0 7.829333-4.053333 14.229333-9.045333 14.229333l-340.992-0.021333v353.408c0 4.586667-5.184 8.426667-11.925333 9.173333l-2.282667 0.106667h-99.562667c-7.829333 0-14.229333-4.181333-14.229333-9.28V576L94.378667 576c-4.48 0-8.213333-5.184-8.917334-11.925333L85.333333 561.770667v-99.541334c0-7.829333 4.053333-14.229333 9.045334-14.229333l344.917333-0.021333V94.613333c0-4.586667 5.184-8.426667 11.946667-9.173333L453.504 85.333333z', 'M536.661333 106.666667c5.205333 0 9.472 3.968 9.472 8.810666L546.112 469.333333h343.445333c4.181333 0 7.701333 3.370667 8.426667 7.786667l0.149333 1.706667v66.346666c0 5.226667-3.861333 9.493333-8.576 9.493334H546.112l0.021333 353.856a9.045333 9.045333 0 0 1-7.786666 8.661333l-1.706667 0.149333h-66.346667c-5.226667 0-9.493333-3.968-9.493333-8.810666L460.778667 554.666667H117.376c-4.181333 0-7.701333-3.370667-8.426667-7.786667l-0.149333-1.706667v-66.346666c0-5.226667 3.861333-9.493333 8.576-9.493334H460.8L460.8 115.477333c0-4.309333 3.370667-7.914667 7.786667-8.661333l1.706666-0.149333z', 'M913.770667 844.629333c5.205333 0 9.472 4.266667 9.472 9.493334v66.346666c0 5.226667-4.266667 9.493333-9.472 9.493334h-66.368a9.514667 9.514667 0 0 1-9.493334-9.472v-66.368c0-5.226667 4.266667-9.493333 9.493334-9.493334z m-187.648 0c5.205333 0 9.472 4.266667 9.472 9.493334v66.346666c0 5.226667-4.266667 9.493333-9.472 9.493334h-66.389334a9.514667 9.514667 0 0 1-9.472-9.472v-66.368c0-5.226667 4.266667-9.493333 9.472-9.493334z m-375.317334 0c5.226667 0 9.493333 4.266667 9.493334 9.493334v66.346666c0 5.226667-4.266667 9.493333-9.493334 9.493334h-66.368a9.514667 9.514667 0 0 1-9.472-9.472v-66.368c0-5.226667 4.266667-9.493333 9.472-9.493334z m-187.648 0c5.205333 0 9.472 4.266667 9.472 9.493334v66.346666c0 5.226667-4.266667 9.493333-9.472 9.493334H96.789333a9.514667 9.514667 0 0 1-9.493333-9.472v-66.368c0-5.226667 4.266667-9.493333 9.493333-9.493334z m750.613334-196.330666c5.205333 0 9.472 4.266667 9.472 9.472v66.368c0 5.226667-4.266667 9.493333-9.472 9.493333h-66.368a9.514667 9.514667 0 0 1-9.493334-9.493333v-66.368c0-5.205333 4.266667-9.472 9.493334-9.472z m-750.613334 0c5.205333 0 9.472 4.266667 9.472 9.472v66.368c0 5.226667-4.266667 9.493333-9.472 9.493333H96.789333a9.514667 9.514667 0 0 1-9.493333-9.493333v-66.368c0-5.205333 4.266667-9.472 9.493333-9.472z m750.613334-375.317334c5.205333 0 9.472 4.266667 9.472 9.493334v66.346666c0 5.226667-4.266667 9.493333-9.472 9.493334h-66.368a9.514667 9.514667 0 0 1-9.493334-9.472V282.453333c0-5.226667 4.266667-9.493333 9.493334-9.493333z m-750.613334 0c5.205333 0 9.472 4.266667 9.472 9.493334v66.346666c0 5.226667-4.266667 9.493333-9.472 9.493334H96.789333a9.514667 9.514667 0 0 1-9.493333-9.472V282.453333c0-5.226667 4.266667-9.493333 9.493333-9.493333zM913.770667 85.333333c5.205333 0 9.472 4.266667 9.472 9.472v66.389334c0 5.205333-4.266667 9.472-9.472 9.472h-66.368a9.514667 9.514667 0 0 1-9.493334-9.472V94.805333c0-5.205333 4.266667-9.472 9.493334-9.472z m-187.648 0c5.205333 0 9.472 4.266667 9.472 9.472v66.389334c0 5.205333-4.266667 9.472-9.472 9.472h-66.389334a9.514667 9.514667 0 0 1-9.472-9.472V94.805333c0-5.205333 4.266667-9.472 9.472-9.472zM350.805333 85.333333c5.226667 0 9.493333 4.266667 9.493334 9.472v66.389334c0 5.205333-4.266667 9.472-9.493334 9.472h-66.368a9.514667 9.514667 0 0 1-9.472-9.472V94.805333c0-5.205333 4.266667-9.472 9.472-9.472zM163.157333 85.333333c5.205333 0 9.472 4.266667 9.472 9.472v66.389334c0 5.205333-4.266667 9.472-9.472 9.472H96.789333a9.514667 9.514667 0 0 1-9.493333-9.472V94.805333c0-5.205333 4.266667-9.472 9.493333-9.472z'],
  ...props
});

const BorderLeftBetaNormal = props => createSvgIcon({
  name: 'border-left-beta-normal',
  viewBox: '0 0 1024 1024',
  path: ['M201.32266633 960l-146.666666 0c-6.613333 0-11.989333-5.376-11.989334-12.010667L42.66666633 76.010667A11.989333 11.989333 0 0 1 54.65600033 64l146.666666 0c6.634667 0 12.010667 5.376 12.010667 12.010667l0 871.978666c0 6.634667-5.376 12.010667-12.010667 12.010667z', 'M170.66666633 910.14399999L170.66666633 113.85600001a7.210667 7.210667 0 0 0-7.210666-7.21066701l-70.933334-1e-8c-3.968 0-7.189333 3.221333-7.189333 7.21066701l0 796.266667a7.189333 7.189333 0 0 0 7.189333 7.189333l70.933334 0a7.210667 7.210667 0 0 0 7.21066599-7.189333z', 'M294.31466633 182.52799999L294.31466633 116.138667A9.514667 9.514667 0 0 1 303.80800033 106.666667l66.34666599 0c5.226667 0 9.493333 4.266667 9.49333401 9.472l0 66.389333c0 5.205333-4.266667 9.472-9.47199999 9.472l-66.36800001 0c-5.226667 0-9.493333-4.266667-9.493334-9.47200001z m562.965334 1e-8L857.28000033 116.138667A9.514667 9.514667 0 0 1 866.75200033 106.66666699L933.12000033 106.666667c5.226667 0 9.493333 4.266667 9.493333 9.472l0 66.38933299c0 5.205333-4.266667 9.472-9.49333301 9.47200001l-66.34666699 0c-5.226667 0-9.493333-4.266667-9.493333-9.472z m-375.317334 0L481.96266633 116.13866701A9.514667 9.514667 0 0 1 491.45600033 106.666667l66.346666 0c5.226667 0 9.493333 4.266667 9.493334 9.472l0 66.389333c0 5.205333-4.266667 9.472-9.472 9.472l-66.368 0c-5.226667 0-9.493333-4.266667-9.493334-9.472z m187.669334 0L669.63200033 116.138667A9.514667 9.514667 0 0 1 679.10400033 106.666667l66.368 0c5.226667 0 9.493333 4.266667 9.493333 9.472l0 66.389333c0 5.205333-4.266667 9.472-9.493333 9.472l-66.36800001 0c-5.205333 0-9.472-4.266667-9.47199999-9.472z m-187.66933399 187.648L481.96266633 303.786667a9.514667 9.514667 0 0 1 9.493334-9.493334l66.346666 0c5.226667 0 9.493333 4.266667 9.493334 9.493334l0 66.346666c0 5.226667-4.266667 9.493333-9.472 9.493334l-66.368 0c-5.226667 0-9.493333-4.266667-9.493334-9.47199999z m375.31733399 0L857.28000033 303.786667a9.514667 9.514667 0 0 1 9.472-9.49333401L933.12000033 294.293333c5.226667 0 9.493333 4.266667 9.493333 9.493334l-1e-8 66.346666c0 5.226667-4.266667 9.493333-9.49333299 9.493334l-66.346667 0c-5.226667 0-9.493333-4.266667-9.493333-9.472z m0 375.296l0-66.368a9.514667 9.514667 0 0 1 9.472-9.472L933.12000033 669.632c5.226667 0 9.493333 4.266667 9.493333 9.472l0 66.368c0 5.226667-4.266667 9.493333-9.493333 9.493333l-66.346667 0c-5.226667 0-9.493333-4.266667-9.493333-9.493333z m-375.317334 0l0-66.368a9.514667 9.514667 0 0 1 9.493334-9.472l66.346666 0c5.226667 0 9.493333 4.266667 9.493334 9.472l0 66.368c0 5.226667-4.266667 9.493333-9.472 9.493333l-66.368 0c-5.226667 0-9.493333-4.266667-9.493334-9.493333z m0 187.648l0-66.346667a9.514667 9.514667 0 0 1 9.493334-9.493333l66.346666 0c5.226667 0 9.493333 4.266667 9.493334 9.472l0 66.368c0 5.226667-4.266667 9.493333-9.472 9.493333l-66.368 0c-5.226667 0-9.493333-4.266667-9.493334-9.493333z m0-375.296l0-66.368a9.514667 9.514667 0 0 1 9.493334-9.493333l66.346666 0c5.226667 0 9.493333 4.266667 9.493334 9.493333l0 66.346667c0 5.226667-4.266667 9.493333-9.472 9.493333l-66.368 0c-5.226667 0-9.493333-4.266667-9.493334-9.472zM857.28000033 933.12l0-66.346667a9.514667 9.514667 0 0 1 9.472-9.493333L933.12000033 857.28c5.226667 0 9.493333 4.266667 9.49333299 9.472l1e-8 66.368c0 5.226667-4.266667 9.493333-9.493333 9.493333l-66.346667-1e-8c-5.226667 0-9.493333-4.266667-9.493333-9.49333299z m0-375.296l0-66.368a9.514667 9.514667 0 0 1 9.472-9.493333L933.12000033 481.962667c5.226667 0 9.493333 4.266667 9.493333 9.493333l0 66.346667c0 5.226667-4.266667 9.493333-9.493333 9.493333l-66.346667 0c-5.226667 0-9.493333-4.266667-9.493333-9.472zM294.31466633 933.12l0-66.346667a9.514667 9.514667 0 0 1 9.493334-9.493333l66.346666 0c5.226667 0 9.493333 4.266667 9.493334 9.472l0 66.368c0 5.226667-4.266667 9.493333-9.472 9.493333l-66.368 0c-5.226667 0-9.493333-4.266667-9.493334-9.493333z m0-375.29599999l0-66.36800001a9.514667 9.514667 0 0 1 9.493334-9.493333l66.346666 0c5.226667 0 9.493333 4.266667 9.493334 9.493333l0 66.346667c0 5.226667-4.266667 9.493333-9.472 9.493333l-66.368 0c-5.226667 0-9.493333-4.266667-9.493334-9.47199999zM669.65333333 933.12l0-66.346667a9.514667 9.514667 0 0 1 9.472-9.493333l66.368 0c5.226667 0 9.493333 4.266667 9.493333 9.472l0 66.368c0 5.226667-4.266667 9.493333-9.493333 9.493333l-66.368 0c-5.205333 0-9.472-4.266667-9.472-9.493333z m0-375.296l0-66.368a9.514667 9.514667 0 0 1 9.472-9.493333l66.368 0c5.226667 0 9.493333 4.266667 9.493333 9.493333l0 66.346667c0 5.226667-4.266667 9.493333-9.493333 9.493333l-66.368 0c-5.205333 0-9.472-4.266667-9.472-9.472z'],
  ...props
});

const BorderNoneBetaNormal = props => createSvgIcon({
  name: 'border-none-beta',
  viewBox: '0 0 1024 1024',
  path: ['M847.402667 754.965333h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.493333v-66.368c0-5.205333-4.266667-9.472-9.472-9.472h-66.368c-5.226667 0-9.493333 4.266667-9.493334 9.472v66.368c0 5.226667 4.266667 9.493333 9.493334 9.493333z m0-562.965333h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.472V116.138667c0-5.205333-4.266667-9.472-9.472-9.472h-66.368c-5.226667 0-9.493333 4.266667-9.493334 9.472v66.389333c0 5.205333 4.266667 9.472 9.493334 9.472z m0 759.296h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.472v-66.368c0-5.226667-4.266667-9.493333-9.472-9.493333h-66.368c-5.226667 0-9.493333 4.266667-9.493334 9.493333v66.346667c0 5.226667 4.266667 9.493333 9.493334 9.493333z m0-571.648h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.472V303.786667c0-5.226667-4.266667-9.493333-9.472-9.493334h-66.368c-5.226667 0-9.493333 4.266667-9.493334 9.493334v66.346666c0 5.226667 4.266667 9.493333 9.493334 9.493334z m-187.669334 571.648h66.389334c5.205333 0 9.472-4.266667 9.472-9.472v-66.368c0-5.226667-4.266667-9.493333-9.472-9.493333h-66.389334c-5.205333 0-9.472 4.266667-9.472 9.493333v66.346667c0 5.226667 4.266667 9.493333 9.472 9.493333z m0-759.296h66.389334c5.205333 0 9.472-4.266667 9.472-9.472V116.138667c0-5.205333-4.266667-9.472-9.472-9.472h-66.389334c-5.205333 0-9.472 4.266667-9.472 9.472v66.389333c0 5.205333 4.266667 9.472 9.472 9.472zM284.437333 192h66.368c5.226667 0 9.493333-4.266667 9.493334-9.472V116.138667c0-5.205333-4.266667-9.472-9.493334-9.472h-66.368c-5.205333 0-9.472 4.266667-9.472 9.472v66.389333c0 5.205333 4.266667 9.472 9.472 9.472z m0 759.296h66.368c5.226667 0 9.493333-4.266667 9.493334-9.472v-66.368c0-5.226667-4.266667-9.493333-9.493334-9.493333h-66.368c-5.205333 0-9.472 4.266667-9.472 9.493333v66.346667c0 5.226667 4.266667 9.493333 9.472 9.493333z m-187.648 0h66.346667c5.226667 0 9.493333-4.266667 9.493333-9.472v-66.368c0-5.226667-4.266667-9.493333-9.472-9.493333H96.789333c-5.226667 0-9.493333 4.266667-9.493333 9.493333v66.346667c0 5.226667 4.266667 9.493333 9.493333 9.493333z m375.296 0h66.368c5.226667 0 9.493333-4.266667 9.493334-9.472v-66.368c0-5.226667-4.266667-9.493333-9.493334-9.493333h-66.346666c-5.226667 0-9.493333 4.266667-9.493334 9.493333v66.346667c0 5.226667 4.266667 9.493333 9.472 9.493333zM96.789333 192h66.346667c5.226667 0 9.493333-4.266667 9.493333-9.472V116.138667c0-5.205333-4.266667-9.472-9.472-9.472H96.789333c-5.226667 0-9.493333 4.266667-9.493333 9.472v66.389333c0 5.205333 4.266667 9.472 9.493333 9.472z m375.296 0h66.368c5.226667 0 9.493333-4.266667 9.493334-9.472V116.138667c0-5.205333-4.266667-9.472-9.493334-9.472h-66.346666c-5.226667 0-9.493333 4.266667-9.493334 9.472v66.389333c0 5.205333 4.266667 9.472 9.472 9.472zM96.789333 576h66.346667c5.226667 0 9.493333-4.266667 9.493333-9.472v-66.389333c0-5.205333-4.266667-9.472-9.472-9.472H96.789333c-5.226667 0-9.493333 4.266667-9.493333 9.472v66.389333c0 5.205333 4.266667 9.472 9.493333 9.472z m187.648 0h66.368c5.226667 0 9.493333-4.266667 9.493334-9.472v-66.389333c0-5.205333-4.266667-9.472-9.493334-9.472h-66.368c-5.205333 0-9.472 4.266667-9.472 9.472v66.389333c0 5.205333 4.266667 9.472 9.472 9.472z m375.296 0h66.389334c5.205333 0 9.472-4.266667 9.472-9.472v-66.389333c0-5.205333-4.266667-9.472-9.472-9.472h-66.389334c-5.205333 0-9.472 4.266667-9.472 9.472v66.389333c0 5.205333 4.266667 9.472 9.472 9.472z m187.669334 0h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.472v-66.389333c0-5.205333-4.266667-9.472-9.472-9.472h-66.368c-5.226667 0-9.493333 4.266667-9.493334 9.472v66.389333c0 5.205333 4.266667 9.472 9.493334 9.472z m-375.317334 0h66.368c5.226667 0 9.493333-4.266667 9.493334-9.472v-66.389333c0-5.205333-4.266667-9.472-9.493334-9.472h-66.346666c-5.226667 0-9.493333 4.266667-9.493334 9.472v66.389333c0 5.205333 4.266667 9.472 9.472 9.472zM96.789333 754.965333h66.346667c5.226667 0 9.493333-4.266667 9.493333-9.493333v-66.368c0-5.205333-4.266667-9.472-9.472-9.472H96.789333c-5.226667 0-9.493333 4.266667-9.493333 9.472v66.368c0 5.226667 4.266667 9.493333 9.493333 9.493333z m375.296 0h66.368c5.226667 0 9.493333-4.266667 9.493334-9.493333v-66.368c0-5.205333-4.266667-9.472-9.493334-9.472h-66.346666c-5.226667 0-9.493333 4.266667-9.493334 9.472v66.368c0 5.226667 4.266667 9.493333 9.472 9.493333zM96.789333 379.648h66.346667c5.226667 0 9.493333-4.266667 9.493333-9.472V303.786667c0-5.226667-4.266667-9.493333-9.472-9.493334H96.789333c-5.226667 0-9.493333 4.266667-9.493333 9.493334v66.346666c0 5.226667 4.266667 9.493333 9.493333 9.493334z m375.296 0h66.368c5.226667 0 9.493333-4.266667 9.493334-9.472V303.786667c0-5.226667-4.266667-9.493333-9.493334-9.493334h-66.346666c-5.226667 0-9.493333 4.266667-9.493334 9.493334v66.346666c0 5.226667 4.266667 9.493333 9.472 9.493334z'],
  ...props
});

const BorderOuterBetaNormal = props => createSvgIcon({
  name: 'border-outer-beta-normal',
  viewBox: '0 0 1024 1024',
  path: ['M910.933333 42.666667A70.4 70.4 0 0 1 981.333333 113.066667v797.866666a70.4 70.4 0 0 1-70.4 70.4H113.066667A70.4 70.4 0 0 1 42.666667 910.933333V113.066667A70.4 70.4 0 0 1 113.066667 42.666667h797.866666zM874.666667 149.333333H149.333333v725.333334h725.333334V149.333333z', 'M892.8 64A67.2 67.2 0 0 1 960 131.2v761.6A67.2 67.2 0 0 1 892.8 960H131.2A67.2 67.2 0 0 1 64 892.8V131.2A67.2 67.2 0 0 1 131.2 64h761.6zM896 128H128v768h768V128z', 'M282.453333 554.666667h66.389334c5.205333 0 9.472-4.266667 9.472-9.472v-66.389334c0-5.205333-4.266667-9.472-9.472-9.472H282.453333c-5.226667 0-9.493333 4.266667-9.493333 9.472v66.389334c0 5.205333 4.266667 9.472 9.493333 9.472z m375.317334 0h66.368c5.226667 0 9.493333-4.266667 9.493333-9.472v-66.389334c0-5.205333-4.266667-9.472-9.493333-9.472h-66.368c-5.205333 0-9.472 4.266667-9.472 9.472v66.389334c0 5.205333 4.266667 9.472 9.472 9.472z m-187.648 0h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.472v-66.389334c0-5.205333-4.266667-9.472-9.472-9.472h-66.368c-5.226667 0-9.493333 4.266667-9.493334 9.472v66.389334c0 5.205333 4.266667 9.472 9.493334 9.472z m0 178.965333h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.493333v-66.368c0-5.205333-4.266667-9.472-9.472-9.472h-66.368c-5.226667 0-9.493333 4.266667-9.493334 9.472v66.368c0 5.226667 4.266667 9.493333 9.493334 9.493333z m0-375.317333h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.472V282.453333c0-5.226667-4.266667-9.493333-9.472-9.493333h-66.368c-5.226667 0-9.493333 4.266667-9.493334 9.493333v66.346667c0 5.226667 4.266667 9.493333 9.493334 9.493333z'],
  ...props
});

const BorderRightBetaNormal = props => createSvgIcon({
  name: 'border-right-beta-normal',
  viewBox: '0 0 1024 1024',
  path: ['M801.34400034 64l146.666666 0c6.613333 0 11.989333 5.376 11.989334 12.010667L960.00000034 947.989333A11.989333 11.989333 0 0 1 948.01066634 960l-146.666666 0c-6.634667 0-12.010667-5.376-12.010667-12.010667l0-871.978666c0-6.634667 5.376-12.010667 12.010667-12.010667z', 'M832.00000034 113.85600001L832.00000034 910.14399999a7.210667 7.210667 0 0 0 7.210666 7.21066701l70.933334 1e-8c3.968 0 7.189333-3.221333 7.189333-7.21066701l0-796.266667a7.189333 7.189333 0 0 0-7.189333-7.189333l-70.933334 0a7.210667 7.210667 0 0 0-7.21066599 7.189333z', 'M708.35200034 841.47200001L708.35200034 907.861333A9.514667 9.514667 0 0 1 698.85866634 917.333333l-66.34666599 0c-5.226667 0-9.493333-4.266667-9.49333401-9.472l0-66.389333c0-5.205333 4.266667-9.472 9.47199999-9.472l66.36800001 0c5.226667 0 9.493333 4.266667 9.493334 9.47200001z m-562.965334-1e-8L145.38666634 907.861333A9.514667 9.514667 0 0 1 135.91466634 917.33333301L69.54666634 917.333333c-5.226667 0-9.493333-4.266667-9.493333-9.472l0-66.38933299c0-5.205333 4.266667-9.472 9.49333301-9.47200001l66.34666699 0c5.226667 0 9.493333 4.266667 9.493333 9.472z m375.317334 0L520.70400034 907.86133299A9.514667 9.514667 0 0 1 511.21066634 917.333333l-66.346666 0c-5.226667 0-9.493333-4.266667-9.493334-9.472l0-66.389333c0-5.205333 4.266667-9.472 9.472-9.472l66.368 0c5.226667 0 9.493333 4.266667 9.493334 9.472z m-187.669334 0L333.03466634 907.861333A9.514667 9.514667 0 0 1 323.56266634 917.333333l-66.368 0c-5.226667 0-9.493333-4.266667-9.493333-9.472l0-66.389333c0-5.205333 4.266667-9.472 9.493333-9.472l66.36800001 0c5.205333 0 9.472 4.266667 9.47199999 9.472z m187.66933399-187.648L520.70400034 720.213333a9.514667 9.514667 0 0 1-9.493334 9.493334l-66.346666 0c-5.226667 0-9.493333-4.266667-9.493334-9.493334l0-66.346666c0-5.226667 4.266667-9.493333 9.472-9.493334l66.368 0c5.226667 0 9.493333 4.266667 9.493334 9.47199999z m-375.31733399 0L145.38666634 720.213333a9.514667 9.514667 0 0 1-9.472 9.49333401L69.54666634 729.706667c-5.226667 0-9.493333-4.266667-9.493333-9.493334l1e-8-66.346666c0-5.226667 4.266667-9.493333 9.49333299-9.493334l66.346667 0c5.226667 0 9.493333 4.266667 9.493333 9.472z m0-375.296l0 66.368a9.514667 9.514667 0 0 1-9.472 9.472L69.54666634 354.368c-5.226667 0-9.493333-4.266667-9.493333-9.472l0-66.368c0-5.226667 4.266667-9.493333 9.493333-9.493333l66.346667 0c5.226667 0 9.493333 4.266667 9.493333 9.493333z m375.317334 0l0 66.368a9.514667 9.514667 0 0 1-9.493334 9.472l-66.346666 0c-5.226667 0-9.493333-4.266667-9.493334-9.472l0-66.368c0-5.226667 4.266667-9.493333 9.472-9.493333l66.368 0c5.226667 0 9.493333 4.266667 9.493334 9.493333z m0-187.648l0 66.346667a9.514667 9.514667 0 0 1-9.493334 9.493333l-66.346666 0c-5.226667 0-9.493333-4.266667-9.493334-9.472l0-66.368c0-5.226667 4.266667-9.493333 9.472-9.493333l66.368 0c5.226667 0 9.493333 4.266667 9.493334 9.493333z m0 375.296l0 66.368a9.514667 9.514667 0 0 1-9.493334 9.493333l-66.346666 0c-5.226667 0-9.493333-4.266667-9.493334-9.493333l0-66.346667c0-5.226667 4.266667-9.493333 9.472-9.493333l66.368 0c5.226667 0 9.493333 4.266667 9.493334 9.472zM145.38666634 90.88l0 66.346667a9.514667 9.514667 0 0 1-9.472 9.493333L69.54666634 166.72c-5.226667 0-9.493333-4.266667-9.49333299-9.472l-1e-8-66.368c0-5.226667 4.266667-9.493333 9.493333-9.493333l66.346667 1e-8c5.226667 0 9.493333 4.266667 9.493333 9.49333299z m0 375.296l0 66.368a9.514667 9.514667 0 0 1-9.472 9.493333L69.54666634 542.037333c-5.226667 0-9.493333-4.266667-9.493333-9.493333l0-66.346667c0-5.226667 4.266667-9.493333 9.493333-9.493333l66.346667 0c5.226667 0 9.493333 4.266667 9.493333 9.472zM708.35200034 90.88l0 66.346667a9.514667 9.514667 0 0 1-9.493334 9.493333l-66.346666 0c-5.226667 0-9.493333-4.266667-9.493334-9.472l0-66.368c0-5.226667 4.266667-9.493333 9.472-9.493333l66.368 0c5.226667 0 9.493333 4.266667 9.493334 9.493333z m0 375.29599999l0 66.36800001a9.514667 9.514667 0 0 1-9.493334 9.493333l-66.346666 0c-5.226667 0-9.493333-4.266667-9.493334-9.493333l0-66.346667c0-5.226667 4.266667-9.493333 9.472-9.493333l66.368 0c5.226667 0 9.493333 4.266667 9.493334 9.47199999zM333.01333334 90.88l0 66.346667a9.514667 9.514667 0 0 1-9.472 9.493333l-66.368 0c-5.226667 0-9.493333-4.266667-9.493333-9.472l0-66.368c0-5.226667 4.266667-9.493333 9.493333-9.493333l66.368 0c5.205333 0 9.472 4.266667 9.472 9.493333z m0 375.296l0 66.368a9.514667 9.514667 0 0 1-9.472 9.493333l-66.368 0c-5.226667 0-9.493333-4.266667-9.493333-9.493333l0-66.346667c0-5.226667 4.266667-9.493333 9.493333-9.493333l66.368 0c5.205333 0 9.472 4.266667 9.472 9.472z'],
  ...props
});

const BorderTopBetaNormal = props => createSvgIcon({
  name: 'border-top-beta-normal',
  viewBox: '0 0 1024 1024',
  path: ['M64 222.65599966l0-146.666666c0-6.613333 5.376-11.989333 12.010667-11.989334L947.989333 63.99999966A11.989333 11.989333 0 0 1 960 75.98933366l0 146.666666c0 6.634667-5.376 12.010667-12.010667 12.010667l-871.978666 0c-6.634667 0-12.010667-5.376-12.010667-12.010667z', 'M113.85600001 191.99999966L910.14399999 191.99999966a7.210667 7.210667 0 0 0 7.21066701-7.210666l1e-8-70.933334c0-3.968-3.221333-7.189333-7.21066701-7.189333l-796.266667 0a7.189333 7.189333 0 0 0-7.189333 7.189333l0 70.933334a7.210667 7.210667 0 0 0 7.189333 7.21066599z', 'M841.47200001 315.64799966L907.861333 315.64799966A9.514667 9.514667 0 0 1 917.333333 325.14133366l0 66.34666599c0 5.226667-4.266667 9.493333-9.472 9.49333401l-66.389333 0c-5.205333 0-9.472-4.266667-9.472-9.47199999l0-66.36800001c0-5.226667 4.266667-9.493333 9.47200001-9.493334z m-1e-8 562.965334L907.861333 878.61333366A9.514667 9.514667 0 0 1 917.33333301 888.08533366L917.333333 954.45333366c0 5.226667-4.266667 9.493333-9.472 9.493333l-66.38933299 0c-5.205333 0-9.472-4.266667-9.47200001-9.49333301l0-66.34666699c0-5.226667 4.266667-9.493333 9.472-9.493333z m0-375.317334L907.86133299 503.29599966A9.514667 9.514667 0 0 1 917.333333 512.78933366l0 66.346666c0 5.226667-4.266667 9.493333-9.472 9.493334l-66.389333 0c-5.205333 0-9.472-4.266667-9.472-9.472l0-66.368c0-5.226667 4.266667-9.493333 9.472-9.493334z m0 187.669334L907.861333 690.96533366A9.514667 9.514667 0 0 1 917.333333 700.43733366l0 66.368c0 5.226667-4.266667 9.493333-9.472 9.493333l-66.389333 0c-5.205333 0-9.472-4.266667-9.472-9.493333l0-66.36800001c0-5.205333 4.266667-9.472 9.472-9.47199999z m-187.648-187.66933399L720.213333 503.29599966a9.514667 9.514667 0 0 1 9.493334 9.493334l0 66.346666c0 5.226667-4.266667 9.493333-9.493334 9.493334l-66.346666 0c-5.226667 0-9.493333-4.266667-9.493334-9.472l0-66.368c0-5.226667 4.266667-9.493333 9.47199999-9.493334z m0 375.31733399L720.213333 878.61333366a9.514667 9.514667 0 0 1 9.49333401 9.472L729.706667 954.45333366c0 5.226667-4.266667 9.493333-9.493334 9.493333l-66.346666-1e-8c-5.226667 0-9.493333-4.266667-9.493334-9.49333299l0-66.346667c0-5.226667 4.266667-9.493333 9.472-9.493333z m-375.296 0l66.368 0a9.514667 9.514667 0 0 1 9.472 9.472L354.368 954.45333366c0 5.226667-4.266667 9.493333-9.472 9.493333l-66.368 0c-5.226667 0-9.493333-4.266667-9.493333-9.493333l0-66.346667c0-5.226667 4.266667-9.493333 9.493333-9.493333z m0-375.317334l66.368 0a9.514667 9.514667 0 0 1 9.472 9.493334l0 66.346666c0 5.226667-4.266667 9.493333-9.472 9.493334l-66.368 0c-5.226667 0-9.493333-4.266667-9.493333-9.472l0-66.368c0-5.226667 4.266667-9.493333 9.493333-9.493334z m-187.648 0l66.346667 0a9.514667 9.514667 0 0 1 9.493333 9.493334l0 66.346666c0 5.226667-4.266667 9.493333-9.472 9.493334l-66.368 0c-5.226667 0-9.493333-4.266667-9.493333-9.472l0-66.368c0-5.226667 4.266667-9.493333 9.493333-9.493334z m375.296 0l66.368 0a9.514667 9.514667 0 0 1 9.493333 9.493334l0 66.346666c0 5.226667-4.266667 9.493333-9.493333 9.493334l-66.346667 0c-5.226667 0-9.493333-4.266667-9.493333-9.472l0-66.368c0-5.226667 4.266667-9.493333 9.472-9.493334zM90.88 878.61333366l66.346667 0a9.514667 9.514667 0 0 1 9.493333 9.472L166.72 954.45333366c0 5.226667-4.266667 9.493333-9.472 9.49333299l-66.368 1e-8c-5.226667 0-9.493333-4.266667-9.493333-9.493333l1e-8-66.346667c0-5.226667 4.266667-9.493333 9.49333299-9.493333z m375.296 0l66.368 0a9.514667 9.514667 0 0 1 9.493333 9.472L542.037333 954.45333366c0 5.226667-4.266667 9.493333-9.493333 9.493333l-66.346667 0c-5.226667 0-9.493333-4.266667-9.493333-9.493333l0-66.346667c0-5.226667 4.266667-9.493333 9.472-9.493333zM90.88 315.64799966l66.346667 0a9.514667 9.514667 0 0 1 9.493333 9.493334l0 66.346666c0 5.226667-4.266667 9.493333-9.472 9.493334l-66.368 0c-5.226667 0-9.493333-4.266667-9.493333-9.472l0-66.368c0-5.226667 4.266667-9.493333 9.493333-9.493334z m375.29599999 0l66.36800001 0a9.514667 9.514667 0 0 1 9.493333 9.493334l0 66.346666c0 5.226667-4.266667 9.493333-9.493333 9.493334l-66.346667 0c-5.226667 0-9.493333-4.266667-9.493333-9.472l0-66.368c0-5.226667 4.266667-9.493333 9.47199999-9.493334zM90.88 690.98666666l66.346667 0a9.514667 9.514667 0 0 1 9.493333 9.472l0 66.368c0 5.226667-4.266667 9.493333-9.472 9.493333l-66.368 0c-5.226667 0-9.493333-4.266667-9.493333-9.493333l0-66.368c0-5.205333 4.266667-9.472 9.493333-9.472z m375.296 0l66.368 0a9.514667 9.514667 0 0 1 9.493333 9.472l0 66.368c0 5.226667-4.266667 9.493333-9.493333 9.493333l-66.346667 0c-5.226667 0-9.493333-4.266667-9.493333-9.493333l0-66.368c0-5.205333 4.266667-9.472 9.472-9.472z'],
  ...props
});

const BorderVerticalBetaNormal = props => createSvgIcon({
  name: 'border-vertical-beta-normal',
  viewBox: '0 0 1024 1024',
  path: ['M585.344 960h-146.666667a11.989333 11.989333 0 0 1-12.010666-12.010667V76.010667c0-6.634667 5.376-12.010667 12.010666-12.010667h146.666667c6.613333 0 11.989333 5.376 11.989333 11.989333v872.021334c0 6.613333-5.376 11.989333-11.989333 11.989333z', 'M554.666667 910.144V113.856A7.210667 7.210667 0 0 0 547.477333 106.666667h-70.954666a7.210667 7.210667 0 0 0-7.189334 7.210666v796.266667c0 3.968 3.221333 7.189333 7.210667 7.189333h70.933333a7.210667 7.210667 0 0 0 7.189334-7.189333z', 'M272.981333 856.106667v66.346666c0 5.226667 4.266667 9.493333 9.493334 9.493334h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.493334v-66.346666c0-5.226667-4.266667-9.493333-9.472-9.493334H282.453333c-5.226667 0-9.493333 4.266667-9.493333 9.472z m584.298667 0v66.346666c0 5.226667 4.266667 9.493333 9.472 9.493334h66.368c5.226667 0 9.493333-4.266667 9.493333-9.493334v-66.346666c0-5.226667-4.266667-9.493333-9.493333-9.493334h-66.346667c-5.226667 0-9.493333 4.266667-9.493333 9.472z m-780.650667 0v66.346666c0 5.226667 4.266667 9.493333 9.493334 9.493334h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.493334v-66.346666c0-5.226667-4.266667-9.493333-9.472-9.493334H86.122667c-5.226667 0-9.493333 4.266667-9.493334 9.472z m593.002667 0v66.346666c0 5.226667 4.266667 9.493333 9.472 9.493334h66.368c5.226667 0 9.493333-4.266667 9.493333-9.493334v-66.346666c0-5.226667-4.266667-9.493333-9.493333-9.493334h-66.368c-5.205333 0-9.472 4.266667-9.472 9.472zM76.629333 668.416v66.368c0 5.226667 4.266667 9.493333 9.493334 9.493333h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.493333v-66.368c0-5.205333-4.266667-9.472-9.472-9.472H86.122667c-5.226667 0-9.493333 4.266667-9.493334 9.472z m780.650667 0v66.368c0 5.226667 4.266667 9.493333 9.472 9.493333h66.368c5.226667 0 9.493333-4.266667 9.493333-9.493333v-66.368c0-5.205333-4.266667-9.472-9.493333-9.472h-66.346667c-5.226667 0-9.493333 4.266667-9.493333 9.472z m0-375.296v66.346667c0 5.226667 4.266667 9.493333 9.472 9.493333h66.368c5.226667 0 9.493333-4.266667 9.493333-9.472V293.12c0-5.226667-4.266667-9.493333-9.493333-9.493333h-66.346667c-5.226667 0-9.493333 4.266667-9.493333 9.493333z m-780.650667 0v66.346667c0 5.226667 4.266667 9.493333 9.493334 9.493333h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.472V293.12c0-5.226667-4.266667-9.493333-9.472-9.493333H86.122667c-5.226667 0-9.493333 4.266667-9.493334 9.493333z m0-187.669333v66.389333c0 5.205333 4.266667 9.472 9.493334 9.472h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.472V105.472c0-5.205333-4.266667-9.472-9.472-9.472H86.122667c-5.226667 0-9.493333 4.266667-9.493334 9.472z m0 375.317333v66.346667c0 5.226667 4.266667 9.493333 9.493334 9.493333h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.472v-66.368c0-5.226667-4.266667-9.493333-9.472-9.493333H86.122667c-5.226667 0-9.493333 4.266667-9.493334 9.493333zM857.28 105.472v66.389333c0 5.205333 4.266667 9.472 9.472 9.472h66.368c5.226667 0 9.493333-4.266667 9.493333-9.472V105.472c0-5.205333-4.266667-9.472-9.493333-9.472h-66.346667c-5.226667 0-9.493333 4.266667-9.493333 9.472z m0 375.317333v66.346667c0 5.226667 4.266667 9.493333 9.472 9.493333h66.368c5.226667 0 9.493333-4.266667 9.493333-9.472v-66.368c0-5.226667-4.266667-9.493333-9.493333-9.493333h-66.346667c-5.226667 0-9.493333 4.266667-9.493333 9.493333zM272.981333 105.472v66.389333c0 5.205333 4.266667 9.472 9.493334 9.472h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.472V105.472c0-5.205333-4.266667-9.472-9.472-9.472H282.453333c-5.226667 0-9.493333 4.266667-9.493333 9.472z m0 375.317333v66.346667c0 5.226667 4.266667 9.493333 9.493334 9.493333h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.472v-66.368c0-5.226667-4.266667-9.493333-9.472-9.493333H282.453333c-5.226667 0-9.493333 4.266667-9.493333 9.493333zM669.653333 105.472v66.389333c0 5.205333 4.266667 9.472 9.472 9.472h66.368c5.226667 0 9.493333-4.266667 9.493334-9.472V105.472c0-5.205333-4.266667-9.472-9.493334-9.472h-66.368c-5.205333 0-9.472 4.266667-9.472 9.472z m0 375.317333v66.346667c0 5.226667 4.266667 9.493333 9.472 9.493333h66.368c5.226667 0 9.493333-4.266667 9.493334-9.472v-66.368c0-5.226667-4.266667-9.493333-9.493334-9.493333h-66.368c-5.205333 0-9.472 4.266667-9.472 9.493333z'],
  ...props
});

const BrushBetaNormal = props => createSvgIcon({
  name: 'brush-beta',
  viewBox: '0 0 1024 1024',
  path: ['M505.26 85.33h36.05c22.53 0 42.97 8.7 58.03 22.87a81 81 0 0125.3 51.42l.34 7.68v141.27h122.03c66.81 0 121.47 51.2 125.31 115.66l.21 7.26v289.45c0 18.35-4.22 36.48-12.24 52.95l-4.35 8.1-42.63 72.8c-13.78 23.55-38.4 38.74-65.7 40.95l-6.92.26H148.48a42.54 42.54 0 01-21.5-5.8 40.53 40.53 0 01-16.81-51.63l2.38-4.56 37.17-60.76a121.31 121.31 0 0017.5-53.63l.33-9.48V431.5c0-65.45 52.27-118.96 118.19-122.71l7.38-.21h128.43V167.25c0-43.09 33.96-78.42 77.14-81.66l6.57-.26h36.05zm283.22 468.31l-537.22.69v155.81c0 32.47-7.85 64.43-22.9 93.27l-5.98 10.67 335.49-.04 89.77-155.57a8.53 8.53 0 0115.91 4.27l-.04 151.3h76.84l42.63-72.75a40.36 40.36 0 005.16-15.02l.34-5.33v-167.3zm-248.2-386.39h-36v141.32c0 43.09-34 78.42-77.19 81.7l-6.52.26H293.12a41.56 41.56 0 00-41.56 36.18l-.3 4.78-.04 40.92 537.22-.69V431.5a41.3 41.3 0 00-36.95-40.7l-4.9-.26H623.95c-44.03 0-80.13-33.28-83.46-75.52l-.25-6.4V167.25z'],
  ...props
});

const CalendarBetaNormal = props => createSvgIcon({
  name: 'calendar-beta',
  viewBox: '0 0 1075 1024',
  path: ['M722.76 90.13a42.18 42.18 0 0142.18 42.17v42.18h6.5c57.78 0 86.98 5.2 117.37 20.2 27.96 13.81 50.17 34.3 65.12 60.1 16.24 28.05 21.89 55.02 21.89 108.35v381.86c0 53.35-5.63 80.28-21.89 108.33-14.97 25.81-37.16 46.3-65.12 60.12-30.37 15-59.57 20.2-117.38 20.2H294.51c-57.78 0-86.99-5.2-117.38-20.2-27.96-13.81-50.16-34.3-65.12-60.1-16.23-28.07-21.89-55.04-21.89-108.37V363.13c0-53.35 5.64-80.28 21.9-108.33 14.97-25.81 37.15-46.3 65.11-60.12 30.37-15 59.58-20.2 117.38-20.2h6.5V132.3a42.18 42.18 0 1184.35 0v42.18h295.23V132.3a42.18 42.18 0 0142.17-42.18zm54.64 168.7H294.5c-45.05 0-61.07 2.8-77.56 10.75-13.29 6.41-23.43 15.6-30.54 27.59-8.81 14.88-11.91 29.35-11.91 70.05v373.64c0 40.7 3.1 55.18 11.91 70.07a69.7 69.7 0 0030.54 27.59c16.49 7.95 32.51 10.75 77.58 10.75h476.92c45.07 0 61.1-2.8 77.6-10.75a69.7 69.7 0 0030.52-27.59c8.82-14.89 11.92-29.37 11.92-70.07V367.24c0-40.7-3.1-55.19-11.92-70.07a69.7 69.7 0 00-30.53-27.59c-15.73-7.59-31.07-10.48-71.62-10.75zm-33.55 147.61a42.18 42.18 0 110 84.36H322.1a42.18 42.18 0 110-84.36h421.76z'],
  ...props
});

const CatalogueBetaNormal = props => createSvgIcon({
  name: 'catalogue-beta',
  viewBox: '0 0 1024 1024',
  path: ['M194.44 757.76h659.7c21.42 0 38.79 18.35 38.79 40.96 0 21.01-15 38.34-34.29 40.67l-4.5.29h-659.7c-21.42 0-38.8-18.35-38.8-40.96 0-21.01 15-38.34 34.3-40.67l4.5-.29h659.7zm0-286.72H851.3c21.47 0 38.83 18.35 38.83 40.96 0 21.01-14.99 38.34-34.28 40.67l-4.5.29H194.4c-21.43 0-38.8-18.35-38.8-40.96 0-21.01 15-38.34 34.3-40.67l4.5-.29h656.87zm654.99-286.72c21.46 0 38.83 18.35 38.83 40.96s-17.37 40.96-38.83 40.96H194.48c-21.46 0-38.83-18.35-38.83-40.96s17.37-40.96 38.79-40.96z'],
  ...props
});

const CategoryBetaNormal = props => createSvgIcon({
  name: 'category-beta',
  viewBox: '0 0 1024 1024',
  path: ['M198.66 194.13a32 32 0 010 64h-43.44v228.53h46.6a32 32 0 0131.7 27.64l.3 4.36a32 32 0 01-32 32h-46.6v219.47h125.19a32 32 0 110 64H123.22a32 32 0 01-32-32v-576a32 32 0 0132-32zm654.67 565.9a42.67 42.67 0 010 85.32H384a42.67 42.67 0 010-85.33zM384 475.94h469.33a42.67 42.67 0 015 85.07l-5 .26H384a42.67 42.67 0 01-5-85.03l5-.26h469.33zM384 192h469.33a42.67 42.67 0 015 85.03l-5 .3H384a42.67 42.67 0 01-5-85.03l5-.3h469.33z'],
  ...props
});

const CategoryFillBetaNormal = props => createSvgIcon({
  name: 'category-fill-beta',
  viewBox: '0 0 1024 1024',
  path: ['M851.37 725.33a85.33 85.33 0 110 170.67h-384a85.33 85.33 0 110-170.67h384zM180.82 337.07a42.67 42.67 0 0142.37 37.67l.3 5v102.9h71.12a42.67 42.67 0 0142.41 37.72l.26 5a42.67 42.67 0 01-37.67 42.36l-5 .3-71.12-.04v212.05h53.08a42.67 42.67 0 014.99 85.08l-5 .3H223.5a85.33 85.33 0 01-85.12-78.94l-.22-6.4V379.73a42.67 42.67 0 0142.67-42.66zm672.51 89.6a85.33 85.33 0 110 170.66h-384a85.33 85.33 0 110-170.66h384zM851.37 128a85.33 85.33 0 110 170.67h-640a85.33 85.33 0 110-170.67h640z'],
  ...props
});

const CellHeightBetaNormal = props => createSvgIcon({
  name: 'cell-height-beta',
  viewBox: '0 0 1024 1024',
  path: ['M128 272c0-64.09 45.4-118.49 105.47-122.45l7-.22h314.2a42.67 42.67 0 014.99 85.04l-5 .3h-314.2c-12.45 0-24.87 13.05-26.87 32l-.26 5.33v480c0 20.01 11.4 34.69 23.77 37.03l3.41.3h314.16a42.67 42.67 0 014.99 85.04l-5 .3h-314.2c-61.13 0-108.8-52.06-112.25-115.33L128 752V272zm677.63 465.92h43.52a21.33 21.33 0 0117.07 34.13L779.6 887.47a21.33 21.33 0 01-34.14 0L658.86 772a21.33 21.33 0 0117.07-34.13l43.52.04V297h-43.52a21.33 21.33 0 01-17.07-34.13l86.61-115.41a21.33 21.33 0 0134.14 0l86.6 115.45a21.33 21.33 0 01-17.06 34.14l-43.52-.05v440.92z'],
  ...props
});

const CellPictureBetaNormal = props => createSvgIcon({
  name: 'cell-picture-beta',
  viewBox: '0 0 1024 1024',
  path: ['M288.43 562.6V192h-17.67c-39.12 0-48.72 1.83-58.37 7a31.02 31.02 0 00-13.4 13.4c-5.11 9.64-6.99 19.2-6.99 58.36V562.6h96.43zm136.96 0H832V508.3a42.97 42.97 0 01-5.5-4.7L716.03 375.17a42.67 42.67 0 00-57.13-2.9L425.4 562.6zM832 379.52v-108.8c0-39.08-1.83-48.64-7-58.33a31.02 31.02 0 00-13.4-13.4c-9.64-5.11-19.2-6.99-58.36-6.99H373.76v302.6l231.25-188.47a128 128 0 01171.35 8.7L832 379.53zM373.76 647.94V832h379.48c39.12 0 48.72-1.83 58.37-7a31.02 31.02 0 0013.4-13.4c5.11-9.64 6.99-19.2 6.99-58.36v-105.3H373.76zm-85.33 0H192v105.3c0 39.12 1.83 48.72 7 58.37a31.24 31.24 0 0013.4 13.4c9.64 5.11 19.2 6.99 58.36 6.99h17.67V647.94zm-17.67-541.27h482.48c57.04 0 77.74 5.97 98.6 17.06a116.12 116.12 0 0148.38 48.43c11.18 20.86 17.11 41.56 17.11 98.56v482.56c0 57-5.97 77.7-17.06 98.56a116.3 116.3 0 01-48.43 48.38c-20.86 11.18-41.56 17.11-98.56 17.11h-482.6c-57 0-77.7-5.97-98.56-17.06a116.3 116.3 0 01-48.39-48.47c-11.18-20.87-17.1-41.56-17.1-98.56V270.68c0-57 5.97-77.7 17.06-98.56a116.3 116.3 0 0148.51-48.39c20.87-11.18 41.56-17.1 98.56-17.1zM458.66 352a53.33 53.33 0 110-106.67 53.33 53.33 0 010 106.67z'],
  ...props
});

const CellWidthBetaNormal = props => createSvgIcon({
  name: 'cell-width-beta',
  viewBox: '0 0 1024 1024',
  path: ['M752 128c64.09 0 118.49 45.4 122.45 105.47l.22 7v314.2a42.67 42.67 0 01-85.04 4.99l-.3-5v-314.2c0-12.45-13.05-24.87-32-26.87l-5.33-.26H272c-20.01 0-34.69 11.4-37.03 23.77l-.3 3.41v314.16a42.67 42.67 0 01-85.04 4.99l-.3-5v-314.2c0-61.13 52.06-108.8 115.33-112.25L272 128h480zM286.08 805.63v43.52a21.33 21.33 0 01-34.13 17.07l-115.42-86.66a21.33 21.33 0 010-34.13L252 658.82a21.33 21.33 0 0134.13 17.06l-.04 43.52H727v-43.52a21.33 21.33 0 0134.13-17.06l115.41 86.6a21.33 21.33 0 010 34.14L761.1 866.18a21.33 21.33 0 01-34.14-17.07l.05-43.52H286.08z'],
  ...props
});

const CheckBetaNormal = props => createSvgIcon({
  name: 'check-beta',
  viewBox: '0 0 1024 1024',
  path: ['M410.22 599.6l411.27-358.4a54.71 54.71 0 0177.38 77.37L434.62 782.8a54.54 54.54 0 01-38.68 16.02c-14 0-28-5.34-38.69-16.02L125.13 550.69a54.71 54.71 0 1177.37-77.38L380.55 601a23.94 23.94 0 0029.67-1.4z'],
  ...props
});

const CheckCircleBetaNormal = props => createSvgIcon({
  name: 'check-circle-beta',
  viewBox: '0 0 1024 1024',
  path: ['M490.67 42.67c247.42 0 448 200.57 448 448s-200.58 448-448 448-448-200.58-448-448 200.57-448 448-448zm0 85.33a362.67 362.67 0 100 725.33 362.67 362.67 0 000-725.33zm225.32 181.38a40.5 40.5 0 010 51.7L445.6 671.4a29.87 29.87 0 01-22.53 10.67 29.87 29.87 0 01-22.57-10.67L265.4 516.22a40.5 40.5 0 010-51.7 29.06 29.06 0 0145.05 0l103.68 85.33c5.3 4.35 12.42 3.96 17.33-.9l239.53-239.57a29.06 29.06 0 0145.05 0z'],
  ...props
});

const CheckSquareBetaNormal = props => createSvgIcon({
  name: 'check-square-beta',
  viewBox: '0 0 1024 1024',
  path: ['M753.24 106.67c57.04 0 77.74 5.97 98.6 17.06a116.12 116.12 0 0148.38 48.43c11.18 20.86 17.11 41.56 17.11 98.56v482.56c0 57-5.97 77.7-17.06 98.56a116.3 116.3 0 01-48.43 48.38c-20.86 11.18-41.56 17.11-98.56 17.11h-482.6c-57 0-77.7-5.97-98.56-17.06a116.3 116.3 0 01-48.39-48.47c-11.18-20.87-17.1-41.56-17.1-98.56V270.68c0-57 5.97-77.7 17.06-98.56a116.3 116.3 0 0148.51-48.39c20.87-11.18 41.56-17.1 98.56-17.1h482.56zm7.93 85.33h-490.4c-39.13 0-48.73 1.83-58.38 7a31.02 31.02 0 00-13.4 13.4c-4.77 8.95-6.7 17.83-6.95 50.43l-.04 490.4c0 39.13 1.83 48.73 7 58.38a31.24 31.24 0 0013.4 13.4c9.64 5.11 19.2 6.99 58.36 6.99h482.48c39.12 0 48.72-1.83 58.37-7a31.02 31.02 0 0013.4-13.4c5.11-9.64 6.99-19.2 6.99-58.36V270.76c0-39.12-1.83-48.72-7-58.37a31.02 31.02 0 00-13.4-13.4c-8.95-4.77-17.83-6.7-50.43-6.95zm-31.06 112.77l7.55 2a19.84 19.84 0 019.99 32.05L471.2 664.02a42.67 42.67 0 01-64 1.15L278.27 523.82a33.1 33.1 0 012.05-46.72 39.77 39.77 0 0150.77-2.52l74.84 56.15a42.67 42.67 0 0054.61-2.86L690.1 314.71a42.67 42.67 0 0140.02-9.94z'],
  ...props
});

const CheckboxBetaNormal = props => createSvgIcon({
  name: 'checkbox-beta',
  viewBox: '0 0 1024 1024',
  path: ['M270.76 106.67h482.48c57.04 0 77.74 5.97 98.6 17.06a116.12 116.12 0 0148.38 48.43c11.18 20.86 17.11 41.56 17.11 98.56v482.56c0 57-5.97 77.7-17.06 98.56a116.3 116.3 0 01-48.43 48.38c-20.86 11.18-41.56 17.11-98.56 17.11h-482.6c-57 0-77.7-5.97-98.56-17.06a116.3 116.3 0 01-48.39-48.47c-11.18-20.87-17.1-41.56-17.1-98.56V270.68c0-57 5.97-77.7 17.06-98.56a116.3 116.3 0 0148.51-48.39c20.87-11.18 41.56-17.1 98.56-17.1zm0 85.33c-39.12 0-48.72 1.83-58.37 7a31.02 31.02 0 00-13.4 13.4c-5.11 9.64-6.99 19.2-6.99 58.36v482.48c0 39.12 1.83 48.72 7 58.37a31.24 31.24 0 0013.4 13.4c9.64 5.11 19.2 6.99 58.36 6.99h482.48c39.12 0 48.72-1.83 58.37-7a31.02 31.02 0 0013.4-13.4c5.11-9.64 6.99-19.2 6.99-58.36V270.76c0-39.12-1.83-48.72-7-58.37a31.02 31.02 0 00-13.4-13.4c-9.64-5.11-19.2-6.99-58.36-6.99H270.76zm60.33 282.58l74.84 56.15a42.67 42.67 0 0054.61-2.86L690.1 314.71a42.67 42.67 0 0140.02-9.94l7.55 2a19.84 19.84 0 019.99 32.05L471.2 664.02a42.67 42.67 0 01-64 1.15L278.27 523.82a33.1 33.1 0 012.05-46.72 39.77 39.77 0 0150.77-2.52z'],
  ...props
});

const CheckboxCheckedNormal = props => createSvgIcon({
  name: 'checkbox-checked',
  viewBox: '0 0 1024 1024',
  path: ['M445.098667 106.666667a42.666667 42.666667 0 0 1 3.2 85.226666l-3.2 0.106667H256a64 64 0 0 0-63.893333 60.245333L192 256v512a64 64 0 0 0 60.245333 63.893333L256 832h512a64 64 0 0 0 63.893333-60.245333L832 768v-189.098667a42.666667 42.666667 0 0 1 85.226667-3.2l0.106666 3.2V768a149.333333 149.333333 0 0 1-144.213333 149.248L768 917.333333H256a149.333333 149.333333 0 0 1-149.248-144.213333L106.666667 768V256a149.333333 149.333333 0 0 1 144.213333-149.248L256 106.666667h189.098667z', 'M842.261333 121.557333a42.666667 42.666667 0 0 1 66.986667 52.8l-2.176 2.752-384 448a42.666667 42.666667 0 0 1-62.101333 2.858667l-2.410667-2.538667-149.333333-170.666666a42.666667 42.666667 0 0 1 61.674666-58.858667l2.56 2.666667 116.864 133.568L842.261333 121.557333z'],
  ...props
});

const CheckboxFillBetaNormal = props => createSvgIcon({
  name: 'checkbox-fill-beta',
  viewBox: '0 0 1024 1024',
  path: ['M476.3 575.44a16 16 0 01-19.84.94l-102.84-73.75a32 32 0 00-45.26 45.25l135.76 135.76c6.25 6.25 14.44 9.37 22.63 9.37s16.37-3.12 22.62-9.37L760.9 412.12a32 32 0 00-45.25-45.25L476.29 575.44zM64.01 512C64.02 264.6 264.6 64.02 512 64.02S959.98 264.6 959.98 512 759.4 959.98 512 959.98 64.02 759.4 64.02 512z'],
  ...props
});

const CheckboxNormal = props => createSvgIcon({
  name: 'checkbox',
  viewBox: '0 0 1024 1024',
  path: ['M808.42 0A215.58 215.58 0 011024 215.58v592.84A215.58 215.58 0 01808.42 1024H215.58A215.58 215.58 0 010 808.42V215.58A215.58 215.58 0 01215.58 0h592.84zm0 107.79H215.58a107.79 107.79 0 00-107.66 102.4l-.13 5.39v592.84a107.79 107.79 0 00102.4 107.66l5.39.13h592.84a107.79 107.79 0 00107.66-102.4l.13-5.39V215.58a107.79 107.79 0 00-102.4-107.66l-5.39-.13z'],
  ...props
});

const ChecklistCheckedBetaNormal = props => createSvgIcon({
  name: 'checklist-checked-beta',
  viewBox: '0 0 1024 1024',
  path: ['M808.42 0A215.58 215.58 0 011024 215.58v592.84A215.58 215.58 0 01808.42 1024H215.58A215.58 215.58 0 010 808.42V215.58A215.58 215.58 0 01215.58 0h592.84zm6.85 281.38a53.9 53.9 0 00-75.78 8.2l-265.62 330.2L334.74 479.1l-3.4-3.18a53.9 53.9 0 00-73.24 78.95l181.63 183.68 3.15 2.96a53.9 53.9 0 0077.15-7.06L823.46 357.2l2.64-3.56a53.9 53.9 0 00-10.83-72.22z'],
  ...props
});

const ChecklistUncheckBetaNormal = props => createSvgIcon({
  name: 'checklist-uncheck-beta',
  viewBox: '0 0 1024 1024',
  path: ['M808.42 0A215.58 215.58 0 011024 215.58v592.84A215.58 215.58 0 01808.42 1024H215.58A215.58 215.58 0 010 808.42V215.58A215.58 215.58 0 01215.58 0h592.84zm0 107.79H215.58a107.79 107.79 0 00-107.66 102.4l-.13 5.39v592.84a107.79 107.79 0 00102.4 107.66l5.39.13h592.84a107.79 107.79 0 00107.66-102.4l.13-5.39V215.58a107.79 107.79 0 00-102.4-107.66l-5.39-.13z'],
  ...props
});

const CircleLoadingBetaNormal = props => createSvgIcon({
  name: 'circle-loading-beta',
  viewBox: '0 0 1024 1024',
  path: ['M96 512a35 35 0 1170 0c0 191.09 154.91 346 346 346s346-154.91 346-346-154.91-346-346-346a35 35 0 110-70c229.75 0 416 186.25 416 416S741.75 928 512 928 96 741.75 96 512z'],
  ...props
});

const ClearDataBetaNormal = props => createSvgIcon({
  name: 'clear-data-beta',
  viewBox: '0 0 1024 1024',
  path: ['M528.43 85.33a128 128 0 01128 128v128A42.67 42.67 0 00699.09 384h90.24a128 128 0 01128 128v298.67a128 128 0 01-128 128H234.67a128 128 0 01-128-128V512a128 128 0 01128-128h91.18a42.67 42.67 0 0042.66-42.67v-128a128 128 0 01128-128h31.92zM832 640H192v170.67a42.67 42.67 0 0042.67 42.66h64V768a42.67 42.67 0 0185.03-5l.3 5v85.33h85.33v-128a42.67 42.67 0 0185.34 0v128H640V768a42.67 42.67 0 0185.03-5l.3 5v85.33h64A42.67 42.67 0 00832 810.67V640zM528.43 170.67H496.5a42.67 42.67 0 00-42.66 42.66v128a128 128 0 01-128 128h-91.18A42.67 42.67 0 00192 512v42.67h640V512a42.67 42.67 0 00-42.67-42.67H699.1a128 128 0 01-128-128v-128a42.67 42.67 0 00-42.66-42.66z'],
  ...props
});

const CloseBetaNormal = props => createSvgIcon({
  name: 'close-beta',
  viewBox: '0 0 1024 1024',
  path: ['M236.42 845.57a58 58 0 01-41.01-99l551.16-551.16a58 58 0 1182.02 82.02L277.43 828.6a57.81 57.81 0 01-41.01 16.98z', 'M787.58 845.57a57.83 57.83 0 01-41.01-16.98L195.41 277.43a58 58 0 0182.02-82.02l551.16 551.16a58 58 0 01-41.01 99z'],
  ...props
});

const CodeBlockBetaNormal = props => createSvgIcon({
  name: 'code-block-beta',
  viewBox: '0 0 1024 1024',
  path: ['M810.67 128c70.7 0 128 51.58 128 115.2v537.6c0 63.62-57.3 115.2-128 115.2H213.33c-70.7 0-128-51.58-128-115.2V243.2c0-63.62 57.3-115.2 128-115.2h597.34zm0 85.33H213.33c-23.55 0-42.66 16.73-42.66 37.34v522.66c0 20.61 19.11 37.34 42.66 37.34h597.34c23.55 0 42.66-16.73 42.66-37.34V250.67c0-20.61-19.11-37.34-42.66-37.34zM513.15 329.51a42.67 42.67 0 0182 23.64L493.54 706.26a42.67 42.67 0 01-82.01-23.6zm153.18 81.75l123.13 96.43a42.67 42.67 0 01-1.28 68.14l-123.18 89a42.67 42.67 0 01-50-69.16l77.22-55.77-78.5-61.44a42.67 42.67 0 0152.56-67.2zm-313.48-9.34a42.67 42.67 0 0152.61 67.2l-78.5 61.44 77.18 55.77a42.67 42.67 0 01-49.96 69.12L231 566.49a42.67 42.67 0 01-1.28-68.19z'],
  ...props
});

const CommentBetaNormal = props => createSvgIcon({
  name: 'comment-beta',
  viewBox: '0 0 1024 1024',
  path: ['M792.02 141.35a112 112 0 01112 111.96v410.67a112 112 0 01-112 112.04H577.28L354.3 911.15a55.98 55.98 0 01-84.99-47.92v-87.25h-37.33a112 112 0 01-112-112V253.35a112 112 0 01112-112h560zm-128.9 335.96H360.88a35.54 35.54 0 00-35.54 35.59v18.47a35.54 35.54 0 0035.54 35.54h302.26a35.54 35.54 0 0035.54-35.54V512.9a35.54 35.54 0 00-35.54-35.59zm0-149.33H360.88a35.54 35.54 0 00-35.54 35.58v18.48a35.54 35.54 0 0035.54 35.54h302.26a35.54 35.54 0 0035.54-35.54v-18.48a35.54 35.54 0 00-35.54-35.58z'],
  ...props
});

const ComputerBetaNormal = props => createSvgIcon({
  name: 'computer-beta',
  viewBox: '0 0 1024 1024',
  path: ['M755.63 170.67A140.37 140.37 0 01896 311.04v273.92a140.37 140.37 0 01-140.37 140.37H554.67V768h170.66a42.67 42.67 0 010 85.33H298.67a42.67 42.67 0 010-85.33h170.66v-42.67H268.37A140.37 140.37 0 01128 584.96V311.04a140.37 140.37 0 01140.37-140.37h487.26zm0 85.33H268.37a55.04 55.04 0 00-55.04 55.04v273.92A55.06 55.06 0 00268.37 640h487.26a55.04 55.04 0 0055.04-55.04V311.04A55.04 55.04 0 00755.63 256zM384 512a42.67 42.67 0 110 85.33h-85.33a42.67 42.67 0 110-85.33z'],
  ...props
});

const ConstituencyAscendingBetaNormal = props => createSvgIcon({
  name: 'constituency-ascending-beta',
  viewBox: '0 0 1024 1024',
  path: ['M245.97 321.8h-43.52a21.33 21.33 0 01-17.06-34.14L272 172.25a21.33 21.33 0 0134.13 0l86.57 115.4a21.33 21.33 0 01-17.06 34.14h-43.52v503.47a43.1 43.1 0 11-86.19 0V321.79zm505.77 55.89a37.63 37.63 0 01-3.45.2H646.23l-21.33 49.08a36.6 36.6 0 01-67.2-29.23l107.73-247.72a36.6 36.6 0 0167.16 0l107.69 247.72a36.6 36.6 0 01-67.16 29.23l-21.38-49.24zm-31.78-73.05L699 256.43l-20.95 48.21h41.9zM828.5 607.87a36.6 36.6 0 01-4.9 38.62L678.65 823.64h116.6a36.6 36.6 0 010 73.21H601.4a36.6 36.6 0 01-28.33-59.82l144.93-177.1H601.4a36.6 36.6 0 010-73.26h193.87c14.51 0 27.05 8.44 32.99 20.69l.25.51z'],
  ...props
});

const ConstituencyDescendingBetaNormal = props => createSvgIcon({
  name: 'constituency-descending-beta',
  viewBox: '0 0 1024 1024',
  path: ['M332.12 731.82h43.52a21.33 21.33 0 0117.06 34.13l-86.6 115.46a21.33 21.33 0 01-34.14 0l-86.57-115.46a21.33 21.33 0 0117.06-34.13h43.52V213.76a43.1 43.1 0 1186.19 0v518.06zm419.62-354.13a37.63 37.63 0 01-3.45.2H646.23l-21.33 49.08a36.6 36.6 0 01-67.2-29.23l107.73-247.72a36.6 36.6 0 0167.16 0l107.69 247.72a36.6 36.6 0 01-67.16 29.23l-21.38-49.24zm-31.78-73.05L699 256.43l-20.95 48.21h41.9zM828.5 607.87a36.6 36.6 0 01-4.9 38.62L678.65 823.64h116.6a36.6 36.6 0 010 73.21H601.4a36.6 36.6 0 01-28.33-59.82l144.93-177.1H601.4a36.6 36.6 0 010-73.26h193.87c14.51 0 27.05 8.44 32.99 20.69l.25.51z'],
  ...props
});

const CopyBetaNormal = props => createSvgIcon({
  name: 'copy-beta',
  viewBox: '0 0 1024 1024',
  path: ['M140.8 320.98a42.67 42.67 0 0142.67 42.67v384a42.67 42.67 0 0042.66 42.66H652.8a42.67 42.67 0 010 85.34H226.13a128 128 0 01-128-128v-384a42.67 42.67 0 0142.67-42.67zM789.33 128A106.67 106.67 0 01896 234.67v384a106.67 106.67 0 01-106.67 106.66H362.67A106.67 106.67 0 01256 618.67v-384A106.67 106.67 0 01362.67 128h426.66zm0 85.33H362.67a21.33 21.33 0 00-21.34 21.34v384A21.33 21.33 0 00362.67 640h426.66a21.33 21.33 0 0021.34-21.33v-384a21.33 21.33 0 00-21.34-21.34z'],
  ...props
});

const CropBetaNormal = props => createSvgIcon({
  name: 'crop-beta',
  viewBox: '0 0 1024 1024',
  path: ['M650.12 241.39c66.11 0 119.7 52.79 123.44 118.82l.2 7.4v498.27a41.63 41.63 0 01-82.97 4.87l-.29-4.87V367.62c0-22.27-15.82-40.22-35.76-42.67l-4.66-.3h-251a41.63 41.63 0 01-4.88-82.97l4.88-.3h251.04zM294.99 125.82a41.63 41.63 0 0141.35 36.8l.29 4.83v490.43a41.63 41.63 0 0036.76 41.34l4.87.3h254.7a41.63 41.63 0 014.88 82.97l-4.87.29H378.26A124.9 124.9 0 01253.57 665.2l-.2-7.33V167.45a41.63 41.63 0 0141.62-41.63zm549.72 573.53l38.97.16a41.63 41.63 0 01-.38 83.27l-38.92-.17a41.63 41.63 0 01.33-83.26zM156.44 241.39l38.97.17a41.63 41.63 0 014.5 83.01l-4.88.25-38.92-.17a41.63 41.63 0 01.33-83.26z'],
  ...props
});

const CutBetaNormal = props => createSvgIcon({
  name: 'cut-beta',
  viewBox: '0 0 1024 1024',
  path: ['M298.67 149.33A149.33 149.33 0 01436.9 355.2l96.5 96.47 259.85-259.63a42.67 42.67 0 0160.33 60.38l-259.8 259.54 249.13 248.96a42.67 42.67 0 013.54 56.32l-3.54 4.05a42.67 42.67 0 01-60.33 0L533.42 572.33 430.08 675.67a149.33 149.33 0 11-60.37-60.37L473.05 512l-90.12-90.03a149.33 149.33 0 11-84.26-272.64zm0 533.34a64 64 0 100 128 64 64 0 000-128zm0-448a64 64 0 100 128 64 64 0 000-128z'],
  ...props
});

const DecimalPointMinusBetaNormal = props => createSvgIcon({
  name: 'decimal-point-minus-beta',
  viewBox: '0 0 1024 1024',
  path: ['M170.67000000000002 597.33a42.67 42.67 0 1085.33 0 42.67 42.67 0 10-85.33 0zM426.67 128H448a128 128 0 01128 128v256a128 128 0 01-128 128h-21.33a128 128 0 01-128-128V256a128 128 0 01128-128zm0 85.33A42.67 42.67 0 00384 256v256a42.67 42.67 0 0042.67 42.67H448A42.67 42.67 0 00490.67 512V256A42.67 42.67 0 00448 213.33h-21.33zM384.64 844.8a21.33 21.33 0 004.27 4.27L502.7 934.4a21.33 21.33 0 0034.13-17.07l-.04-42.7 277.5.04a42.67 42.67 0 000-85.34l-277.5-.04v-42.62a21.33 21.33 0 00-34.13-17.07L388.9 814.93a21.33 21.33 0 00-4.27 29.87z'],
  ...props
});

const DecimalPointPlusBetaNormal = props => createSvgIcon({
  name: 'decimal-point-plus-beta',
  viewBox: '0 0 1024 1024',
  path: ['M127.99999999999999 597.33a42.67 42.67 0 1085.33 0 42.67 42.67 0 10-85.33 0zM384 128h21.33a128 128 0 01128 128v256a128 128 0 01-128 128H384a128 128 0 01-128-128V256a128 128 0 01128-128zm0 85.33A42.67 42.67 0 00341.33 256v256A42.67 42.67 0 00384 554.67h21.33A42.67 42.67 0 00448 512V256a42.67 42.67 0 00-42.67-42.67H384zM725.33 128h21.34a128 128 0 01128 128v256a128 128 0 01-128 128h-21.34a128 128 0 01-128-128V256a128 128 0 01128-128zm0 85.33A42.67 42.67 0 00682.67 256v256a42.67 42.67 0 0042.66 42.67h21.34A42.67 42.67 0 00789.33 512V256a42.67 42.67 0 00-42.66-42.67h-21.34zM770.99 844.8a21.33 21.33 0 01-4.27 4.27l-113.8 85.33a21.33 21.33 0 01-34.13-17.07l.05-42.7-320.17.04a42.67 42.67 0 010-85.34l320.17-.04v-42.62a21.33 21.33 0 0134.13-17.07l113.75 85.33a21.33 21.33 0 014.27 29.87z'],
  ...props
});

const DeleteBetaNormal = props => createSvgIcon({
  name: 'delete-beta',
  viewBox: '0 0 1024 1024',
  path: ['M549.46 432.77c0-21.34 16.98-38.62 37.93-38.62 20.9 0 37.93 17.28 37.93 38.62v208.47c0 21.33-16.98 38.57-37.97 38.57a38.27 38.27 0 01-37.89-38.57V432.77zm-151.72 0c0-21.34 16.98-38.62 37.97-38.62 20.9 0 37.89 17.28 37.89 38.62v208.47c0 21.33-16.98 38.57-37.93 38.57a38.27 38.27 0 01-37.93-38.57V432.77zM718.2 297.64H301.06V741.6c0 42.67 33.92 77.23 75.81 77.23H642.4c41.86 0 75.82-34.56 75.82-77.23V297.64zm-116.14-77.22a76.16 76.16 0 00-73.47-57.86h-37.93c-35.33 0-65.03 24.58-73.48 57.9h184.88zm77.06 0H832c20.9 0 37.93 17.32 37.93 38.6 0 21.34-16.98 38.62-37.93 38.62h-37.93V741.6c0 85.29-67.93 154.41-151.68 154.41H376.87c-83.75 0-151.68-69.12-151.68-154.41V297.64h-37.97a38.27 38.27 0 01-37.89-38.61c0-21.33 16.98-38.57 37.93-38.57h152.88c9.34-76.25 73.17-135.13 150.53-135.13h37.93c77.35 0 141.22 58.93 150.53 135.13z'],
  ...props
});

const DeleteColumnBetaNormal = props => createSvgIcon({
  name: 'delete-column-beta',
  viewBox: '0 0 1024 1024',
  path: ['M635.56 640.13a42.67 42.67 0 011.84 60.33l-70.1 74.45 70.1 74.5a42.67 42.67 0 01-58.24 62.12l-3.93-3.67-66.52-70.7-66.47 70.7a42.67 42.67 0 11-62.17-58.45l70.06-74.5-70.06-74.45a42.67 42.67 0 0158.24-62.17l3.93 3.67 66.47 70.7 66.56-70.7a42.67 42.67 0 0160.3-1.83zM512 128a42.67 42.67 0 0142.37 37.67l.3 5V544a42.67 42.67 0 01-85.04 5l-.3-5V170.67A42.67 42.67 0 01512 128zm-362.67 10.24a42.67 42.67 0 0142.37 37.67l.3 4.95V379.4h152.83a42.67 42.67 0 015 85.04l-5 .3H192a85.33 85.33 0 01-85.12-78.94l-.21-6.4V180.91a42.67 42.67 0 0142.66-42.67zm728.84-1.7a42.67 42.67 0 0142.66 42.66v198.53a85.33 85.33 0 01-85.33 85.33H682.67a42.67 42.67 0 010-85.33H835.5V179.2a42.67 42.67 0 0142.67-42.67z'],
  ...props
});

const DeleteHangBetaNormal = props => createSvgIcon({
  name: 'delete-hang-beta',
  viewBox: '0 0 1024 1024',
  path: ['M810.67 213.33a128 128 0 01128 128v341.34a128 128 0 01-128 128H213.33a128 128 0 01-128-128V341.33a128 128 0 01128-128h597.34zm-597.34 85.34a42.67 42.67 0 00-42.66 42.66v341.34a42.67 42.67 0 0042.66 42.66h597.34a42.67 42.67 0 0042.66-42.66V341.33a42.67 42.67 0 00-42.66-42.66H213.33zm234.33 89.08l4 3.59L512 451.67l60.33-60.33a42.67 42.67 0 0156.32-3.59l4.01 3.59a42.67 42.67 0 010 60.33L572.33 512l60.33 60.33a42.67 42.67 0 01-56.32 63.92l-4-3.59L512 572.33l-60.33 60.33a42.67 42.67 0 01-56.32 3.59l-4.01-3.59a42.67 42.67 0 010-60.33L451.67 512l-60.33-60.33a42.67 42.67 0 0156.32-63.92z'],
  ...props
});

const DeleteLieBetaNormal = props => createSvgIcon({
  name: 'delete-lie-beta',
  viewBox: '0 0 1024 1024',
  path: ['M341.33 85.33h341.34a128 128 0 01128 128v597.34a128 128 0 01-128 128H341.33a128 128 0 01-128-128V213.33a128 128 0 01128-128zm0 85.34a42.67 42.67 0 00-42.66 42.66v597.34a42.67 42.67 0 0042.66 42.66h341.34a42.67 42.67 0 0042.66-42.66V213.33a42.67 42.67 0 00-42.66-42.66H341.33zm50 281l181 181a42.67 42.67 0 0060.33-60.34l-181-181a42.67 42.67 0 00-60.32 60.34zm181-60.33l-181 181a42.67 42.67 0 0060.34 60.32l181-181a42.67 42.67 0 00-60.34-60.32z'],
  ...props
});

const DeleteRowBetaNormal = props => createSvgIcon({
  name: 'delete-row-beta',
  viewBox: '0 0 1024 1024',
  path: ['M629.2 646.44a42.67 42.67 0 0060.34 1.84l74.45-70.06 74.5 70.06a42.67 42.67 0 0062.16-58.24l-3.67-3.89-70.74-66.56 70.74-66.47a42.67 42.67 0 10-58.45-62.17l-74.54 70.1-74.45-70.1a42.67 42.67 0 00-62.17 58.24l3.67 3.93 70.7 66.52-70.7 66.51a42.67 42.67 0 00-1.83 60.3zM117.09 522.92a42.67 42.67 0 0037.71 42.37l4.95.3h373.34a42.67 42.67 0 004.99-85.08l-5-.25H159.75a42.67 42.67 0 00-42.66 42.66zm10.24-362.66a42.67 42.67 0 0037.67 42.36l5 .3H368.5v152.83a42.67 42.67 0 0085.04 4.95l.3-4.95V202.92a85.33 85.33 0 00-78.98-85.16l-6.4-.21H170.03a42.67 42.67 0 00-42.67 42.66zm-1.7 728.83a42.67 42.67 0 0042.66 42.66H366.8a85.33 85.33 0 0085.33-85.33V693.6a42.67 42.67 0 00-85.33 0v152.83H168.28a42.67 42.67 0 00-42.67 42.67z'],
  ...props
});

const DingdriveAiBetaNormal = props => createSvgIcon({
  name: 'dingdrive-ai-beta',
  viewBox: '0 0 1024 1024',
  path: ['M648.41 0a73.14 73.14 0 0156.2 26.33l204.92 245.9a73.14 73.14 0 0115.95 34.7c.41 2.07.7 4.22.87 6.39l.13 3.63v560.76A146.29 146.29 0 01780.19 1024H243.81A146.29 146.29 0 0197.52 877.71V146.3A146.29 146.29 0 01243.81 0h404.6zm-87.65 97.52H243.81a48.76 48.76 0 00-48.64 45.1l-.12 3.67V877.7a48.76 48.76 0 0045.1 48.64l3.66.13h536.38a48.76 48.76 0 0048.64-45.1l.12-3.67v-512H609.52a48.76 48.76 0 01-48.64-45.1l-.12-3.66V97.52zM779.2 268.2l-120.9-145.1v145.1h120.9z', 'M433.69 438.86a35.64 35.64 0 0132.08 22.7l116.45 293.27a36.96 36.96 0 01-.2 27.73 35.58 35.58 0 01-19.26 19.38c-18.14 7.46-38.74-1.51-46.13-20.12l-24.72-62.17H373.27l-24.7 62.17c-7.38 18.6-27.98 27.58-46.12 20.12a35.55 35.55 0 01-19.27-19.38 37.01 37.01 0 01-.17-27.73l116.42-293.27a35.6 35.6 0 0131.82-22.7h2.44zm237.96 183.63c19.57 0 35.4 16.32 35.4 36.38V766.1c0 20.09-15.85 36.37-35.38 36.37-19.55 0-35.4-16.28-35.4-36.37V658.87c0-20.11 15.85-36.38 35.4-36.38zm-239.08-52.3l-30.77 77.49h61.56l-30.8-77.48zm239.1-44.93c19.55 0 35.38 16.14 35.38 36.04-.12 20-15.95 36.08-35.38 35.98-19.43.1-35.28-15.99-35.4-35.98.05-9.6 3.8-18.78 10.43-25.55a34.86 34.86 0 0124.97-10.49z'],
  ...props
});

const DingdriveDingdocBetaNormal = props => createSvgIcon({
  name: 'dingdrive-dingdoc-beta',
  viewBox: '0 0 1024 1024',
  path: ['M648.41 0a73.14 73.14 0 0156.2 26.33l204.92 245.9a73.14 73.14 0 0115.95 34.7c.41 2.07.7 4.22.87 6.39l.13 3.63v560.76A146.29 146.29 0 01780.19 1024H243.81A146.29 146.29 0 0197.52 877.71V146.3A146.29 146.29 0 01243.81 0h404.6zm-87.65 97.52H243.81a48.76 48.76 0 00-48.64 45.1l-.12 3.67V877.7a48.76 48.76 0 0045.1 48.64l3.66.13h536.38a48.76 48.76 0 0048.64-45.1l.12-3.67v-512H609.52a48.76 48.76 0 01-48.64-45.1l-.12-3.66V97.52zM779.2 268.2l-120.9-145.1v145.1h120.9z', 'M304.76 731.43h151.5a36.57 36.57 0 010 73.14h-151.5a36.57 36.57 0 010-73.14zM304.76 585.14h316.95q36.58 0 36.58 36.57 0 36.58-36.58 36.58H304.76q-36.57 0-36.57-36.58 0-36.57 36.57-36.57z'],
  ...props
});

const DingdriveDingexcelBetaNormal = props => createSvgIcon({
  name: 'dingdrive-dingexcel-beta',
  viewBox: '0 0 1024 1024',
  path: ['M648.41 0a73.14 73.14 0 0156.2 26.33l204.92 245.9a73.14 73.14 0 0115.95 34.7c.41 2.07.7 4.22.87 6.39l.13 3.63v560.76A146.29 146.29 0 01780.19 1024H243.81A146.29 146.29 0 0197.52 877.71V146.3A146.29 146.29 0 01243.81 0h404.6zm-87.65 97.52H243.81a48.76 48.76 0 00-48.64 45.1l-.12 3.67V877.7a48.76 48.76 0 0045.1 48.64l3.66.13h536.38a48.76 48.76 0 0048.64-45.1l.12-3.67v-512H609.52a48.76 48.76 0 01-48.64-45.1l-.12-3.66V97.52zM779.2 268.2l-120.9-145.1v145.1h120.9z', 'M633.9 475.43a60.95 60.95 0 0160.96 60.95V780.2a60.95 60.95 0 01-60.96 60.95H341.33a60.95 60.95 0 01-60.95-60.95v-243.8a60.95 60.95 0 0160.95-60.96zM402.3 670.48h-48.77V768h48.77v-97.52zm219.42 0H475.43V768H621.7v-97.52zM402.3 548.58h-48.77v48.75h48.77v-48.76zm219.42 0H475.43v48.75H621.7v-48.76z'],
  ...props
});

const DingdriveExcelBetaNormal = props => createSvgIcon({
  name: 'dingdrive-excel-beta',
  viewBox: '0 0 1024 1024',
  path: ['M648.41 0a73.14 73.14 0 0156.2 26.33l204.92 245.9a73.14 73.14 0 0115.95 34.7c.41 2.07.7 4.22.87 6.39l.13 3.63v560.76A146.29 146.29 0 01780.19 1024H243.81A146.29 146.29 0 0197.52 877.71V146.3A146.29 146.29 0 01243.81 0h404.6zm-87.65 97.52H243.81a48.76 48.76 0 00-48.64 45.1l-.12 3.67V877.7a48.76 48.76 0 0045.1 48.64l3.66.13h536.38a48.76 48.76 0 0048.64-45.1l.12-3.67v-512H609.52a48.76 48.76 0 01-48.64-45.1l-.12-3.66V97.52zM779.2 268.2l-120.9-145.1v145.1h120.9z', 'M588.46 520.29a36.57 36.57 0 0149.13 54.05l-91.26 91.85 91.26 91.86a36.57 36.57 0 01-49.13 54.08l-2.78-2.54-90.92-91.5-90.91 91.5-2.76 2.54a36.57 36.57 0 01-49.13-54.08l91.24-91.86-91.24-91.85a36.57 36.57 0 0149.13-54.07l2.76 2.53 90.91 91.48 90.94-91.48z'],
  ...props
});

const DingdriveKeynoteBetaNormal = props => createSvgIcon({
  name: 'dingdrive-keynote-beta',
  viewBox: '0 0 1024 1024',
  path: ['M648.41 0a73.14 73.14 0 0156.2 26.33l204.92 245.9a73.14 73.14 0 0115.95 34.7c.41 2.07.7 4.22.87 6.39l.13 3.63v560.76A146.29 146.29 0 01780.19 1024H243.81A146.29 146.29 0 0197.52 877.71V146.3A146.29 146.29 0 01243.81 0h404.6zm-87.65 97.52H243.81a48.76 48.76 0 00-48.64 45.1l-.12 3.67V877.7a48.76 48.76 0 0045.1 48.64l3.66.13h536.38a48.76 48.76 0 0048.64-45.1l.12-3.67v-512H609.52a48.76 48.76 0 01-48.64-45.1l-.12-3.66V97.52zM779.2 268.2l-120.9-145.1v145.1h120.9z', 'M706.68 670.87v22.26H523.12v114.93h48.2a14.82 14.82 0 010 29.67H452.68a14.82 14.82 0 110-29.67h48.2V693.15H317.34v-22.26h389.34zm-53.93-207.63c10.5 0 19.6 7.36 21.77 17.65l32.04 152.02a22.24 22.24 0 01-21.77 26.84H339.2a22.24 22.24 0 01-21.77-26.84l32.04-152.02a22.24 22.24 0 0121.77-17.65h281.5zm-28.55 40.2l-2 .17-39.67 8.9a7.41 7.41 0 00-3.6 12.49l6.68 6.65-28.21 28.23a18.53 18.53 0 01-30.26.15l-9.17-10.58-6.29-7.17a40.18 40.18 0 00-32.67-16.02 40.66 40.66 0 00-28.84 11.95l-.51.51-45.89 46.7c-4.78 5.6-4.78 10.8 0 15.74 4.76 4.88 9.97 4.88 15.73 0l44.74-44.79a18.53 18.53 0 0130.23-.12l9.17 10.58 6.26 7.17a40.18 40.18 0 0032.67 16.02 40.66 40.66 0 0028.85-11.95l.53-.51 29.5-30.04 8.22 8.22a7.41 7.41 0 0012.48-3.6l8.9-39.68a7.41 7.41 0 00-8.85-8.85l2-.17z'],
  ...props
});

const DingdriveNumbersBetaNormal = props => createSvgIcon({
  name: 'dingdrive-numbers-beta',
  viewBox: '0 0 1024 1024',
  path: ['M648.41 0a73.14 73.14 0 0156.2 26.33l204.92 245.9a73.14 73.14 0 0115.95 34.7c.41 2.07.7 4.22.87 6.39l.13 3.63v560.76A146.29 146.29 0 01780.19 1024H243.81A146.29 146.29 0 0197.52 877.71V146.3A146.29 146.29 0 01243.81 0h404.6zm-87.65 97.52H243.81a48.76 48.76 0 00-48.64 45.1l-.12 3.67V877.7a48.76 48.76 0 0045.1 48.64l3.66.13h536.38a48.76 48.76 0 0048.64-45.1l.12-3.67v-512H609.52a48.76 48.76 0 01-48.64-45.1l-.12-3.66V97.52zM779.2 268.2l-120.9-145.1v145.1h120.9z', 'M711.2 803.45a20.24 20.24 0 110 40.5H312.8a20.24 20.24 0 010-40.5h398.4zM456.11 608.99a35.92 35.92 0 0135.94 35.93v122.06a12.14 12.14 0 01-12.17 12.16h-47.5a12.14 12.14 0 01-12.14-12.16V644.92A35.9 35.9 0 01456.12 609zm107.74-170.13a35.91 35.91 0 0135.91 35.91v292.2a12.14 12.14 0 01-12.14 12.17h-47.52a12.14 12.14 0 01-12.14-12.16V474.77a35.9 35.9 0 0135.89-35.91zm107.71 101.28a35.9 35.9 0 0135.92 35.9v190.94a12.14 12.14 0 01-12.15 12.16h-47.49a12.14 12.14 0 01-12.17-12.16v-190.9a35.91 35.91 0 0135.9-35.94zM348.45 681.9a35.9 35.9 0 0135.87 35.91v49.16a12.14 12.14 0 01-12.14 12.16h-47.5a12.14 12.14 0 01-12.16-12.16v-49.16a35.92 35.92 0 0135.93-35.9z'],
  ...props
});

const DingdriveOtherBetaNormal = props => createSvgIcon({
  name: 'dingdrive-other-beta',
  viewBox: '0 0 1024 1024',
  path: ['M648.41 0a73.14 73.14 0 0156.2 26.33l204.92 245.9a73.14 73.14 0 0115.95 34.7c.41 2.07.7 4.22.87 6.39l.13 3.63v560.76A146.29 146.29 0 01780.19 1024H243.81A146.29 146.29 0 0197.52 877.71V146.3A146.29 146.29 0 01243.81 0h404.6zm-87.65 97.52H243.81a48.76 48.76 0 00-48.64 45.1l-.12 3.67V877.7a48.76 48.76 0 0045.1 48.64l3.66.13h536.38a48.76 48.76 0 0048.64-45.1l.12-3.67v-512H609.52a48.76 48.76 0 01-48.64-45.1l-.12-3.66V97.52zM779.2 268.2l-120.9-145.1v145.1h120.9z', 'M354.99 555.98c1.95 0 3.85.42 5.6 1.22l131.3 60.13c4.8 2.19 7.87 7 7.87 12.28V791.1a13.5 13.5 0 01-19.14 12.26L349.38 743.2a13.5 13.5 0 01-7.88-12.28V569.44a13.5 13.5 0 0113.51-13.48H355zm309.73 0a13.5 13.5 0 0113.5 13.51v161.45a13.5 13.5 0 01-7.87 12.26L539.1 803.35a13.5 13.5 0 01-19.14-12.31V629.59c0-5.27 3.1-10.07 7.87-12.26l131.3-60.1a13.5 13.5 0 015.6-1.25zM514.1 440l153.01 67.66a13.5 13.5 0 010 24.7l-152.87 67.6a13.5 13.5 0 01-10.9 0l-153.94-67.6a13.5 13.5 0 010-24.72L503.22 440a13.5 13.5 0 0110.88 0z'],
  ...props
});

const DingdrivePageBetaNormal = props => createSvgIcon({
  name: 'dingdrive-page-beta',
  viewBox: '0 0 1024 1024',
  path: ['M648.41 0a73.14 73.14 0 0156.2 26.33l204.92 245.9a73.14 73.14 0 0115.95 34.7c.41 2.07.7 4.22.87 6.39l.13 3.63v560.76A146.29 146.29 0 01780.19 1024H243.81A146.29 146.29 0 0197.52 877.71V146.3A146.29 146.29 0 01243.81 0h404.6zm-87.65 97.52H243.81a48.76 48.76 0 00-48.64 45.1l-.12 3.67V877.7a48.76 48.76 0 0045.1 48.64l3.66.13h536.38a48.76 48.76 0 0048.64-45.1l.12-3.67v-512H609.52a48.76 48.76 0 01-48.64-45.1l-.12-3.66V97.52zM779.2 268.2l-120.9-145.1v145.1h120.9z', 'M682.06 811.64c8.97 0 16.23 7.27 16.23 16.24v9.22a16.24 16.24 0 01-16.23 16.23H308.78a16.24 16.24 0 01-16.2-16.23v-9.22c0-8.97 7.26-16.24 16.23-16.24h373.27zm-344.92-99.13l57.4 57.4-65.15 17.7a8.12 8.12 0 01-9.95-9.96l17.7-65.14zM590.8 447.39l68.88 68.88-39.2 37.42 7.43 7.41 18.53-17.3 13.77 14.87-85.26 79.65-13.85-14.83 54.62-51-7.3-7.27L403.39 761.1 346 703.7l244.8-256.26v-.05zm87.53-18.58a48.7 48.7 0 010 68.83l-6.88 6.83-68.85-68.88 6.83-6.83a48.69 48.69 0 0168.87 0v.05z'],
  ...props
});

const DingdrivePdfBetaNormal = props => createSvgIcon({
  name: 'dingdrive-pdf-beta',
  viewBox: '0 0 1024 1024',
  path: ['M648.41 0a73.14 73.14 0 0156.2 26.33l204.92 245.9a73.14 73.14 0 0115.95 34.7c.41 2.07.7 4.22.87 6.39l.13 3.63v560.76A146.29 146.29 0 01780.19 1024H243.81A146.29 146.29 0 0197.52 877.71V146.3A146.29 146.29 0 01243.81 0h404.6zm-87.65 97.52H243.81a48.76 48.76 0 00-48.64 45.1l-.12 3.67V877.7a48.76 48.76 0 0045.1 48.64l3.66.13h536.38a48.76 48.76 0 0048.64-45.1l.12-3.67v-512H609.52a48.76 48.76 0 01-48.64-45.1l-.12-3.66V97.52zM779.2 268.2l-120.9-145.1v145.1h120.9z', 'M456.78 524.19l76.11.05c45.28 3.78 80.51 38.84 80.51 122.34 0 81.1-32.91 115.62-77.56 121.03l-3.97.39h-75.1a31.7 31.7 0 01-31.52-28.45l-.17-3.25V555.9a31.7 31.7 0 0128.45-31.53l3.25-.17zm-122.27 0a78.5 78.5 0 0178.38 74.05l.12 4.46v5.7a78.5 78.5 0 01-74.07 78.39l-4.43.12-20.39-.05v52.08a29.08 29.08 0 01-23.2 28.47l-2.88.44-2.98.15a29.09 29.09 0 01-28.91-26.09l-.15-2.97V553.25a29.09 29.09 0 0126.09-28.91l2.97-.15h49.45zm404.6 0a28.9 28.9 0 012.95 57.64l-2.95.14-53.1-.05v32.9h48.27c13.97 0 25.6 9.9 28.28 23.06l.47 2.88.14 2.95a28.89 28.89 0 01-25.94 28.74l-2.95.15-48.27-.05v66.39a29.08 29.08 0 01-23.21 28.47l-2.88.44-2.98.15a29.09 29.09 0 01-28.91-26.09l-.15-2.97V553.08a28.9 28.9 0 0125.94-28.74l2.95-.15h82.34zM526 581.97h-42.8v128.25l42.27.05c16.26-1.59 28.77-15.36 29.75-58.3l.05-5.53c0-45.5-12.15-61.61-27.8-64.27l-1.46-.2zm-194.72 0h-17.14v47.16h17.14a23.58 23.58 0 002.75-46.99l-2.75-.17z'],
  ...props
});

const DingdrivePictureBetaNormal = props => createSvgIcon({
  name: 'dingdrive-picture-beta',
  viewBox: '0 0 1024 1024',
  path: ['M648.41 0a73.14 73.14 0 0156.2 26.33l204.92 245.9a73.14 73.14 0 0115.95 34.7c.41 2.07.7 4.22.87 6.39l.13 3.63v560.76A146.29 146.29 0 01780.19 1024H243.81A146.29 146.29 0 0197.52 877.71V146.3A146.29 146.29 0 01243.81 0h404.6zm-87.65 97.52H243.81a48.76 48.76 0 00-48.64 45.1l-.12 3.67V877.7a48.76 48.76 0 0045.1 48.64l3.66.13h536.38a48.76 48.76 0 0048.64-45.1l.12-3.67v-512H609.52a48.76 48.76 0 01-48.64-45.1l-.12-3.66V97.52zM779.2 268.2l-120.9-145.1v145.1h120.9z', 'M405.19 593.29a32.5 32.5 0 100-65 32.5 32.5 0 000 65zm301.86 140.43v8.17a55.73 55.73 0 01-55.74 55.7H395.56l169.98-149.93a41.79 41.79 0 0157.22 1.78l84.29 84.28zm0-39.4l-64.61-64.58a69.66 69.66 0 00-95.33-2.98L356.28 795.14a55.76 55.76 0 01-39.33-53.23V519a55.73 55.73 0 0155.74-55.76H651.3a55.76 55.76 0 0155.74 55.73v175.35z'],
  ...props
});

const DingdrivePptBetaNormal = props => createSvgIcon({
  name: 'dingdrive-ppt-beta',
  viewBox: '0 0 1024 1024',
  path: ['M648.41 0a73.14 73.14 0 0156.2 26.33l204.92 245.9a73.14 73.14 0 0115.95 34.7c.41 2.07.7 4.22.87 6.39l.13 3.63v560.76A146.29 146.29 0 01780.19 1024H243.81A146.29 146.29 0 0197.52 877.71V146.3A146.29 146.29 0 01243.81 0h404.6zm-87.65 97.52H243.81a48.76 48.76 0 00-48.64 45.1l-.12 3.67V877.7a48.76 48.76 0 0045.1 48.64l3.66.13h536.38a48.76 48.76 0 0048.64-45.1l.12-3.67v-512H609.52a48.76 48.76 0 01-48.64-45.1l-.12-3.66V97.52zM779.2 268.2l-120.9-145.1v145.1h120.9z', 'M526.63 438.86A131.66 131.66 0 01658.29 570.5v17.56a131.66 131.66 0 01-131.66 131.66l-88.7-.03v85.31a36.13 36.13 0 01-72.22 0V474.99a36.12 36.12 0 0136.14-36.13l1.97.07 1.05-.07h121.76zm-5.12 75.9h-83.58V643.8h83.63a64.54 64.54 0 100-129.04h-.05z'],
  ...props
});

const DingdrivePsBetaNormal = props => createSvgIcon({
  name: 'dingdrive-ps-beta',
  viewBox: '0 0 1024 1024',
  path: ['M648.41 0a73.14 73.14 0 0156.2 26.33l204.92 245.9a73.14 73.14 0 0115.95 34.7c.41 2.07.7 4.22.87 6.39l.13 3.63v560.76A146.29 146.29 0 01780.19 1024H243.81A146.29 146.29 0 0197.52 877.71V146.3A146.29 146.29 0 01243.81 0h404.6zm-87.65 97.52H243.81a48.76 48.76 0 00-48.64 45.1l-.12 3.67V877.7a48.76 48.76 0 0045.1 48.64l3.66.13h536.38a48.76 48.76 0 0048.64-45.1l.12-3.67v-512H609.52a48.76 48.76 0 01-48.64-45.1l-.12-3.66V97.52zM779.2 268.2l-120.9-145.1v145.1h120.9z', 'M427.2 463.24a118.15 118.15 0 010 236.3h-64.44l.03 67.53a33.76 33.76 0 01-33.77 33.75h-2.68a33.76 33.76 0 01-33.77-33.75V497.01a33.76 33.76 0 0133.77-33.77H427.2zM683.35 551a27.01 27.01 0 01.49 54h-30.6a23.65 23.65 0 100 47.28h.95c42.67 0 77.24 33.25 77.24 74.26 0 37.55-29.01 68.61-66.61 73.58a25.9 25.9 0 01-6.05.69h-58.32a27.01 27.01 0 01-.17-54h51.35a23.65 23.65 0 100-47.28h.49-1.44c-42.67 0-77.24-33.26-77.24-74.27 0-37.54 29.01-68.58 66.6-73.58 1.98-.49 4-.7 6.06-.68h37.25zM424.5 530.77h-61.71v101.26h61.7a50.64 50.64 0 100-101.28z'],
  ...props
});

const DingdriveSketchBetaNormal = props => createSvgIcon({
  name: 'dingdrive-sketch-beta',
  viewBox: '0 0 1024 1024',
  path: ['M648.41 0a73.14 73.14 0 0156.2 26.33l204.92 245.9a73.14 73.14 0 0115.95 34.7c.41 2.07.7 4.22.87 6.39l.13 3.63v560.76A146.29 146.29 0 01780.19 1024H243.81A146.29 146.29 0 0197.52 877.71V146.3A146.29 146.29 0 01243.81 0h404.6zm-87.65 97.52H243.81a48.76 48.76 0 00-48.64 45.1l-.12 3.67V877.7a48.76 48.76 0 0045.1 48.64l3.66.13h536.38a48.76 48.76 0 0048.64-45.1l.12-3.67v-512H609.52a48.76 48.76 0 01-48.64-45.1l-.12-3.66V97.52zM779.2 268.2l-120.9-145.1v145.1h120.9z', 'M719.46 621.62L526.85 863.79l106.54-242.17h86.07zm-328.88 0l105.33 239.42-191.27-239.42h85.94zm218.16 0L512 841.6l-96.8-220h193.6zm-127.07-134L377.51 597.99h-84.94l104.16-110.37h84.94zm31.45.1l104.06 110.27h-208.1l104.04-110.27zm114.2-.1l104.1 110.37h-82.74l-104.1-110.37h82.74z'],
  ...props
});

const DingdriveTxtBetaNormal = props => createSvgIcon({
  name: 'dingdrive-txt-beta',
  viewBox: '0 0 1024 1024',
  path: ['M648.41 0a73.14 73.14 0 0156.2 26.33l204.92 245.9a73.14 73.14 0 0115.95 34.7c.41 2.07.7 4.22.87 6.39l.13 3.63v560.76A146.29 146.29 0 01780.19 1024H243.81A146.29 146.29 0 0197.52 877.71V146.3A146.29 146.29 0 01243.81 0h404.6zm-87.65 97.52H243.81a48.76 48.76 0 00-48.64 45.1l-.12 3.67V877.7a48.76 48.76 0 0045.1 48.64l3.66.13h536.38a48.76 48.76 0 0048.64-45.1l.12-3.67v-512H609.52a48.76 48.76 0 01-48.64-45.1l-.12-3.66V97.52zM779.2 268.2l-120.9-145.1v145.1h120.9z', 'M574.98 530.97a26.82 26.82 0 0119.45 2.92c11.1 6.51 15.17 20 9.75 31.09l-1.41 2.51-58.49 90.8 58.71 91.16 1.51 2.82a23.87 23.87 0 01-10.48 30.65 26.62 26.62 0 01-33.36-6.1l-1.7-2.36-50.3-78.02-50.22 78.02a25.37 25.37 0 01-9.76 8.83l-3.04 1.36-3.27.98a26.82 26.82 0 01-19.43-2.98 23.9 23.9 0 01-10.9-28.08l1.05-2.69 1.5-2.8 58.47-90.8-58.46-90.79a23.65 23.65 0 01-3.78-12.29l.17-3.24.58-3.22a24.47 24.47 0 0111.78-15.04 26.62 26.62 0 0133.38 6.05l1.7 2.36 50.23 77.97 50.25-77.97a25.72 25.72 0 019.75-8.83l3.07-1.36 3.25-.98zm186.02-.68c13.9 0 25.29 10.85 25.29 24.38 0 12.6-9.93 22.91-22.53 24.2l-2.76.15-30.72-.02v181.08a24.28 24.28 0 01-7.56 18.94l-2.36 1.95-2.58 1.73a26.59 26.59 0 01-26.29 0 24.65 24.65 0 01-12.5-19.33l-.05-184.4h-30.65c-11.95 0-22.07-8.04-24.63-18.9l-.48-2.77-.15-2.68c0-12.6 9.9-22.87 22.53-24.19l2.73-.14H761zm-385.27 0c13.9 0 25.26 10.85 25.26 24.38 0 12.6-9.9 22.91-22.52 24.2l-2.74.15-30.7-.02v181.15a24.3 24.3 0 01-7.72 18.7l-2.34 1.95-2.58 1.68a26.62 26.62 0 01-26.04 0 24.67 24.67 0 01-12.58-19.11l-.08-2.95-.02-181.45h-30.7c-11.94 0-22.06-8.04-24.62-18.9l-.49-2.77-.15-2.68c0-12.6 9.9-22.87 22.53-24.19l2.73-.14h112.76z'],
  ...props
});

const DingdriveVideoBetaNormal = props => createSvgIcon({
  name: 'dingdrive-video-beta',
  viewBox: '0 0 1024 1024',
  path: ['M648.41 0a73.14 73.14 0 0156.2 26.33l204.92 245.9a73.14 73.14 0 0115.95 34.7c.41 2.07.7 4.22.87 6.39l.13 3.63v560.76A146.29 146.29 0 01780.19 1024H243.81A146.29 146.29 0 0197.52 877.71V146.3A146.29 146.29 0 01243.81 0h404.6zm-87.65 97.52H243.81a48.76 48.76 0 00-48.64 45.1l-.12 3.67V877.7a48.76 48.76 0 0045.1 48.64l3.66.13h536.38a48.76 48.76 0 0048.64-45.1l.12-3.67v-512H609.52a48.76 48.76 0 01-48.64-45.1l-.12-3.66V97.52zM779.2 268.2l-120.9-145.1v145.1h120.9z', 'M562.88 512a37.61 37.61 0 0137.62 37.62v175.54a37.63 37.63 0 01-37.62 37.62H330.2a37.61 37.61 0 01-37.62-37.62V549.62A37.6 37.6 0 01330.2 512h232.7zm164.45 37.45a22.65 22.65 0 014.1 13.02v150.4a22.58 22.58 0 01-35.35 18.58L611.1 673v-69.27L695.86 544a22.58 22.58 0 0131.45 5.46z'],
  ...props
});

const DingdriveVoiceBetaNormal = props => createSvgIcon({
  name: 'dingdrive-voice-beta',
  viewBox: '0 0 1024 1024',
  path: ['M648.41 0a73.14 73.14 0 0156.2 26.33l204.92 245.9a73.14 73.14 0 0115.95 34.7c.41 2.07.7 4.22.87 6.39l.13 3.63v560.76A146.29 146.29 0 01780.19 1024H243.81A146.29 146.29 0 0197.52 877.71V146.3A146.29 146.29 0 01243.81 0h404.6zm-87.65 97.52H243.81a48.76 48.76 0 00-48.64 45.1l-.12 3.67V877.7a48.76 48.76 0 0045.1 48.64l3.66.13h536.38a48.76 48.76 0 0048.64-45.1l.12-3.67v-512H609.52a48.76 48.76 0 01-48.64-45.1l-.12-3.66V97.52zM779.2 268.2l-120.9-145.1v145.1h120.9z', 'M656.92 440.66l-244.9 39.45a11.58 11.58 0 00-2.25.6h-8.85a10.58 10.58 0 00-10.82 10.4V761a66.63 66.63 0 00-32.5-8.37c-35.92 0-65.03 27.99-65.03 62.54s29.11 62.53 65.03 62.53c35.88 0 65-27.99 65-62.53 0-2.54-.15-5.03-.44-7.44a10.14 10.14 0 00.44-3.02v-219.5l227.57-38.7v151.92a66.85 66.85 0 00-32.53-8.36c-35.89 0-65 28.04-65 62.56s29.11 62.54 65 62.54c35.92 0 65.03-28.02 65.03-62.54 0-2.54-.17-5.02-.47-7.46a10.14 10.14 0 00.47-3.02V450.32a10.5 10.5 0 00-8.9-10.22 9.48 9.48 0 00-6.44-1.1l-5.75.93h-.59a11.56 11.56 0 00-4.07.73z'],
  ...props
});

const DingdriveWhitepageBetaNormal = props => createSvgIcon({
  name: 'dingdrive-whitepage-beta',
  viewBox: '0 0 1024 1024',
  path: ['M648.41 0a73.14 73.14 0 0156.2 26.33l204.92 245.9a73.14 73.14 0 0115.95 34.7c.41 2.07.7 4.22.87 6.39l.13 3.63v560.76A146.29 146.29 0 01780.19 1024H243.81A146.29 146.29 0 0197.52 877.71V146.3A146.29 146.29 0 01243.81 0h404.6zm-87.65 97.52H243.81a48.76 48.76 0 00-48.64 45.1l-.12 3.67V877.7a48.76 48.76 0 0045.1 48.64l3.66.13h536.38a48.76 48.76 0 0048.64-45.1l.12-3.67v-512H609.52a48.76 48.76 0 01-48.64-45.1l-.12-3.66V97.52zm40.47 390.1l-69.85 86.8a71.78 71.78 0 00-17.3 37.2l-4.96 32.91c-1.7 11.34 2.73 22.7 11.75 30.21a36.4 36.4 0 0032.85 6.93l33.37-9.27a78.68 78.68 0 0037.14-22.72l82.82-102.94v231.23c0 28.19-23.77 50.98-53.15 50.98H370.15c-29.38 0-53.2-22.8-53.2-50.95V538.5c0-28.08 23.82-50.88 53.2-50.88h231.08zM337.6 675.92a16.55 16.55 0 005.05 23.52 18.24 18.24 0 0024.58-4.83c12.43-18.04 28.52-23.7 52.24-17.99 12.22 2.93 20.9 10.87 36.75 31.94l7.55 10c21.83 28.28 38.16 41.5 65.83 46.78 42.26 8.05 77.63 0 104.13-24.43a16.48 16.48 0 00.5-24.01 18.29 18.29 0 00-25.1-.44c-17.6 16.21-41.13 21.53-72.6 15.55-17.7-3.36-28.67-12.85-47.3-37.62l-7.58-10.04c-18.68-24.26-31.82-35.45-53.5-40.67h-.04c-38.09-9.17-69.56 1.95-90.5 32.23zm357.45-204.49a33 33 0 0111.92 22.92 32.55 32.55 0 01-8.48 24.23l-92.14 114.67a52.32 52.32 0 01-24.86 15.26l-33.97 9.43a9 9 0 01-8.14-1.7 8.17 8.17 0 01-2.93-7.51l5.05-33.57a49.09 49.09 0 0112.31-25.75l92.09-114.69a35.48 35.48 0 0123.87-11.4 35.88 35.88 0 0125.28 8.11zm-36.76-348.3v145.06h120.9l-120.9-145.1z'],
  ...props
});

const DingdriveWordBetaNormal = props => createSvgIcon({
  name: 'dingdrive-word-beta',
  viewBox: '0 0 1024 1024',
  path: ['M624.05 547.91a36.57 36.57 0 0169.56 22.34l-1.1 3.36-82.28 219.43c-11.5 30.7-53.88 31.55-67.27 2.9l-1.36-3.32-40.74-112.61-45.35 113.74c-12 30.06-53.69 30.52-66.98 2.26l-1.34-3.26L307 573.32a36.57 36.57 0 0167.33-28.36l1.37 3.25L423 677.74l45.57-114.1c12-30.14 53.76-30.55 67-2.2l1.34 3.3 39.69 109.64 47.44-126.47z', 'M648.41 0a73.14 73.14 0 0156.2 26.33l204.92 245.9a73.14 73.14 0 0115.95 34.7c.41 2.07.7 4.22.87 6.39l.13 3.63v560.76A146.29 146.29 0 01780.19 1024H243.81A146.29 146.29 0 0197.52 877.71V146.3A146.29 146.29 0 01243.81 0h404.6zm-87.65 97.52H243.81a48.76 48.76 0 00-48.64 45.1l-.12 3.67V877.7a48.76 48.76 0 0045.1 48.64l3.66.13h536.38a48.76 48.76 0 0048.64-45.1l.12-3.67v-512H609.52a48.76 48.76 0 01-48.64-45.1l-.12-3.66V97.52zM779.2 268.2l-120.9-145.1v145.1h120.9z'],
  ...props
});

const DingdriveZipBetaNormal = props => createSvgIcon({
  name: 'dingdrive-zip-beta',
  viewBox: '0 0 1024 1024',
  path: ['M648.41 0a73.14 73.14 0 0156.2 26.33l204.92 245.9a73.14 73.14 0 0115.95 34.7c.41 2.07.7 4.22.87 6.39l.13 3.63v560.76A146.29 146.29 0 01780.19 1024H243.81A146.29 146.29 0 0197.52 877.71V146.3A146.29 146.29 0 01243.81 0h404.6zm-87.65 97.52H243.81a48.76 48.76 0 00-48.64 45.1l-.12 3.67V877.7a48.76 48.76 0 0045.1 48.64l3.66.13h536.38a48.76 48.76 0 0048.64-45.1l.12-3.67v-512H609.52a48.76 48.76 0 01-48.64-45.1l-.12-3.66V97.52zM779.2 268.2l-120.9-145.1v145.1h120.9z', 'M481.43 658.29a6.2 6.2 0 016.19 6.19v139.7a24.77 24.77 0 01-24.77 24.77h-72.36a24.77 24.77 0 01-24.78-24.74V664.48a6.2 6.2 0 016.2-6.2h109.52zm-18.2 73.14H390.1v51.13c0 11.09 9.26 20.48 21.67 21.84l3.1.17h23.6c12.48 0 23.01-8.24 24.57-19.26l.2-2.75v-51.13zM438.82 512v73.14h-65.66c-4.12 0-7.44-2.78-7.44-6.19v-60.76c0-3.41 3.34-6.19 7.44-6.19h65.7-.04zm41.37-73.14c4.1 0 7.44 2.78 7.44 6.19v60.76c0 3.41-3.32 6.19-7.44 6.19h-65.7v-73.14h65.7zm-41.37-73.15v73.15h-65.66c-4.12 0-7.44-2.78-7.44-6.2v-60.75c0-3.42 3.34-6.2 7.44-6.2h65.7-.04zm41.37-73.14c4.1 0 7.44 2.78 7.44 6.2v60.75c0 3.41-3.32 6.2-7.44 6.2h-65.7V292.6h65.7v-.03zm-41.37-73.14v73.14h-65.66a8.24 8.24 0 01-5.27-1.8 5.7 5.7 0 01-2.17-4.4v-60.75c0-3.41 3.34-6.2 7.44-6.2h65.7-.04zm41.37-73.14c4.1 0 7.44 2.78 7.44 6.19v60.76c0 3.4-3.32 6.19-7.44 6.19h-65.7v-73.14h65.7zm-41.4-73.15v73.15h-65.63c-4.12 0-7.44-2.78-7.44-6.2V73.14h73.15-.08z'],
  ...props
});

const DingnoteBetaNormal = props => createSvgIcon({
  name: 'dingnote-beta',
  viewBox: '0 0 1024 1024',
  path: ['M733.7 21.92a105 105 0 01105.03 105.03v478.37a116.69 116.69 0 01-116.7 116.7H208.65a93.35 93.35 0 100 186.69h630.09a70 70 0 0070-70V161.94a46.69 46.69 0 1193.32 0v676.78a163.37 163.37 0 01-163.32 163.35H196.96A175.01 175.01 0 0121.95 827.07V196.93a175.01 175.01 0 01175-175zm-12.25 94.44H232.73a116.36 116.36 0 00-116.37 116.37V664.5l3.45-4.17a93.74 93.74 0 0170.51-31.98h531.13a23.27 23.27 0 0023.28-23.27V139.64a23.27 23.27 0 00-23.28-23.28z', 'M231.96 768.7a46.69 46.69 0 100 93.35h431.7a46.69 46.69 0 100-93.33H231.99z'],
  ...props
});

const DingnoteDocBetaNormal = props => createSvgIcon({
  name: 'dingnote-doc-beta',
  viewBox: '0 0 1024 1024',
  path: ['M817.45 0c101.24 0 183.28 84.27 183.28 188.23v627.43c0 103.94-82.06 188.2-183.28 188.2h-610.9c-101.24 0-183.28-84.24-183.28-188.22V188.2C23.27 84.29 105.33 0 206.55 0h610.9zm0 94.11h-610.9c-50.62 0-91.65 42.13-91.65 94.12v627.43c0 51.97 41.03 94.1 91.65 94.1h610.9c50.62 0 91.65-42.13 91.65-94.12V188.2c0-51.97-41.03-94.1-91.65-94.1zm-229.1 345.1c25.33 0 45.83 21.05 45.83 47.05 0 25.97-20.5 47.06-45.82 47.06h-336c-25.31 0-45.81-21.09-45.81-47.06 0-26 20.5-47.06 45.82-47.06h335.96zM484.52 250.96c25.3 0 45.83 21.06 45.83 47.06 0 25.97-20.53 47.06-45.85 47.06H252.4c-25.32 0-45.82-21.09-45.82-47.06 0-26 20.5-47.06 45.82-47.06h232.15z'],
  ...props
});

const DingnoteExcelBetaNormal = props => createSvgIcon({
  name: 'dingnote-excel-beta',
  viewBox: '0 0 1024 1024',
  path: ['M832 0a192 192 0 01192 192v640a192 192 0 01-192 192H192A192 192 0 010 832V192A192 192 0 01192 0h640zM304 688H96.02v144A96.01 96.01 0 00192 928.01h112v-240zM928 688H720.02V928H832A96.01 96.01 0 00928.01 832V688zM624 688H399.99V928h224.02V688.03zM304 335.98H96v256h207.97v-256zm623.98 0H720.02v256h207.97v-256zm-303.98 0H399.99v256h224.02v-256zM832 95.97H192a96.01 96.01 0 00-96.01 96v48.01H928V192A96.01 96.01 0 00832 95.99z'],
  ...props
});

const DocumentBetaNormal = props => createSvgIcon({
  name: 'document-beta',
  viewBox: '0 0 1024 1024',
  path: ['M413.53 128c11.69 0 22.48 6.02 28.33 15.87l74.92 124.93h257.8c90.61 0 164.09 71.64 164.09 160V736c0 88.36-73.48 160-164.1 160H249.43c-90.62 0-164.1-71.64-164.1-160V288c0-88.36 73.48-160 164.1-160h164.1zm-29.49 85.33H249.43c-43.95 0-78.76 33.92-78.76 74.67v448c0 40.75 34.77 74.67 78.76 74.67h525.14c43.95 0 78.76-33.92 78.76-74.67V428.8c0-40.75-34.77-74.67-78.76-74.67H468.44L384 213.33zm347.4 384c20.18 0 36.56 19.12 36.56 42.67s-16.38 42.67-36.57 42.67H292.57c-20.19 0-36.57-19.12-36.57-42.67s16.38-42.67 36.57-42.67z'],
  ...props
});

const DownloadBetaNormal = props => createSvgIcon({
  name: 'download-beta',
  viewBox: '0 0 1024 1024',
  path: ['M872.28 789.33c24.87 0 45.05 19.12 45.05 42.67s-20.18 42.67-45.05 42.67H151.72c-24.87 0-45.05-19.12-45.05-42.67s20.18-42.67 45.05-42.67zM513.02 128c23.17 0 42.12 21.12 42.12 47.19v389.08C637.9 472.02 684.8 419.8 695.72 407.5c16.39-18.43 43.6-20.74 60-2.3a51.41 51.41 0 010 66.73L542.67 711.5a39.72 39.72 0 01-29.66 13.82 39.72 39.72 0 01-29.65-13.82L268.3 471.89a51.41 51.41 0 010-66.73c16.38-18.43 45.74-13.9 62.12 4.53l138.97 154.5v-389c-.05-26.03 20.43-47.19 43.64-47.19z'],
  ...props
});

const DropDownListBetaNormal = props => createSvgIcon({
  name: 'drop-down-list-beta',
  viewBox: '0 0 1024 1024',
  path: ['M270.76 106.67h482.48c57.04 0 77.74 5.97 98.6 17.06a116.12 116.12 0 0148.38 48.43c11.18 20.86 17.11 41.56 17.11 98.56v482.56c0 57-5.97 77.7-17.06 98.56a116.3 116.3 0 01-48.43 48.38c-20.86 11.18-41.56 17.11-98.56 17.11h-482.6c-57 0-77.7-5.97-98.56-17.06a116.3 116.3 0 01-48.39-48.47c-11.18-20.87-17.1-41.56-17.1-98.56V270.68c0-57 5.97-77.7 17.06-98.56a116.3 116.3 0 0148.51-48.39c20.87-11.18 41.56-17.1 98.56-17.1zm0 85.33c-39.12 0-48.72 1.83-58.37 7a31.02 31.02 0 00-13.4 13.4c-5.11 9.64-6.99 19.2-6.99 58.36v482.48c0 39.12 1.83 48.72 7 58.37a31.24 31.24 0 0013.4 13.4c9.64 5.11 19.2 6.99 58.36 6.99h482.48c39.12 0 48.72-1.83 58.37-7a31.02 31.02 0 0013.4-13.4c5.11-9.64 6.99-19.2 6.99-58.36V270.76c0-39.12-1.83-48.72-7-58.37a31.02 31.02 0 00-13.4-13.4c-9.64-5.11-19.2-6.99-58.36-6.99H270.76zm213.8 421.72a32 32 0 0054.87 0l95.96-159.96a32 32 0 00-27.43-48.43H416.04a32 32 0 00-27.43 48.43l96 159.96z'],
  ...props
});

const EditorBetaNormal = props => createSvgIcon({
  name: 'editor-beta',
  viewBox: '0 0 1024 1024',
  path: ['M847.23 810.67a48.77 48.77 0 010 97.49H176.77a48.77 48.77 0 010-97.5h670.46zm-94.25-662.92l66.69 70.7c34.69 37.8 34.3 95.45-.85 128.77l-375.6 355.76a76.8 76.8 0 01-37.63 19.5l-204.33 41.25a26.88 26.88 0 01-31.1-33.96l59.05-199.55a76.8 76.8 0 0120.82-34l376.44-356.53c35.16-33.32 91.82-29.7 126.51 8.1zm-79.79 25l-2.98 2.48-27.35 27.82a19.2 19.2 0 00-2.43 23.94l2.43 2.98L738 326.66a19.2 19.2 0 0024.4 2.47l2.99-2.47 27.39-27.82a19.2 19.2 0 002.39-23.94l-2.4-2.99-95.18-96.68-.21-.21a19.2 19.2 0 00-24.15-2.26z'],
  ...props
});

const EditorBorderBetaNormal = props => createSvgIcon({
  name: 'editor-border-beta',
  viewBox: '0 0 1024 1024',
  path: ['M896 832a42.67 42.67 0 010 85.33H128a42.67 42.67 0 010-85.33h768zM728.79 125.4l84.48 84.48c34.99 34.98 35.54 91.18 1.2 125.52L432.2 717.65a28.84 28.84 0 01-11.26 6.96L200.1 780.29a30.12 30.12 0 01-39.13-32.86l53.12-229.41a28.84 28.84 0 017.13-11.78L603.26 124.2c34.35-34.34 90.54-33.79 125.53 1.2zm-65.2 59.13L293.12 555.1l-27.99 120.84 117.89-29.74L754.13 275.1c.73-.76.73-2.94-1.2-4.86l-84.47-84.48c-1.92-1.92-4.1-1.92-4.87-1.2z'],
  ...props
});

const EmbedCardBetaNormal = props => createSvgIcon({
  name: 'embed-card-beta',
  viewBox: '0 0 1024 1024',
  path: ['M853.33 256a128 128 0 01128 128v256a128 128 0 01-128 128H170.67a128 128 0 01-128-128V384a128 128 0 01128-128h682.66zm0 85.33H170.67A42.67 42.67 0 00128 384v256a42.67 42.67 0 0042.67 42.67h682.66A42.67 42.67 0 00896 640V384a42.67 42.67 0 00-42.67-42.67zm-291.24 128a42.67 42.67 0 010 85.34H256a42.67 42.67 0 010-85.34zm205.91 0a42.67 42.67 0 010 85.34h-42.67a42.67 42.67 0 010-85.34z'],
  ...props
});

const EraserBetaNormal = props => createSvgIcon({
  name: 'eraser-beta',
  viewBox: '0 0 1024 1024',
  path: ['M673.4 134.53l236.38 216.74a106.75 106.75 0 016.23 150.96L645.67 786.05h215.64a42.67 42.67 0 0142.37 37.72l.3 4.99a42.67 42.67 0 01-37.68 42.37l-4.99.3H331.52a42.54 42.54 0 01-31.66-14.09L139.31 709.9a106.75 106.75 0 01-6.23-151l390.27-418.52 4.9-4.95a106.67 106.67 0 01145.2-.9zM452.7 341.2L195.7 616.83A21.33 21.33 0 00197 647l151.38 138.96H528l190.9-200.49-266.2-244.26zm133.07-142.64l-74.92 80.26 266.88 244.9 75.69-79.44a21.33 21.33 0 00-1.28-30.17L615.77 197.38a21.33 21.33 0 00-30 1.2z'],
  ...props
});

const ExclamationCircleBetaNormal = props => createSvgIcon({
  name: 'exclamation-circle-beta',
  viewBox: '0 0 1024 1024',
  path: ['M512 947.2c247.42 0 448-200.58 448-448s-200.58-448-448-448-448 200.58-448 448 200.58 448 448 448zm0-85.33a362.67 362.67 0 110-725.34 362.67 362.67 0 010 725.34zM512 384c-23.55 0-42.67 22.61-42.67 50.47V760.2c0 27.86 19.12 50.48 42.67 50.48s42.67-22.62 42.67-50.48V434.47c0-27.86-19.12-50.47-42.67-50.47zm-64-106.67a64 64 0 10128 0 64 64 0 00-128 0z'],
  ...props
});

const FilterBetaNormal = props => createSvgIcon({
  name: 'filter-beta',
  viewBox: '0 0 1024 1024',
  path: ['M359.25 509.1L180.61 233.6a61.44 61.44 0 0151.54-94.93h570.37a61.44 61.44 0 0151.58 94.93L675.41 509.1v322.43a87.8 87.8 0 01-111.95 84.44l-140.5-40.1a87.8 87.8 0 01-63.66-84.49V509.1zM281.6 224l163.8 253.01v303.15a.85.85 0 00.64.81l137.9 39.38c.68.04 1.06-.34 1.06-.8V477L749.14 224H281.6z'],
  ...props
});

const FocusBetaNormal = props => createSvgIcon({
  name: 'focus-beta',
  viewBox: '0 0 1024 1024',
  path: ['M513.62 667.48a170.67 170.67 0 110-341.34 170.67 170.67 0 010 341.34zm0-85.34a85.33 85.33 0 100-170.66 85.33 85.33 0 000 170.66zm0-411.47c160.04 0 294.1 79.7 399.06 235.09a170.67 170.67 0 01.3 190.63C808.75 751.66 674.6 831.27 513.62 831.27c-160.98 0-295.12-79.61-399.36-234.88a170.67 170.67 0 01.34-190.67c104.96-155.27 238.94-235.05 399.02-235.05zm0 85.33c-130.05 0-238.42 64.47-328.32 197.5a85.33 85.33 0 00-.17 95.32c89.09 132.78 197.55 197.12 328.53 197.12 130.9 0 239.36-64.34 328.45-197.12a85.33 85.33 0 00-.17-95.32C752.1 320.47 643.67 256 513.62 256z'],
  ...props
});

const FocusSelectBetaNormal = props => createSvgIcon({
  name: 'focus-select-beta',
  viewBox: '0 0 1024 1024',
  path: ['M170.67 640a42.67 42.67 0 0142.66 42.67v84.9c0 23.94 18.82 43.1 41.65 43.1h86.35a42.67 42.67 0 010 85.33h-86.35C184.75 896 128 838.31 128 767.57v-84.9A42.67 42.67 0 01170.67 640zm682.66 0a42.67 42.67 0 0142.37 37.67l.3 5v84.9c0 68.27-52.74 124.3-119.5 128.22l-7.48.21h-86.35a42.67 42.67 0 01-5-85.03l5-.3h86.35a42.24 42.24 0 0041.4-38.06l.25-5.08v-84.86A42.67 42.67 0 01853.33 640zm-340.3-341.33c100 0 183.8 49.83 249.38 146.9a106.67 106.67 0 01.17 119.17c-65.1 97.02-148.95 146.81-249.6 146.81-100.56 0-184.4-49.79-249.56-146.81a106.67 106.67 0 01.17-119.17c65.63-97.07 149.42-146.9 249.43-146.9zm-.86 79.06c-70.06 0-128.43 34.73-176.81 106.37a45.95 45.95 0 00-.09 51.32c48 71.47 106.37 106.12 176.86 106.12 70.53 0 128.9-34.65 176.85-106.12a45.93 45.93 0 00-.04-51.32c-48.43-71.64-106.8-106.37-176.81-106.37zM512 448a64 64 0 110 128 64 64 0 010-128zM341.33 128a42.67 42.67 0 015 85.03l-5 .3h-86.35a42.24 42.24 0 00-41.4 38.06l-.25 5.08v84.86a42.67 42.67 0 01-85.03 5l-.3-5v-84.9c0-68.27 52.74-124.3 119.5-128.22l7.48-.21h86.35zm427.7 0C839.24 128 896 185.69 896 256.43v84.9a42.67 42.67 0 01-85.33 0v-84.9c0-23.9-18.82-43.1-41.65-43.1h-86.35a42.67 42.67 0 010-85.33h86.35z'],
  ...props
});

const FontSizeBetaNormal = props => createSvgIcon({
  name: 'font-size-beta',
  viewBox: '0 0 1024 1024',
  path: ['M512.77 128c46.76 0 88.19 26.45 103 65.66L850.05 824.5c7 17.7 2.64 37.33-11.3 51.41-14 14.08-35.42 20.44-56.16 16.6-20.7-3.84-37.5-17.24-43.94-35.07L668.5 668.54H356.4l-71.34 191.92c-9.43 25.04-38.53 39.85-67.72 34.43l-6.6-1.54a57.17 57.17 0 01-33.93-26.15 46.6 46.6 0 01-3.07-39.72L409.9 193.62C424.75 154.45 466.18 128 512.85 128h-.08zm-.51 128L384 554.67h256L512.26 256z'],
  ...props
});

const FormBetaNormal = props => createSvgIcon({
  name: 'form-beta',
  viewBox: '0 0 1024 1024',
  path: ['M810.67 128c70.7 0 128 51.58 128 115.2v537.6c0 63.62-57.3 115.2-128 115.2H213.33c-70.7 0-128-51.58-128-115.2V243.2c0-63.62 57.3-115.2 128-115.2h597.34zm-640 645.33c0 20.61 19.11 37.34 42.66 37.34h128V640H170.67v133.33zM597.33 640H426.67v170.67h170.66V640zm256 0H682.67v170.67h128c23.55 0 42.66-16.73 42.66-37.34V640zm0-85.33V384H682.67v170.67h170.66zm-682.66 0h170.66V384H170.67v170.67zM597.33 384H426.67v170.67h170.66V384zm213.34-170.67H213.33c-23.55 0-42.66 16.73-42.66 37.34v48h682.66v-48c0-20.61-19.11-37.34-42.66-37.34z'],
  ...props
});

const FormulaBetaNormal = props => createSvgIcon({
  name: 'formula-beta',
  viewBox: '0 0 1024 1024',
  path: ['M432.6 512L222.72 773.3A42.67 42.67 0 00256 842.66h512a42.67 42.67 0 000-85.34H345l175.58-218.62a42.67 42.67 0 000-53.42L345 266.67h423a42.67 42.67 0 000-85.34H256a42.67 42.67 0 00-33.28 69.38L432.64 512z'],
  ...props
});

const FreezeBetaNormal = props => createSvgIcon({
  name: 'freeze-beta',
  viewBox: '0 0 1024 1024',
  path: ['M417.75 213.33H256A42.67 42.67 0 00213.33 256v161.75l204.42-204.42zm136.92 0v197.3l197.29-197.3h-197.3zm256 62l-194 194h194v-194zm0 348.46L623.79 810.67H768A42.67 42.67 0 00810.67 768V623.79zM469.33 810.67v-194l-194 194h194zm-256-58.71l197.3-197.3h-197.3v197.3zM256 128h512a128 128 0 01128 128v512a128 128 0 01-128 128H256a128 128 0 01-128-128V256a128 128 0 01128-128zm26.45 341.33h186.88V282.45L282.45 469.33zm476.63 85.34H554.67v204.41l204.41-204.41z'],
  ...props
});

const FullScreenBetaNormal = props => createSvgIcon({
  name: 'full-screen-beta',
  viewBox: '0 0 1024 1024',
  path: ['M778.88 257.7a37 37 0 0132.21 37.34l-5.88 149.63a30.63 30.63 0 01-9.1 20.87c-12.7 12.37-33.91 11.26-47.4-2.52l-41.8-42.67-83.2 74.8c-15.8 16.21-47.92 17.75-66.06 3.84l-3.92-3.42c-16.98-17.49-11.95-52.6 5.03-70.1l81.07-73.68-30.3-30.9a37.12 37.12 0 01-9.3-16.2l-.93-4.53a30.42 30.42 0 0128.8-35.2zm-491.1 551.26a37 37 0 01-32.2-37.33l5.88-149.64a30.63 30.63 0 019.09-20.86c12.71-12.37 33.92-11.26 47.4 2.52l36.4 37.12 87.72-87.64c15.79-16.21 47.87-17.4 66-3.46l3.93 3.46c17.02 17.5 17.02 54.06 0 71.55l-87.68 87.6 32.81 33.5a37.12 37.12 0 019.3 16.2l.94 4.53a30.42 30.42 0 01-28.8 35.2zM292.1 128h482.47c57.05 0 77.74 5.97 98.6 17.07a116.12 116.12 0 0148.39 48.42c11.18 20.87 17.1 41.56 17.1 98.56v482.56c0 57-5.97 77.7-17.06 98.56a116.3 116.3 0 01-48.43 48.39c-20.86 11.18-41.55 17.1-98.56 17.1h-482.6c-57 0-77.7-5.97-98.56-17.06a116.3 116.3 0 01-48.38-48.47c-11.18-20.86-17.11-41.56-17.11-98.56V292.01c0-57 5.97-77.7 17.06-98.56a116.3 116.3 0 0148.52-48.38c20.82-11.14 41.51-17.07 98.51-17.07zm0 85.33c-39.13 0-48.73 1.84-58.37 7a31.02 31.02 0 00-13.4 13.4c-5.12 9.64-7 19.2-7 58.37v482.47c0 39.13 1.84 48.73 7 58.37a31.24 31.24 0 0013.4 13.4c9.64 5.12 19.2 7 58.37 7h482.47c39.13 0 48.73-1.84 58.37-7a31.02 31.02 0 0013.4-13.4c5.12-9.64 7-19.2 7-58.37V292.1c0-39.13-1.84-48.73-7-58.37a31.02 31.02 0 00-13.4-13.4c-9.64-5.12-19.2-7-58.37-7H292.1z'],
  ...props
});

const GridBetaNormal = props => createSvgIcon({
  name: 'grid-beta',
  viewBox: '0 0 1024 1024',
  path: ['M297.77 554.67v170.66h170.67V554.67H297.77zm-85.33 0h-41.77a42.67 42.67 0 010-85.34h41.77V298.67h-41.77a42.67 42.67 0 110-85.34h41.77v-42.02a42.67 42.67 0 1185.33 0v42.02h170.67v-42.02a42.67 42.67 0 1185.33 0v42.02h170.67v-42.02a42.67 42.67 0 1185.33 0v42.02h43.56a42.67 42.67 0 010 85.34h-43.56v170.66h43.56a42.67 42.67 0 010 85.34h-43.56v170.66h43.56a42.67 42.67 0 010 85.34h-43.56v43.3a42.67 42.67 0 11-85.33 0v-43.3H553.77v43.3a42.67 42.67 0 11-85.33 0v-43.3H297.77v43.3a42.67 42.67 0 11-85.33 0v-43.3h-41.77a42.67 42.67 0 010-85.34h41.77V554.67zm85.33-85.34h170.67V298.67H297.77v170.66zm256 256h170.67V554.67H553.77v170.66zm170.67-256V298.67H553.77v170.66h170.67z'],
  ...props
});

const GroupColumnBetaNormal = props => createSvgIcon({
  name: 'group-column-beta',
  viewBox: '0 0 1024 1024',
  path: ['M277.33 842.67a64 64 0 01-128 0V544a64 64 0 01128 0zm576-448a42.67 42.67 0 01-85.03 4.99l-.3-5V323a42.67 42.67 0 00-37.67-42.37l-5-.3H554.67v117.03c0 22.06-19.12 39.98-42.67 39.98-21.89 0-39.94-15.44-42.37-35.32l-.3-4.7V280.32H298.67a42.67 42.67 0 00-42.37 37.72l-.3 4.95v71.68a42.67 42.67 0 01-85.03 4.99l-.3-5V323A128 128 0 01291.16 195.2l7.5-.21h170.67v-37.64c0-22.1 19.12-40.02 42.67-40.02 21.89 0 39.94 15.45 42.37 35.33l.3 4.7v37.63h170.66a128 128 0 01127.79 120.49l.21 7.5v71.69zM576 544v298.67a64 64 0 01-127.7 6.14l-.3-6.14V544a64 64 0 01127.7-6.14l.3 6.14v298.67zm298.67 298.67a64 64 0 01-127.7 6.14l-.3-6.14V544a64 64 0 01127.7-6.14l.3 6.14v298.67z'],
  ...props
});

const GroupRowBetaNormal = props => createSvgIcon({
  name: 'group-row-beta',
  viewBox: '0 0 1024 1024',
  path: ['M832 746.67a64 64 0 010 128H533.33a64 64 0 010-128zm-448-576a42.67 42.67 0 015 85.03l-5 .3h-71.68a42.67 42.67 0 00-42.37 37.67l-.3 5v170.66h117c22.1 0 40.02 19.12 40.02 42.67 0 21.89-15.45 39.94-35.33 42.37l-4.7.3H269.66v170.66a42.67 42.67 0 0037.72 42.37l4.95.3H384a42.67 42.67 0 015 85.03l-5 .3h-71.68a128 128 0 01-127.79-120.49l-.21-7.5V554.66h-37.67c-22.06 0-39.98-19.12-39.98-42.67 0-21.89 15.44-39.94 35.32-42.37l4.7-.3h37.63V298.67a128 128 0 01120.5-127.79l7.5-.21H384zM533.33 448H832a64 64 0 016.14 127.7l-6.14.3H533.33a64 64 0 01-6.14-127.7l6.14-.3H832zM832 149.33a64 64 0 016.14 127.7l-6.14.3H533.33a64 64 0 01-6.14-127.7l6.14-.3H832z'],
  ...props
});

const HelpBetaNormal = props => createSvgIcon({
  name: 'help-beta',
  viewBox: '0 0 1024 1024',
  path: ['M512 64c247.42 0 448 200.58 448 448S759.42 960 512 960 64 759.42 64 512 264.58 64 512 64zm0 85.33a362.67 362.67 0 100 725.34 362.67 362.67 0 000-725.34zm-4.1 521.82a51.71 51.71 0 110 103.42 51.71 51.71 0 010-103.38zm0-379.05c85.5 0 155.05 63.83 155.05 142.25 0 53.33-32.08 101.8-83.8 126.29-18.13 8.66-28.96 22.61-28.96 37.3 0 21.4-18.95 38.82-42.29 38.82-23.33 0-42.28-17.41-42.28-38.83 0-44.24 27.9-83.92 74.67-106.15 23.46-11.14 38.1-33.2 38.1-57.43 0-35.67-31.57-64.69-70.49-64.69-38.87 0-70.48 29.02-70.48 64.69 0 21.42-18.95 38.78-42.33 38.78-23.34 0-42.24-17.36-42.24-38.83 0-78.37 69.55-142.2 155.05-142.2z'],
  ...props
});

const HideNormal = props => createSvgIcon({
  name: 'hide',
  viewBox: '0 0 1024 1024',
  path: ['M170.263273 747.101091C90.949818 667.554909 46.545455 574.836364 46.545455 519.586909v-13.218909c0-111.616 180.642909-376.087273 465.454545-376.087273 82.990545 0 156.346182 22.109091 219.368727 55.761455l-52.317091 52.317091A390.190545 390.190545 0 0 0 512 200.098909c-240.221091 0-395.636364 227.560727-395.636364 306.269091v13.218909c0 38.493091 37.329455 112.453818 103.330909 178.036364l-49.431272 49.477818zM977.454545 505.809455v13.777454c-0.977455 115.060364-177.803636 376.040727-465.454545 376.040727-98.769455 0-184.552727-32.069818-255.022545-78.382545L106.123636 968.145455a34.816 34.816 0 0 1-49.338181 0 34.909091 34.909091 0 0 1 0-49.384728L917.876364 57.716364a34.909091 34.909091 0 1 1 49.384727 49.384727l-143.080727 143.080727c97.559273 84.014545 152.669091 192.046545 153.274181 255.627637z m-365.195636-43.752728l-151.226182 151.179637c15.36 7.959273 32.488727 12.8 50.920728 12.8 62.370909 0 113.105455-50.734545 113.105454-113.105455a109.195636 109.195636 0 0 0-12.8-50.874182z m295.377455 44.032c-0.465455-48.733091-49.431273-137.122909-132.933819-206.475636l-111.616 111.662545c19.828364 29.090909 31.883636 63.860364 31.883637 101.655273a183.109818 183.109818 0 0 1-182.923637 182.923636c-37.841455 0-72.610909-12.055273-101.701818-31.930181l-102.493091 102.493091c57.576727 35.141818 126.231273 59.345455 204.194909 59.345454 236.404364 0 394.845091-218.158545 395.636364-306.501818v-13.172364zM512 399.872c1.722182 0 3.304727 0.418909 5.026909 0.512l58.321455-58.321455A180.270545 180.270545 0 0 0 512 330.053818a183.109818 183.109818 0 0 0-182.923636 182.923637c0 22.341818 4.608 43.566545 11.962181 63.348363l58.321455-58.321454c0-1.722182-0.465455-3.304727-0.465455-5.026909 0-62.370909 50.734545-113.105455 113.105455-113.105455z'],
  ...props
});

const IndentLessBetaNormal = props => createSvgIcon({
  name: 'indent-less-beta',
  viewBox: '0 0 1024 1024',
  path: ['M145.07 780.8H870.4a42.67 42.67 0 015 85.03l-5 .3H145.07a42.67 42.67 0 01-5-85.03l5-.3H870.4zM870.4 567.47a42.67 42.67 0 015 85.03l-5 .3H473a42.67 42.67 0 01-4.99-85.03l5-.3H870.4zM302.6 373.85a21.33 21.33 0 0121.33 21.33v225.24a21.33 21.33 0 01-34.44 16.85L149.03 528.3a21.33 21.33 0 01-.5-33.28l140.45-116.27a21.33 21.33 0 0113.61-4.9zm567.8-19.72a42.67 42.67 0 015 85.04l-5 .3H473.43a42.67 42.67 0 01-5-85.04l5-.3H870.4zm0-213.33a42.67 42.67 0 015 85.03l-5 .3H145.07a42.67 42.67 0 01-5-85.03l5-.3H870.4z'],
  ...props
});

const IndentMoreBetaNormal = props => createSvgIcon({
  name: 'indent-more-beta',
  viewBox: '0 0 1024 1024',
  path: ['M145.07 780.8H870.4a42.67 42.67 0 015 85.03l-5 .3H145.07a42.67 42.67 0 01-5-85.03l5-.3H870.4zM870.4 567.47a42.67 42.67 0 015 85.03l-5 .3H473a42.67 42.67 0 01-4.99-85.03l5-.3H870.4zM149.33 373.85a21.33 21.33 0 0113.61 4.9L303.4 495.02a21.33 21.33 0 01-.5 33.28L162.38 637.27a21.33 21.33 0 01-34.39-16.9v-225.2a21.33 21.33 0 0121.33-21.32zm721.07-19.72a42.67 42.67 0 015 85.04l-5 .3H473.43a42.67 42.67 0 01-5-85.04l5-.3H870.4zm0-213.33a42.67 42.67 0 015 85.03l-5 .3H145.07a42.67 42.67 0 01-5-85.03l5-.3H870.4z'],
  ...props
});

const InsertBetaNormal = props => createSvgIcon({
  name: 'insert-beta',
  viewBox: '0 0 1024 1024',
  path: ['M768 102.4A153.6 153.6 0 01921.6 256v512A153.6 153.6 0 01768 921.6H256A153.6 153.6 0 01102.4 768V665.6h76.8V768a76.8 76.8 0 0076.8 76.8h512a76.8 76.8 0 0076.8-76.8V256a76.8 76.8 0 00-76.8-76.8H256a76.8 76.8 0 00-76.8 76.8v102.4h-76.8V256A153.6 153.6 0 01256 102.4h512z', 'M647.99 452.92a64.31 64.31 0 010 90.52L490.75 676.97a41.37 41.37 0 01-56.16-2.36l-1.95-2.15a35.23 35.23 0 014.25-49.66l102.5-86.22H140.8a38.4 38.4 0 01-38.04-33.18l-.36-5.22a38.4 38.4 0 0138.4-38.4h399.36l-103.42-88.43a35.53 35.53 0 01-1.03-.87l-.97-.92a35.53 35.53 0 01-.15-50.23 41.06 41.06 0 0155.96-2.15z'],
  ...props
});

const InsertFileBetaNormal = props => createSvgIcon({
  name: 'insert-file-beta',
  viewBox: '0 0 1024 1024',
  path: ['M874.67 576a42.67 42.67 0 0142.56 39.47l.1 3.2v170.66a128 128 0 01-123.2 127.92l-4.8.08H234.67a128 128 0 01-127.92-123.2l-.08-4.8V618.67a42.67 42.67 0 0185.22-3.2l.11 3.2v170.66a42.67 42.67 0 0039.47 42.56l3.2.11h554.66a42.67 42.67 0 0042.56-39.47l.11-3.2V618.67A42.67 42.67 0 01874.67 576zm-332.5-467.2L753.37 320A42.67 42.67 0 11693 380.33L554.67 241.96v419.37a42.67 42.67 0 11-85.34 0V241.96L331 380.33A42.67 42.67 0 11270.63 320l211.2-211.2a42.67 42.67 0 0160.34 0z'],
  ...props
});

const InsertRowAboveBetaNormal = props => createSvgIcon({
  name: 'insert-row-above-beta',
  viewBox: '0 0 1024 1024',
  path: ['M810.67 341.33A106.67 106.67 0 01917.33 448v341.33A106.67 106.67 0 01810.67 896H213.33a106.67 106.67 0 01-106.66-106.67V448a106.67 106.67 0 01106.66-106.67h597.34zm-460.8 320H192v128a21.33 21.33 0 0021.33 21.34h136.54V661.33zm231.98 0H435.2v149.34h146.69V661.33zm250.15 0H667.18v149.34h143.49A21.33 21.33 0 00832 789.33v-128zM349.87 426.67H213.33A21.33 21.33 0 00192 448v128h157.87V426.67zm231.98 0H435.2V576h146.69V426.67zm228.82 0h-143.5V576H832V448a21.33 21.33 0 00-21.33-21.33zM888.02 160a48 48 0 015.2 95.7l-5.2.3h-751.7a48 48 0 01-5.2-95.7l5.2-.3h751.7z'],
  ...props
});

const InsertRowBelowCopyBetaNormal = props => createSvgIcon({
  name: 'insert-row-below-copy-beta',
  viewBox: '0 0 1024 1024',
  path: ['M213.33 682.67A106.67 106.67 0 01106.67 576V234.67A106.67 106.67 0 01213.33 128h597.34a106.67 106.67 0 01106.66 106.67V576a106.67 106.67 0 01-106.66 106.67H213.33zm460.8-320H832v-128a21.33 21.33 0 00-21.33-21.34H674.13v149.34zm-231.98 0H588.8V213.33H442.11v149.34zm-250.15 0h164.82V213.33H213.33A21.33 21.33 0 00192 234.67v128zm482.13 234.66h136.54A21.33 21.33 0 00832 576V448H674.13v149.33zm-231.98 0H588.8V448H442.11v149.33zm-228.82 0h143.5V448H192v128a21.33 21.33 0 0021.33 21.33zM135.98 864a48 48 0 01-5.2-95.7l5.2-.3h751.7a48 48 0 015.2 95.7l-5.2.3h-751.7z'],
  ...props
});

const InsertRowLeftCopyBetaNormal = props => createSvgIcon({
  name: 'insert-row-left-copy-beta',
  viewBox: '0 0 1024 1024',
  path: ['M341.33 213.33A106.67 106.67 0 01448 106.67h341.33A106.67 106.67 0 01896 213.33v597.34a106.67 106.67 0 01-106.67 106.66H448a106.67 106.67 0 01-106.67-106.66V213.33zm320 460.8V832h128a21.33 21.33 0 0021.34-21.33V674.13H661.33zm0-231.98V588.8h149.34V442.11H661.33zm0-250.15v164.82h149.34V213.33A21.33 21.33 0 00789.33 192h-128zM426.67 674.13v136.54A21.33 21.33 0 00448 832h128V674.13H426.67zm0-231.98V588.8H576V442.11H426.67zm0-228.82v143.5H576V192H448a21.33 21.33 0 00-21.33 21.33zM160 135.98a48 48 0 0195.7-5.2l.3 5.2v751.7a48 48 0 01-95.7 5.2l-.3-5.2v-751.7z'],
  ...props
});

const InsertRowRightCopyBetaNormal = props => createSvgIcon({
  name: 'insert-row-right-copy-beta',
  viewBox: '0 0 1024 1024',
  path: ['M682.67 810.67A106.67 106.67 0 01576 917.33H234.67A106.67 106.67 0 01128 810.67V213.33a106.67 106.67 0 01106.67-106.66H576a106.67 106.67 0 01106.67 106.66v597.34zm-320-460.8V192h-128a21.33 21.33 0 00-21.34 21.33v136.54h149.34zm0 231.98V435.2H213.33v146.69h149.34zm0 250.15V667.18H213.33v143.49A21.33 21.33 0 00234.67 832h128zm234.66-482.13V213.33A21.33 21.33 0 00576 192H448v157.87h149.33zm0 231.98V435.2H448v146.69h149.33zm0 228.82v-143.5H448V832h128a21.33 21.33 0 0021.33-21.33zM864 888.02a48 48 0 01-95.7 5.2l-.3-5.2v-751.7a48 48 0 0195.7-5.2l.3 5.2v751.7z'],
  ...props
});

const ItalicBetaNormal = props => createSvgIcon({
  name: 'italic-beta',
  viewBox: '0 0 1024 1024',
  path: ['M384 157.87h384a42.67 42.67 0 015 85.03l-5 .3H633.13L475.9 793.6H640a42.67 42.67 0 015 85.03l-5 .3H256a42.67 42.67 0 01-5-85.03l5-.3h131.16l157.22-550.4H384a42.67 42.67 0 01-5-85.03l5-.3h384z'],
  ...props
});

const KeyboardBetaNormal = props => createSvgIcon({
  name: 'keyboard-beta',
  viewBox: '0 0 1024 1024',
  path: ['M795.14 128c41.13 0 63.01 4.27 85.84 16.43a120.2 120.2 0 0149.8 49.79c12.2 22.83 16.42 44.71 16.42 85.84V722.6c0 41.13-4.27 63.02-16.43 85.85a120.2 120.2 0 01-49.79 49.79c-22.83 12.2-44.71 16.43-85.84 16.43H224.6c-41.13 0-63.02-4.27-85.85-16.43a120.2 120.2 0 01-49.79-49.8c-12.16-22.82-16.43-44.7-16.43-85.84V280.06c0-41.13 4.27-63.01 16.43-85.84a120.2 120.2 0 0149.8-49.8c22.82-12.15 44.7-16.42 85.84-16.42h570.54zm7.25 85.38l-577.8-.05c-28.24 0-36.86 1.67-45.65 6.36a34.9 34.9 0 00-14.72 14.76c-4.26 7.98-6.01 15.79-6.31 38.4l-.04 449.71c0 28.25 1.66 36.86 6.35 45.65A34.9 34.9 0 00179 782.93c8.74 4.7 17.36 6.36 45.6 6.36h570.55c28.24 0 36.86-1.66 45.65-6.36a34.9 34.9 0 0014.72-14.76c4.7-8.75 6.36-17.36 6.36-45.61v-442.5c0-28.24-1.67-36.86-6.36-45.65a34.9 34.9 0 00-14.76-14.72c-7.98-4.27-15.79-6.02-38.4-6.31zm-77.06 418.09c28.3 0 51.2 19.11 51.2 42.66s-22.9 42.67-51.2 42.67h-409.6c-28.28 0-51.2-19.11-51.2-42.67s22.92-42.66 51.2-42.66h409.6zm8.54-190.72c28.28 0 51.2 22.44 51.2 50.17 0 27.74-22.92 50.18-51.2 50.18h-51.2c-28.3 0-51.2-22.44-51.2-50.18 0-27.73 22.9-50.22 51.2-50.22h51.2zm-204.8 0c28.28 0 51.2 22.44 51.2 50.17 0 27.74-22.92 50.18-51.2 50.18h-51.2c-28.3 0-51.2-22.44-51.2-50.18 0-27.73 22.9-50.22 51.2-50.22h51.2zm-204.8 0c28.28 0 51.2 22.44 51.2 50.17 0 27.74-22.92 50.18-51.2 50.18h-51.2c-28.3 0-51.2-22.44-51.2-50.18 0-27.73 22.9-50.22 51.2-50.22h51.2zm409.6-150.62c28.28 0 51.2 22.49 51.2 50.18 0 27.73-22.92 50.22-51.2 50.22h-51.2c-28.3 0-51.2-22.49-51.2-50.22s22.9-50.18 51.2-50.18h51.2zm-204.8 0c28.28 0 51.2 22.49 51.2 50.18 0 27.73-22.92 50.22-51.2 50.22h-51.2c-28.3 0-51.2-22.49-51.2-50.22s22.9-50.18 51.2-50.18h51.2zm-204.8 0c28.28 0 51.2 22.49 51.2 50.18 0 27.73-22.92 50.22-51.2 50.22h-51.2c-28.3 0-51.2-22.49-51.2-50.22s22.9-50.18 51.2-50.18h51.2z'],
  ...props
});

const KeyboardFillBetaNormal = props => createSvgIcon({
  name: 'keyboard-fill-beta',
  viewBox: '0 0 1024 1024',
  path: ['M795.14 128c41.13 0 63.01 4.27 85.84 16.43a120.2 120.2 0 0149.8 49.79c12.2 22.83 16.42 44.71 16.42 85.84V722.6c0 41.13-4.27 63.02-16.43 85.85a120.2 120.2 0 01-49.79 49.79c-22.83 12.2-44.71 16.43-85.84 16.43H224.6c-41.13 0-63.02-4.27-85.85-16.43a120.2 120.2 0 01-49.79-49.8c-12.16-22.82-16.43-44.7-16.43-85.84V280.06c0-41.13 4.27-63.01 16.43-85.84a120.2 120.2 0 0149.8-49.8c22.82-12.15 44.7-16.42 85.84-16.42h570.54zm-69.8 503.47h-409.6c-28.3 0-51.2 19.11-51.2 42.66s22.9 42.67 51.2 42.67h409.6c28.28 0 51.2-19.11 51.2-42.67s-22.92-42.66-51.2-42.66zm8.53-190.72h-51.2c-28.3 0-51.2 22.44-51.2 50.17 0 27.74 22.9 50.18 51.2 50.18h51.2c28.28 0 51.2-22.44 51.2-50.18 0-27.73-22.92-50.22-51.2-50.22zm-204.8 0h-51.2c-28.3 0-51.2 22.44-51.2 50.17 0 27.74 22.9 50.18 51.2 50.18h51.2c28.28 0 51.2-22.44 51.2-50.18 0-27.73-22.92-50.22-51.2-50.22zm-204.8 0h-51.2c-28.3 0-51.2 22.44-51.2 50.17 0 27.74 22.9 50.18 51.2 50.18h51.2c28.28 0 51.2-22.44 51.2-50.18 0-27.73-22.92-50.22-51.2-50.22zm409.6-150.62h-51.2c-28.3 0-51.2 22.49-51.2 50.18 0 27.73 22.9 50.22 51.2 50.22h51.2c28.28 0 51.2-22.49 51.2-50.22s-22.92-50.18-51.2-50.18zm-204.8 0h-51.2c-28.3 0-51.2 22.49-51.2 50.18 0 27.73 22.9 50.22 51.2 50.22h51.2c28.28 0 51.2-22.49 51.2-50.22s-22.92-50.18-51.2-50.18zm-204.8 0h-51.2c-28.3 0-51.2 22.49-51.2 50.18 0 27.73 22.9 50.22 51.2 50.22h51.2c28.28 0 51.2-22.49 51.2-50.22s-22.92-50.18-51.2-50.18z'],
  ...props
});

const LeftBetaNormal = props => createSvgIcon({
  name: 'left-beta',
  viewBox: '0 0 1024 1024',
  path: ['M631.47 143.42c11.6-11.85 30.08-11.76 41.4.33l47.18 50.36c11.28 12.04 11.02 31.4-.61 43.3L469.16 493.38a29.78 29.78 0 00.83 42.44l260.23 249.22c12.07 11.56 12.52 30.48 1.04 42.23l-52.17 53.35c-11.5 11.76-30.36 11.62-41.85-.01l-344.1-348.38a30.62 30.62 0 01-.04-42.77l338.37-346.05z'],
  ...props
});

const LineHeightBetaNormal = props => createSvgIcon({
  name: 'line-height-beta',
  viewBox: '0 0 1024 1024',
  path: ['M847.79 103.47l3.58 2.98 80.68 80.77a21.63 21.63 0 016.62 15.57c-.17 11.74-10.33 21.34-23.51 23.04l-4.53.3-35.96-.38v555.4l35.96-.35c15.32-.13 27.87 10.28 28.04 23.34a21.63 21.63 0 01-6.62 15.57l-80.68 80.77a31.15 31.15 0 01-39.04 2.69l-80.6-82.1c-9.81-10.02-8.15-24.91 3.59-33.27a30.72 30.72 0 0117.4-5.46l36.61-.35V224.9l-36.6-.3a31.45 31.45 0 01-13.53-3.15l-3.84-2.3c-10.62-7.51-12.97-20.31-6.23-30.13l2.6-3.15 80.6-82.1a31.49 31.49 0 0135.46-.3zM614.19 780.8l4.99.3a42.67 42.67 0 01-5 85.03H170.68l-5-.3a42.67 42.67 0 015-85.03h443.52zm.42-213.33l4.95.3a42.67 42.67 0 01-4.99 85.03h-443.9l-5-.3a42.67 42.67 0 015-85.03h443.9zM170.67 354.13l444.92.3a42.67 42.67 0 01-4.99 85.04H170.67l-5-.3a42.67 42.67 0 015-85.04H610.6zM609.24 140.8l4.95.3a42.67 42.67 0 01-4.91 85.03H170.67l-5-.3a42.67 42.67 0 015-85.03h438.57z'],
  ...props
});

const LineStyleBetaNormal = props => createSvgIcon({
  name: 'line-style-beta',
  viewBox: '0 0 1024 1024',
  path: ['M170.67 787.33l80.38.51a42.67 42.67 0 014.95 85.03l-4.95.3-80.38-.5a42.67 42.67 0 01-5-85.04l5-.3zm279.25-.43a42.67 42.67 0 014.95 85.04l-4.95.3-75.18.42a42.67 42.67 0 01-4.95-85.03l4.95-.3 75.18-.43zM576 785.5l80.38.5a42.67 42.67 0 014.95 85.04l-4.95.3-80.38-.51a42.67 42.67 0 01-5-85.04l5-.3zm279.25-.43a42.67 42.67 0 014.95 85.03l-4.95.3-75.18.43a42.67 42.67 0 01-4.94-85.04l4.94-.3 75.18-.42zm-425.04-296.4a42.67 42.67 0 110 85.32H170.67a42.67 42.67 0 010-85.33H430.2zm423.12 0a42.67 42.67 0 010 85.32h-262.7a42.67 42.67 0 110-85.33h262.7zm0-341.34a42.67 42.67 0 015 85.03l-5 .3H170.67a42.67 42.67 0 01-5-85.03l5-.3h682.66z'],
  ...props
});

const LineThicknessBetaNormal = props => createSvgIcon({
  name: 'line-thickness-beta',
  viewBox: '0 0 1024 1024',
  path: ['M149.33 810.67h725.34a21.33 21.33 0 013.84 42.32l-3.84.34H149.33a21.33 21.33 0 01-3.84-42.32l3.84-.34h725.34zM170.67 512h682.66a42.67 42.67 0 015 85.03l-5 .3H170.67a42.67 42.67 0 01-5-85.03l5-.3h682.66zm661.97-341.33a64 64 0 010 128H192a64 64 0 010-128z'],
  ...props
});

const LinkBetaNormal = props => createSvgIcon({
  name: 'link-beta',
  viewBox: '0 0 1024 1024',
  path: ['M413.31 341.38l11.27.55a218.37 218.37 0 01160.3 89.64 42.67 42.67 0 01-68.95 50.3 133.08 133.08 0 00-97.63-54.86 131.71 131.71 0 00-104.02 39.93l-105.6 108.3c-51.33 54.52-50.6 141.6 1.67 195.2a130.9 130.9 0 00186.8 2.21l60.45-62.04a42.67 42.67 0 1161.1 59.57l-61.01 62.55a216.32 216.32 0 01-308.48-2.74c-84.14-86.31-85.34-225.49-2.14-313.8l106.11-108.8a217 217 0 01171.4-65.46zm135.94-171.44a216.32 216.32 0 01308.48 2.73c84.14 86.32 85.33 225.5 2.13 313.82l-106.11 108.8a217 217 0 01-171.4 65.45 218.37 218.37 0 01-160.3-89.65 42.67 42.67 0 1168.96-50.3 133.08 133.08 0 0097.62 54.87 131.71 131.71 0 00104.02-39.94l105.6-108.29c51.33-54.52 50.6-141.6-1.66-195.2a130.9 130.9 0 00-186.88-2.13l-60.8 62.04a42.67 42.67 0 01-60.93-59.73z'],
  ...props
});

const LoadingBetaNormal = props => createSvgIcon({
  name: 'loading-beta',
  viewBox: '0 0 1024 1024',
  path: ['M510.5 958.7c-60.4 0-119-11.8-174.2-35.2-53.3-22.5-101.1-54.8-142.2-95.9s-73.3-88.9-95.9-142.2C74.9 630.2 63 571.6 63 511.2s11.8-119 35.2-174.2c22.5-53.3 54.8-101.1 95.9-142.2S283 121.5 336.3 99a445.57 445.57 0 01174.2-35.2c49.3 0 97.8 8 144.1 23.7a49.99 49.99 0 01-16.1 97.3c-5.3 0-10.8-.9-16.1-2.7a347.26 347.26 0 00-111.9-18.4c-92.8 0-180 36.1-245.7 101.8C199.2 331.1 163 418.4 163 511.2c0 92.8 36.1 180 101.8 245.7 65.6 65.6 152.9 101.8 245.7 101.8s180-36.1 245.7-101.8C821.8 691.3 858 604 858 511.2c0-58.6-14.9-116.6-43-167.6-13.3-24.2-4.6-54.6 19.6-67.9 24.2-13.3 54.6-4.6 67.9 19.6 36.3 65.7 55.4 140.4 55.4 215.9 0 60.4-11.8 119-35.2 174.2a445.04 445.04 0 01-95.9 142.2 446.67 446.67 0 01-142.2 95.9 444.72 444.72 0 01-174.1 35.2z'],
  ...props
});

const LockCellBetaNormal = props => createSvgIcon({
  name: 'lock-cell-beta',
  viewBox: '0 0 1024 1024',
  path: ['M342.02 426.67h336.2V219.95a42.67 42.67 0 00-42.66-42.67H384.68a42.67 42.67 0 00-42.66 42.67v206.72zm421.54.17a128 128 0 01121.77 127.83v256a128 128 0 01-128 128H266.67a128 128 0 01-128-128v-256a128 128 0 01118.01-127.62v-207.1a128 128 0 01128-128h250.88a128 128 0 01128 128v206.89zM266.66 512A42.67 42.67 0 00224 554.67v256a42.67 42.67 0 0042.67 42.66h490.66A42.67 42.67 0 00800 810.67v-256A42.67 42.67 0 00757.33 512H266.67zM480 704a53.33 53.33 0 1164 0v32a32 32 0 11-64 0v-32z'],
  ...props
});

const LookLockCellBetaNormal = props => createSvgIcon({
  name: 'look-lock-cell-beta',
  viewBox: '0 0 1024 1024',
  path: ['M382.8 810.67H256A42.67 42.67 0 01213.33 768V256A42.67 42.67 0 01256 213.33h512A42.67 42.67 0 01810.67 256v135.21a42.67 42.67 0 0085.33 0V256a128 128 0 00-128-128H256a128 128 0 00-128 128v512a128 128 0 00128 128h126.8a42.67 42.67 0 000-85.33zM533.34 768a234.67 234.67 0 100-469.33 234.67 234.67 0 000 469.33zm0-85.33a149.33 149.33 0 110-298.67 149.33 149.33 0 010 298.67zm128.64 20.69L813.7 855.04a42.67 42.67 0 0060.33-60.33L722.3 643.03a42.67 42.67 0 00-60.33 60.33z'],
  ...props
});

const MentionBetaNormal = props => createSvgIcon({
  name: 'mention-beta',
  viewBox: '0 0 1024 1024',
  path: ['M131.46 330.41a424.4 424.4 0 01477-225.4c192.05 44.8 327.95 216.06 327.82 416.85-11.65 130.21-65.2 201.64-160.3 190.16-41.81-5.03-71.17-30.38-91.6-71.93a211.07 211.07 0 11-42.16-287.92v-4.52a40.4 40.4 0 0180.85 0V352c0 58.11 1.45 99.37 7.26 145.58 10.5 83.2 32.55 131.41 55.33 134.19 38.7 4.69 61.96-26.37 69.93-113.5a343.55 343.55 0 10-134.7 272.81 40.4 40.4 0 0149.16 64.17 424.4 424.4 0 01-638.6-524.8zM512 388.01a130.26 130.26 0 100 260.52 130.26 130.26 0 000-260.48z'],
  ...props
});

const MergeCellsBetaNormal = props => createSvgIcon({
  name: 'merge-cells-beta',
  viewBox: '0 0 1024 1024',
  path: ['M213.33 469.33H320v-42.66a21.33 21.33 0 0134.13-17.07l113.8 85.33a21.33 21.33 0 010 34.14l-113.8 85.33A21.33 21.33 0 01320 597.33v-42.66H213.33v256H384v-79.53a42.67 42.67 0 1185.33 0v79.53A85.33 85.33 0 01384 896H213.33A85.33 85.33 0 01128 810.67V213.33A85.33 85.33 0 01213.33 128H384a85.33 85.33 0 0185.33 85.33v81.84a42.67 42.67 0 01-85.33 0v-81.84H213.33v256zm597.34 0v-256H640v81.84a42.67 42.67 0 01-85.33 0v-81.84A85.33 85.33 0 01640 128h170.67A85.33 85.33 0 01896 213.33v597.34A85.33 85.33 0 01810.67 896H640a85.33 85.33 0 01-85.33-85.33v-79.53a42.67 42.67 0 1185.33 0v79.53h170.67v-256H704v42.66a21.33 21.33 0 01-34.13 17.07l-113.8-85.33a21.33 21.33 0 010-34.14l113.8-85.33A21.33 21.33 0 01704 426.67v42.66h106.67z'],
  ...props
});

const MicTiltBetaNormal = props => createSvgIcon({
  name: 'mic-tilt-beta',
  viewBox: '0 0 1024 1024',
  path: ['M864.1 625.46a43.52 43.52 0 0119.15 54.02l-2.35 4.8-21.3 36.87c-98.56 170.7-312.99 234.4-494.9 153.8l-69.63 120.58a43.98 43.98 0 01-76.09-43.93l69.58-120.62C127.85 713.73 75.78 496.23 174.4 325.53l21.25-36.86 2.96-4.46a43.52 43.52 0 0156.38-10.44 43.52 43.52 0 0119.14 54.06l-2.35 4.77-21.25 36.86C168.24 512 220.82 696.32 368.02 781.3c147.2 85 333.22 38.35 415.44-104.14l21.3-36.86 2.97-4.46a43.52 43.52 0 0156.37-10.4zM793.6 44.24c105.11 60.67 142.7 192.36 83.97 294.14L707.33 633.24c-58.73 101.74-191.6 135.07-296.76 74.34-105.11-60.67-142.7-192.4-83.97-294.14l170.24-294.86C555.62 16.9 688.5-16.5 793.6 44.24z'],
  ...props
});

const MinusBetaNormal = props => createSvgIcon({
  name: 'minus-beta',
  viewBox: '0 0 1088 1024',
  path: ['M256 550.4h576a64 64 0 000-128H256a64 64 0 100 128z'],
  ...props
});

const MoreBetaNormal = props => createSvgIcon({
  name: 'more-beta',
  viewBox: '0 0 1024 1024',
  path: ['M314.2 513.96a64 64 0 01-128 0 64 64 0 11128 0zm279.25 0a64 64 0 01-127.7 6.15l-.3-6.15a64 64 0 11128 0zm279.3 0A64 64 0 01745 520.11l-.25-6.15a64 64 0 11128 0z'],
  ...props
});

const MoreVerticalBetaNormal = props => createSvgIcon({
  name: 'more-vertical-beta',
  viewBox: '0 0 1024 1024',
  path: ['M262.49 463.45a20.82 20.82 0 01.2-30.43l37.04-34.68a23.21 23.21 0 0131.83.42l188.08 183.98a21.9 21.9 0 0031.19-.64l183.16-191.23a21.8 21.8 0 0131.02-.77l39.21 38.36a21.56 21.56 0 010 30.72l-256 252.88a22.55 22.55 0 01-31.44.05l-254.3-248.66z'],
  ...props
});

const NonPublicBetaNormal = props => createSvgIcon({
  name: 'non-public-beta',
  viewBox: '0 0 1024 1024',
  path: ['M815.4 437.76h-56.87V326.53c0-133.2-110.42-241.2-246.53-241.2-136.15 0-246.53 107.95-246.53 241.16V437.8h-56.83a37.55 37.55 0 00-37.93 37.12V901.6c0 20.48 16.98 37.08 37.93 37.08h606.72a37.55 37.55 0 0037.93-37.12V474.88a37.55 37.55 0 00-37.93-37.12zm-284.46 256.6v77.35h-37.88v-77.35a55.77 55.77 0 01-37.98-52.48c0-30.72 25.52-55.68 56.92-55.68 31.4 0 56.87 24.91 56.87 55.63 0 24.24-15.78 44.89-37.93 52.48zm151.73-256.6H341.33V326.49c0-92.2 76.38-166.92 170.67-166.92s170.67 74.76 170.67 166.96v111.32z'],
  ...props
});

const NotificationBetaNormal = props => createSvgIcon({
  name: 'notification-beta',
  viewBox: '0 0 1024 1024',
  path: ['M581.82 861.1a46.55 46.55 0 0141.56 67.48c-22.06 43.9-64.37 71.96-111.38 71.96-47.01 0-89.32-28.07-111.38-72a46.55 46.55 0 0141.56-67.45h139.64zM512 23.26c51.43 0 95.1 26.72 110.45 63.72 142.48 45.76 245.62 177.67 245.62 333.46v217.22c0 43.85 34.77 80.15 79.27 83.5l3.07.1A46.73 46.73 0 01996.58 768a46.55 46.55 0 01-46.54 46.55H80.8A46.55 46.55 0 0134.26 768v-.7a46.34 46.34 0 0137.19-45.38l5.44-.74c44.4-3.5 79.04-39.7 79.04-83.5V420.44c0-155.8 103.14-287.66 245.62-333.46C416.9 50 460.57 23.27 512 23.27zm0 139.64c-145.4 0-262.98 115.48-262.98 257.54v217.22a174.3 174.3 0 01-16.53 74.29l-4.79 9.5h568.6a174.27 174.27 0 01-21.32-83.79V420.45c0-142.06-117.57-257.54-262.98-257.54z'],
  ...props
});

const OrderListBetaNormal = props => createSvgIcon({
  name: 'order-list-beta',
  viewBox: '0 0 1024 1024',
  path: ['M320 213.33A42.67 42.67 0 00362.67 256h514.68a42.67 42.67 0 000-85.33H362.67A42.67 42.67 0 00320 213.33zM320 512a42.67 42.67 0 0042.67 42.67h514.68a42.67 42.67 0 000-85.34H362.67A42.67 42.67 0 00320 512zm0 298.67a42.67 42.67 0 0042.67 42.66h514.68a42.67 42.67 0 000-85.33H362.67A42.67 42.67 0 00320 810.67zM207.23 704a24.4 24.4 0 0124.4 24.36l-.33 3.8h.68v149.33h-.3a24.36 24.36 0 01-24.06 20.61h-97.54a24.36 24.36 0 110-48.77l73.13-.04v-23.6h-73.13a24.36 24.36 0 010-48.72l73.13-.04v-28.2H109.7a24.36 24.36 0 010-48.73h97.53zm.39-298.67a24.36 24.36 0 0124.36 24.37v76.97a24.36 24.36 0 01-24.32 24.36H134.4v23.64h73.17a24.36 24.36 0 010 48.76h-97.49a24.36 24.36 0 01-24.02-28.5h-.3v-68.26a24.35 24.35 0 0124.36-24.37l73.13-.04v-28.2h-73.17a24.36 24.36 0 010-48.73h97.54zm-48.77-298.66h24.4c13.44 0 24.37 9.55 24.37 21.33v170.67c0 11.77-10.93 21.33-24.37 21.33-13.48 0-24.4-9.56-24.4-21.33v-192zm-24.36 0h24.36v48.76h-24.36a24.36 24.36 0 010-48.76z'],
  ...props
});

const PageFlowBetaNormal = props => createSvgIcon({
  name: 'page-flow-beta',
  viewBox: '0 0 1024 1024',
  path: ['M786.3 128c60.6 0 109.7 54.61 109.7 121.98v524C896 841.42 846.9 896 786.3 896H237.65C177.11 896 128 841.39 128 774.02v-524C128 182.58 177.1 128 237.7 128h548.65zm0 85.33H237.65c-10.36 0-22.18 12.2-24.1 31.28l-.22 5.37v524c0 20.3 10.97 34.17 21.5 36.35l2.87.3h548.65c10.36 0 22.18-12.2 24.1-31.28l.26-5.38V250.03c0-20.31-10.97-34.18-21.5-36.36l-2.9-.34z', 'M598.02 597.33c20.18 0 36.56 15.92 36.56 35.54 0 19.63-16.38 35.59-36.56 35.59H310.87a36.05 36.05 0 01-36.57-35.59c0-19.62 16.35-35.54 36.57-35.54h287.15zm-73.99-124.46c20.18 0 36.57 15.92 36.57 35.59 0 19.63-16.39 35.54-36.57 35.54H310.87a36.05 36.05 0 01-36.57-35.54c0-19.63 16.35-35.59 36.57-35.59h213.16zm189.1-124.41c20.22 0 36.57 15.91 36.57 35.54s-16.35 35.54-36.57 35.54H310.87a36.78 36.78 0 01-31.7-17.75 34.69 34.69 0 010-35.58 36.78 36.78 0 0131.7-17.75h402.26z'],
  ...props
});

const PageHeaderMarginBetaNormal = props => createSvgIcon({
  name: 'page-header-margin-beta',
  viewBox: '0 0 1024 1024',
  path: ['M179.2 418.13h384a85.33 85.33 0 0185.12 78.94l.21 6.4v298.66a85.33 85.33 0 01-78.93 85.12l-6.4.22h-384a85.33 85.33 0 01-85.12-78.94l-.21-6.4V503.47a85.33 85.33 0 0178.93-85.12l6.4-.22h384zM830.08 134.7l3.84 3.28 96.85 96.9a25.94 25.94 0 017.9 18.73c-.22 14.34-12.85 26.03-29.1 27.78l-4.52.21-51.72-.55V844.8a42.67 42.67 0 01-37.67 42.37l-5 .3a42.67 42.67 0 01-42.36-37.68l-.3-4.99V280.23l-52.48-.5a37.55 37.55 0 01-17.15-4.27l-3.71-2.27c-12.8-9.08-15.58-24.7-7.17-36.48l2.86-3.4 96.72-98.57a37.72 37.72 0 0143.01 0zM563.2 503.47h-384v298.66h384V503.47zm42.67-238.94a42.67 42.67 0 0142.36 37.68l.3 4.99v42.67a42.67 42.67 0 01-85.03 4.99l-.3-5V307.2a42.67 42.67 0 0142.67-42.67zm-469.34 0a42.67 42.67 0 0142.37 37.68l.3 4.99v42.67a42.67 42.67 0 01-85.03 4.99l-.3-5V307.2a42.67 42.67 0 0142.66-42.67zm326.32-128a42.67 42.67 0 014.95 85.04l-4.95.3h-42.67a42.67 42.67 0 01-5-85.04l5-.3h42.67zm-147.12 0a42.67 42.67 0 015 85.04l-5 .3h-42.66a42.67 42.67 0 01-5-85.04l5-.3h42.66zm-149.33 0a42.67 42.67 0 015 85.04l-5 .3h-21.33a42.67 42.67 0 01-5-85.04l5-.3h21.33zm426.67 0a42.67 42.67 0 014.99 85.04l-5 .3h-21.33a42.67 42.67 0 01-4.99-85.04l5-.3h21.33z'],
  ...props
});

const PageLayoutBetaNormal = props => createSvgIcon({
  name: 'page-layout-beta',
  viewBox: '0 0 1024 1024',
  path: ['M720.6 597.33c35.11 0 54.48 3.84 74.66 14.94a107.21 107.21 0 0143.87 44.88c10.53 20.31 14.2 39.68 14.2 75.3V850.9a42.67 42.67 0 11-85.33 0V732.46c0-23.04-1.2-29.44-4.57-35.84a22.06 22.06 0 00-9.25-9.6c-5.3-2.9-10.46-4.1-27.48-4.31l-423.25-.04c-22.02 0-27.74 1.15-33.63 4.35a22.06 22.06 0 00-9.25 9.6c-3.38 6.4-4.57 12.8-4.57 35.84v120.87a42.67 42.67 0 01-85.33 0V732.46c0-35.63 3.67-55.04 14.2-75.3 10.03-19.2 25-34.57 43.87-44.94 20.18-11.05 39.55-14.89 74.66-14.89h417.2zm175.23-128a42.67 42.67 0 01.34 85.34l-767.74 3.07a42.67 42.67 0 01-.34-85.33zM213.33 128a42.67 42.67 0 0142.37 37.67l.3 5v120.87c0 23.04 1.2 29.44 4.57 35.84a21.9 21.9 0 009.25 9.6c5.3 2.9 10.46 4.1 27.48 4.31l6.1.04h417.2c21.97 0 27.73-1.15 33.58-4.35a22.06 22.06 0 009.25-9.6c3.03-5.8 4.27-11.52 4.53-29.44l.04-6.4V173.1a42.67 42.67 0 0185.03-5l.3 5v118.44c0 35.63-3.67 55.04-14.2 75.3a107.56 107.56 0 01-43.87 44.94c-18.13 9.94-35.67 14.08-64.6 14.76l-10.06.13H303.36c-35.11 0-54.49-3.84-74.67-14.94a107.4 107.4 0 01-43.86-44.88c-9.51-18.26-13.4-35.8-14.08-65.07l-.08-10.24V170.67A42.67 42.67 0 01213.33 128z'],
  ...props
});

const PageTailMarginBetaNormal = props => createSvgIcon({
  name: 'page-tail-margin-beta',
  viewBox: '0 0 1024 1024',
  path: ['M171.52 602.62H559.4a86.23 86.23 0 0085.98-79.87l.2-6.4V214.27c0-45.48-35.15-82.77-79.78-86.01l-6.35-.26H171.6a86.23 86.23 0 00-85.98 79.87l-.3 6.4v302.08a86.25 86.25 0 0079.79 86.02l6.4.25H559.4zm657.5 286.6l3.83-3.29 97.8-98.05a26.28 26.28 0 008.02-18.9c-.22-14.5-13.02-26.37-29.44-28.07l-4.53-.22-52.26.52V171.09a43.06 43.06 0 00-38.4-42.83l-4.65-.26a43.12 43.12 0 00-42.84 38.4l-.21 4.7v570.96l-53.04.51a37.93 37.93 0 00-17.32 4.31l-3.76 2.3c-12.97 9.18-15.74 24.96-7.25 36.91l2.9 3.41 97.7 99.67c12.72 9.22 31.16 8.96 43.44.05zM559.4 516.3H171.56V214.27H559.4v302.08zm43.1 241.62a43.1 43.1 0 0042.83-38.44l.26-4.7v-43.13a43.1 43.1 0 00-85.93-4.7l-.26 4.7v43.1a43.1 43.1 0 0043.1 43.17zm-474.03 0a43.09 43.09 0 0042.8-38.44l.25-4.7v-43.13a43.1 43.1 0 00-85.93-4.7l-.26 4.7v43.1a43.1 43.1 0 0043.1 43.17zm329.56 129.45a43.1 43.1 0 004.69-86.06l-4.7-.25h-43.09a43.1 43.1 0 00-4.69 86.06l4.7.25h43.09zm-148.57 0a43.1 43.1 0 004.7-86.06l-4.7-.25h-43.1a43.1 43.1 0 00-4.69 86.06l4.7.25h43.1zm-150.87 0a43.1 43.1 0 004.7-86.06l-4.7-.25h-21.54a43.1 43.1 0 00-4.7 86.06l4.7.25h21.54zm430.98 0a43.1 43.1 0 004.7-86.06l-4.7-.25h-21.55a43.1 43.1 0 00-4.7 86.06l4.7.25h21.55z'],
  ...props
});

const PageWebBetaNormal = props => createSvgIcon({
  name: 'page-web-beta',
  viewBox: '0 0 1024 1024',
  path: ['M810.67 768a42.67 42.67 0 010 85.33h-640a42.67 42.67 0 010-85.33h640zM202.88 633.9h419.29c12.62 0 22.82 10.92 22.82 24.4 0 12.12-8.28 22.2-19.11 24.07l-3.71.3H202.88c-12.59 0-22.83-10.93-22.83-24.37 0-12.11 8.28-22.18 19.12-24.06l3.71-.34h419.29zm-9.39-146.26H784c12.63 0 22.87 10.88 22.87 24.36 0 12.12-8.28 22.19-19.12 24.06l-3.7.3H193.53c-12.63 0-22.87-10.88-22.87-24.36 0-12.12 8.27-22.19 19.11-24.06l3.71-.3H784zm3.84-146.3h590.51c12.59 0 22.83 10.92 22.83 24.36 0 12.11-8.28 22.18-19.12 24.06l-3.71.34h-590.5c-12.64 0-22.88-10.92-22.88-24.4 0-12.12 8.28-22.2 19.12-24.07l3.71-.3h590.5zm613.34-170.67a42.67 42.67 0 010 85.33h-640a42.67 42.67 0 110-85.33h640z'],
  ...props
});

const ParagraghSpaceDownBetaNormal = props => createSvgIcon({
  name: 'paragragh-space-down-beta',
  viewBox: '0 0 1024 1024',
  path: ['M861.35 190.12c23.56 0 42.67-19.54 42.67-43.65 0-24.06-19.11-43.6-42.67-43.6H170.67c-23.56 0-42.67 19.54-42.67 43.6 0 24.11 19.11 43.65 42.67 43.65h690.68zm-3.2 175.36c23.56 0 42.67-19.5 42.67-43.6 0-24.07-19.11-43.6-42.67-43.6H170.67c-23.56 0-42.67 19.53-42.67 43.6 0 24.1 19.11 43.65 42.67 43.65h687.48zm2.27 175.45c23.55 0 42.66-19.54 42.66-43.6 0-24.11-19.11-43.66-42.66-43.66H170.67c-23.56 0-42.67 19.55-42.67 43.65 0 24.07 19.11 43.6 42.67 43.6h689.75zm-376.2 353.7c17.45 16.99 45.7 16.99 63.15 0L694.7 750.68a42.83 42.83 0 000-61.7c-17.4-17.02-45.7-17.02-63.15 0l-71.12 69.5V603.1a44.67 44.67 0 00-89.3 0v155.4L400 688.99c-17.4-17.03-45.65-17.03-63.15 0a42.92 42.92 0 000 61.69z'],
  ...props
});

const PasteBetaNormal = props => createSvgIcon({
  name: 'paste-beta',
  viewBox: '0 0 1024 1024',
  path: ['M512 89.6c56.02 0 103.68 36.01 121 86.14a128 128 0 01113.45 119.68l.22 7.51V409.6a128 128 0 01128 128v256a128 128 0 01-128 128H512a128 128 0 01-126.2-106.67H320a128 128 0 01-127.79-120.49l-.21-7.5v-384a128 128 0 01113.66-127.2 128.04 128.04 0 01121-86.14H512zm234.67 405.33H512a42.67 42.67 0 00-42.67 42.67v256A42.67 42.67 0 00512 836.27h234.67a42.67 42.67 0 0042.66-42.67v-256a42.67 42.67 0 00-42.66-42.67zm-192 192H704a42.67 42.67 0 015 85.04l-5 .3H554.67a42.67 42.67 0 01-5-85.04l5-.3H704zm77.22-424.53l-1.96 5.03A128 128 0 01512 345.6h-85.33a128.04 128.04 0 01-119.9-83.16 42.5 42.5 0 00-29.14 35.5l-.3 5v384a42.67 42.67 0 0037.68 42.36l4.99.3h64v-192a128 128 0 01128-128h149.33V302.93a42.67 42.67 0 00-29.44-40.53zM704 558.93a42.67 42.67 0 015 85.04l-5 .3H554.67a42.67 42.67 0 01-5-85.04l5-.3H704zm-192-384h-85.33a42.67 42.67 0 100 85.34H512a42.67 42.67 0 000-85.34z'],
  ...props
});

const PauseBetaNormal = props => createSvgIcon({
  name: 'pause-beta',
  viewBox: '0 0 1024 1024',
  path: ['M182.86 0a109.71 109.71 0 01109.71 109.71V914.3a109.71 109.71 0 01-219.43 0V109.7A109.71 109.71 0 01182.86 0zm658.28 0a109.71 109.71 0 01109.72 109.71V914.3a109.71 109.71 0 01-219.43 0V109.7A109.71 109.71 0 01841.14 0z'],
  ...props
});

const PhoneBetaNormal = props => createSvgIcon({
  name: 'phone-beta',
  viewBox: '0 0 1024 1024',
  path: ['M701.35 123.56a85.33 85.33 0 0185.34 85.34v606.2a85.33 85.33 0 01-85.34 85.34h-336a85.33 85.33 0 01-85.33-85.34V208.9a85.33 85.33 0 0185.33-85.34h335.96zM533.33 816a33.8 33.8 0 100 67.54 33.8 33.8 0 000-67.54zM690.7 191.1H376.02a28.46 28.46 0 00-28.16 24.24l-.3 4.22v551.09a28.5 28.5 0 0024.24 28.16l4.18.3h314.7a28.46 28.46 0 0028.13-24.24l.3-4.22V219.56a28.46 28.46 0 00-28.42-28.46z'],
  ...props
});

const PictureBetaNormal = props => createSvgIcon({
  name: 'picture-beta',
  viewBox: '0 0 1024 1024',
  path: ['M804.57 128a134.1 134.1 0 01134.1 134.1v499.8A134.1 134.1 0 01804.57 896H219.43a134.1 134.1 0 01-134.1-134.1V262.1A134.1 134.1 0 01219.43 128h585.14zm-75.9 425.69a89.39 89.39 0 00-124.38-8.67L290.26 810.67h514.3a48.78 48.78 0 0048.77-48.77V693zm75.94-340.36H219.39a48.77 48.77 0 00-48.72 48.77v499.8c0 9.73 2.81 18.77 7.68 26.32l368.21-311.46a178.77 178.77 0 01248.75 17.32l58.02 64.85V262.1a48.78 48.78 0 00-48.76-48.77zm-505.94 85.34a85.33 85.33 0 110 170.66 85.33 85.33 0 010-170.66z'],
  ...props
});

const PlayBetaNormal = props => createSvgIcon({
  name: 'play-beta',
  viewBox: '0 0 1024 1024',
  path: ['M108.67 140.43v746.2a118.5 118.5 0 00180.6 100.94L895.53 614.4a118.42 118.42 0 000-201.87L289.26 39.64a118.5 118.5 0 00-180.59 100.8'],
  ...props
});

const PlusBetaNormal = props => createSvgIcon({
  name: 'plus-beta',
  viewBox: '0 0 1024 1024',
  path: ['M512 160a64 64 0 0164 64v224h224a64 64 0 0163.55 56.51L864 512a64 64 0 01-64 64H576v224a64 64 0 01-56.51 63.55L512 864a64 64 0 01-64-64V576H224a64 64 0 01-63.55-56.51L160 512a64 64 0 0164-64h224V224a64 64 0 0156.51-63.55z'],
  ...props
});

const PresentModeBetaNormal = props => createSvgIcon({
  name: 'present-mode-beta',
  viewBox: '0 0 1024 1024',
  path: ['M938.03 106.67c23.89 0 43.3 19.11 43.3 42.66S961.96 192 938.03 192h-76.16v362.67c0 70.7-59.1 128-132.01 128h-175.2v170.66H684a41.81 41.81 0 0141.04 37.68l.3 4.99a42.24 42.24 0 01-36.52 42.37l-4.82.3h-386.6c-22.87 0-41.39-19.12-41.39-42.67a42.24 42.24 0 0136.52-42.37l4.82-.3h172V682.67H289.87c-72.92 0-132.01-57.3-132.01-128L157.82 192H85.97a43.1 43.1 0 01-43.05-38.02l-.25-4.65c0-23.55 19.37-42.66 43.3-42.66zM773.85 192h-528v364.03c0 26.16 19.7 47.36 44.03 47.36h439.98c24.32 0 43.99-21.2 43.99-47.36V192zm-304.52 93.87a21.33 21.33 0 0112.8 4.26l113.8 85.34a21.33 21.33 0 010 34.13l-113.8 85.33A21.33 21.33 0 01448 477.87V307.2a21.33 21.33 0 0121.33-21.33z'],
  ...props
});

const Preview1BetaNormal = props => createSvgIcon({
  name: 'preview-1-beta',
  viewBox: '0 0 1024 1024',
  path: ['M832 106.67a128 128 0 01128 128V784.6a128 128 0 01-128 128H192a128 128 0 01-128-128V234.67a128 128 0 01128-128h640zm0 85.33H192a42.67 42.67 0 00-42.67 42.67V784.6A42.67 42.67 0 00192 827.26h640a42.67 42.67 0 0042.67-42.66V234.67A42.67 42.67 0 00832 192zM612.35 618.67a42.67 42.67 0 010 85.33H277.33a42.67 42.67 0 010-85.33zm-86.31-149.34a42.67 42.67 0 010 85.34h-248.7a42.67 42.67 0 010-85.34zm218.15 0a42.67 42.67 0 110 85.34h-61.52a42.67 42.67 0 010-85.34zM746.67 320a42.67 42.67 0 010 85.33H277.33a42.67 42.67 0 110-85.33z'],
  ...props
});

const PreviewBetaNormal = props => createSvgIcon({
  name: 'preview-beta',
  viewBox: '0 0 1024 1024',
  path: ['M509.35 411.99c-47.44 0-85.84 42.67-85.84 95.27s38.4 95.8 85.84 95.8c47.4 0 85.25-43.19 85.25-95.8S556.76 412 509.35 412zm2.14-197.68c-235.1 0-425.86 177.63-425.86 305.11 0 127.5 190.76 304.05 425.82 304.05 236.11 0 426.92-180.61 426.92-304.05 0-123.43-190.8-305.06-426.92-305.06zm-1.62 502.23c-99.67 0-180.14-90.8-180.14-202.1 0-112.4 80.47-202.67 180.14-202.67 100.18 0 181.2 90.28 181.2 202.66 0 111.36-81.02 202.11-181.2 202.11z'],
  ...props
});

const PrintBetaNormal = props => createSvgIcon({
  name: 'print-beta',
  viewBox: '0 0 1024 1024',
  path: ['M725.33 128a85.33 85.33 0 0185.34 85.33v128h42.66a85.33 85.33 0 0185.12 78.94l.22 6.4V640a85.33 85.33 0 01-78.94 85.12l-6.4.21h-64v128A85.33 85.33 0 01704 938.67H362.67a85.33 85.33 0 01-85.34-85.34v-128h-64a85.33 85.33 0 01-85.12-78.93L128 640V426.67a85.33 85.33 0 0178.93-85.12l6.4-.22H256v-128A85.33 85.33 0 01341.33 128h384zM704 597.33H362.67v256H704v-256zm149.33-170.66h-640V640h64v-42.67A85.33 85.33 0 01362.67 512H704a85.33 85.33 0 0185.33 85.33V640h64V426.67zm-128-213.34h-384v128h384v-128z'],
  ...props
});

const ProhibitionNotificationBetaNormal = props => createSvgIcon({
  name: 'prohibition-notification-beta',
  viewBox: '0 0 1024 1024',
  path: ['M576 832a42.67 42.67 0 0138.1 61.87c-20.22 40.23-59 65.96-102.1 65.96-43.1 0-81.88-25.73-102.1-66A42.67 42.67 0 01448 832h128zM130.43 113.92l4.27 3.24 832 725.34a42.67 42.67 0 01-51.8 67.58l-4.27-3.24-134.78-117.5H117.16a42.67 42.67 0 01-42.66-42.67v-3.42a39.48 39.48 0 0132.38-38.82l4.7-.56c41.47-2.52 74.02-36 74.02-76.67V439.64c0-50.99 9.22-98 27.73-140.67L78.68 181.5a42.67 42.67 0 0151.75-67.58zm151 247.42a280.1 280.1 0 00-10.5 78.3V627.2c0 24.32-5.42 47.36-15.14 68.1l-4.4 8.7h420.06L281.43 361.34zM512 64c46.63 0 86.27 23.94 100.78 57.3l.43 1.11c127.14 40.79 220.07 156.37 224.98 294.14l.21 11.52V562.1a42.67 42.67 0 01-85.03 5l-.3-5V428.12C753.07 297.82 645.29 192 512 192a243.62 243.62 0 00-128.13 36.05 42.67 42.67 0 01-44.76-72.66 327.25 327.25 0 0171.68-32.98C424.8 88.5 464.81 64 512 64z'],
  ...props
});

const QuestionCircleBetaNormal = props => createSvgIcon({
  name: 'question-circle-beta',
  viewBox: '0 0 1024 1024',
  path: ['M512 64c247.42 0 448 200.58 448 448S759.42 960 512 960 64 759.42 64 512 264.58 64 512 64zm0 85.33a362.67 362.67 0 100 725.34 362.67 362.67 0 000-725.34zm-4.1 521.82a51.71 51.71 0 110 103.42 51.71 51.71 0 010-103.38zm0-379.05c85.5 0 155.05 63.83 155.05 142.25 0 53.33-32.08 101.8-83.8 126.29-18.13 8.66-28.96 22.61-28.96 37.3 0 21.4-18.95 38.82-42.29 38.82-23.33 0-42.28-17.41-42.28-38.83 0-44.24 27.9-83.92 74.67-106.15 23.46-11.14 38.1-33.2 38.1-57.43 0-35.67-31.57-64.69-70.49-64.69-38.87 0-70.48 29.02-70.48 64.69 0 21.42-18.95 38.78-42.33 38.78-23.34 0-42.24-17.36-42.24-38.83 0-78.37 69.55-142.2 155.05-142.2z'],
  ...props
});

const QuoteBetaNormal = props => createSvgIcon({
  name: 'quote-beta',
  viewBox: '0 0 1024 1024',
  path: ['M449.1 253.27a42.67 42.67 0 01-31.56 47.15l-4.87.98-6.53 1.15c-30.8 6.83-66.68 32.3-106.36 78.5-23.68 27.57-38.1 79.07-44.2 132.74a127.75 127.75 0 0153.45-9.64l21.34.72a128 128 0 01123.43 132.4l-.77 21.33a128 128 0 01-132.35 123.48l-21.33-.77a128.04 128.04 0 01-119.72-96.85l-.56-1.54c-26.02-96.21-14.12-275.88 55.98-357.5 54.87-63.83 109.7-100.82 166.02-108.59a42.67 42.67 0 0148.08 36.44zm393.82 0a42.67 42.67 0 01-31.57 47.15l-4.86.98-6.53 1.15c-30.8 6.83-66.65 32.3-106.33 78.5-23.72 27.57-38.1 79.07-44.24 132.74a127.87 127.87 0 0153.46-9.64l21.33.72a128 128 0 01123.44 132.4l-.73 21.33a128 128 0 01-132.4 123.48l-21.33-.77a128.04 128.04 0 01-119.72-96.85l-.51-1.54c-26.03-96.21-14.17-275.88 55.98-357.5 54.82-63.83 109.65-100.82 165.93-108.59a42.67 42.67 0 0148.08 36.44z'],
  ...props
});

const ReadOnlyBetaNormal = props => createSvgIcon({
  name: 'read-only-beta',
  viewBox: '0 0 1024 1024',
  path: ['M990.85 432.34s-171.01-219-478.85-219c-307.84 0-479.27 219.43-479.27 219.43-43.1 43.73-44.3 115.84.42 158.89 0 0 171.01 219 478.85 219 307.84 0 479.27-219.43 479.27-219.43 43.1-43.73 44.3-115.84-.42-158.89zM512 731.9c-120.58 0-218.37-98.47-218.37-219.9 0-121.47 97.8-219.9 218.37-219.9 120.58 0 218.37 98.43 218.37 219.9 0 121.43-97.8 219.9-218.37 219.9z', 'M341.33 512a170.67 170.67 0 10341.34 0 170.67 170.67 0 00-341.34 0z'],
  ...props
});

const ReconnectBetaNormal = props => createSvgIcon({
  name: 'reconnect-beta',
  viewBox: '0 0 1024 1024',
  path: ['M286 682.67A277.33 277.33 0 00782 512a42.67 42.67 0 1185.33 0 362.67 362.67 0 01-632.66 242.18V768a42.67 42.67 0 01-85.34 0V640A42.67 42.67 0 01192 597.33h128a42.67 42.67 0 010 85.34h-34zm444.67-341.34a277.33 277.33 0 00-496 170.67 42.67 42.67 0 01-85.34 0 362.67 362.67 0 01640-233.77V256a42.67 42.67 0 0185.34 0v128A42.67 42.67 0 01832 426.67H704a42.67 42.67 0 010-85.34h26.67z'],
  ...props
});

const RecordBetaNormal = props => createSvgIcon({
  name: 'record-beta',
  viewBox: '0 0 1024 1024',
  path: ['M512 0a512 512 0 110 1024A512 512 0 01512 0zm0 292.57a219.43 219.43 0 100 438.86 219.43 219.43 0 000-438.86z'],
  ...props
});

const RedoBetaNormal = props => createSvgIcon({
  name: 'redo-beta',
  viewBox: '0 0 1024 1024',
  path: ['M662.53 118.61a40.53 40.53 0 00-3.24 53.34l3.37 3.8 92.8 92.58h-265.6c-175.96 1.66-319.2 136.1-319.2 303.23 0 161.67 134.07 292.7 302.09 302.55.64.17 1.28.26 1.96.34l4.7.26h224a40.36 40.36 0 0040.27-40.4 40.36 40.36 0 00-35.58-40.16l-4.7-.3H493.06c-134.2 0-241.8-100.22-241.8-222.29 0-122.1 107.6-222.3 241.8-222.3l267.43-.03-97.8 97.2a40.53 40.53 0 00-3.58 53.32l3.33 3.84a40.2 40.2 0 0053.2 3.59l3.85-3.33 164.56-163.8a40.36 40.36 0 0011.95-30.5v-.77a40.45 40.45 0 00-21.72-35.84l-154.8-154.5a40.2 40.2 0 00-56.95.13z'],
  ...props
});

const ReferDingdriveBetaNormal = props => createSvgIcon({
  name: 'refer-dingdrive-beta',
  viewBox: '0 0 1185 1024',
  path: ['M651.75 62c196.2 0 355.27 159.06 355.27 355.26 0 9.71-.38 19.35-1.16 28.87a283.74 283.74 0 01119.58 231.66c0 154.54-123.37 280.28-276.99 284.12l-7.22.09h-450c-170.05 0-307.9-137.84-307.9-307.9 0-138.71 91.73-256 217.83-294.5C328.7 190.83 475.19 62 651.76 62zm0 94.74c-125.83 0-232.81 89.85-255.9 211.45l-1.19 6.65a94.74 94.74 0 01-61.17 73.8l-4.65 1.57a213.28 213.28 0 00-150.77 203.9 213.16 213.16 0 00206.88 213.06l6.28.1h448.81l6.04-.08a189.47 189.47 0 00104.85-343.87 94.74 94.74 0 01-39.5-84.79c.57-7.03.85-14.14.85-21.27 0-143.88-116.64-260.52-260.53-260.52z', 'M776.33 559.68a47.37 47.37 0 1182.42 46.75C810.08 692.17 734.58 737 637.97 737c-97.01 0-171.64-45.26-217.54-131.73a47.37 47.37 0 1183.7-44.43c29.51 55.65 72 81.42 133.82 81.42 62.21 0 106.43-26.24 138.38-82.58z'],
  ...props
});

const ReferLinkBetaNormal = props => createSvgIcon({
  name: 'refer-link-beta',
  viewBox: '0 0 1024 1024',
  path: ['M413.31 341.38l11.27.55a218.37 218.37 0 01160.3 89.64 42.67 42.67 0 01-68.95 50.3 133.08 133.08 0 00-97.63-54.86 131.71 131.71 0 00-104.02 39.93l-105.6 108.3c-51.33 54.52-50.6 141.6 1.67 195.2a130.9 130.9 0 00186.8 2.21l60.45-62.04a42.67 42.67 0 1161.1 59.57l-61.01 62.55a216.32 216.32 0 01-308.48-2.74c-84.14-86.31-85.34-225.49-2.14-313.8l106.11-108.8a217 217 0 01171.4-65.46zm135.94-171.44a216.32 216.32 0 01308.48 2.73c84.14 86.32 85.33 225.5 2.13 313.82l-106.11 108.8a217 217 0 01-171.4 65.45 218.37 218.37 0 01-160.3-89.65 42.67 42.67 0 1168.96-50.3 133.08 133.08 0 0097.62 54.87 131.71 131.71 0 00104.02-39.94l105.6-108.29c51.33-54.52 50.6-141.6-1.66-195.2a130.9 130.9 0 00-186.88-2.13l-60.8 62.04a42.67 42.67 0 01-60.93-59.73z'],
  ...props
});

const ReferMemoBetaNormal = props => createSvgIcon({
  name: 'refer-memo-beta',
  viewBox: '0 0 1024 1024',
  path: ['M758.33 62a135 135 0 01135 135v22.5a45 45 0 01-89.88 3.38l-.12-3.38V197a45 45 0 00-45-45h-540a45 45 0 00-44.88 41.63l-.12 3.37v630a45 45 0 0041.63 44.89l3.37.11h540a45 45 0 0044.9-41.63l.1-3.37v-22.5l.12-3.38a45 45 0 0189.77 0l.11 3.38V827a135 135 0 01-135 135h-540a135 135 0 01-135-135V197a135 135 0 01135-135h540zM952 340.84a67.5 67.5 0 010 95.47L631.75 756.53a45 45 0 01-16.43 10.48L520 801.66a22.5 22.5 0 01-28.82-28.82l34.65-95.3a45 45 0 0110.48-16.45l320.22-320.25a67.5 67.5 0 0195.47 0zM465.83 399.5a45 45 0 110 90h-180a45 45 0 110-90h180zm180-180a45 45 0 110 90h-360a45 45 0 110-90h360z'],
  ...props
});

const ReferNoteBetaNormal = props => createSvgIcon({
  name: 'refer-note-beta',
  viewBox: '0 0 1024 1024',
  path: ['M917.33 128a42.67 42.67 0 0142.56 39.47l.11 3.2v575.7a128 128 0 01-123.2 127.91l-4.8.09H615.83l-73.45 73.17a42.67 42.67 0 01-57.52 2.5l-2.7-2.48-73.5-73.2H192a128 128 0 01-127.91-123.2l-.09-4.8v-445a128 128 0 01123.2-127.92l4.8-.09h192.64a128 128 0 01127.91 123.2l.09 4.8v339.89a42.67 42.67 0 01-85.23 3.2l-.1-3.2V301.35a42.67 42.67 0 00-39.47-42.56l-3.2-.1H192a42.67 42.67 0 00-42.56 39.46l-.1 3.2v445.02a42.67 42.67 0 0039.46 42.56l3.2.1h234.3a42.67 42.67 0 0127.35 9.92l2.78 2.52 55.83 55.64 55.85-55.64a42.67 42.67 0 0126.36-12.26l3.74-.18H832a42.67 42.67 0 0042.56-39.46l.1-3.2v-575.7A42.67 42.67 0 01917.34 128zM780.8 81.07a42.67 42.67 0 018.53 25.6v448a42.67 42.67 0 01-17.06 34.13l-85.34 64a42.67 42.67 0 01-68.26-34.13v-448a42.67 42.67 0 0117.06-34.14l85.34-64a42.67 42.67 0 0159.73 8.54z'],
  ...props
});

const ReplaceBetaNormal = props => createSvgIcon({
  name: 'replace-beta',
  viewBox: '0 0 1024 1024',
  path: ['M210.73 288.51a31.79 31.79 0 0140.88 18.69l49.83 133.89a31.79 31.79 0 01-41.05 40.83l-44.92-16.85a295.94 295.94 0 00354.6 328.79 40.83 40.83 0 0116.98 79.83 377.56 377.56 0 01-449.58-438.1l-46.72-17.63a31.79 31.79 0 01-4.78-57.17zm395.7-148.9a377.51 377.51 0 01257.66 492.16l48.25 17.92a31.79 31.79 0 014.18 57.68l-125.44 68.35a31.79 31.79 0 01-43.13-12.67l-46.77-136.4a31.79 31.79 0 0141.18-40.03l45.18 16.77a295.9 295.9 0 00-378.28-377.81 40.83 40.83 0 01-27.52-76.84 375.9 375.9 0 01224.68-9.13z'],
  ...props
});

const ReportFillBetaNormal = props => createSvgIcon({
  name: 'report-fill-beta',
  viewBox: '0 0 1024 1024',
  path: ['M512 64c247.42 0 448 200.58 448 448S759.42 960 512 960 64 759.42 64 512 264.58 64 512 64zm0 576a42.67 42.67 0 100 85.33 42.67 42.67 0 000-85.33zm6.68-341.33h-13.36a42.67 42.67 0 00-42.51 46.46l20.16 225.64a29.16 29.16 0 0058.06 0l20.16-225.64a42.67 42.67 0 00-42.51-46.46z'],
  ...props
});

const ResetPicBetaNormal = props => createSvgIcon({
  name: 'reset-pic-beta',
  viewBox: '0 0 1024 1024',
  path: ['M873.51 486.4a42.67 42.67 0 0142.37 37.67l.3 5v269.52A106.67 106.67 0 01816.51 905l-7 .26H243.33a106.67 106.67 0 01-106.37-99.71l-.21-7V529.07a42.67 42.67 0 0185.03-5l.3 5v269.52a21.33 21.33 0 0017.5 21l3.83.34h566.15a21.33 21.33 0 0020.95-17.5l.38-3.84V529.07a42.67 42.67 0 0142.67-42.67zm-219.09-29.78a64.95 64.95 0 0111.82 13.74l111.87 175.31a64 64 0 01-53.97 98.44H332.46a64 64 0 01-53.16-99.67l76.8-114.48a64 64 0 0188.74-17.5l3.2 2.27c.77.56 1.54 1.2 3.03 2.43l37.16 32.13 75.9-86.66a64 64 0 0190.3-5.97zm-44.8 83.63l-71.12 81.19a64 64 0 01-90.03 6.27l-34.94-30.2-41.05 61.26h312.75l-75.65-118.52zM266.88 155.69l3.24 3.71 33.45 43.65c77.61-42.15 163.67-57.09 256.86-44.46 122.7 16.6 213.37 88.92 268.54 212.61a42.67 42.67 0 11-77.95 34.77c-43.52-97.53-109.65-150.35-202.03-162.81-70.36-9.56-134.27-.05-192.77 28.71l29.1 38.02a36.86 36.86 0 017.68 20.48c.77 15.83-10.02 27.69-24.66 28.16l-4.1-.22-132-14.5-5.21-1.03a37.72 37.72 0 01-26.54-34.34l.21-4.57 16.81-135.98a25.94 25.94 0 019.82-17.75c11.35-8.61 28.2-5.97 39.55 5.55z'],
  ...props
});

const RightThickBetaNormal = props => createSvgIcon({
  name: 'right-thick-beta',
  viewBox: '0 0 1024 1024',
  path: ['M410.22 599.6l411.27-358.4a54.71 54.71 0 0177.38 77.37L434.62 782.8a54.54 54.54 0 01-38.68 16.02c-14 0-28-5.34-38.69-16.02L125.13 550.69a54.71 54.71 0 1177.37-77.38L380.55 601a23.94 23.94 0 0029.67-1.4z'],
  ...props
});

const Rotate90BetaNormal = props => createSvgIcon({
  name: 'rotate-90-beta',
  viewBox: '0 0 1024 1024',
  path: ['M515.41 102.4a407.1 407.1 0 01403.41 352.53l7.15-5a40.69 40.69 0 0150.74 63.44l-4 3.18-86.52 60.76a40.69 40.69 0 01-46.78 0l-4.46-3.64-78.51-73.55a40.69 40.69 0 0151.43-62.9l4.28 3.51 25.9 24.26a325.63 325.63 0 10-55.99 231.38 40.69 40.69 0 0166.59 46.78A407 407 0 11515.4 102.4zM403.23 387.3c52.97 0 93.3 23.94 93.3 98.4 0 93.88-37.73 145.81-150 145.81v-42.69c54.83 0 91.38-18.43 95.52-56.34h-1.5c-10.1 7.83-26.49 13.29-47.38 13.29-53.38 0-82.1-25.58-82.1-75.1 0-48.87 28.35-83.37 92.16-83.37zm221.18 0c57.12 0 93.66 24.26 93.66 121.6 0 97.67-36.54 122.3-93.61 122.3s-94.4-24.58-94.4-122.3c0-97.34 37.33-121.6 94.4-121.6zm0 42.32c-28.67 0-40.23 15.75-40.23 79.65 0 64.17 11.56 79.19 40.28 79.19s40.28-15.02 40.28-79.2c0-63.89-11.56-79.64-40.28-79.64zm-220.04-3.04c-28.36 0-43.7 16.38-43.7 43.37 0 26.3 15.34 39.96 41.83 39.96 31.68 0 42.87-16.02 42.87-37.91 0-27.31-13.06-45.42-41-45.42z'],
  ...props
});

const RoundCloseNormal = props => createSvgIcon({
  name: 'round-close',
  viewBox: '0 0 1024 1024',
  path: ['M512 64c247.42 0 448 200.58 448 448S759.42 960 512 960 64 759.42 64 512 264.58 64 512 64zm0 81.45c-202.45 0-366.55 164.12-366.55 366.55 0 202.45 164.12 366.55 366.55 366.55 202.45 0 366.55-164.12 366.55-366.55 0-202.45-164.12-366.55-366.55-366.55zM406.4 346.07L512 451.67l105.6-105.6a42.67 42.67 0 1160.33 60.33L572.33 512l105.6 105.6a42.67 42.67 0 11-60.33 60.33L512 572.33l-105.6 105.6a42.67 42.67 0 11-60.33-60.33L451.63 512l-105.6-105.6a42.67 42.67 0 1160.37-60.33z'],
  ...props
});

const RoundcloseBetaNormal = props => createSvgIcon({
  name: 'roundclose-beta',
  viewBox: '0 0 1024 1024',
  path: ['M512 64c247.42 0 448 200.58 448 448S759.42 960 512 960 64 759.42 64 512 264.58 64 512 64zm0 81.45c-202.45 0-366.55 164.12-366.55 366.55 0 202.45 164.12 366.55 366.55 366.55 202.45 0 366.55-164.12 366.55-366.55 0-202.45-164.12-366.55-366.55-366.55zM406.4 346.07L512 451.67l105.6-105.6a42.67 42.67 0 1160.33 60.33L572.33 512l105.6 105.6a42.67 42.67 0 11-60.33 60.33L512 572.33l-105.6 105.6a42.67 42.67 0 11-60.33-60.33L451.63 512l-105.6-105.6a42.67 42.67 0 1160.37-60.33z'],
  ...props
});

const RoundcloseFillBetaNormal = props => createSvgIcon({
  name: 'roundclose-fill-beta',
  viewBox: '0 0 1024 1024',
  path: ['M512 64c247.42 0 448 200.58 448 448S759.42 960 512 960 64 759.42 64 512 264.58 64 512 64zM406.4 346.07a42.67 42.67 0 10-60.33 60.33L451.63 512l-105.6 105.6a42.67 42.67 0 1060.37 60.33l105.56-105.6 105.6 105.6a42.67 42.67 0 1060.37-60.33L572.33 512l105.6-105.6a42.67 42.67 0 10-60.37-60.33L512 451.67z'],
  ...props
});

const RoundcloseThickBetaNormal = props => createSvgIcon({
  name: 'roundclose-thick-beta',
  viewBox: '0 0 1024 1024',
  path: ['M512 64c247.42 0 448 200.58 448 448S759.42 960 512 960 64 759.42 64 512 264.58 64 512 64zM406.4 346.07a42.67 42.67 0 10-60.33 60.33L451.63 512l-105.6 105.6a42.67 42.67 0 1060.37 60.33l105.56-105.6 105.6 105.6a42.67 42.67 0 1060.37-60.33L572.33 512l105.6-105.6a42.67 42.67 0 10-60.37-60.33L512 451.67z'],
  ...props
});

const SaveBetaNormal = props => createSvgIcon({
  name: 'save-beta',
  viewBox: '0 0 1024 1024',
  path: ['M669.61 132.18a110.7 110.7 0 0135.12 14.72c11.09 7 20.05 14.38 43.39 38.06l92.67 94.08c23.04 23.38 30.16 32.3 36.95 43.26a110.07 110.07 0 0114.2 34.7c2.9 12.54 4.06 23.89 4.06 56.74V731.9c0 57.05-5.97 77.74-17.07 98.6a116.3 116.3 0 01-48.42 48.4c-20.87 11.17-41.56 17.1-98.56 17.1H292c-57 0-77.7-5.97-98.56-17.07a116.3 116.3 0 01-48.38-48.47c-11.18-20.86-17.11-41.55-17.11-98.56V292.01c0-57 5.97-77.7 17.06-98.56a116.3 116.3 0 0148.52-48.38c20.82-11.14 41.51-17.07 98.51-17.07h320c33.28 0 44.8 1.24 57.56 4.18zm-370.94 81.15h-6.57c-39.13 0-48.73 1.84-58.37 7a31.02 31.02 0 00-13.4 13.4c-4.78 8.96-6.7 17.83-6.95 50.43l-.05 447.74c0 39.13 1.84 48.73 7 58.37a31.24 31.24 0 0013.4 13.4c9.64 5.12 19.2 7 58.37 7h439.8c39.13 0 48.73-1.84 58.37-7a31.02 31.02 0 0013.4-13.4c5.12-9.64 7-19.2 7-58.37V413.74c0-25.05-.52-31.7-1.92-37.8a26.24 26.24 0 00-3.59-8.75c-3.28-5.33-7.6-10.45-25.17-28.29l-92.63-94-4.6-4.69-.1 165.12A106.67 106.67 0 01583 511.8l-7 .21H405.33a106.67 106.67 0 01-106.45-99.67l-.21-7v-192zm341.59 396.89c23.46 0 42.4 19.11 42.4 42.67 0 23.59-18.98 42.66-42.4 42.66H341.08a42.54 42.54 0 01-42.41-42.66c0-23.56 18.98-42.67 42.4-42.67zm-42.93-396.89H384v192a21.33 21.33 0 0017.5 21l3.83.34H576a21.33 21.33 0 0021-17.5l.33-3.84v-192z'],
  ...props
});

const SearchBetaNormal = props => createSvgIcon({
  name: 'search-beta',
  viewBox: '0 0 1024 1024',
  path: ['M512 85.33a384 384 0 01274.9 652.12 40.66 40.66 0 0111.27 8.02l128 128a42.67 42.67 0 01-60.34 60.33l-128-128A42.45 42.45 0 01727 787.46 384 384 0 11512 85.33zm0 85.34A298.67 298.67 0 10512 768a298.67 298.67 0 000-597.33z'],
  ...props
});

const SecurityBetaNormal = props => createSvgIcon({
  name: 'security-beta',
  viewBox: '0 0 1024 1024',
  path: ['M512 42.67c85.16 0 311.8 156.41 405.33 156.41v406.79c0 125.18-311.8 375.46-405.33 375.46S106.67 731.05 106.67 605.87V199.08c93.52 0 317.95-156.41 405.33-156.41zm208.13 255.31a21.33 21.33 0 00-19.97 4.87L466.43 517.8a21.33 21.33 0 01-27.13 1.45l-93.19-69.2a21.33 21.33 0 00-27.05 1.36l-16.64 15.1a21.33 21.33 0 00-1.36 30.22l141.22 153.25a21.33 21.33 0 0031.83-.6l272.3-317.1a18.43 18.43 0 00-9.22-29.86z'],
  ...props
});

const SendBetaNormal = props => createSvgIcon({
  name: 'send-beta',
  viewBox: '0 0 1024 1024',
  path: ['M467.8 485.33l-265.97-39.67a107.77 107.77 0 01-85.07-68.86L3.54 73.12A54.35 54.35 0 0134.08 3.5a51.8 51.8 0 0141.9 1.96L994.25 463.5a54.44 54.44 0 010 96.93L75.98 1018.53A52.3 52.3 0 015.4 993.7a54.95 54.95 0 01-1.87-42.83l113.22-303.68a107.65 107.65 0 0185.07-68.85l265.96-39.68a26.96 26.96 0 000-53.33z'],
  ...props
});

const SettingsNormal = props => createSvgIcon({
  name: 'Settings',
  viewBox: '0 0 18 18',
  path: ['M9.02113 11.2293C7.80886 11.2293 6.81479 10.2352 6.81479 9.02256C6.81479 7.8099 7.80886 6.81579 9.02113 6.81579C10.2334 6.81579 11.2275 7.8099 11.2275 9.02256C11.2275 10.2352 10.2334 11.2293 9.02113 11.2293ZM5.81479 9.02256C5.81479 10.7873 7.25642 12.2293 9.02113 12.2293C10.7858 12.2293 12.2275 10.7873 12.2275 9.02256C12.2275 7.25777 10.7858 5.81579 9.02113 5.81579C7.25642 5.81579 5.81479 7.25777 5.81479 9.02256ZM15.8772 10.7782H15.5307L15.409 11.1027C15.2783 11.4513 15.1473 11.7571 15.0117 12.0737L14.8783 12.3848L15.1177 12.6242L15.8844 13.3911C16.1158 13.6225 16.1234 13.9887 15.8741 14.2734L14.3057 15.842C14.05 16.0978 13.69 16.0978 13.4342 15.842L12.6674 15.075L12.3974 14.8049L12.0657 14.9945C11.7835 15.1558 11.5102 15.272 11.2002 15.3495L10.8215 15.4442V15.8346V16.9173C10.8215 17.2463 10.5764 17.5 10.1939 17.5H7.93859C7.56996 17.5 7.31095 17.2145 7.31095 16.9173V15.8346V15.4881L6.98654 15.3664C6.63797 15.2357 6.33221 15.1047 6.01564 14.969L6.01268 14.9678L6.01265 14.9678L5.70278 14.8373L5.46504 15.075L4.69825 15.842C4.46695 16.0733 4.10093 16.081 3.81637 15.8316L2.24802 14.263C1.99219 14.0071 1.99219 13.647 2.24802 13.3911L1.90858 13.0517L2.24802 13.3911L3.01481 12.6242L3.28479 12.3542L3.09537 12.0226C2.98272 11.8255 2.91735 11.6417 2.83062 11.398C2.79888 11.3088 2.76428 11.2115 2.72346 11.1027L2.6018 10.7782H2.25528H1.08254C0.785564 10.7782 0.5 10.5193 0.5 10.1504V7.89474C0.5 7.52585 0.785562 7.26692 1.08254 7.26692H2.16507H2.51159L2.63324 6.94245C2.76396 6.59382 2.89493 6.288 3.0306 5.97137L3.16392 5.66026L2.9246 5.42091L2.15781 4.65399C1.92645 4.4226 1.91881 4.05639 2.16815 3.77175L3.7365 2.20315C3.99229 1.94732 4.35225 1.94732 4.60804 2.20315L5.37483 2.97007L5.6449 3.24017L5.97651 3.05065C6.25874 2.88935 6.53205 2.7731 6.84203 2.69559L7.22074 2.6009V2.21053V1.10466C7.2545 0.776108 7.53882 0.5 7.89348 0.5H10.1488C10.5174 0.5 10.7764 0.785495 10.7764 1.08271V2.16541V2.51189L11.1008 2.63357C11.4494 2.7643 11.7551 2.89528 12.0717 3.03097L12.0717 3.03098L12.0718 3.031L12.3829 3.16436L12.6223 2.92495L13.3891 2.15804C13.6204 1.9267 13.9864 1.91904 14.271 2.16838L15.8393 3.73698C16.0952 3.99286 16.0952 4.35301 15.8393 4.60888L15.0725 5.3758L14.8026 5.64582L14.992 5.97736C15.1046 6.17453 15.17 6.35826 15.2567 6.60201C15.2885 6.69121 15.3231 6.78846 15.3639 6.89734L15.4856 7.2218H15.8321H16.9146C17.2433 7.2218 17.4971 7.4668 17.4971 7.84962V10.1053V10.1219L17.4983 10.1385C17.5247 10.5354 17.2481 10.7782 16.9597 10.7782H15.8772Z'],
  ...props
});

const ShandiankuangBetaNormal = props => createSvgIcon({
  name: 'shandiankuang-beta',
  viewBox: '0 0 1024 1024',
  path: ['M977.05 930.1V0H46.95v960.95h29.96l-17.44 62.16 66.63-84.97H95.25l3.57-8.04h878.23zM64.84 17.89h894.32V912.2H64.84V17.89z'],
  ...props
});

const ShareBetaNormal = props => createSvgIcon({
  name: 'share-beta',
  viewBox: '0 0 1024 1024',
  path: ['M747.35 553.92a42.67 42.67 0 0185.33 0V815.6c0 80.11-64.94 145.06-145.06 145.06H209.78c-80.12 0-145.06-64.95-145.06-145.06V337.75c0-80.11 64.94-145.06 145.06-145.06h261.68a42.67 42.67 0 010 85.33H209.78a59.73 59.73 0 00-59.73 59.73V815.6a59.73 59.73 0 0059.73 59.73h477.84a59.73 59.73 0 0059.73-59.73V553.92zm59.13-403.9H662.02a42.67 42.67 0 010-85.32h256a42.67 42.67 0 0142.66 42.66v255.99a42.67 42.67 0 01-85.33 0V201.83L585.33 491.85a42.67 42.67 0 01-60.34-60.33l281.49-281.5z'],
  ...props
});

const SplitCellsBetaNormal = props => createSvgIcon({
  name: 'split-cells-beta',
  viewBox: '0 0 1024 1024',
  path: ['M640 469.33h106.67v-42.66a21.33 21.33 0 0134.13-17.07l113.8 85.33a21.33 21.33 0 010 34.14L780.8 614.4a21.33 21.33 0 01-34.13-17.07v-42.66H640v256h170.67v-79.53a42.67 42.67 0 1185.33 0v79.53A85.33 85.33 0 01810.67 896H640a85.33 85.33 0 01-85.33-85.33V213.33A85.33 85.33 0 01640 128h170.67A85.33 85.33 0 01896 213.33v81.84a42.67 42.67 0 01-85.33 0v-81.84H640v256zm-256 0v-256H213.33v81.84a42.67 42.67 0 11-85.33 0v-81.84A85.33 85.33 0 01213.33 128H384a85.33 85.33 0 0185.33 85.33v597.34A85.33 85.33 0 01384 896H213.33A85.33 85.33 0 01128 810.67v-79.53a42.67 42.67 0 1185.33 0v79.53H384v-256H277.33v42.66a21.33 21.33 0 01-34.13 17.07l-113.8-85.33a21.33 21.33 0 010-34.14l113.8-85.33a21.33 21.33 0 0134.13 17.07v42.66H384z'],
  ...props
});

const StarBetaNormal = props => createSvgIcon({
  name: 'star-beta',
  viewBox: '0 0 1024 1024',
  path: ['M283.9 869.72l208.32-108.97a42.67 42.67 0 0139.56 0L740.1 869.72a67.04 67.04 0 006.72 3.07 64.1 64.1 0 00-.86-6.96L706.2 635.05a42.67 42.67 0 0112.33-37.87l168.53-163.43c1.84-1.8 3.4-3.46 4.65-4.97a65.8 65.8 0 00-6.89-1.35L651.9 393.75a42.67 42.67 0 01-32.12-23.25L515.63 160.5a63.36 63.36 0 00-3.63-6.4 63.55 63.55 0 00-3.63 6.4L404.22 370.5a42.67 42.67 0 01-32.12 23.25l-232.9 33.68c-2.62.37-4.9.84-6.91 1.35a66.9 66.9 0 004.65 4.97l168.53 163.41a42.67 42.67 0 0112.35 37.9l-39.78 230.77c-.45 2.6-.73 4.91-.86 6.96 2-.77 4.27-1.8 6.72-3.07zM512 846.7l-188.54 98.62c-77.44 40.5-144.35-7.98-129.52-93.97l35.95-208.6L77.53 495c-62.85-60.95-37.12-139.52 49.45-152.02l210.77-30.47 94.19-189.9c38.78-78.17 121.38-78.09 160.12 0l94.21 189.9 210.75 30.47c86.66 12.52 112.24 91.13 49.45 152.02L794.11 642.75l35.95 208.6c14.85 86.08-52.16 134.42-129.5 93.97L512 846.72z'],
  ...props
});

const StarFullBetaNormal = props => createSvgIcon({
  name: 'star-full-beta',
  viewBox: '0 0 1024 1024',
  path: ['M990.31 401.38a33.8 33.8 0 00-27.28-22.97l-290.72-42.29L542.28 72.7c-5.72-11.53-17.44-18.85-30.28-18.85s-24.56 7.32-30.28 18.85L351.69 336.13 60.88 378.4a33.8 33.8 0 00-27.2 22.96 33.86 33.86 0 008.54 34.6l210.37 205.12-49.68 289.6a33.69 33.69 0 0048.93 35.53L512 829.53l260.06 136.78a33.32 33.32 0 0015.66 3.85A33.76 33.76 0 00821 930.69l-49.69-289.6L981.7 435.97c9.28-9 12.65-22.4 8.62-34.6z'],
  ...props
});

const StopBetaNormal = props => createSvgIcon({
  name: 'stop-beta',
  viewBox: '0 0 1024 1024',
  path: ['M146.29 0H877.7Q1024 0 1024 146.29V877.7Q1024 1024 877.71 1024H146.3Q0 1024 0 877.71V146.3Q0 0 146.29 0z'],
  ...props
});

const StopCircleBetaNormal = props => createSvgIcon({
  name: 'stop-circle-beta',
  viewBox: '0 0 1024 1024',
  path: ['M512 0a512 512 0 110 1024A512 512 0 01512 0zm0 96a416 416 0 100 832 416 416 0 000-832zm83.2 236.8a96 96 0 0196 96v166.4a96 96 0 01-96 96H428.8a96 96 0 01-96-96V428.8a96 96 0 0196-96h166.4z'],
  ...props
});

const StrikethroughBetaNormal = props => createSvgIcon({
  name: 'strikethrough-beta',
  viewBox: '0 0 1024 1024',
  path: ['M387.41 143.19c64.98-33.92 165.76-40.24 251.48-.98 70.49 32.3 115.2 94.76 133.42 183a42.67 42.67 0 01-83.58 17.23c-13.02-63.02-41.22-102.4-85.38-122.62-60.63-27.73-133.89-23.21-176.43-.98-40.62 21.25-68.4 59.94-68.4 114.98 0 34.82 38.2 74.67 122.76 115.5l-5.59-2.77 452.22.04a42.67 42.67 0 0142.37 37.68l.3 4.99a42.67 42.67 0 01-42.67 42.67l-204.8-.05a178.86 178.86 0 0156.8 98.43c29 137.99-54.5 238.6-178.4 265.95-98.3 21.71-195.11 5.2-263.04-50.14-48.25-39.3-77.48-95.7-87.76-166.9A42.67 42.67 0 11335.19 667c7.34 51.03 26.45 87.93 57.17 112.94 46 37.46 116.23 49.45 190.72 32.98 82.05-18.1 131.67-77.87 113.33-165.04-13.15-62.5-85.76-102.57-229.9-114.17l-7.72-.64-2.6-1.2-336.72.05a42.67 42.67 0 01-42.37-37.68l-.3-5a42.67 42.67 0 0142.67-42.66h205.35c-33.96-34.13-51.63-71.5-51.63-112.77 0-89.6 47.36-155.69 114.22-190.63z'],
  ...props
});

const SubscriptBetaNormal = props => createSvgIcon({
  name: 'subscript-beta',
  viewBox: '0 0 1024 1024',
  path: ['M845.4 554.67c95.61 0 152.23 107.77 100.3 189.48l-1.7 2.52-.47 1.06c-12.88 24.88-40.66 54.83-84.4 91.57l-6.86 5.63h94.25a42.67 42.67 0 0142.37 37.72l.3 4.94a42.67 42.67 0 01-37.72 42.37l-4.95.3h-221.1c-41.52 0-58.58-53.33-24.75-77.4l22.23-16.04c82.52-60.16 131.63-104.4 143.79-126.3l1.36-2.68 4.18-7.25c18.65-26.2 1.33-60.59-26.88-60.59-23.85 0-39.46 7.34-50.98 23.64l-3.33 5.12a42.67 42.67 0 11-73.39-43.52c27.48-46.3 71.9-70.57 127.75-70.57zm-277.42-412.5a46.93 46.93 0 0170.83 61.4l-191.36 248.7L638.8 701a46.93 46.93 0 01-70.83 61.36l-3.59-4.14-176.12-229.04-176.13 229.04-3.59 4.14a46.93 46.93 0 01-70.82-61.4l191.32-248.7-191.32-248.75a46.93 46.93 0 0170.82-61.35l3.59 4.13 176.13 229 176.12-229z'],
  ...props
});

const SuperscriptBetaNormal = props => createSvgIcon({
  name: 'superscript-beta',
  viewBox: '0 0 1024 1024',
  path: ['M823.98 85.33c95.61 0 152.23 107.78 100.35 189.49l-1.75 2.51-.47 1.07c-12.88 24.87-40.66 54.83-84.4 91.56l-6.86 5.63h94.25a42.67 42.67 0 0142.37 37.72l.3 4.95a42.67 42.67 0 01-37.68 42.37l-5 .3H704c-41.51 0-58.58-53.34-24.75-77.4l22.28-16.04C784 307.33 833.1 263.09 845.3 241.19l1.32-2.68 4.19-7.26c18.64-26.2 1.32-60.58-26.84-60.58-23.9 0-39.51 7.34-51.03 23.63l-3.33 5.12a42.67 42.67 0 11-73.39-43.52c27.48-46.29 71.9-70.57 127.75-70.57zM563.7 265.9a46.93 46.93 0 0170.83 61.4L443.18 576l191.36 248.75a46.93 46.93 0 01-70.83 61.35l-3.58-4.14L384 652.93 207.87 881.92l-3.58 4.14a46.93 46.93 0 01-70.83-61.4l191.32-248.75-191.32-248.66a46.93 46.93 0 0170.83-61.4l3.58 4.14L384 499.03l176.13-229z'],
  ...props
});

const TableAscendingBetaNormal = props => createSvgIcon({
  name: 'table-ascending-beta',
  viewBox: '0 0 1024 1024',
  path: ['M835.46 374.27l30.08 30.08a21.33 21.33 0 0036.18-12.07l20.1-140.8a21.33 21.33 0 00-24.11-24.15l-140.8 20.14a21.33 21.33 0 00-12.08 36.18l30.3 30.3L555.39 535.8l-79.32-77.23c-23.3-23.08-61.1-23.08-83.62-.72L113.7 720.34a42.67 42.67 0 0058.5 62.08l261.37-246.14 92.59 90.15a42.67 42.67 0 0060.03-.55l249.26-251.6z'],
  ...props
});

const TableBetaNormal = props => createSvgIcon({
  name: 'table-beta',
  viewBox: '0 0 1024 1024',
  path: ['M753.24 106.67c57.04 0 77.74 5.97 98.6 17.06a116.12 116.12 0 0148.38 48.43c11.18 20.86 17.11 41.56 17.11 98.56v482.56c0 57-5.97 77.7-17.06 98.56a116.3 116.3 0 01-48.43 48.38c-20.86 11.18-41.56 17.11-98.56 17.11h-482.6c-57 0-77.7-5.97-98.56-17.06a116.3 116.3 0 01-48.39-48.47c-11.18-20.87-17.1-41.56-17.1-98.56V270.68c0-57 5.97-77.7 17.06-98.56a116.3 116.3 0 0148.51-48.39c20.87-11.18 41.56-17.1 98.56-17.1h482.56zM199 811.6a31.24 31.24 0 0013.4 13.4c9.64 5.11 19.2 6.99 58.36 6.99h70.57V661.33H192v91.9c0 39.13 1.83 48.73 7 58.38zm398.33-150.28H426.67V832h170.66V661.33zm234.67 0H682.67V832h70.57c39.12 0 48.72-1.83 58.37-7a31.02 31.02 0 0013.4-13.4c5.11-9.64 6.99-19.2 6.99-58.36v-91.9zm0-85.33V448H682.67v128H832zm-640 0h149.33V448H192v128zm405.33-128H426.67v128h170.66V448zm163.84-256h-78.5v170.67H832v-91.9c0-39.13-1.83-48.73-7-58.38a31.02 31.02 0 00-13.4-13.4c-8.95-4.77-17.83-6.7-50.43-6.95zm-419.84 0h-70.57c-39.12 0-48.72 1.83-58.37 7a31.02 31.02 0 00-13.4 13.4c-4.77 8.95-6.7 17.83-6.95 50.43l-.04 99.84h149.33V192zm256 0H426.67v170.67h170.66V192z'],
  ...props
});

const TableDescendingBetaNormal = props => createSvgIcon({
  name: 'table-descending-beta',
  viewBox: '0 0 1024 1024',
  path: ['M900.27 627.2c0-4.27-4.27-8.53-4.27-12.8-8.53-8.53-21.33-8.53-29.87 0l-29.86 29.87L588.8 392.53c-17.07-17.06-42.67-17.06-59.73 0l-93.87 89.6-264.53-243.2c-17.07-17.06-42.67-17.06-59.74 0s-17.06 42.67 0 59.74L388.27 563.2c21.33 21.33 59.73 21.33 85.33 0l81.07-76.8 221.86 221.87-29.86 29.86c-4.27 4.27-4.27 8.54-4.27 12.8 0 12.8 8.53 21.34 17.07 25.6l140.8 21.34h4.26c12.8 0 21.34-12.8 17.07-25.6L900.27 627.2z'],
  ...props
});

const TableThemeBetaNormal = props => createSvgIcon({
  name: 'table-theme-beta',
  viewBox: '0 0 24 24',
  path: ['M12.1 2.46a10 10 0 017.23 2.78 8 8 0 012.43 5.85 5.8 5.8 0 01-5.72 5.45l-1.55.02a.47.47 0 00-.34.8c.53.57.75 1.37.58 2.13a2.43 2.43 0 01-2.36 1.83 9.43 9.43 0 01-.28-18.86zm.1 1.88h-.07a7.64 7.64 0 00-7.28 6.63 7.54 7.54 0 007.52 8.46c.29-.02.5-.15.55-.35a.46.46 0 00-.12-.46 2.35 2.35 0 011.7-3.94l1.55-.03c2-.05 3.65-1.6 3.82-3.6A6.13 6.13 0 0018 6.58a7.99 7.99 0 00-5.8-2.24zm-5.38 6.94a1.4 1.4 0 011.97.35 1.41 1.41 0 11-1.97-.35zm.46-3.31a1.41 1.41 0 112.47 1.37 1.41 1.41 0 01-2.47-1.37zm8.05-.66a1.41 1.41 0 111.45 2.42 1.41 1.41 0 01-1.45-2.42zm-3.1-2.02a1.41 1.41 0 11.04 2.83 1.41 1.41 0 01-.04-2.83z'],
  ...props
});

const TableWidthFitContainerBetaNormal = props => createSvgIcon({
  name: 'table-width-fit-container-beta',
  viewBox: '0 0 1024 1024',
  path: ['M669.7 431.45a21.33 21.33 0 0129.86-4.61l117.12 85.89a21.33 21.33 0 010 34.43l-117.16 85.89a21.33 21.33 0 01-33.92-17.2v-50.52l-236.03.22-.86.08-15.95-.08-43.4.08-2.26-.17h-11.09l.04 50.35a21.33 21.33 0 01-33.96 17.24l-117.12-85.9a21.33 21.33 0 010-34.42l117.12-85.9a21.33 21.33 0 0133.96 17.2v36.06l56.7.12L665.6 480v-35.97a21.33 21.33 0 014.1-12.58zM149.33 146.94a42.67 42.67 0 0142.37 37.72l.3 4.95V834.4a42.67 42.67 0 01-85.03 4.95l-.3-4.95V189.6a42.67 42.67 0 0142.66-42.67zm725.34 0a42.67 42.67 0 0142.36 37.72l.3 4.95V834.4a42.67 42.67 0 01-85.03 4.95l-.3-4.95V189.6a42.67 42.67 0 0142.67-42.67z'],
  ...props
});

const TranslationBetaNormal = props => createSvgIcon({
  name: 'translation-beta',
  viewBox: '0 0 1024 1024',
  path: ['M783.36 115.2a128 128 0 01128 128v540.16a128 128 0 01-128 128H243.2a128 128 0 01-128-128V243.2a128 128 0 01128-128h540.16zm0 85.33H243.2a42.67 42.67 0 00-42.67 42.67v540.16a42.67 42.67 0 0042.67 42.67h540.16a42.67 42.67 0 0042.67-42.67V243.2a42.67 42.67 0 00-42.67-42.67zm-403.2 217.69v205.65c9.56-9.73 19.88-20.22 30.63-31.74l10.93-11.82 8.02 31.7H543.7v-47.1h-92.93v-41.94h92.93v-41.3h47.79v41.3h99.62v41.94H591.5V612h124.84v44.54H591.5v85.85H543.7v-85.85H429.53v-21.07a736 736 0 01-72.67 65.87l-19.54 14.94-18.05-42.92a34.9 34.9 0 0013.1-22.83l.3-4.52V463.15h-59.6v-44.93h107.09zm321.4-132.14v40.36a199.6 199.6 0 01-72.31 88.54 414.5 414.5 0 0096.6 23.68l16.55 1.7-16.73 41.65c-57.6-6.53-104.44-19.55-141.95-40.37a641.74 641.74 0 01-123.3 41.73l-21.34 4.48-23.42-39.68a681.98 681.98 0 00124.59-35.84 208.73 208.73 0 01-55.22-73.3l-4.43-10.67h-31.45v-42.24h252.42zm-51.53 41.64H528.17a166 166 0 0054.87 62.5 185.26 185.26 0 0066.99-62.5zm-352.86-22.1l34.14-32.55a587.46 587.46 0 0169.76 58.07l15.95 16.12-33.49 33.2h-.68a479.57 479.57 0 00-70.1-63.79l-15.53-11.1 34.13-32.5z'],
  ...props
});

const UncheckBetaNormal = props => createSvgIcon({
  name: 'uncheck-beta',
  viewBox: '0 0 1024 1024',
  path: ['M808.42 0A215.58 215.58 0 011024 215.58v592.84A215.58 215.58 0 01808.42 1024H215.58A215.58 215.58 0 010 808.42V215.58A215.58 215.58 0 01215.58 0h592.84zm0 107.79H215.58a107.79 107.79 0 00-107.66 102.4l-.13 5.39v592.84a107.79 107.79 0 00102.4 107.66l5.39.13h592.84a107.79 107.79 0 00107.66-102.4l.13-5.39V215.58a107.79 107.79 0 00-102.4-107.66l-5.39-.13z'],
  ...props
});

const UnderlineBetaNormal = props => createSvgIcon({
  name: 'underline-beta',
  viewBox: '0 0 1024 1024',
  path: ['M176.38 846.68a42.67 42.67 0 0042.67 42.66h584.53a42.67 42.67 0 100-85.33H219.05a42.67 42.67 0 00-42.67 42.67zM512 727.98a258.52 258.52 0 00183.8-76.16 257.92 257.92 0 0076.21-183.8V186.53a42.54 42.54 0 00-85.12 0V468A174.68 174.68 0 01512 643.24c-96.98 0-174.17-78.25-174.17-175.23V186.88a42.92 42.92 0 10-85.84 0v281.09c0 69.37 27.1 134.57 76.2 183.8A257.92 257.92 0 00512 728.03z'],
  ...props
});

const UndoBetaNormal = props => createSvgIcon({
  name: 'undo-beta',
  viewBox: '0 0 1024 1024',
  path: ['M361.47 127.15a40.53 40.53 0 013.24 53.33l-3.37 3.8-92.8 92.58h265.6c175.96 1.67 319.2 136.11 319.2 303.24 0 161.66-134.07 292.69-302.09 302.55a16.34 16.34 0 01-1.96.34l-4.7.25h-224a40.36 40.36 0 01-40.27-40.4 40.33 40.33 0 0135.58-40.15l4.7-.3h210.34c134.2 0 241.8-100.22 241.8-222.3 0-122.1-107.6-222.29-241.8-222.29l-267.43-.04 97.8 97.2a40.53 40.53 0 013.58 53.33l-3.33 3.84a40.2 40.2 0 01-53.2 3.58l-3.85-3.33-164.56-163.8a40.36 40.36 0 01-11.95-30.5v-.77a40.27 40.27 0 0121.72-35.84l154.8-154.5a40.2 40.2 0 0156.95.13z'],
  ...props
});

const UngroupColumnBetaNormal = props => createSvgIcon({
  name: 'ungroup-column-beta',
  viewBox: '0 0 1024 1024',
  path: ['M341.33 223.32a42.67 42.67 0 01-37.67 42.4l-9.99.56a42.67 42.67 0 00-37.37 37.42l-.3 4.95v71.68a42.67 42.67 0 01-85.03 5l-.3-5v-71.68a128 128 0 01128-128 42.67 42.67 0 0142.66 42.67zm264.37 73.13l-3.29 3.75a42.67 42.67 0 01-56.32 3.54l-4.05-3.54-30.17-30.2-30.16 30.2a42.67 42.67 0 01-56.62 3.29l-3.71-3.29a42.67 42.67 0 01-3.55-56.32l3.55-4.05 30.16-30.17-30.16-30.16a42.67 42.67 0 01-3.33-56.62l3.33-3.71a42.67 42.67 0 0156.32-3.54l4 3.54 30.17 30.16 30.17-30.16a42.67 42.67 0 0156.62-3.33l3.75 3.33a42.67 42.67 0 013.54 56.32l-3.54 4-30.16 30.17 30.16 30.17a42.67 42.67 0 013.29 56.62zm247.63 83.88a42.67 42.67 0 01-85.03 5l-.3-5v-71.68a42.67 42.67 0 00-37.67-42.37l-9.99-.55a42.67 42.67 0 015-85.08 128 128 0 01127.78 120.5l.21 7.5v71.68zm-576 462.34a64 64 0 01-128 0V544a64 64 0 01128 0zM576 544v298.67a64 64 0 01-127.7 6.14l-.3-6.14V544a64 64 0 01127.7-6.14l.3 6.14v298.67zm298.67 298.67a64 64 0 01-127.7 6.14l-.3-6.14V544a64 64 0 01127.7-6.14l.3 6.14v298.67z'],
  ...props
});

const UngroupRowBetaNormal = props => createSvgIcon({
  name: 'ungroup-row-beta',
  viewBox: '0 0 1024 1024',
  path: ['M244.65 682.67a42.67 42.67 0 0142.41 37.67l.56 9.99a42.67 42.67 0 0037.41 37.37l4.95.3h71.68a42.67 42.67 0 015 85.03l-5 .3h-71.68a128 128 0 01-128-128 42.67 42.67 0 0142.67-42.66zm73.13-264.37l3.76 3.29a42.67 42.67 0 013.54 56.32l-3.54 4.05-30.21 30.17 30.2 30.16a42.67 42.67 0 013.3 56.62l-3.3 3.71a42.67 42.67 0 01-56.31 3.55l-4.06-3.55L231 572.46l-30.17 30.16a42.67 42.67 0 01-56.62 3.33l-3.7-3.33a42.67 42.67 0 01-3.55-56.32l3.54-4 30.17-30.17-30.17-30.17a42.67 42.67 0 01-3.33-56.62l3.33-3.75a42.67 42.67 0 0156.32-3.54l4.01 3.54L231 451.75l30.16-30.16a42.67 42.67 0 0156.62-3.29zm83.88-247.63a42.67 42.67 0 015 85.03l-5 .3h-71.68a42.67 42.67 0 00-42.36 37.67l-.56 9.99a42.67 42.67 0 01-85.08-5 128 128 0 01120.5-127.78l7.5-.21h71.68zm131.67 106.66H832a64 64 0 000-128H533.33a64 64 0 000 128zm0 298.67H832a64 64 0 000-128H533.33a64 64 0 000 128zm0 298.67H832a64 64 0 000-128H533.33a64 64 0 000 128z'],
  ...props
});

const UnlockCellBetaNormal = props => createSvgIcon({
  name: 'unlock-cell-beta',
  viewBox: '0 0 1024 1024',
  path: ['M678.23 426.67V219.95a42.67 42.67 0 00-42.67-42.67H384.68a42.67 42.67 0 00-42.66 42.67V256a42.67 42.67 0 11-85.34 0v-36.05a128 128 0 01128-128h250.88a128 128 0 01128 128v206.89a128 128 0 01121.77 127.83v256a128 128 0 01-128 128H266.67a128 128 0 01-128-128v-256a128 128 0 01128-128h411.56zM266.67 512A42.67 42.67 0 00224 554.67v256a42.67 42.67 0 0042.67 42.66h490.66A42.67 42.67 0 00800 810.67v-256A42.67 42.67 0 00757.33 512H266.67zM480 704a53.33 53.33 0 1164 0v32a32 32 0 11-64 0v-32z'],
  ...props
});

const UnorderedListBetaNormal = props => createSvgIcon({
  name: 'unordered-list-beta',
  viewBox: '0 0 1024 1024',
  path: ['M132.01 758.44A55.98 55.98 0 11188 855.42 55.98 55.98 0 01132 758.44zM877.35 768a42.67 42.67 0 014.95 85.03l-4.95.3H362.67a42.67 42.67 0 01-5-85.03l5-.3h514.68zm-689.4-304.51a56.02 56.02 0 11-55.98 97.02 56.02 56.02 0 0155.98-97.02zm689.4 5.84a42.67 42.67 0 014.95 85.04l-4.95.3H362.67a42.67 42.67 0 01-5-85.04l5-.3h514.68zm-689.4-308.22a56.02 56.02 0 11-55.98 96.98 56.02 56.02 0 0155.98-96.98zm689.4 9.56a42.67 42.67 0 014.95 85.03l-4.95.3H362.67a42.67 42.67 0 01-5-85.03l5-.3h514.68z'],
  ...props
});

const UpTopBetaNormal = props => createSvgIcon({
  name: 'up-top-beta',
  viewBox: '0 0 1024 1024',
  path: ['M513.02 268.8l1.54.09a40.7 40.7 0 014.86.6l1.71.42a43.52 43.52 0 0126.62 18.77l294.92 295.04c14.97 14.98 14.08 40.24-2.05 56.32l-3.88 3.5c-16.09 12.72-38.66 12.42-52.48-1.4l-229.6-229.55v459.69c0 18.77-16.46 34.13-37.67 36.26l-4.99.26-5-.26c-21.2-2.13-37.67-17.49-37.67-36.26v-459.7L239.74 642.14c-13.82 13.83-36.4 14.08-52.48 1.41l-3.84-3.45-3.5-3.89c-12.7-16.08-12.41-38.65 1.41-52.48l294.92-295.04a44.46 44.46 0 0126.62-18.81l1.7-.34a27.6 27.6 0 013-.47l1.87-.17a30.42 30.42 0 012.56-.09h1.02zm298.59-149.33c23.04 0 41.72 19.11 41.72 42.66a42.24 42.24 0 01-41.72 42.67H212.39a42.07 42.07 0 01-41.42-37.67l-.3-5c0-23.55 18.68-42.66 41.72-42.66h599.22z'],
  ...props
});

const VerticalAlignBottomBetaNormal = props => createSvgIcon({
  name: 'vertical-align-bottom-beta',
  viewBox: '0 0 1024 1024',
  path: ['M853.33 757.33a42.67 42.67 0 010 85.34H170.67a42.67 42.67 0 010-85.34zM512 127.83a42.67 42.67 0 0142.37 37.67l.3 5V512h42.66a21.33 21.33 0 0119.08 30.85l-2.01 3.28-85.33 113.8a21.33 21.33 0 01-31.58 2.85l-2.56-2.85-85.33-113.8a21.33 21.33 0 0113.23-33.79l3.84-.34h42.66V170.5A42.67 42.67 0 01512 127.83z'],
  ...props
});

const VerticalAlignMiddleBetaNormal = props => createSvgIcon({
  name: 'vertical-align-middle-beta',
  viewBox: '0 0 1024 1024',
  path: ['M524.8 615.8a21.33 21.33 0 014.27 4.27l85.33 113.8A21.33 21.33 0 01597.33 768h-42.66v106.67a42.67 42.67 0 01-85.34 0V768h-42.66a21.33 21.33 0 01-17.07-34.13l85.33-113.8a21.33 21.33 0 0129.87-4.26zm328.53-146.47a42.67 42.67 0 010 85.34H170.67a42.67 42.67 0 010-85.34zM512 106.67a42.67 42.67 0 0142.37 37.67l.3 5v106.62l42.66.04a21.33 21.33 0 019.9 2.43l2.9 1.84a21.33 21.33 0 016.28 26.58l-2.01 3.28-85.33 113.8a21.33 21.33 0 01-31.58 2.85l-2.56-2.85-85.33-113.8a21.33 21.33 0 0113.23-33.79l3.84-.34h42.66V149.33a42.67 42.67 0 0132.86-41.55l4.82-.86 4.99-.25z'],
  ...props
});

const VerticalAlignTopBetaNormal = props => createSvgIcon({
  name: 'vertical-align-top-beta',
  viewBox: '0 0 1024 1024',
  path: ['M853.33 256a42.67 42.67 0 100-85.33H170.67a42.67 42.67 0 000 85.33zM512.3 896.51a42.67 42.67 0 0042.4-37.72l.27-4.94-.3-352.52h42.66a21.33 21.33 0 0019.08-30.84l-2.01-3.29-85.33-113.8a21.33 21.33 0 00-31.58-2.85l-2.56 2.86L409.6 467.2a21.33 21.33 0 0013.23 33.8l3.84.33h42.66l.3 352.52a42.67 42.67 0 0042.67 42.66z'],
  ...props
});

const VideoBetaNormal = props => createSvgIcon({
  name: 'video-beta',
  viewBox: '0 0 1024 1024',
  path: ['M810.67 128c70.7 0 128 51.58 128 115.2v537.6c0 63.62-57.3 115.2-128 115.2H213.33c-70.7 0-128-51.58-128-115.2V243.2c0-63.62 57.3-115.2 128-115.2h597.34zm42.66 256H170.67v389.33c0 20.61 19.11 37.34 42.66 37.34h597.34c23.55 0 42.66-16.73 42.66-37.34V384zm-414.12 42.67c9.3 0 18.39 2.56 26.37 7.3l188.2 112.93a51.2 51.2 0 010 87.8l-188.2 112.95A51.2 51.2 0 01388 703.7V477.87a51.2 51.2 0 0151.2-51.2zm34.13 111.44v105.35l87.77-52.65-87.77-52.7zm337.33-324.78H213.33c-23.55 0-42.66 16.73-42.66 37.34v48h682.66v-48c0-20.61-19.11-37.34-42.66-37.34z'],
  ...props
});

const WarningBetaNormal = props => createSvgIcon({
  name: 'warning-beta',
  viewBox: '0 0 1024 1024',
  path: ['M512 32c265.1 0 480 214.9 480 480S777.1 992 512 992 32 777.1 32 512 246.9 32 512 32zm0 87.27c-216.91 0-392.73 175.84-392.73 392.73 0 216.91 175.84 392.73 392.73 392.73 216.91 0 392.73-175.84 392.73-392.73 0-216.91-175.84-392.73-392.73-392.73zm0 529.87a68.57 68.57 0 110 137.15 68.57 68.57 0 010-137.15zm7.15-388.57a45.71 45.71 0 0145.56 49.78l-21.6 241.76a31.25 31.25 0 01-62.22 0l-21.6-241.76a45.71 45.71 0 0145.56-49.78h14.3z'],
  ...props
});

const WarningFillBetaNormal = props => createSvgIcon({
  name: 'warning-fill-beta',
  viewBox: '0 0 1024 1024',
  path: ['M512 0c282.78 0 512 229.22 512 512s-229.22 512-512 512S0 794.78 0 512 229.22 0 512 0zm0 665.6a76.8 76.8 0 100 153.6 76.8 76.8 0 000-153.6zm0-512a68.76 68.76 0 00-68.3 76.29l39.88 359.06a28.62 28.62 0 0056.84 0l39.93-359.01A68.76 68.76 0 00512 153.6z'],
  ...props
});

const WebBetaNormal = props => createSvgIcon({
  name: 'web-beta',
  viewBox: '0 0 1024 1024',
  path: ['M708.2 602c3.6-29.7 6.3-59.4 6.3-90s-2.7-60.3-6.3-90h152.1c7.2 28.8 11.7 58.92 11.7 90s-4.5 61.2-11.7 90M628.58 852.2c27-49.92 47.7-103.92 62.04-160.2H823.4a361.32 361.32 0 01-194.82 160.2M617.3 602H406.7a597.06 597.06 0 01-7.2-90c0-30.6 2.7-60.78 7.2-90h210.6c4.02 29.22 7.2 59.4 7.2 90s-3.18 60.3-7.2 90M512 870.2A610.32 610.32 0 01426.08 692h171.84A610.32 610.32 0 01512 870.2M332 332H200.6A356.52 356.52 0 01395 171.8c-27 49.92-47.22 103.92-63 160.2M200.6 692H332c15.78 56.28 36 110.28 63 160.2A360.36 360.36 0 01200.6 692m-36.9-90a370.86 370.86 0 01-11.7-90c0-31.08 4.5-61.2 11.7-90h152.1c-3.6 29.7-6.3 59.4-6.3 90s2.7 60.3 6.3 90M512 153.38c37.32 54 67.5 114.3 85.92 178.62H426.08c18.42-64.32 48.6-124.62 85.92-178.62M823.4 332H690.62a704.22 704.22 0 00-62.04-160.2A359.4 359.4 0 01823.4 332M512 62C263.12 62 62 264.5 62 512c0 248.4 201.6 450 450 450s450-201.6 450-450S760.4 62 512 62z'],
  ...props
});

const WrapLineBreakBetaNormal = props => createSvgIcon({
  name: 'wrap-line-break-beta',
  viewBox: '0 0 1024 1024',
  path: ['M128 853.33V170.67a42.67 42.67 0 0185.33 0v682.66a42.67 42.67 0 01-85.33 0zm682.67 0V170.67a42.67 42.67 0 0185.33 0v682.66a42.67 42.67 0 01-85.33 0zM426.67 704v42.67a21.33 21.33 0 01-34.14 17.06L278.74 678.4a21.33 21.33 0 010-34.13l113.8-85.34A21.33 21.33 0 01426.66 576v42.67H553.8A107.1 107.1 0 00661.33 512a107.1 107.1 0 00-107.52-106.67H362.67a42.67 42.67 0 110-85.33H553.8c106.46 0 192.86 85.89 192.86 192s-86.4 192-192.86 192H426.67z'],
  ...props
});

const WrapOverflowBetaNormal = props => createSvgIcon({
  name: 'wrap-overflow-beta',
  viewBox: '0 0 1024 1024',
  path: ['M725.33 554.67H362.67a42.67 42.67 0 010-85.34h362.66v-42.66a21.33 21.33 0 0134.14-17.07l113.79 85.33a21.33 21.33 0 010 34.14l-113.8 85.33a21.33 21.33 0 01-34.13-17.07v-42.66zm-576 300.8V168.53c0-22.4 19.12-40.53 42.67-40.53s42.67 18.13 42.67 40.53v686.94c0 22.4-19.12 40.53-42.67 40.53s-42.67-18.13-42.67-40.53zm341.34-706.14a42.67 42.67 0 0185.33 0v192a42.67 42.67 0 01-85.33 0v-192zm0 533.34a42.67 42.67 0 0185.33 0l-.34 192a42.67 42.67 0 01-85.33 0l.34-192z'],
  ...props
});

const WrapTruncatedBetaNormal = props => createSvgIcon({
  name: 'wrap-truncated-beta',
  viewBox: '0 0 1024 1024',
  path: ['M128 853.33V170.67a42.67 42.67 0 0185.33 0v682.66a42.67 42.67 0 01-85.33 0zm682.67 0V170.67a42.67 42.67 0 0185.33 0v682.66a42.67 42.67 0 01-85.33 0zm21.12-298.66H341.55A42.8 42.8 0 01298.67 512c0-23.55 19.2-42.67 42.88-42.67h490.24c23.68 0 42.88 19.12 42.88 42.67s-19.2 42.67-42.88 42.67z'],
  ...props
});

const YuanBetaNormal = props => createSvgIcon({
  name: 'yuan-beta',
  viewBox: '0 0 1024 1024',
  path: ['M584.32 512h98.35a42.67 42.67 0 010 85.33h-128v85.34h128a42.67 42.67 0 010 85.33h-128v85.33a42.67 42.67 0 01-85.34 0V768h-128a42.67 42.67 0 010-85.33h128v-85.34h-128a42.67 42.67 0 010-85.33h98.14l-178.1-320.6a42.67 42.67 0 0174.59-41.47L511.9 466.6l175.92-316.67a42.67 42.67 0 0174.58 41.47L584.32 512z'],
  ...props
});

const SuperArrowRightBetaNormal = props => createSvgIcon({
  name: 'super-arrow-right-beta',
  viewBox: '0 0 1024 1024',
  path: ['M546.3552 768a35.4816 35.4816 0 0 1-24.2688-9.472 30.72 30.72 0 0 1 0-45.4656L736.3072 512l-214.2208-201.0112a30.72 30.72 0 0 1 0-45.568 35.84 35.84 0 0 1 48.5376 0l238.5408 223.744a30.8736 30.8736 0 0 1 0 45.6192l-238.5408 223.744a35.4816 35.4816 0 0 1-24.2688 9.472z m-256 0a35.4816 35.4816 0 0 1-24.2688-9.472 30.72 30.72 0 0 1 0-45.4656L480.3072 512 266.0864 310.9888a30.72 30.72 0 0 1 0-45.568 35.84 35.84 0 0 1 48.5376 0l238.5408 223.744a30.8736 30.8736 0 0 1 0 45.6192l-238.5408 223.744a35.4816 35.4816 0 0 1-24.2688 9.472z'],
  ...props
});

const SuperArrowLeftBetaNormal = props => createSvgIcon({
  name: 'super-arrow-left-beta',
  viewBox: '0 0 1024 1024',
  path: ['M477.6448 768a35.4816 35.4816 0 0 1-24.2688-9.472l-238.5408-223.744a30.8736 30.8736 0 0 1 0-45.568l238.5408-223.744a35.84 35.84 0 0 1 48.5376 0 30.72 30.72 0 0 1 0 45.568L287.6928 512l214.2208 201.0624a30.72 30.72 0 0 1 0 45.4656 35.4816 35.4816 0 0 1-24.2688 9.472z m256 0a35.4816 35.4816 0 0 1-24.2688-9.472l-238.5408-223.744a30.8736 30.8736 0 0 1 0-45.568l238.5408-223.744a35.84 35.84 0 0 1 48.5376 0 30.72 30.72 0 0 1 0 45.568L543.6928 512l214.2208 201.0624a30.72 30.72 0 0 1 0 45.4656 35.4816 35.4816 0 0 1-24.2688 9.472z'],
  ...props
});

const ArrowLeftThinBetaNormal = props => createSvgIcon({
  name: 'arrow-left-thin-beta',
  viewBox: '0 0 1024 1024',
  path: ['M603.9552 266.24a30.8736 30.8736 0 0 1 21.8624 52.736L432.9984 512l192.8192 192.9728a30.8736 30.8736 0 1 1-43.7248 43.7248l-214.6304-214.8352a31.0272 31.0272 0 0 1 0-43.776l214.6304-214.784a30.8736 30.8736 0 0 1 21.8624-9.0624z'],
  ...props
});

const ArrowRightThinBetaNormal = props => createSvgIcon({
  name: 'arrow-right-thin-beta',
  viewBox: '0 0 1024 1024',
  path: ['M420.0448 266.24c7.8848 0 15.8208 3.072 21.8624 9.0624l214.6304 214.784a31.0272 31.0272 0 0 1 0 43.776l-214.6304 214.8352a30.8736 30.8736 0 1 1-43.6736-43.7248L590.9504 512 398.1824 318.976a30.7712 30.7712 0 0 1 21.8624-52.736z'],
  ...props
});

const ClockBetaNormal = props => createSvgIcon({
  name: 'clock-beta',
  viewBox: '0 0 1024 1024',
  path: ['M512 102.4a409.6 409.6 0 1 0 0 819.2 409.6 409.6 0 0 0 0-819.2m0 61.44c192 0 348.16 156.16 348.16 348.16s-156.16 348.16-348.16 348.16-348.16-156.16-348.16-348.16S320 163.84 512 163.84m168.7552 498.3296a30.208 30.208 0 0 1-15.3088-4.1472l-187.1872-108.032a30.6176 30.6176 0 0 1-15.36-26.624V339.2512a30.72 30.72 0 1 1 61.44 0v166.4l171.776 99.2256a30.72 30.72 0 0 1-15.36 57.344'],
  ...props
});

const AddNormal = props => createSvgIcon({
  name: 'add',
  viewBox: '0 0 1024 1024',
  path: ['M256 938.666667a128 128 0 0 1-128-128V213.333333a128 128 0 0 1 128-128h512a128 128 0 0 1 128 128v106.666667a42.666667 42.666667 0 1 1-85.333333 0v-106.666667a42.666667 42.666667 0 0 0-42.666667-42.666666H256a42.666667 42.666667 0 0 0-42.56 39.466666L213.333333 213.333333v597.333334a42.666667 42.666667 0 0 0 39.466667 42.56L256 853.333333h106.666667a42.666667 42.666667 0 1 1 0 85.333334h-106.666667zM650.666667 341.333333C821.504 341.333333 960 479.829333 960 650.666667S821.504 960 650.666667 960 341.333333 821.504 341.333333 650.666667 479.829333 341.333333 650.666667 341.333333z m10.666666 149.333334a37.333333 37.333333 0 0 0-37.333333 37.333333L623.978667 618.666667H528a37.333333 37.333333 0 0 0 0 74.666666h95.978667l0.021333 101.333334a37.333333 37.333333 0 0 0 74.666667 0l-0.021334-101.333334h96.021334a37.333333 37.333333 0 0 0 0-74.666666h-96.021334l0.021334-90.666667A37.333333 37.333333 0 0 0 661.333333 490.666667z'],
  ...props
});

const AddfontsizeNormal = props => createSvgIcon({
  name: 'addfontsize',
  viewBox: '0 0 1024 1024',
  path: ['M477.546667 128c4.138667 0 7.893333 2.688 9.301333 6.592l260.224 736.064a9.664 9.664 0 0 1-9.28 12.864h-77.973333a9.877333 9.877333 0 0 1-9.386667-6.784l-81.194667-214.4H280.981333L208.384 876.245333a9.834667 9.834667 0 0 1-9.386667 6.784H116.437333A9.685333 9.685333 0 0 1 106.666667 873.344c0-1.109333 0.106667-2.197333 0.512-3.2L364.970667 134.613333A9.664 9.664 0 0 1 374.250667 128z m-42.624 107.776h-12.693334l-114.730666 341.824h236.416l-108.992-341.824zM794.069333 106.666667c22.506667 0 40.917333 15.466667 42.56 35.093333l0.106667 2.837333V234.666667h85.333333c20.949333 0 37.930667 19.093333 37.930667 42.666666 0 22.485333-15.466667 40.917333-35.093333 42.56l-2.837334 0.106667h-85.333333v90.069333c0 20.949333-19.093333 37.930667-42.666667 37.930667-22.485333 0-40.917333-15.466667-42.538666-35.093333l-0.128-2.837334V320h-94.805334C635.648 320 618.666667 300.906667 618.666667 277.333333c0-22.485333 15.466667-40.917333 35.093333-42.56l2.837333-0.106666h94.805334V144.597333c0-20.949333 19.114667-37.930667 42.666666-37.930666z'],
  ...props
});

const AddlightNormal = props => createSvgIcon({
  name: 'addlight',
  viewBox: '0 0 1024 1024',
  path: ['M256 938.666667a128 128 0 0 1-128-128V213.333333a128 128 0 0 1 128-128h512a128 128 0 0 1 128 128v106.666667a32 32 0 0 1-64 0v-106.666667a64 64 0 0 0-64-64H256a64 64 0 0 0-63.893333 60.245334L192 213.333333v597.333334a64 64 0 0 0 60.245333 63.893333L256 874.666667h106.666667a32 32 0 0 1 0 64h-106.666667zM661.333333 362.666667c164.949333 0 298.666667 133.717333 298.666667 298.666666s-133.717333 298.666667-298.666667 298.666667-298.666667-133.717333-298.666666-298.666667 133.717333-298.666667 298.666666-298.666666z m0 128a32 32 0 0 0-32 32v106.666666h-102.4a32 32 0 0 0 0 64h102.4v106.666667a32 32 0 0 0 64 0v-106.666667h110.933334a32 32 0 0 0 0-64h-110.933334v-106.666666A32 32 0 0 0 661.333333 490.666667z'],
  ...props
});

const AlignBottomNormal = props => createSvgIcon({
  name: 'align-bottom',
  viewBox: '0 0 1024 1024',
  path: ['M95.104 810.666667h876.458667c5.376 0 9.770667 4.266667 9.770666 9.472v66.389333a9.664 9.664 0 0 1-9.770666 9.472H95.104A9.664 9.664 0 0 1 85.333333 886.528v-66.389333c0-5.205333 4.394667-9.472 9.770667-9.472zM501.333333 85.333333a10.666667 10.666667 0 0 0-10.666666 10.666667v458.24c-31.232-3.562667-70.058667-10.538667-116.48-20.906667-9.557333 0-14.976 8.32-9.045334 14.122667l159.146667 153.237333c4.501333 4.416 13.290667 4.416 17.941333 0l159.274667-153.237333c5.930667-5.696 0.64-14.122667-8.938667-14.122667-46.528 10.368-85.397333 17.322667-116.586666 20.906667L576 96a10.666667 10.666667 0 0 0-10.666667-10.666667z'],
  ...props
});

const AlignCenterNormal = props => createSvgIcon({
  name: 'align-center',
  viewBox: '0 0 1024 1024',
  path: ['M73.770667 469.333333h876.458666c5.376 0 9.770667 4.266667 9.770667 9.472v66.389334a9.664 9.664 0 0 1-9.770667 9.472H73.770667A9.664 9.664 0 0 1 64 545.194667v-66.389334c0-5.205333 4.394667-9.472 9.770667-9.472zM480 64a10.666667 10.666667 0 0 0-10.666667 10.666667v202.24c-31.232-3.562667-70.058667-10.538667-116.48-20.906667-9.557333 0-14.976 8.32-9.045333 14.122667l159.146667 153.237333c4.501333 4.416 13.290667 4.416 17.941333 0l159.274667-153.237333c5.930667-5.696 0.64-14.122667-8.938667-14.122667-46.528 10.368-85.397333 17.322667-116.586667 20.906667L554.666667 74.666667a10.666667 10.666667 0 0 0-10.666667-10.666667zM480 960a10.666667 10.666667 0 0 1-10.666667-10.666667v-202.24c-31.232 3.562667-70.058667 10.538667-116.48 20.906667-9.557333 0-14.976-8.32-9.045333-14.122667l159.146667-153.237333c4.501333-4.416 13.290667-4.416 17.941333 0l159.274667 153.237333c5.930667 5.696 0.64 14.122667-8.938667 14.122667-46.528-10.368-85.397333-17.322667-116.586667-20.906667L554.666667 949.333333a10.666667 10.666667 0 0 1-10.666667 10.666667z'],
  ...props
});

const AlignTopNormal = props => createSvgIcon({
  name: 'align-top',
  viewBox: '0 0 1024 1024',
  path: ['M73.770667 213.333333h876.458666c5.376 0 9.770667-4.266667 9.770667-9.472V137.472A9.664 9.664 0 0 0 950.229333 128H73.770667C68.394667 128 64 132.266667 64 137.472v66.389333c0 5.205333 4.394667 9.472 9.770667 9.472zM480 938.666667a10.666667 10.666667 0 0 1-10.666667-10.666667V469.76c-31.232 3.562667-70.058667 10.538667-116.48 20.906667-9.557333 0-14.976-8.32-9.045333-14.122667l159.146667-153.237333c4.501333-4.416 13.290667-4.416 17.941333 0l159.274667 153.237333c5.930667 5.696 0.64 14.122667-8.938667 14.122667-46.528-10.368-85.397333-17.322667-116.586667-20.906667L554.666667 928a10.666667 10.666667 0 0 1-10.666667 10.666667z'],
  ...props
});

const ArrowLeftNormal = props => createSvgIcon({
  name: 'arrow-left',
  viewBox: '0 0 1024 1024',
  path: ['M679.48088889 819.0482963c-16.74808889 16.74808889-44.66157037 16.74808889-61.40965926 1e-8l-256.80402963-256.80402964c-27.91348148-27.91348148-27.91348148-72.57505185 0-100.48853334L623.65392592 204.9517037c16.74808889-16.74808889 44.66157037-16.74808889 61.40965926 0 16.74808889 16.74808889 16.74808889 44.66157037 0 61.40965927l-245.63863703 245.63863703L679.48088889 757.63863703c16.74808889 16.74808889 16.74808889 44.66157037 0 61.40965927z'],
  ...props
});

const ArrowRightNormal = props => createSvgIcon({
  name: 'arrow-right',
  viewBox: '0 0 1024 1024',
  path: ['M344.51911111 204.9517037c16.74808889-16.74808889 44.66157037-16.74808889 61.40965926 0l256.80402963 256.80402963c27.91348148 27.91348148 27.91348148 72.57505185 0 100.48853334L400.34607408 819.0482963c-16.74808889 16.74808889-44.66157037 16.74808889-61.40965926 0-16.74808889-16.74808889-16.74808889-44.66157037 0-61.40965927l245.63863703-245.63863703L344.51911111 266.36136297c-16.74808889-16.74808889-16.74808889-44.66157037 0-61.40965927z'],
  ...props
});

const AscendingNormal = props => createSvgIcon({
  name: 'ascending',
  viewBox: '0 0 1024 1024',
  path: ['M484.330667 485.589333a10.666667 10.666667 0 0 1-4.138667 0.853334h-64.298667a10.666667 10.666667 0 0 1-9.770666-6.4l-37.184-85.013334h-140.522667l-37.205333 85.013334a10.666667 10.666667 0 0 1-9.770667 6.4H115.050667a10.666667 10.666667 0 0 1-9.813334-14.869334l151.573334-354.197333a10.666667 10.666667 0 0 1 9.813333-6.485333H330.666667a10.666667 10.666667 0 0 1 9.813333 6.528l149.504 354.197333a10.666667 10.666667 0 0 1-5.674667 13.973333z m-7.210667 116.970667a10.666667 10.666667 0 0 1-3.413333 7.786667L236.245333 832h230.229334a10.666667 10.666667 0 0 1 10.666666 10.666667v64a10.666667 10.666667 0 0 1-10.666666 10.666666H138.666667a10.666667 10.666667 0 0 1-10.666667-10.666666v-70.272a10.666667 10.666667 0 0 1 3.093333-7.509334L339.733333 618.666667H138.666667a10.666667 10.666667 0 0 1-10.666667-10.666667v-64a10.666667 10.666667 0 0 1 10.666667-10.666667h327.786666a10.666667 10.666667 0 0 1 10.666667 10.666667v58.56z m-145.514667-292.864L298.666667 234.453333l-32.917334 75.242667h65.856z m577.536 22.208a10.666667 10.666667 0 0 1-9.258666 2.197333l-110.528-25.856L789.333333 906.666667a10.666667 10.666667 0 0 1-10.666666 10.666666h-64a10.666667 10.666667 0 0 1-10.666667-10.666666l0.021333-597.866667-110.592 25.386667a10.666667 10.666667 0 0 1-10.517333-17.322667l157.162667-185.344a10.666667 10.666667 0 0 1 16.341333 0.085333l154.090667 185.28a10.666667 10.666667 0 0 1-1.365334 15.018667z'],
  ...props
});

const AscendingLightNormal = props => createSvgIcon({
  name: 'ascending-light',
  viewBox: '0 0 1024 1024',
  path: ['M477.674667 481.109333a10.666667 10.666667 0 0 1-4.608 1.066667h-47.402667a10.666667 10.666667 0 0 1-9.770667-6.4l-39.978666-91.392H221.44l-40 91.392a10.666667 10.666667 0 0 1-9.770667 6.4h-49.066666a10.666667 10.666667 0 0 1-9.770667-15.018667l153.706667-345.642666a10.666667 10.666667 0 0 1 9.749333-6.336h44.714667a10.666667 10.666667 0 0 1 9.770666 6.4l142.186667 324.970666 9.728 20.330667a10.666667 10.666667 0 0 1-5.013333 14.229333z m-7.850667 124.309334a10.666667 10.666667 0 0 1-3.370667 7.808L209.152 853.333333h250.026667a10.666667 10.666667 0 0 1 10.666666 10.666667v42.666667a10.666667 10.666667 0 0 1-10.666666 10.666666H138.666667a10.666667 10.666667 0 0 1-10.666667-10.666666v-61.781334a10.666667 10.666667 0 0 1 3.413333-7.808L366.805333 618.666667H138.666667a10.666667 10.666667 0 0 1-10.666667-10.666667v-42.666667a10.666667 10.666667 0 0 1 10.666667-10.666666h320.490666a10.666667 10.666667 0 0 1 10.666667 10.666666v40.106667zM347.946667 320.384L298.666667 207.850667l-49.216 112.533333h98.474666z m559.210666 9.109333a10.666667 10.666667 0 0 1-9.813333 2.048L778.666667 296.874667 778.666667 906.666667a10.666667 10.666667 0 0 1-10.666667 10.666666h-42.666667a10.666667 10.666667 0 0 1-10.666666-10.666666l0.021333-609.066667-118.677333 34.026667a10.666667 10.666667 0 0 1-11.093334-17.152l155.157334-182.954667a10.666667 10.666667 0 0 1 16.341333 0.085333l152.106667 182.869334a10.666667 10.666667 0 0 1-1.386667 15.018666z'],
  ...props
});

const AtNormal = props => createSvgIcon({
  name: 'at',
  viewBox: '0 0 1024 1024',
  path: ['M501.333333 661.333333a138.666667 138.666667 0 1 0 0-277.333333 138.666667 138.666667 0 0 0 0 277.333333z m191.701334-22.698666a224 224 0 1 1-43.52-283.946667l-0.042667-18.304v-4.522667a42.666667 42.666667 0 0 1 85.333333 0v4.608c-0.042667 61.354667 1.493333 104.874667 7.68 153.642667 11.050667 87.850667 34.304 138.752 58.368 141.653333 40.576 4.906667 65.066667-27.349333 73.813334-121.642666a362.666667 362.666667 0 1 0-142.165334 289.792 42.666667 42.666667 0 1 1 51.882667 67.754666A448 448 0 1 1 960 512l-0.170667 3.797333c-12.288 137.429333-68.821333 212.778667-169.216 200.661334-44.714667-5.376-75.946667-32.853333-97.578666-77.824z'],
  ...props
});

const BgNormal = props => createSvgIcon({
  name: 'bg',
  viewBox: '0 0 1024 1024',
  path: ['M981.333333 844.010667v146.645333c0 6.634667-5.376 12.010667-12.010666 12.010667H54.677333A11.989333 11.989333 0 0 1 42.666667 990.656v-146.645333c0-6.634667 5.376-12.010667 12.010666-12.010667h914.645334c6.634667 0 12.010667 5.376 12.010666 12.010667z', 'M931.477333 874.666667H92.522667a7.210667 7.210667 0 0 0-7.210667 7.189333v70.933333c0 3.989333 3.221333 7.210667 7.210667 7.210667h838.933333a7.210667 7.210667 0 0 0 7.189333-7.189333v-70.933334a7.210667 7.210667 0 0 0-7.189333-7.210666z', 'M452.992 101.717333a106.666667 106.666667 0 0 1 150.826667-2.645333l260.864 251.946667c23.658667 22.826667 13.674667 62.72-17.941334 71.722666l-89.941333 25.578667L472.192 743.04a106.666667 106.666667 0 0 1-147.413333 5.76l-3.413334-3.136-176.96-170.88a106.666667 106.666667 0 0 1-2.624-150.826667zM810.666667 490.666667s85.333333 108.288 85.333333 167.253333c0 48.853333-38.357333 88.746667-85.333333 88.746667-46.933333 0-85.333333-39.893333-85.333334-88.746667 0-58.965333 85.333333-167.253333 85.333334-167.253333z m-83.882667-154.197334H344.874667l-141.717334 146.773334a21.333333 21.333333 0 0 0-1.28 28.202666l1.813334 1.962667 176.96 170.88a21.333333 21.333333 0 0 0 30.165333-0.512L703.36 380.8a42.666667 42.666667 0 0 1 18.986667-11.392l29.76-8.490667-25.344-24.448z m-182.250667-176a21.333333 21.333333 0 0 0-30.165333 0.512l-87.082667 90.154667h211.136z'],
  ...props
});

const BgfontcolorNormal = props => createSvgIcon({
  name: 'bgfontcolor',
  viewBox: '0 0 1024 1024',
  path: ['M981.333333 844.010667v146.645333c0 6.634667-5.376 12.010667-12.010666 12.010667H54.677333A11.989333 11.989333 0 0 1 42.666667 990.656v-146.645333c0-6.634667 5.376-12.010667 12.010666-12.010667h914.645334c6.634667 0 12.010667 5.376 12.010666 12.010667z', 'M931.477333 874.666667H92.522667a7.210667 7.210667 0 0 0-7.210667 7.189333v70.933333c0 3.989333 3.221333 7.210667 7.210667 7.210667h838.933333a7.210667 7.210667 0 0 0 7.189333-7.189333v-70.933334a7.210667 7.210667 0 0 0-7.189333-7.210666z', 'M841.856 177.749333a128 128 0 0 1 44.949333 169.088l-4.224 7.274667-146.474666 234.410667a98.474667 98.474667 0 0 1-15.36 53.205333 100.202667 100.202667 0 0 1-34.624 33.749333l-5.248 2.794667-148.736 73.024c-10.794667 5.290667-22.464 5.589333-32 0.896l-0.533334-0.298667-9.749333 12.906667a16.810667 16.810667 0 0 1-11.093333 6.485333l-2.197334 0.170667-263.488 1.813333a14.4 14.4 0 0 1-12.394666-21.888l82.282666-135.274666c-7.04-6.378667-11.157333-15.829333-11.413333-26.453334l0.064-3.498666 8.746667-162.816c1.984-37.12 26.133333-70.890667 57.834666-85.12l145.728-233.194667a128 128 0 0 1 169.109334-44.949333l7.274666 4.224 181.546667 113.450666z m-202.666667 409.984L385.92 429.44l-19.136 139.008 149.802667 93.589333 122.602666-74.304z m157.44-337.621333l-181.546666-113.450667a42.666667 42.666667 0 0 0-55.68 9.216l-3.114667 4.373334-128.085333 204.992 253.888 158.656 128.128-205.013334a42.666667 42.666667 0 0 0-9.216-55.658666l-4.373334-3.114667z'],
  ...props
});

const BgsheetcolorNormal = props => createSvgIcon({
  name: 'bgsheetcolor',
  viewBox: '0 0 1024 1024',
  path: ['M981.333333 844.010667v146.645333c0 6.634667-5.376 12.010667-12.010666 12.010667H54.677333A11.989333 11.989333 0 0 1 42.666667 990.656v-146.645333c0-6.634667 5.376-12.010667 12.010666-12.010667h914.645334c6.634667 0 12.010667 5.376 12.010666 12.010667z', 'M931.477333 874.666667H92.522667a7.210667 7.210667 0 0 0-7.210667 7.189333v70.933333c0 3.989333 3.221333 7.210667 7.210667 7.210667h838.933333a7.210667 7.210667 0 0 0 7.189333-7.189333v-70.933334a7.210667 7.210667 0 0 0-7.189333-7.210666z', 'M897.834667 138.666667a51.626667 51.626667 0 0 1 51.392 48.426666l0.106666 3.392V705.493333c0 27.370667-21.141333 49.941333-48.106666 51.712l-3.392 0.106667H384a32 32 0 0 1-3.072-63.850667L384 693.333333h352V384h-42.666667a32 32 0 0 1 0-64h42.666667V203.733333l-209.962667 1.450667a32 32 0 0 1-32.042666-28.714667l-0.170667-3.072a32 32 0 0 1 28.693333-32.064l3.093334-0.149333L897.834667 138.666667zM885.333333 384h-85.333333v309.333333h85.333333V384zM366.378667 116.565333l4.842666 2.837334 3.754667 2.474666 243.114667 170.24 2.453333 1.877334c17.834667 14.826667 16.32 42.410667-2.261333 54.976l-2.517334 1.557333-2.602666 1.322667-68.928 31.488-189.845334 271.125333-3.178666 4.266667a85.205333 85.205333 0 0 1-46.186667 29.610666l-4.864 1.066667-4.266667 0.704a87.466667 87.466667 0 0 1-50.666666-8.170667l-4.778667-2.56-3.84-2.304-3.157333-2.090666-164.906667-115.477334-3.84-2.858666C30.826667 530.133333 21.290667 483.349333 41.6 446.570667l2.389333-4.032 2.453334-3.690667 207.573333-296.448 3.029333-4.074667a85.248 85.248 0 0 1 47.936-30.186666l5.056-1.024 4.416-0.618667a87.488 87.488 0 0 1 51.904 10.069333zM618.666667 362.666667s85.333333 108.288 85.333333 167.253333c0 48.853333-38.357333 88.746667-85.333333 88.746667-46.933333 0-85.333333-39.893333-85.333334-88.746667 0-58.965333 85.333333-167.253333 85.333334-167.253333z m-127.36-48.981334L214.4 347.690667l-98.090667 140.181333a2.069333 2.069333 0 0 0 0.426667 1.066667l0.362667 0.341333 1.386666 1.024 163.84 114.730667 1.109334 0.64 0.938666-0.149334 1.28-1.706666 201.962667-288.426667 3.669333-1.706667zM885.333333 202.730667l-85.333333 0.576V320h85.333333V202.730667z m-560.896-11.456l-0.469333 0.042666-0.533333 0.725334-43.157334 61.589333 114.090667-14.016-66.581333-46.634667-2.048-1.365333-0.682667-0.298667-0.64-0.042666z'],
  ...props
});

const BiaoqingNormal = props => createSvgIcon({
  name: 'biaoqing',
  viewBox: '0 0 1024 1024',
  path: ['M765.354667 591.232C747.434667 715.093333 640.810667 810.666667 512 810.666667c-128.597333 0-235.008-95.914667-253.226667-219.434667a31.914667 31.914667 0 0 1 31.573334-36.565333h443.306666a32 32 0 0 1 31.701334 36.565333zM362.666667 426.666667a64 64 0 1 0 0-128 64 64 0 0 0 0 128z', 'M661.333333 362.666667m-64 0a64 64 0 1 0 128 0 64 64 0 1 0-128 0Z', 'M512 960c247.424 0 448-200.576 448-448S759.424 64 512 64 64 264.576 64 512 264.576 960 512 960z m0-85.333333a362.666667 362.666667 0 1 1 0-725.333334 362.666667 362.666667 0 0 1 0 725.333334z'],
  ...props
});

const BoldNormal = props => createSvgIcon({
  name: 'bold',
  viewBox: '0 0 1024 1024',
  path: ['M696.021333 482.986667a198.656 198.656 0 0 0 53.674667-136.234667v-10.368c0-109.141333-87.253333-197.717333-194.816-197.717333H239.061333a4.394667 4.394667 0 0 0-4.394666 4.394666v746.24c0 2.432 1.962667 4.394667 4.394666 4.394667h340.48c115.882667 0 209.792-103.936 209.792-221.909333v-11.178667a214.442667 214.442667 0 0 0-93.312-177.621333zM335.274667 246.442667h210.56c53.504 0 96.768 42.624 96.768 95.317333v9.130667c0 52.565333-43.349333 95.274667-96.768 95.274666H335.274667v-199.68z m345.770666 431.36c0 60.757333-48.768 109.994667-108.928 109.994666H335.274667v-230.485333h236.8c60.202667 0 108.970667 49.28 108.970666 110.037333v10.410667z'],
  ...props
});

const BulletedlistNormal = props => createSvgIcon({
  name: 'bulletedlist',
  viewBox: '0 0 1024 1024',
  path: ['M951.456 128H328.544c-4.704 0-8.544 4.256-8.544 9.472V203.84c0 5.216 3.84 9.504 8.544 9.504h622.912c4.704 0 8.544-4.288 8.544-9.504V137.472c0-5.216-3.84-9.472-8.544-9.472z m0 355.552H328.544c-4.704 0-8.544 4.256-8.544 9.472v66.368c0 5.216 3.84 9.504 8.544 9.504h622.912c4.704 0 8.544-4.288 8.544-9.504v-66.368c0-5.216-3.84-9.472-8.544-9.472z m0 326.048H328.544c-4.704 0-8.544 4.256-8.544 9.472v66.368c0 5.216 3.84 9.504 8.544 9.504h622.912c4.704 0 8.544-4.288 8.544-9.504v-66.368c0-5.216-3.84-9.472-8.544-9.472zM64 515.552a74.656 74.656 0 1 0 149.344 0 74.656 74.656 0 0 0-149.344 0z m0 333.504a74.656 74.656 0 1 0 149.344 0 74.656 74.656 0 0 0-149.344 0zM101.344 235.328A74.656 74.656 0 1 0 176 106.016a74.656 74.656 0 0 0-74.656 129.312z'],
  ...props
});

const CenteralignNormal = props => createSvgIcon({
  name: 'centeralign',
  viewBox: '0 0 1024 1024',
  path: ['M312.27733333 213.344h403.008c3.552 0 6.496-4.288 6.496-9.504V137.472c0-5.216-2.944-9.472-6.496-9.472H312.27733333c-3.584 0-6.496 4.256-6.496 9.472V203.84c0 5.216 2.912 9.504 6.496 9.504z m0 458.656h403.008c3.552 0 6.496-4.256 6.496-9.472V596.16c0-5.216-2.944-9.504-6.496-9.504H312.27733333c-3.584 0-6.496 4.288-6.496 9.504v66.368c0 5.216 2.912 9.472 6.496 9.472z m596.352 137.6H129.58933333c-4.8 0-8.704 4.256-8.704 9.472v66.368c0 5.216 3.904 9.504 8.704 9.504h779.04c4.8 0 8.704-4.288 8.704-9.504v-66.368c0-5.216-3.904-9.472-8.704-9.472z m0-454.048H129.62133333c-4.8 0-8.704 4.256-8.704 9.472v66.368c0 5.216 3.904 9.504 8.704 9.504h779.072c4.768 0 8.672-4.288 8.672-9.504v-66.368c0-5.216-3.904-9.472-8.672-9.472z'],
  ...props
});

const CheckboxFillNormal = props => createSvgIcon({
  name: 'checkbox-fill',
  viewBox: '0 0 1024 1024',
  path: ['M476.292754 575.441914a15.999392 15.999392 0 0 1-19.835768 0.939395l-102.840226-73.75377c-12.498662-12.496615-32.757055-12.496615-45.255717 0-12.495592 12.495592-12.495592 32.756031 0 45.252646l135.759987 135.75794c6.246261 6.248308 14.437827 9.372461 22.626323 9.372462s16.376992-3.124154 22.626324-9.372462l271.516903-271.51588c12.495592-12.495592 12.495592-32.756031 0-45.252647-12.495592-12.496615-32.757055-12.496615-45.252647 0L476.292754 575.441914zM64.021106 512c0-247.406786 200.573131-447.978894 447.978894-447.978894S959.977871 264.593214 959.977871 512 759.405763 959.977871 512 959.977871 64.021106 759.405763 64.021106 512z'],
  ...props
});

const ClearNormal = props => createSvgIcon({
  name: 'clear',
  viewBox: '0 0 1024 1024',
  path: ['M527.552 76.8c66.986667 0 121.258667 57.28 121.258667 128v112.085333c0 23.573333 18.090667 42.666667 40.448 42.666667h85.482666c66.965333 0 121.258667 57.28 121.258667 128V802.133333c0 70.72-54.293333 128-121.258667 128H249.258667C182.293333 930.133333 128 872.853333 128 802.133333V487.552c0-70.72 54.293333-128 121.258667-128h86.4c10.730667 0 20.970667-4.501333 28.586666-12.501333a43.946667 43.946667 0 0 0 11.818667-30.165334V204.8c0-70.72 54.293333-128 121.258667-128h30.229333zM810.666667 618.666667H213.333333v183.466666c0 23.402667 15.552 40.938667 33.28 42.538667l2.645334 0.128H298.666667V746.666667a42.666667 42.666667 0 0 1 85.226666-3.2L384 746.666667v98.133333h74.666667V704a42.666667 42.666667 0 0 1 85.226666-3.2l0.106667 3.2v140.8H618.666667V746.666667a42.666667 42.666667 0 0 1 85.226666-3.2L704 746.666667v98.133333h70.741333c17.877333 0 34.282667-16.426667 35.818667-39.210667L810.666667 802.133333V618.666667zM527.552 162.133333h-30.229333c-17.877333 0-34.282667 16.426667-35.818667 39.210667l-0.106667 3.456v112.085333a129.386667 129.386667 0 0 1-35.349333 89.002667 124.864 124.864 0 0 1-84.352 38.826667l-6.037333 0.170666h-86.4c-17.877333 0-34.282667 16.405333-35.818667 39.189334l-0.106667 3.477333V533.333333h597.333334v-45.781333c0-23.402667-15.552-40.938667-33.28-42.56l-2.645334-0.106667h-85.482666c-68.928 0-123.264-55.68-125.696-123.264l-0.085334-4.736V204.8c0-23.402667-15.552-40.938667-33.258666-42.538667L527.573333 162.133333z'],
  ...props
});

const ClipNormal = props => createSvgIcon({
  name: 'clip',
  viewBox: '0 0 1024 1024',
  path: ['M906.666667 106.666667a10.666667 10.666667 0 0 1 10.666666 10.666666v784.384a10.666667 10.666667 0 0 1-10.666666 10.666667h-64a10.666667 10.666667 0 0 1-10.666667-10.666667V552.192H332.693333a10.666667 10.666667 0 0 1-10.666666-10.666667v-64a10.666667 10.666667 0 0 1 10.666666-10.666666H832V117.333333a10.666667 10.666667 0 0 1 10.666667-10.666666h64z m-725.333334 0a10.666667 10.666667 0 0 1 10.666667 10.666666v784.384a10.666667 10.666667 0 0 1-10.666667 10.666667h-64a10.666667 10.666667 0 0 1-10.666666-10.666667V117.333333a10.666667 10.666667 0 0 1 10.666666-10.666666h64z'],
  ...props
});

const ConditionalformattinNormal = props => createSvgIcon({
  name: 'conditionalformattin',
  viewBox: '0 0 1024 1024',
  path: ['M362.666667 192h170.666666v170.666667h-170.666666zM362.666667 448h85.333333v128h-85.333333zM362.666667 661.333333h277.333333v170.666667H362.666667z', 'M853.333333 106.666667a85.333333 85.333333 0 0 1 85.333334 85.333333v640a85.333333 85.333333 0 0 1-85.333334 85.333333H170.666667a85.333333 85.333333 0 0 1-85.333334-85.333333V192a85.333333 85.333333 0 0 1 85.333334-85.333333h682.666666zM277.333333 661.333333H170.666667v170.666667h106.666666v-170.666667z m362.666667 0H362.666667v170.666667h277.333333v-170.666667z m213.333333 0h-128v170.666667h128v-170.666667zM277.333333 448H170.666667v128h106.666666v-128z m170.666667 0h-85.333333v128h85.333333v-128z m405.333333 0H533.333333v128h320v-128zM277.333333 192H170.666667v170.666667h106.666666V192z m256 0h-170.666666v170.666667h170.666666V192z m320 0H618.666667v170.666667h234.666666V192z'],
  ...props
});

const ConditionalformattinLightNormal = props => createSvgIcon({
  name: 'conditionalformattin-light',
  viewBox: '0 0 1024 1024',
  path: ['M341.333333 170.666667h192v192h-192zM341.333333 426.666667h106.666667v149.333333h-106.666667zM341.333333 640h298.666667v213.333333H341.333333z', 'M853.333333 106.666667a85.333333 85.333333 0 0 1 85.333334 85.333333v640a85.333333 85.333333 0 0 1-85.333334 85.333333H170.666667a85.333333 85.333333 0 0 1-85.333334-85.333333V192a85.333333 85.333333 0 0 1 85.333334-85.333333h682.666666zM277.333333 640H149.333333v213.333333h128V640z m362.666667 0H341.333333v213.333333h298.666667V640z m234.666667 0h-170.666667v213.333333h170.666667V640zM277.333333 426.666667H149.333333v149.333333h128v-149.333333z m170.666667 0h-106.666667v149.333333h106.666667v-149.333333z m426.666667 0H512v149.333333h362.666667v-149.333333zM277.333333 170.666667H149.333333v192h128V170.666667z m256 0h-192v192h192V170.666667z m341.333334 0H597.333333v192h277.333334V170.666667z'],
  ...props
});

const CrossoutNormal = props => createSvgIcon({
  name: 'crossout',
  viewBox: '0 0 1024 1024',
  path: ['M534.954667 85.333333c88.874667 0 170.026667 43.136 216.917333 112.512 0.981333 1.493333 2.645333 4.096 4.949333 7.850667a10.666667 10.666667 0 0 1-3.882666 14.890667l-55.850667 31.274666a10.666667 10.666667 0 0 1-14.208-3.584 103.68 103.68 0 0 0-1.493333-2.304C650.410667 199.893333 595.626667 170.666667 534.954667 170.666667 439.210667 170.666667 362.666667 242.602667 362.666667 329.898667c0 58.453333 34.56 111.616 89.088 139.52L678.528 469.333333V469.333333l0.042667 0.042667L949.333333 469.333333a10.666667 10.666667 0 0 1 10.666667 10.666667v64a10.666667 10.666667 0 0 1-10.666667 10.666667h-193.28c20.437333 36.693333 31.701333 78.378667 31.701334 121.941333 0 140.757333-116.565333 254.378667-259.84 254.378667-107.221333 0-201.685333-64.170667-240.810667-158.72a355.84 355.84 0 0 1-6.698667-18.986667 9.386667 9.386667 0 0 1 6.4-11.989333l64.042667-17.92a9.386667 9.386667 0 0 1 11.434667 6.016c1.877333 5.546667 3.498667 9.898667 4.906666 13.056 26.752 61.354667 89.386667 103.253333 160.768 103.253333 96.597333 0 174.506667-75.946667 174.506667-169.088A166.101333 166.101333 0 0 0 648.704 554.666667H74.666667a10.666667 10.666667 0 0 1-10.666667-10.666667v-64a10.666667 10.666667 0 0 1 10.666667-10.666667h248.576A235.605333 235.605333 0 0 1 277.333333 329.941333C277.333333 194.218667 393.258667 85.333333 534.954667 85.333333z'],
  ...props
});

const CurrencyNormal = props => createSvgIcon({
  name: 'currency',
  viewBox: '0 0 1024 1024',
  path: ['M469.653333 904.96v-175.530667h-230.186666a10.666667 10.666667 0 0 1-10.666667-10.666666V662.613333a10.666667 10.666667 0 0 1 10.666667-10.666666h230.186666v-80.490667h-230.186666a10.666667 10.666667 0 0 1-10.666667-10.666667v-62.165333a10.666667 10.666667 0 0 1 10.666667-10.666667h186.453333L206.442667 101.269333A10.666667 10.666667 0 0 1 215.722667 85.333333h77.226666a10.666667 10.666667 0 0 1 9.258667 5.397334c132.842667 233.173333 202.666667 357.888 209.493333 374.101333 5.973333-13.098667 75.2-137.792 207.722667-374.058667A10.666667 10.666667 0 0 1 728.725333 85.333333h81.557334a10.666667 10.666667 0 0 1 9.28 15.936L599.424 487.936h188.309333a10.666667 10.666667 0 0 1 10.666667 10.666667v62.165333a10.666667 10.666667 0 0 1-10.666667 10.666667H555.008v80.490666h232.725333a10.666667 10.666667 0 0 1 10.666667 10.666667v56.170667a10.666667 10.666667 0 0 1-10.666667 10.666666H555.008v175.530667a10.666667 10.666667 0 0 1-10.666667 10.666667h-64.021333a10.666667 10.666667 0 0 1-10.666667-10.666667z'],
  ...props
});

const CutNormal = props => createSvgIcon({
  name: 'cut',
  viewBox: '0 0 1024 1024',
  path: ['M760.035556 116.451556c17.237333 14.222222 20.423111 39.253333 7.850666 57.287111l-2.161778 2.787555L560.412444 424.96l115.598223 139.889778c15.701333-5.518222 32.426667-8.931556 49.720889-9.898667l10.24-0.284444a181.361778 181.361778 0 1 1-131.982223 57.002666L505.059556 491.918222 412.444444 604.103111c32.711111 30.890667 53.930667 73.784889 56.604445 121.628445l0.284444 10.24a181.361778 181.361778 0 1 1-132.266666-174.592l112.64-136.419556-205.255111-248.433778-2.104889-2.844444a42.666667 42.666667 0 0 1 67.868444-51.541334l194.844445 235.804445 194.901333-235.804445a42.666667 42.666667 0 0 1 60.074667-5.688888zM288.028444 640a96.028444 96.028444 0 1 0 0 192 96.028444 96.028444 0 0 0 0-192z m448 0a96.028444 96.028444 0 1 0 0 192 96.028444 96.028444 0 0 0 0-192z'],
  ...props
});

const DecreaseindentNormal = props => createSvgIcon({
  name: 'decreaseindent',
  viewBox: '0 0 1024 1024',
  path: ['M872.864 445.184H469.184c-3.936 0-7.136-4.16-7.136-9.28V370.88c0-5.12 3.2-9.28 7.136-9.28h403.68c3.936 0 7.136 4.16 7.136 9.28v65.024c0 5.12-3.2 9.28-7.136 9.28z m8.928 214.72c0 5.12-3.2 9.28-7.168 9.28H470.944c-3.904 0-7.136-4.16-7.136-9.28V594.88c0-5.12 3.2-9.28 7.136-9.28h403.68c3.936 0 7.168 4.16 7.168 9.28v65.024zM125.632 128h776c4.704 0 8.576 4.16 8.576 9.28v65.024c0 5.12-3.84 9.28-8.608 9.28H125.6c-4.736 0-8.608-4.16-8.608-9.28V137.28c0-5.12 3.872-9.28 8.64-9.28z m1.12 681.6h774.848c4.736 0 8.64 4.16 8.64 9.28v65.024c0 5.12-3.904 9.28-8.64 9.28H126.752c-4.736 0-8.64-4.16-8.64-9.28V818.88c0-5.12 3.904-9.28 8.64-9.28z m227.552-95.424l-206.4-185.12a14.496 14.496 0 0 1 0-20.896l206.4-185.248c7.68-6.912 19.04-0.736 19.04 10.368V703.68c0 11.136-11.232 17.44-19.04 10.528z'],
  ...props
});

const DncreaseDecimalPlacesNormal = props => createSvgIcon({
  name: 'dncrease-decimal-places',
  viewBox: '0 0 1024 1024',
  path: ['M254.464 718.506667a10.666667 10.666667 0 0 1 2.474667 6.826666v64H874.666667a42.666667 42.666667 0 0 1 3.2 85.226667L874.666667 874.666667H256.938667v61.717333a10.666667 10.666667 0 0 1-17.344 8.32L110.656 841.173333a10.666667 10.666667 0 0 1-0.149333-16.512l128.938666-107.52a10.666667 10.666667 0 0 1 15.018667 1.365334zM544 106.666667a181.333333 181.333333 0 0 1 181.333333 181.333333v192a181.333333 181.333333 0 1 1-362.666666 0v-192A181.333333 181.333333 0 0 1 544 106.666667z m-277.333333 448a53.333333 53.333333 0 1 1 0 106.666666 53.333333 53.333333 0 0 1 0-106.666666z m277.333333-362.666667a96 96 0 0 0-96 96v192a96 96 0 1 0 192 0v-192A96 96 0 0 0 544 192z'],
  ...props
});

const DocNormal = props => createSvgIcon({
  name: 'doc',
  viewBox: '0 0 1024 1024',
  path: ['M405.333333 128l115.498667 115.498667a42.666667 42.666667 0 0 0 30.165333 12.501333H832a128 128 0 0 1 128 128v384a128 128 0 0 1-128 128H192a128 128 0 0 1-128-128V256a128 128 0 0 1 128-128h213.333333z m-35.349333 85.333333H192a42.666667 42.666667 0 0 0-42.56 39.466667L149.333333 256v512a42.666667 42.666667 0 0 0 39.466667 42.56L192 810.666667h640a42.666667 42.666667 0 0 0 42.56-39.466667L874.666667 768V384a42.666667 42.666667 0 0 0-39.466667-42.56L832 341.333333H550.997333a128 128 0 0 1-86.186666-33.365333l-4.309334-4.117333L369.984 213.333333zM725.333333 618.666667a42.666667 42.666667 0 1 1 0 85.333333H298.666667a42.666667 42.666667 0 1 1 0-85.333333h426.666666z'],
  ...props
});

const DocAddNormal = props => createSvgIcon({
  name: 'doc-add',
  viewBox: '0 0 1024 1024',
  path: ['M644.32497466 90.125a60.26642248 60.26642248 0 0 1 46.3047009 21.69591229l168.84642646 202.61571158a60.26642248 60.26642248 0 0 1 13.21843469 29.12877054c0.30133245 1.52674914 0.52230927 3.11376544 0.64284192 4.72086941l0.10044415 2.99323279v462.04256992a120.53284415 120.53284415 0 0 1-120.53284414 120.53284497H270.93431088a120.53284415 120.53284415 0 0 1-120.53284415-120.53284497V210.65784415a120.53284415 120.53284415 0 0 1 120.53284415-120.53284415h373.39066378z m-72.21926265 80.35522998H271.49679797a40.17761499 40.17761499 0 0 0-40.05708233 37.1642937L231.31918299 210.65784415v602.66422238a40.17761499 40.17761499 0 0 0 37.18438219 40.07717084l3.0133213 0.10044415h481.38809216a40.17761499 40.17761499 0 0 0 40.07717083-37.1642937l0.10044415-3.01332129V391.45711078h-180.79926662a40.17761499 40.17761499 0 0 1-40.05708235-37.1642937l-0.12053264-3.01332047V170.48022998z m179.97562573 140.62165164l-99.62039657-119.54849276V311.10188162h99.62039657z', 'M507.01797596 446.66115357a40.17761499 40.17761499 0 0 1 40.07717083 37.1642937l0.10044415 3.01332129V562.21197448h75.39329361a40.17761499 40.17761499 0 0 1 2.99323278 80.25478501l-3.01332128 0.10044415h-75.37320511v75.37320511a40.17761499 40.17761499 0 0 1-80.23469733 3.0133213l-0.12053265-3.01332129V642.56720364H391.46715585a40.17761499 40.17761499 0 0 1-3.01332128-80.25478582L391.46715585 562.21197448h75.37320511v-75.37320593a40.17761499 40.17761499 0 0 1 40.177615-40.17761498z'],
  ...props
});

const DrawerNormal = props => createSvgIcon({
  name: 'drawer',
  viewBox: '0 0 1024 1024',
  path: ['M611.99492375 811.98572938c22.08998343 0 39.99816094-17.90817844 39.99816094-39.99816094s-17.90817844-39.99816094-39.99816094-39.99816094-39.99816094 17.90817844-39.99816188 39.99816094 17.90817844 39.99816094 39.99816188 39.99816093zM392.00551625 551.99816094c22.08998343 0 39.99816094-17.90817844 39.99816094-39.99816094 0-22.08998343-17.90817844-39.99816094-39.99816094-39.99816094-22.08998343 0-39.99816094 17.90817844-39.99816094 39.99816094 0 22.08998343 17.90817844 39.99816094 39.99816094 39.99816094z m219.9894075-259.98756844c22.08998343 0 39.99816094-17.90817844 39.99816094-39.99816094s-17.90817844-39.99816094-39.99816094-39.99816093-39.99816094 17.90817844-39.99816188 39.99816093 17.90817844 39.99816094 39.99816188 39.99816094z m-113.16583406 0H192.01566969c-22.08998343 0-39.99816094-17.90817844-39.99816188-39.99816094s17.90817844-39.99816094 39.99816188-39.99816093h306.81342c16.47299156-46.60520156 60.91965655-79.99632281 113.16679312-79.99632282s96.69380156 33.39112125 113.16583313 79.99632282h106.82357437c22.08998343 0 39.99816094 17.90817844 39.99816094 39.99816093s-17.90817844 39.99816094-39.99816094 39.99816094h-106.82357437c-16.47299156 46.60520156-60.91965655 79.99632281-113.16583313 79.99632281s-96.69476062-33.39112125-113.16679312-79.99632281zM278.83968313 551.99816094h-86.82401344c-22.08998343 0-39.99816094-17.90817844-39.99816188-39.99816094 0-22.08998343 17.90817844-39.99816094 39.99816188-39.99816094h86.82401342c16.47299156-46.60520156 60.91965655-79.99632281 113.1667922-79.99632281s96.69380156 33.39112125 113.16679313 79.99632281h326.81202187c22.08998343 0 39.99816094 17.90817844 39.99816094 39.99816094 0 22.08998343-17.90817844 39.99816094-39.99816094 39.99816094h-326.81202187c-16.47299156 46.60520156-60.91965655 79.99632281-113.16679313 79.99632281s-96.69476062-33.39112125-113.16679218-79.99632281z m219.98940656 259.98756843H192.01566969c-22.08998343 0-39.99816094-17.90817844-39.99816188-39.99816093s17.90817844-39.99816094 39.99816188-39.99816094h306.81342c16.47299156-46.60520156 60.91965655-79.99632281 113.16679312-79.99632281s96.69380156 33.39112125 113.16583313 79.99632281h106.82357437c22.08998343 0 39.99816094 17.90817844 39.99816094 39.99816094s-17.90817844 39.99816094-39.99816094 39.99816093h-106.82357437c-16.47299156 46.60520156-60.91965655 79.99632281-113.16583313 79.99632282s-96.69476062-33.39112125-113.16679312-79.99632282z'],
  ...props
});

const FilterNormal = props => createSvgIcon({
  name: 'filter',
  viewBox: '0 0 1024 1024',
  path: ['M801.834667 106.666667H200.832a106.666667 106.666667 0 0 0-75.413333 182.101333L341.333333 504.661333v356.821334a106.666667 106.666667 0 0 0 154.368 95.402666l128-64A106.666667 106.666667 0 0 0 682.666667 797.482667V483.349333l194.581333-194.581333A106.666667 106.666667 0 0 0 801.834667 106.666667z m0 85.333333a21.333333 21.333333 0 0 1 15.082666 36.416l-194.581333 194.581333A85.333333 85.333333 0 0 0 597.333333 483.349333v314.133334a21.333333 21.333333 0 0 1-11.797333 19.072l-128 64A21.333333 21.333333 0 0 1 426.666667 861.482667V504.682667a85.333333 85.333333 0 0 0-25.002667-60.352l-215.893333-215.893334A21.333333 21.333333 0 0 1 200.810667 192h601.002666z', 'M185.258667 228.245333l69.632 71.253334h495.957333l72.106667-70.954667A21.333333 21.333333 0 0 0 808 192H200.512a21.333333 21.333333 0 0 0-15.253333 36.245333z'],
  pathColors: ['rgba(17, 31, 44, 0.6)', 'rgba(17, 31, 44, 0.12)'],
  ...props
});

const FilterLightNormal = props => createSvgIcon({
  name: 'filter-light',
  viewBox: '0 0 1024 1024',
  path: ['M801.834667 128H200.832a85.333333 85.333333 0 0 0-60.330667 145.664L356.416 489.6a21.333333 21.333333 0 0 1 6.250667 15.082667v356.8a85.333333 85.333333 0 0 0 123.498666 76.330666l128-64A85.333333 85.333333 0 0 0 661.333333 797.482667V483.349333a21.333333 21.333333 0 0 1 6.250667-15.082666l194.581333-194.602667A85.333333 85.333333 0 0 0 801.834667 128z m0 64a21.333333 21.333333 0 0 1 15.082666 36.416l-194.581333 194.581333A85.333333 85.333333 0 0 0 597.333333 483.349333v314.133334a21.333333 21.333333 0 0 1-11.797333 19.072l-128 64A21.333333 21.333333 0 0 1 426.666667 861.482667V504.682667a85.333333 85.333333 0 0 0-25.002667-60.352l-215.893333-215.893334A21.333333 21.333333 0 0 1 200.810667 192h601.002666z', 'M184.746667 228.245333l69.632 71.253334h495.957333l72.106667-70.954667A21.333333 21.333333 0 0 0 807.488 192H200.021333a21.333333 21.333333 0 0 0-15.274666 36.245333z'],
  pathColors: ['rgba(17, 31, 44, 0.6)', 'rgba(17, 31, 44, 0.12)'],
  ...props
});

const FocusNormal = props => createSvgIcon({
  name: 'focus',
  viewBox: '0 0 1024 1024',
  path: ['M513.024 298.666667c100.010667 0 183.808 49.834667 249.386667 146.901333a106.666667 106.666667 0 0 1 0.170666 119.168c-65.109333 97.024-148.949333 146.816-249.6 146.816-100.565333 0-184.405333-49.792-249.557333-146.816a106.666667 106.666667 0 0 1 0.170667-119.168C329.216 348.501333 413.013333 298.666667 513.024 298.666667z m-1.002667 74.666666c-72.832 0-133.525333 33.706667-183.829333 103.210667a42.133333 42.133333 0 0 0-0.085333 49.813333C378.026667 595.712 438.698667 629.333333 512 629.333333c73.322667 0 134.016-33.621333 183.872-102.976 10.88-15.061333 10.816-34.773333-0.042667-49.813333-50.346667-69.504-111.04-103.210667-183.850666-103.210667h0.042666zM512 448a64 64 0 1 1 0 128 64 64 0 0 1 0-128zM874.666667 589.248a42.666667 42.666667 0 0 1 42.56 39.488l0.106666 3.2V810.666667a106.666667 106.666667 0 0 1-102.037333 106.56L810.666667 917.333333h-192.768a42.666667 42.666667 0 0 1-3.178667-85.226666l3.2-0.106667H810.666667a21.333333 21.333333 0 0 0 21.184-18.837333L832 810.666667v-178.752a42.666667 42.666667 0 0 1 42.666667-42.666667z m-725.333334 4.352a42.666667 42.666667 0 0 1 42.56 39.488l0.106667 3.2V810.666667a21.333333 21.333333 0 0 0 18.837333 21.184L213.333333 832h172.586667a42.666667 42.666667 0 0 1 3.178667 85.226667l-3.2 0.106666H213.333333a106.666667 106.666667 0 0 1-106.56-102.037333L106.666667 810.666667v-174.4a42.666667 42.666667 0 0 1 42.666666-42.666667zM810.666667 106.666667a106.666667 106.666667 0 0 1 106.56 102.037333L917.333333 213.333333v186.453334a42.666667 42.666667 0 0 1-85.226666 3.2L832 399.786667V213.333333a21.333333 21.333333 0 0 0-18.837333-21.184L810.666667 192h-172.16a42.666667 42.666667 0 0 1-3.2-85.226667L638.506667 106.666667H810.666667zM392.832 106.666667a42.666667 42.666667 0 0 1 3.2 85.226666l-3.2 0.106667H213.333333a21.333333 21.333333 0 0 0-21.184 18.837333L192 213.333333v178.901334a42.666667 42.666667 0 0 1-85.226667 3.2L106.666667 392.234667V213.333333a106.666667 106.666667 0 0 1 102.037333-106.56L213.333333 106.666667h179.498667z'],
  ...props
});

const FocusLightNormal = props => createSvgIcon({
  name: 'focus-light',
  viewBox: '0 0 1024 1024',
  path: ['M513.024 298.666667c100.010667 0 183.808 49.834667 249.386667 146.901333a106.666667 106.666667 0 0 1 0.170666 119.168c-65.109333 97.024-148.949333 146.816-249.6 146.816-100.565333 0-184.405333-49.792-249.557333-146.816a106.666667 106.666667 0 0 1 0.170667-119.168C329.216 348.501333 413.013333 298.666667 513.024 298.666667z m-0.853333 61.632c-80.938667 0-148.373333 39.317333-204.266667 120.426666a51.157333 51.157333 0 0 0-0.085333 58.112c55.445333 80.896 122.88 120.128 204.309333 120.128 81.493333 0 148.906667-39.232 204.309333-120.128a51.136 51.136 0 0 0-0.042666-58.112c-55.957333-81.109333-123.370667-120.426667-204.266667-120.426666h0.042667zM512 448a64 64 0 1 1 0 128 64 64 0 0 1 0-128zM874.666667 599.914667a32 32 0 0 1 31.850666 28.928l0.149334 3.072V810.666667a96 96 0 0 1-91.477334 95.893333L810.666667 906.666667h-192.768a32 32 0 0 1-3.072-63.850667l3.072-0.149333H810.666667a32 32 0 0 0 31.850666-28.928L842.666667 810.666667v-178.752a32 32 0 0 1 32-32z m-725.333334 4.352a32 32 0 0 1 31.850667 28.928l0.149333 3.072V810.666667a32 32 0 0 0 28.928 31.850666L213.333333 842.666667h172.586667a32 32 0 0 1 3.072 63.850666l-3.072 0.149334H213.333333a96 96 0 0 1-95.893333-91.477334L117.333333 810.666667v-174.4a32 32 0 0 1 32-32zM810.666667 117.333333a96 96 0 0 1 95.893333 91.477334L906.666667 213.333333v186.453334a32 32 0 0 1-63.850667 3.093333l-0.149333-3.093333V213.333333a32 32 0 0 0-28.928-31.850666L810.666667 181.333333h-172.16a32 32 0 0 1-3.093334-63.850666l3.093334-0.149334H810.666667z m-417.834667 0a32 32 0 0 1 3.093333 63.850667l-3.093333 0.149333H213.333333a32 32 0 0 0-31.850666 28.928L181.333333 213.333333v178.901334a32 32 0 0 1-63.850666 3.093333l-0.149334-3.093333V213.333333a96 96 0 0 1 91.477334-95.893333L213.333333 117.333333h179.498667z'],
  ...props
});

const FontcolorNormal = props => createSvgIcon({
  name: 'fontcolor',
  viewBox: '0 0 1024 1024',
  path: ['M981.333333 844.010667v146.645333c0 6.634667-5.376 12.010667-12.010666 12.010667H54.677333A11.989333 11.989333 0 0 1 42.666667 990.656v-146.645333c0-6.634667 5.376-12.010667 12.010666-12.010667h914.645334c6.634667 0 12.010667 5.376 12.010666 12.010667z', 'M931.477333 874.666667H92.522667a7.210667 7.210667 0 0 0-7.210667 7.189333v70.933333c0 3.989333 3.221333 7.210667 7.210667 7.210667h838.933333a7.210667 7.210667 0 0 0 7.189333-7.189333v-70.933334a7.210667 7.210667 0 0 0-7.189333-7.210666z', 'M319.616 755.2a9.834667 9.834667 0 0 0 9.386667-6.784l58.624-163.328h246.784l56.384 163.328a9.877333 9.877333 0 0 0 9.386666 6.784h89.962667a9.664 9.664 0 0 0 9.28-12.885333L574.592 100.458667a9.984 9.984 0 0 0-9.28-6.592h-103.296a9.664 9.664 0 0 0-9.28 6.592L224.512 742.314667a8.490667 8.490667 0 0 0-0.512 3.2 9.685333 9.685333 0 0 0 9.813333 9.685333h85.802667z m194.474667-553.557333l93.525333 295.744H415.146667l94.805333-295.744h4.138667z'],
  ...props
});

const FreezeNormal = props => createSvgIcon({
  name: 'freeze',
  viewBox: '0 0 1024 1024',
  path: ['M876.266667 85.333333A62.4 62.4 0 0 1 938.666667 147.733333v707.2A62.4 62.4 0 0 1 876.266667 917.333333H169.066667A62.4 62.4 0 0 1 106.666667 854.933333V147.733333A62.4 62.4 0 0 1 169.066667 85.333333h707.2zM469.333333 554.645333H234.666667V597.333333H192v234.666667h234.666667v-42.666667h42.666666V554.645333z m384 0H554.666667V832h298.666666V554.645333zM426.666667 725.333333v64h-64v-64h64z m-64-64v64h-64v-64h64z m-64-64v64h-64v-64h64z m170.645333-426.666666H234.666667v42.666666H192v255.978667h234.666667V405.333333h42.645333V170.666667zM554.666667 170.666667h-0.021334v298.645333H810.666667V405.333333h42.666666V170.666667H618.666667v42.666666h-64V170.666667z m256 170.666666v64h-64v-64h64z m-384 0v64h-64v-64h64z m320-64v64h-64v-64h64z m-384 0v64h-64v-64h64z m320-64v64h-64v-64h64z m-384 0v64h-64v-64h64z', 'M192 170.666667h277.333333v298.666666H192zM192 554.666667h277.333333v277.333333H192zM554.666667 170.666667h298.666666v298.666666H554.666667z'],
  pathColors: ['rgba(17, 31, 44, 0.65)', 'rgba(17, 31, 44, 0.24)'],
  ...props
});

const FreezeLightNormal = props => createSvgIcon({
  name: 'freeze-light',
  viewBox: '0 0 1024 1024',
  path: ['M554.666667 170.666667h320v320H554.666667zM170.666667 170.666667h320v320H170.666667zM170.666667 554.666667h320v320H170.666667z', 'M876.266667 106.666667A62.4 62.4 0 0 1 938.666667 169.066667v707.2A62.4 62.4 0 0 1 876.266667 938.666667H169.066667A62.4 62.4 0 0 1 106.666667 876.266667V169.066667A62.4 62.4 0 0 1 169.066667 106.666667h707.2zM874.666667 554.645333H554.666667V874.666667h320V554.645333z m-384 0H170.666667V554.666667h64v64H170.666667v256h256v-64h64V554.645333zM426.666667 746.666667v64h-64v-64h64z m-64-64v64h-64v-64h64z m-64-64v64h-64v-64h64zM874.666667 170.666667H618.666667v64h-64V170.666667h-0.021334v319.978666H810.666667V426.666667h64V170.666667zM490.645333 170.666667H234.666667v64H170.666667v255.978666h256V426.666667h63.978666V170.666667zM426.666667 362.666667v64h-64v-64h64z m384 0v64h-64v-64h64z m-448-64v64h-64v-64h64z m384 0v64h-64v-64h64z m-448-64v64h-64v-64h64z m384 0v64h-64v-64h64z'],
  pathColors: ['rgba(17, 31, 44, 0.24)', 'rgba(17, 31, 44, 0.65)'],
  ...props
});

const FuctionsNormal = props => createSvgIcon({
  name: 'fuctions',
  viewBox: '0 0 1024 1024',
  path: ['M902.826667 117.333333v121.728a10.666667 10.666667 0 0 1-10.666667 10.666667h-64a10.666667 10.666667 0 0 1-10.666667-10.666667V202.666667a10.666667 10.666667 0 0 0-10.688-10.666667H246.421333l317.141334 283.989333a10.666667 10.666667 0 0 1 3.562666 7.936l0.064 53.973334a10.666667 10.666667 0 0 1-3.52 7.936L245.930667 832h560.874666a10.666667 10.666667 0 0 0 10.666667-10.666667v-27.306666a10.666667 10.666667 0 0 1 10.666667-10.666667h64a10.666667 10.666667 0 0 1 10.666666 10.666667V906.666667a10.666667 10.666667 0 0 1-10.666666 10.666666H116.949333a10.666667 10.666667 0 0 1-10.666666-10.666666v-58.965334a10.666667 10.666667 0 0 1 3.541333-7.914666L465.92 518.976a10.666667 10.666667 0 0 0 0-15.872L109.888 184.298667a10.666667 10.666667 0 0 1-3.541333-7.936V117.333333a10.666667 10.666667 0 0 1 10.666666-10.666666H892.16a10.666667 10.666667 0 0 1 10.666667 10.666666z'],
  ...props
});

const FuctionsLightNormal = props => createSvgIcon({
  name: 'fuctions-light',
  viewBox: '0 0 1024 1024',
  path: ['M915.748571 152.555102v111.699592a10.44898 10.44898 0 0 1-10.448979 10.448979h-41.795919a10.44898 10.44898 0 0 1-10.448979-10.448979L853.033796 204.8H247.996082l336.039183 292.04898a10.44898 10.44898 0 0 1 3.594449 7.87853l0.062694 36.696817a10.44898 10.44898 0 0 1-3.615347 7.920326l-336.457143 291.73551h605.413878v-50.238694a10.44898 10.44898 0 0 1 10.44898-10.448979h41.795918a10.44898 10.44898 0 0 1 10.448979 10.448979V893.345959a10.44898 10.44898 0 0 1-10.448979 10.44898H156.525714a10.44898 10.44898 0 0 1-10.448979-10.44898V854.099592a10.44898 10.44898 0 0 1 3.552653-7.857633l361.430204-315.18302a10.44898 10.44898 0 0 0 0-15.757061L149.629388 199.742694a10.44898 10.44898 0 0 1-3.594449-7.899429V152.555102a10.44898 10.44898 0 0 1 10.448979-10.44898H905.299592a10.44898 10.44898 0 0 1 10.448979 10.44898z'],
  ...props
});

const FullScreenNormal = props => createSvgIcon({
  name: 'full-screen',
  viewBox: '0 0 1024 1024',
  path: ['M128 512a42.666667 42.666667 0 0 1 42.56 39.466667L170.666667 554.666667v216.96l247.168-247.125334a42.666667 42.666667 0 0 1 62.826666 57.621334l-2.496 2.709333L230.997333 832H469.333333a42.666667 42.666667 0 0 1 42.56 39.466667L512 874.666667a42.666667 42.666667 0 0 1-39.466667 42.56L469.333333 917.333333H128a42.666667 42.666667 0 0 1-42.56-39.466666L85.333333 874.666667V554.666667a42.666667 42.666667 0 0 1 42.666667-42.666667zM898.901333 114.197333l0.213334 0.149334a42.56 42.56 0 0 1 5.717333 4.821333l0.64 0.64c0.426667 0.426667 0.810667 0.853333 1.194667 1.301333l-1.834667-1.941333a43.178667 43.178667 0 0 1 8.213333 11.498667l0.106667 0.213333a42.346667 42.346667 0 0 1 2.432 6.314667l0.213333 0.810666a39.36 39.36 0 0 1 1.429334 8.149334l0.042666 0.810666 0.042667 1.301334L917.333333 149.333333v362.666667a42.666667 42.666667 0 0 1-85.226666 3.2L832 512V252.330667L606.165333 478.165333a42.666667 42.666667 0 0 1-62.826666-57.621333l2.496-2.709333L771.626667 192H512a42.666667 42.666667 0 0 1-42.56-39.466667L469.333333 149.333333a42.666667 42.666667 0 0 1 39.466667-42.56L512 106.666667h363.242667c0.725333 0 1.472 0.042667 2.197333 0.085333L874.666667 106.666667a43.178667 43.178667 0 0 1 18.453333 4.181333l0.341333 0.170667c1.898667 0.938667 3.712 2.005333 5.44 3.2z'],
  ...props
});

const FullscreenLineNormal = props => createSvgIcon({
  name: 'fullscreen-line',
  viewBox: '0 0 1024 1024',
  path: ['M812 482V272a60 60 0 0 0-60-60h-210a45 45 0 0 1 0-90h240a120 120 0 0 1 120 120v240a45 45 0 0 1-90 0zM212 542v210a60 60 0 0 0 60 60h210a45 45 0 0 1 0 90H242a120 120 0 0 1-120-120v-240a45 45 0 0 1 90 0z'],
  ...props
});

const IncreaseDecimalPlacesNormal = props => createSvgIcon({
  name: 'increase-decimal-places',
  viewBox: '0 0 1024 1024',
  path: ['M770.474667 718.506667a10.666667 10.666667 0 0 1 15.018666-1.365334l128.96 107.52a10.666667 10.666667 0 0 1-0.170666 16.512l-128.938667 103.530667a10.666667 10.666667 0 0 1-17.344-8.32V874.666667H149.333333a42.666667 42.666667 0 0 1-3.2-85.226667L149.333333 789.333333h618.666667v-64a10.666667 10.666667 0 0 1 1.408-5.312zM394.666667 106.666667a160 160 0 0 1 160 160v234.666666a160 160 0 0 1-320 0v-234.666666A160 160 0 0 1 394.666667 106.666667z m362.666666 0a160 160 0 0 1 160 160v234.666666a160 160 0 0 1-320 0v-234.666666A160 160 0 0 1 757.333333 106.666667z m-597.333333 448a53.333333 53.333333 0 1 1 0 106.666666 53.333333 53.333333 0 0 1 0-106.666666z m234.666667-362.666667a74.666667 74.666667 0 0 0-74.666667 74.666667v234.666666a74.666667 74.666667 0 0 0 149.333333 0v-234.666666A74.666667 74.666667 0 0 0 394.666667 192z m362.666666 0a74.666667 74.666667 0 0 0-74.666666 74.666667v234.666666a74.666667 74.666667 0 0 0 149.333333 0v-234.666666A74.666667 74.666667 0 0 0 757.333333 192z'],
  ...props
});

const IncreaseindentNormal = props => createSvgIcon({
  name: 'increaseindent',
  viewBox: '0 0 1024 1024',
  path: ['M151.136 445.184h403.68c3.936 0 7.136-4.16 7.136-9.28V370.88c0-5.12-3.2-9.28-7.136-9.28H151.136c-3.936 0-7.136 4.16-7.136 9.28v65.024c0 5.12 3.2 9.28 7.136 9.28z m-8.928 214.72c0 5.12 3.2 9.28 7.168 9.28h403.68c3.904 0 7.136-4.16 7.136-9.28V594.88c0-5.12-3.2-9.28-7.136-9.28H149.376c-3.936 0-7.168 4.16-7.168 9.28v65.024zM898.368 128H122.368c-4.704 0-8.576 4.16-8.576 9.28v65.024c0 5.12 3.84 9.28 8.608 9.28h776c4.736 0 8.608-4.16 8.608-9.28V137.28c0-5.12-3.872-9.28-8.64-9.28z m-1.12 681.6H122.4c-4.736 0-8.64 4.16-8.64 9.28v65.024c0 5.12 3.904 9.28 8.64 9.28h774.848c4.736 0 8.64-4.16 8.64-9.28V818.88c0-5.12-3.904-9.28-8.64-9.28z m-195.552-95.424l206.4-185.12a14.496 14.496 0 0 0 0-20.896l-206.4-185.248c-7.68-6.912-19.04-0.736-19.04 10.368V703.68c0 11.136 11.232 17.44 19.04 10.528z'],
  ...props
});

const ItalicNormal = props => createSvgIcon({
  name: 'italic',
  viewBox: '0 0 1024 1024',
  path: ['M714.666667 128.128H378.965333a8.917333 8.917333 0 0 0-8.832 8.96v65.877333c0 4.906667 3.968 8.96 8.832 8.96h127.232l-125.226666 599.04H265.130667a8.917333 8.917333 0 0 0-8.832 8.96v67.328c0 4.949333 3.968 8.96 8.832 8.96h323.797333a8.917333 8.917333 0 0 0 8.789333-8.96v-67.285333a8.917333 8.917333 0 0 0-8.789333-8.96h-116.48L597.76 211.882667h116.906667a8.917333 8.917333 0 0 0 8.832-8.96V137.088a8.917333 8.917333 0 0 0-8.789334-8.96z'],
  ...props
});

const JustifyNormal = props => createSvgIcon({
  name: 'justify',
  viewBox: '0 0 1024 1024',
  path: ['M129.81333333 213.344h775.04c6.848 0 12.48-4.288 12.48-9.504V137.472c0-5.216-5.632-9.472-12.48-9.472H129.81333333c-6.848 0-12.48 4.256-12.48 9.472V203.84c0 5.216 5.632 9.504 12.48 9.504zM129.81333333 672h775.04c6.848 0 12.48-4.256 12.48-9.472V596.16c0-5.216-5.632-9.504-12.48-9.504H129.81333333c-6.848 0-12.48 4.288-12.48 9.504v66.368c0 5.216 5.632 9.472 12.48 9.472z m778.816 137.6H129.58933333c-4.8 0-8.704 4.256-8.704 9.472v66.368c0 5.216 3.904 9.504 8.704 9.504h779.04c4.8 0 8.704-4.288 8.704-9.504v-66.368c0-5.216-3.904-9.472-8.704-9.472z m0-454.048H129.62133333c-4.8 0-8.704 4.256-8.704 9.472v66.368c0 5.216 3.904 9.504 8.704 9.504h779.072c4.768 0 8.672-4.288 8.672-9.504v-66.368c0-5.216-3.904-9.472-8.672-9.472z'],
  ...props
});

const LaterShortwayLineNormal = props => createSvgIcon({
  name: 'later-shortway-line',
  viewBox: '0 0 1024 1024',
  path: ['M483.15733333 64a446.293333 446.293333 0 0 0-270.506667 90.794667l-7.936 6.229333-0.341333-1.536a42.666667 42.666667 0 0 0-33.877333-30.805333l-3.157334-0.512a42.666667 42.666667 0 0 0-46.250666 35.072l-0.426667 3.157333L110.08000033 273.237333c-4.266667 43.52 51.882667 64.597333 77.226666 28.928 16.810667-23.722667 36.437333-45.226667 58.453334-64.341333a362.666667 362.666667 0 1 1-61.269334 479.914667 42.666667 42.666667 0 0 0-70.229333 48.554666A448 448 0 1 0 483.15733333 64zM490.66666633 277.333333a42.666667 42.666667 0 0 1 42.581334 39.424l0.085333 3.242667v170.666667L686.93333333 605.866667a42.666667 42.666667 0 0 1 10.496 56.832L695.46666633 665.6a42.666667 42.666667 0 0 1-56.832 10.496L635.73333333 674.133333l-170.666667-128a42.666667 42.666667 0 0 1-16.896-30.464L448.00000033 512V320a42.666667 42.666667 0 0 1 42.666666-42.666667z'],
  ...props
});

const LeftalignNormal = props => createSvgIcon({
  name: 'leftalign',
  viewBox: '0 0 1024 1024',
  path: ['M97.78133333 213.344H648.85333333c4.896 0 8.896-4.288 8.896-9.504V137.472c0-5.216-4-9.472-8.896-9.472H97.81333333c-4.896 0-8.896 4.256-8.896 9.472V203.84c0 5.216 4 9.504 8.896 9.504z m0 458.656H648.85333333c4.896 0 8.896-4.256 8.896-9.472V596.16c0-5.216-4-9.504-8.896-9.504H97.81333333c-4.896 0-8.896 4.288-8.896 9.504v66.368c0 5.216 4 9.472 8.896 9.472z m778.88 137.6H97.55733333c-4.8 0-8.704 4.256-8.704 9.472v66.368c0 5.216 3.904 9.504 8.704 9.504h779.04c4.8 0 8.704-4.288 8.704-9.504v-66.368c0-5.216-3.904-9.472-8.704-9.472z m0-454.048H97.58933333c-4.8 0-8.704 4.256-8.704 9.472v66.368c0 5.216 3.904 9.504 8.704 9.504h779.072c4.768 0 8.672-4.288 8.672-9.504v-66.368c0-5.216-3.904-9.472-8.672-9.472z'],
  ...props
});

const LineheightNormal = props => createSvgIcon({
  name: 'lineheight',
  viewBox: '0 0 1024 1024',
  path: ['M796.224 87.04l2.176 1.6 159.136 153.248c5.92 5.76 0.512 14.112-9.056 14.112-46.848-10.976-85.664-18.368-116.48-22.176l-0.064 555.072c31.264-3.52 70.08-10.528 116.544-20.896 9.568 0 14.976 8.32 9.056 14.112L798.4 935.36c-4.544 4.416-13.312 4.416-17.984 0l-159.232-153.248c-5.952-5.696-0.64-14.112 8.896-14.112 46.592 10.368 85.44 17.344 116.672 20.896V233.6c-31.648 3.776-70.528 11.232-116.672 22.4-8.672 0-13.856-6.976-10.24-12.48l1.344-1.632 159.232-153.248a14.08 14.08 0 0 1 15.808-1.6zM546.72 809.6c4.384 0 7.936 4.256 7.936 9.472v66.368c0 5.216-3.552 9.504-7.936 9.504H71.936c-4.352 0-7.936-4.288-7.936-9.504v-66.368c0-5.216 3.584-9.472 7.936-9.472z m0.032-224c4.352 0 7.904 4.256 7.904 9.472v66.368c0 5.216-3.552 9.504-7.904 9.504H71.904c-4.352 0-7.904-4.288-7.904-9.504v-66.368c0-5.216 3.552-9.472 7.904-9.472z m0-233.6c4.352 0 7.904 4.256 7.904 9.472v66.368c0 5.216-3.552 9.504-7.904 9.504H71.904c-4.352 0-7.904-4.288-7.904-9.504v-66.368c0-5.216 3.552-9.472 7.904-9.472z m-0.064-224c4.384 0 8 4.256 8 9.472V203.84c0 5.216-3.616 9.504-8 9.504H72C67.584 213.344 64 209.056 64 203.84V137.472C64 132.256 67.584 128 71.968 128z'],
  ...props
});

const LockNormal = props => createSvgIcon({
  name: 'lock',
  viewBox: '0 0 1024 1024',
  path: ['M512 64c153.173333 0 277.333333 124.16 277.333333 277.333333v63.978667l8.789334 0.021333c64.192 0 116.544 45.397333 119.104 102.272L917.333333 512v341.333333c0 58.901333-53.376 106.666667-119.210666 106.666667H225.877333C160.042667 960 106.666667 912.234667 106.666667 853.333333V512c0-58.901333 53.376-106.666667 119.210666-106.666667l8.789334-0.021333V341.333333c0-150.976 120.64-273.770667 270.784-277.248z m296.213333 426.666667H216.469333c-13.141333 0-23.808 9.557333-23.808 21.333333v341.333333c0 11.776 10.666667 21.333333 23.808 21.333334h591.744C821.333333 874.666667 832 865.109333 832 853.333333V512c0-11.776-10.666667-21.333333-23.786667-21.333333zM512 149.333333c-106.026667 0-192 90.368-192 201.834667V405.333333h384v-54.165333c0-109.482667-82.922667-198.613333-186.346667-201.749333z', 'M469.333333 576m42.666667 0l0 0q42.666667 0 42.666667 42.666667l0 106.666666q0 42.666667-42.666667 42.666667l0 0q-42.666667 0-42.666667-42.666667l0-106.666666q0-42.666667 42.666667-42.666667Z'],
  ...props
});

const LockFillNormal = props => createSvgIcon({
  name: 'lock-fill',
  viewBox: '0 0 1024 1024',
  path: ['M853.316619 426.670589h-63.996546V298.676473c0-153.159262-124.160811-277.320073-277.320073-277.320073S234.679927 145.517211 234.679927 298.676473V426.670589h-63.996546c-23.562649 0-42.664705 19.10308-42.664706 42.664706v490.643599c0 23.561625 19.102057 42.664705 42.664706 42.664706h682.634262c23.562649 0 42.664705-19.10308 42.664705-42.664706V469.335295c-0.001023-23.561625-19.10308-42.664705-42.665729-42.664706zM533.331841 721.682603v88.969311h-42.664705v-88.969311c-24.855084-8.786107-42.664705-32.493042-42.664706-60.356646 0-35.341926 28.652574-63.996546 63.996547-63.996546s63.996546 28.65462 63.996546 63.996546c0.001023 27.863604-17.807574 51.570539-42.663682 60.356646zM703.990662 426.670589H320.009338V298.676473c0-106.037035 85.956697-191.990662 191.990662-191.990662s191.990662 85.954651 191.990662 191.990662V426.670589z'],
  ...props
});

const LockLightNormal = props => createSvgIcon({
  name: 'lock-light',
  viewBox: '0 0 1024 1024',
  path: ['M512 74.666667c145.514667 0 263.210667 121.728 266.581333 272.490666l0.085334 6.677334v19.498666h14.976a138.666667 138.666667 0 0 1 138.581333 133.696l0.085333 4.970667v309.504a138.666667 138.666667 0 0 1-133.696 138.581333l-4.970666 0.085334H228.672a138.666667 138.666667 0 0 1-138.581333-133.696l-0.085334-4.970667V512a138.666667 138.666667 0 0 1 133.696-138.581333l4.970667-0.085334h16.64l0.021333-19.498666C245.333333 200.021333 364.352 74.666667 512 74.666667z m281.642667 362.666666H228.672a74.666667 74.666667 0 0 0-74.56 70.570667L154.026667 512v310.869333a74.666667 74.666667 0 0 0 70.570666 74.56l4.096 0.106667h564.970667a74.666667 74.666667 0 0 0 74.56-70.570667l0.106667-4.096V512a74.666667 74.666667 0 0 0-74.666667-74.666667zM501.333333 576a32 32 0 0 1 32 32v128a32 32 0 0 1-64 0v-128a32 32 0 0 1 32-32zM512 138.666667c-109.653333 0-199.573333 92.736-202.581333 209.109333l-0.085334 6.058667v19.498666h405.333334v-19.498666C714.666667 234.645333 623.552 138.666667 512 138.666667z'],
  ...props
});

const MergeNormal = props => createSvgIcon({
  name: 'merge',
  viewBox: '0 0 1024 1024',
  path: ['M853.333333 106.666667a64 64 0 0 1 63.893334 60.245333L917.333333 170.666667v682.666666a64 64 0 0 1-60.245333 63.893334L853.333333 917.333333H608.853333a53.333333 53.333333 0 0 1-53.226666-49.834666l-0.106667-3.498667v-174.165333a10.666667 10.666667 0 0 1 10.666667-10.666667h64a10.666667 10.666667 0 0 1 10.496 8.746667l0.170666 1.92L640.832 832H832V192h-191.168v152.554667a10.666667 10.666667 0 0 1-8.746667 10.496l-1.92 0.170666h-64a10.666667 10.666667 0 0 1-10.666666-10.666666V160a53.333333 53.333333 0 0 1 49.834666-53.226667L608.853333 106.666667H853.333333zM401.834667 106.666667a64 64 0 0 1 63.893333 60.245333l0.106667 4.352v178.368a10.666667 10.666667 0 0 1-10.666667 10.666667h-0.106667l-64-0.597334a10.666667 10.666667 0 0 1-10.581333-10.666666L380.266667 192H192v640h186.709333v-142.933333a10.666667 10.666667 0 0 1 10.666667-10.666667h64a10.666667 10.666667 0 0 1 10.666667 10.666667V853.333333a64 64 0 0 1-60.245334 63.893334l-3.754666 0.106666H170.666667a64 64 0 0 1-63.893334-60.245333L106.666667 853.333333V170.666667a64 64 0 0 1 60.245333-63.893334L170.666667 106.666667h231.168zM365.013333 385.493333l129.344 122.922667a10.666667 10.666667 0 0 1 0.384 15.082667l-0.384 0.384L364.8 647.04a10.666667 10.666667 0 0 1-17.834667-9.664l14.848-80.554667H224a10.666667 10.666667 0 0 1-10.666667-10.666666v-63.146667a10.666667 10.666667 0 0 1 10.666667-10.666667h137.834667l-14.634667-77.12a10.666667 10.666667 0 0 1 17.834667-9.728z m291.754667-2.944l2.026667 0.192a10.666667 10.666667 0 0 1 8.490666 12.458667l-14.634666 77.12h137.813333a10.666667 10.666667 0 0 1 10.666667 10.666667v63.146666a10.666667 10.666667 0 0 1-10.666667 10.666667h-137.813333l14.848 80.554667a10.666667 10.666667 0 0 1-17.834667 9.664l-129.557333-123.136-0.384-0.384a10.666667 10.666667 0 0 1 0.384-15.082667l129.344-122.944a10.666667 10.666667 0 0 1 9.344-2.730667z'],
  ...props
});

const MergeCellsNormal = props => createSvgIcon({
  name: 'merge-cells',
  viewBox: '0 0 1024 1024',
  path: ['M864 106.666667l3.498667 0.106666A53.333333 53.333333 0 0 1 917.333333 160v184.554667a10.666667 10.666667 0 0 1-10.666666 10.666666h-64l-1.92-0.170666a10.666667 10.666667 0 0 1-8.746667-10.496V192h-191.146667v640H832v-142.165333l0.170667-1.92a10.666667 10.666667 0 0 1 10.496-8.746667h64a10.666667 10.666667 0 0 1 10.666666 10.666667V864l-0.106666 3.498667A53.333333 53.333333 0 0 1 864 917.333333H619.52l-3.754667-0.106666A64 64 0 0 1 555.52 853.333333V170.666667l0.106667-3.754667A64 64 0 0 1 619.52 106.666667H864zM401.834667 106.666667l3.754666 0.106666A64 64 0 0 1 465.834667 170.666667v682.666666l-0.128 3.754667A64 64 0 0 1 401.834667 917.333333H172.437333l-3.754666-0.106666A64 64 0 0 1 108.437333 853.333333v-164.266666a10.666667 10.666667 0 0 1 10.666667-10.666667h64a10.666667 10.666667 0 0 1 10.666667 10.666667V832h186.730666V192H192.213333L192 349.056a10.666667 10.666667 0 0 1-10.581333 10.645333l-64 0.597334a10.688 10.688 0 0 1-10.773334-10.666667V171.306667l0.106667-4.373334A64 64 0 0 1 170.666667 106.666667h231.168z m419.2 290.666666a10.666667 10.666667 0 0 1 7.146666 2.752l125.226667 113.002667a10.666667 10.666667 0 0 1-0.192 16l-125.226667 108.245333a10.666667 10.666667 0 0 1-17.621333-8.064v-68.864H693.333333a10.666667 10.666667 0 0 1-10.666666-10.666666v-63.146667a10.666667 10.666667 0 0 1 10.666666-10.666667h117.034667v-67.925333a10.666667 10.666667 0 0 1 10.666667-10.666667z m-607.786667 3.52a10.666667 10.666667 0 0 1 2.752 7.146667v68.565333h108.736a10.666667 10.666667 0 0 1 10.666667 10.666667v62.698667a10.666667 10.666667 0 0 1-10.666667 10.666666h-108.736v68.672a10.666667 10.666667 0 0 1-17.642667 8.064l-125.226666-108.245333a10.666667 10.666667 0 0 1-0.170667-16l125.226667-113.002667a10.666667 10.666667 0 0 1 15.061333 0.768z'],
  ...props
});

const NoteNormal = props => createSvgIcon({
  name: 'note',
  viewBox: '0 0 1024 1024',
  path: ['M917.333333 128a42.666667 42.666667 0 0 1 42.56 39.466667L960 170.666667v575.701333a128 128 0 0 1-123.2 127.914667l-4.8 0.085333H615.829333l-73.450666 73.173333a42.666667 42.666667 0 0 1-57.514667 2.496l-2.709333-2.474666-73.493334-73.194667H192a128 128 0 0 1-127.914667-123.2L64 746.368v-445.013333A128 128 0 0 1 187.2 173.44L192 173.354667h192.64a128 128 0 0 1 127.914667 123.2l0.085333 4.8v339.882666a42.666667 42.666667 0 0 1-85.226667 3.2l-0.106666-3.2V301.354667a42.666667 42.666667 0 0 0-39.466667-42.56l-3.2-0.106667H192a42.666667 42.666667 0 0 0-42.56 39.466667l-0.106667 3.2v445.013333a42.666667 42.666667 0 0 0 39.466667 42.56l3.2 0.106667h234.304a42.666667 42.666667 0 0 1 27.349333 9.92l2.773334 2.517333 55.829333 55.637333 55.850667-55.637333a42.666667 42.666667 0 0 1 26.368-12.266667l3.733333-0.170666H832a42.666667 42.666667 0 0 0 42.56-39.466667l0.106667-3.2V170.666667a42.666667 42.666667 0 0 1 42.666666-42.666667z m-136.533333-46.933333A42.666667 42.666667 0 0 1 789.333333 106.666667v448a42.666667 42.666667 0 0 1-17.066666 34.133333l-85.333334 64A42.666667 42.666667 0 0 1 618.666667 618.666667V170.666667a42.666667 42.666667 0 0 1 17.066666-34.133334l85.333334-64a42.666667 42.666667 0 0 1 59.733333 8.533334z'],
  ...props
});

const NumberedlistNormal = props => createSvgIcon({
  name: 'numberedlist',
  viewBox: '0 0 1024 1024',
  path: ['M148.032 704.064l9.024 0.128 7.616-0.032a110.08 110.08 0 0 1 48.96 13.12l7.2 4.352c17.184 12.128 26.816 30.4 25.92 48.768 0.448 14.048-5.376 27.68-16 38.016l-3.328 2.944 0.704 0.48 8.64 7.456c12.16 11.776 18.592 27.136 17.76 42.528 0.256 20.032-8.736 39.328-25.28 53.984-19.328 16.032-45.824 24.256-71.424 22.656-31.52 1.728-61.856-10.784-80.384-33.888a84.672 84.672 0 0 1-13.344-44.992l-0.032-5.696 0.224-1.376a4.32 4.32 0 0 1 4.096-2.976h60.192a4.32 4.32 0 0 1 4.224 4.448l-0.192 7.616a31.936 31.936 0 0 0 3.712 16c4 6.784 12.8 10.944 23.296 10.272a29.984 29.984 0 0 0 14.944-3.328 20.48 20.48 0 0 0 7.264-17.728v-3.2c-0.64-6.304-5.568-12.064-13.376-14.816a105.44 105.44 0 0 0-31.712-6.944l-5.888-0.352a4.32 4.32 0 0 1-4.064-4.32v-40.096a4.32 4.32 0 0 1 4.48-4.192l6.528 0.16c10.048 0.32 20.064-0.96 28.48-3.328a15.072 15.072 0 0 0 9.856-17.12l-0.224-3.36a16.032 16.032 0 0 0-4.96-8.864c-3.936-3.392-9.568-5.248-16.576-5.024-6.432-0.384-12.64 1.92-16 5.504a25.6 25.6 0 0 0-5.76 18.464l0.512 5.664a4.32 4.32 0 0 1-4.32 4.768H69.44a4.32 4.32 0 0 1-4.16-4.512l0.224-5.44c0.416-11.072 2.752-22.048 7.328-33.344 5.056-9.792 12.48-18.56 21.824-25.792 7.584-5.792 16.48-10.24 26.72-13.216 11.584-2.752 23.68-3.84 35.68-3.264z m19.264-298.72a110.752 110.752 0 0 1 55.104 16.288l6.72 4.576c18.016 14.56 27.776 35.008 26.816 55.552 0.352 17.28-6.208 34.112-18.976 48.096a168.896 168.896 0 0 1-37.92 28.224l-19.52 11.712-15.552 9.792h87.648c2.368 0 4.32 1.952 4.32 4.352v46.688c0 2.4-1.92 4.32-4.32 4.32h-183.36A4.32 4.32 0 0 1 64 630.56l0.096-5.344c0.224-15.616 3.936-28.576 12.416-45.12 8.48-16.48 33.984-35.008 47.168-43.04l8.096-4.576c14.976-8.48 29.152-17.92 42.176-28a31.232 31.232 0 0 0 12.032-23.552 20.576 20.576 0 0 0-5.568-14.944c-4.16-4.032-10.4-6.08-19.776-6.08-10.432 0-18.976 4.352-22.496 10.304-3.2 6.944-4.16 11.968-4.128 19.392l0.032 5.28-0.224 1.408a4.32 4.32 0 0 1-4.096 2.944H71.264a4.32 4.32 0 0 1-4.32-4.288l-0.032-5.248a97.216 97.216 0 0 1 12.608-48c15.648-25.12 47.296-36.256 80.928-36.256z m35.712-298.688c2.368 0 4.32 1.92 4.32 4.352v217.344c0 2.4-1.92 4.32-4.32 4.32H137.472a4.32 4.32 0 0 1-4.32-4.32V188.096H79.008l-1.376-0.224a4.32 4.32 0 0 1-2.976-4.128v-39.04a4.32 4.32 0 0 1 4.608-4.064l6.816 0.416c10.272 0.64 20.64 0.64 29.632 0.16 7.104-1.248 13.568-4.288 18.432-8.608 3.392-3.104 5.28-9.44 5.28-14.272v-7.36c0-2.368 1.92-4.32 4.32-4.32z', 'M951.456 128H328.544c-4.704 0-8.544 4.256-8.544 9.472V203.84c0 5.216 3.84 9.504 8.544 9.504h622.912c4.704 0 8.544-4.288 8.544-9.504V137.472c0-5.216-3.84-9.472-8.544-9.472zM951.456 483.552H328.544c-4.704 0-8.544 4.256-8.544 9.472v66.368c0 5.216 3.84 9.504 8.544 9.504h622.912c4.704 0 8.544-4.288 8.544-9.504v-66.368c0-5.216-3.84-9.472-8.544-9.472zM951.456 809.6H328.544c-4.704 0-8.544 4.256-8.544 9.472v66.368c0 5.216 3.84 9.504 8.544 9.504h622.912c4.704 0 8.544-4.288 8.544-9.504v-66.368c0-5.216-3.84-9.472-8.544-9.472z'],
  ...props
});

const OverflowNormal = props => createSvgIcon({
  name: 'overflow',
  viewBox: '0 0 1024 1024',
  path: ['M544 640a10.666667 10.666667 0 0 1 10.666667 10.666667v256a10.666667 10.666667 0 0 1-10.666667 10.666666h-64a10.666667 10.666667 0 0 1-10.666667-10.666666v-256a10.666667 10.666667 0 0 1 10.666667-10.666667h64zM181.333333 106.666667a10.666667 10.666667 0 0 1 10.666667 10.666666v784.384a10.666667 10.666667 0 0 1-10.666667 10.666667h-64a10.666667 10.666667 0 0 1-10.666666-10.666667V117.333333a10.666667 10.666667 0 0 1 10.666666-10.666666h64z m603.349334 293.290666a10.666667 10.666667 0 0 1 15.018666-1.365333l128.96 107.52a10.666667 10.666667 0 0 1-0.170666 16.512l-128.938667 103.530667a10.666667 10.666667 0 0 1-17.344-8.32l-0.021333-62.869334H265.962667a10.666667 10.666667 0 0 1-10.666667-10.666666v-64a10.666667 10.666667 0 0 1 10.666667-10.666667h516.224l0.021333-62.848a10.666667 10.666667 0 0 1 1.408-5.312zM544 106.666667a10.666667 10.666667 0 0 1 10.666667 10.666666v256a10.666667 10.666667 0 0 1-10.666667 10.666667h-64a10.666667 10.666667 0 0 1-10.666667-10.666667v-256a10.666667 10.666667 0 0 1 10.666667-10.666666h64z'],
  ...props
});

const PackupLineNormal = props => createSvgIcon({
  name: 'packup-line',
  viewBox: '0 0 1024 1024',
  path: ['M635.264 146.965333v188.053334a53.738667 53.738667 0 0 0 53.717333 53.717333h188.053334a40.298667 40.298667 0 0 1 0 80.597333H662.122667A107.456 107.456 0 0 1 554.666667 361.877333V146.965333a40.298667 40.298667 0 0 1 80.597333 0zM388.736 877.013333v-188.053333a53.738667 53.738667 0 0 0-53.717333-53.717333H146.965333a40.298667 40.298667 0 0 1 0-80.597334h214.912A107.456 107.456 0 0 1 469.333333 662.122667v214.912a40.298667 40.298667 0 0 1-80.597333 0z'],
  ...props
});

const PaintingformatNormal = props => createSvgIcon({
  name: 'paintingformat',
  viewBox: '0 0 1024 1024',
  path: ['M574.72 133.44c24.533333-25.408 64.192-26.901333 88.576-3.349333l294.528 284.437333c24.405333 23.552 24.298667 63.253333-0.213333 88.661333L637.888 832h219.861333c21.12 0 38.229333 19.093333 38.229334 42.666667 0 21.888-14.762667 39.914667-33.770667 42.389333l-4.48 0.277333H358.250667c-5.354667 0-10.453333-1.237333-15.104-3.456a10.581333 10.581333 0 0 1-6.208-2.901333L114.218667 697.152c-24.405333-23.552-24.277333-63.253333 0.234666-88.64z m-63.082667 191.253333L183.296 660.053333 361.344 832h130.709333l25.728-0.896 252.416-256.725333-258.56-249.685334z'],
  ...props
});

const PcFolderUploadNormal = props => createSvgIcon({
  name: 'pc-folder-upload',
  viewBox: '0 0 1024 1024',
  path: ['M358.144 85.333333a128 128 0 0 1 101.546667 50.048l4.992 6.954667L512 213.333333h256a170.666667 170.666667 0 0 1 170.453333 162.133334L938.666667 384v384a170.666667 170.666667 0 0 1-162.133334 170.453333L768 938.666667H256a170.666667 170.666667 0 0 1-170.453333-162.133334L85.333333 768V256a170.666667 170.666667 0 0 1 162.133334-170.453333L256 85.333333h102.144z m0 85.333334H256a85.333333 85.333333 0 0 0-85.12 78.933333L170.666667 256v512a85.333333 85.333333 0 0 0 78.933333 85.12L256 853.333333h512a85.333333 85.333333 0 0 0 85.12-78.933333L853.333333 768V384a85.333333 85.333333 0 0 0-78.933333-85.12L768 298.666667h-301.653333L393.642667 189.653333a42.666667 42.666667 0 0 0-30.165334-18.645333L358.144 170.666667z m127.189333 222.677333l-0.512 0.426667 0.512-0.426667 0.256-0.213333-0.085333 0.085333 1.408-1.066667c0.938667-0.682667 1.877333-1.28 2.858667-1.92l1.578666-0.896c0.853333-0.469333 1.706667-0.938667 2.56-1.322666l2.261334-0.981334a42.154667 42.154667 0 0 1 2.56-0.896l0.853333-0.298666 1.28-0.384a42.368 42.368 0 0 1 1.365333-0.341334l1.109334-0.213333a42.794667 42.794667 0 0 1 3.669333-0.597333l0.981333-0.128 1.493334-0.085334 1.706666-0.085333h1.621334l1.706666 0.085333 1.493334 0.085334 0.981333 0.128 1.109333 0.128a42.794667 42.794667 0 0 1 3.669334 0.682666l1.365333 0.341334 1.28 0.426666a42.538667 42.538667 0 0 1 3.413333 1.152l2.218667 0.981334a43.434667 43.434667 0 0 1 4.181333 2.218666l0.64 0.426667 2.218667 1.493333 1.066667 0.810667 0.512 0.426667 3.498666 3.114666 128 128a42.666667 42.666667 0 0 1-56.32 63.872l-4.010666-3.541333L554.666667 529.706667V725.333333a42.666667 42.666667 0 0 1-85.034667 4.992L469.333333 725.333333v-195.669333l-55.168 55.168a42.666667 42.666667 0 0 1-63.872-56.32l3.541334-4.010667 128-128 2.474666-2.304 0.512-0.426666-0.469333 0.426666 0.981333-0.853333z'],
  ...props
});

const PhotoNormal = props => createSvgIcon({
  name: 'photo',
  viewBox: '0 0 1024 1024',
  path: ['M832 149.333333a128 128 0 0 1 128 128v469.333334a128 128 0 0 1-128 128H192a128 128 0 0 1-128-128V277.333333a128 128 0 0 1 128-128h640z m0 85.333334H192a42.666667 42.666667 0 0 0-42.56 39.466666L149.333333 277.333333v469.333334a42.666667 42.666667 0 0 0 39.466667 42.56L192 789.333333h640a42.666667 42.666667 0 0 0 42.56-39.466666L874.666667 746.666667V277.333333a42.666667 42.666667 0 0 0-39.466667-42.56L832 234.666667zM288 373.333333m-74.666667 0a74.666667 74.666667 0 1 0 149.333334 0 74.666667 74.666667 0 1 0-149.333334 0ZM583.061333 471.232a170.666667 170.666667 0 0 1 230.485334 11.989333l4.053333 4.288 132.842667 145.002667-62.933334 57.642667-132.821333-145.002667a85.333333 85.333333 0 0 0-113.578667-11.008l-3.690666 2.858667-396.906667 327.893333-54.357333-65.792 396.906666-327.893333z'],
  ...props
});

const PictureNormal = props => createSvgIcon({
  name: 'picture',
  viewBox: '0 0 1024 1024',
  path: ['M832 149.333333a128 128 0 0 1 128 128v469.333334a128 128 0 0 1-128 128H192a128 128 0 0 1-128-128V277.333333a128 128 0 0 1 128-128h640z m0 85.333334H192a42.666667 42.666667 0 0 0-42.56 39.466666L149.333333 277.333333v469.333334a42.666667 42.666667 0 0 0 39.466667 42.56L192 789.333333h5.973333l385.088-318.101333a170.666667 170.666667 0 0 1 230.485334 11.989333l4.053333 4.288L874.666667 549.781333V277.333333a42.666667 42.666667 0 0 0-39.466667-42.56L832 234.666667z m-190.890667 299.477333l-3.690666 2.858667L331.946667 789.333333H832a42.666667 42.666667 0 0 0 42.56-39.466666L874.666667 746.666667v-70.528l-119.978667-130.986667a85.333333 85.333333 0 0 0-113.578667-11.008zM288 298.666667a74.666667 74.666667 0 1 1 0 149.333333 74.666667 74.666667 0 0 1 0-149.333333z'],
  ...props
});

const RedoNormal = props => createSvgIcon({
  name: 'redo',
  viewBox: '0 0 1024 1024',
  path: ['M445.610667 260.266667c-73.685333 0-143.786667 24.192-200.874667 68.010666C165.013333 389.461333 117.333333 483.626667 117.333333 585.6c0 177.536 143.424 321.706667 321.493334 325.269333l6.784 0.064h164.373333a10.666667 10.666667 0 0 0 10.666667-10.666666v-64a10.666667 10.666667 0 0 0-10.666667-10.666667h-164.373333C311.338667 825.6 202.666667 718.058667 202.666667 585.6c0-75.093333 35.093333-144.405333 94.037333-189.653333a243.370667 243.370667 0 0 1 140.714667-50.218667l8.192-0.128h329.173333l-90.773333 90.218667a12.010667 12.010667 0 0 0-1.450667 15.274666l1.365333 1.664 42.410667 42.922667h0.042667l1.642666 1.408a12.010667 12.010667 0 0 0 13.653334 0.042667l1.664-1.386667 163.498666-162.496a42.304 42.304 0 0 0 2.56-57.216l-2.496-2.709333-163.52-163.157334h-0.021333l-1.664-1.408a12.010667 12.010667 0 0 0-13.653333 0.064l-1.664 1.386667-42.496 42.837333a12.010667 12.010667 0 0 0-1.344 15.296l1.386666 1.642667 90.496 90.282667H445.610667z'],
  ...props
});

const ReducefontsizeNormal = props => createSvgIcon({
  name: 'reducefontsize',
  viewBox: '0 0 1024 1024',
  path: ['M477.546667 128c4.138667 0 7.893333 2.688 9.301333 6.592l260.224 736.064a9.664 9.664 0 0 1-9.28 12.864h-77.973333a9.877333 9.877333 0 0 1-9.386667-6.784l-81.194667-214.4H280.981333L208.384 876.245333a9.834667 9.834667 0 0 1-9.386667 6.784H116.437333A9.685333 9.685333 0 0 1 106.666667 873.344c0-1.109333 0.106667-2.197333 0.512-3.2L364.970667 134.613333A9.664 9.664 0 0 1 374.250667 128z m-42.624 107.776h-12.693334l-114.730666 341.824h236.416l-108.992-341.824zM922.069333 234.666667c20.949333 0 37.930667 19.093333 37.930667 42.666666 0 22.485333-15.466667 40.917333-35.093333 42.56l-2.837334 0.106667H656.597333C635.648 320 618.666667 300.906667 618.666667 277.333333c0-22.485333 15.466667-40.917333 35.093333-42.56l2.837333-0.106666h265.472z'],
  ...props
});

const ReportFillNormal = props => createSvgIcon({
  name: 'report-fill',
  viewBox: '0 0 1024 1024',
  path: ['M512 64c247.424 0 448 200.576 448 448s-200.576 448-448 448S64 759.424 64 512 264.576 64 512 64z m0 576a42.666667 42.666667 0 1 0 0 85.333333 42.666667 42.666667 0 0 0 0-85.333333z m6.677333-341.333333h-13.354666a42.666667 42.666667 0 0 0-42.517334 46.464l20.16 225.642666a29.162667 29.162667 0 0 0 58.069334 0l20.16-225.642666A42.666667 42.666667 0 0 0 518.677333 298.666667z'],
  ...props
});

const RightThickNormal = props => createSvgIcon({
  name: 'right-thick',
  viewBox: '0 0 1024 1024',
  path: ['M410.219919 599.590917l411.274947-358.399693c21.366633-21.36561 56.007595-21.36561 77.374229 0 21.36561 21.366633 21.36561 56.007595 0 77.374229l-464.244347 464.243323c-10.683317 10.683317-24.685215 16.024975-38.687114 16.024975-14.001899 0-28.003797-5.341658-38.687114-16.024975L125.129882 550.687114c-21.366633-21.36561-21.366633-56.007595 0-77.374228 21.366633-21.36561 56.007595-21.36561 77.374228 0l178.040952 127.684054a23.937179 23.937179 0 0 0 29.674857-1.406023z'],
  ...props
});

const RightalignNormal = props => createSvgIcon({
  name: 'rightalign',
  viewBox: '0 0 1024 1024',
  path: ['M926.21866667 213.344H375.14666667c-4.896 0-8.896-4.288-8.896-9.504V137.472c0-5.216 4-9.472 8.896-9.472H926.18666667c4.896 0 8.896 4.256 8.896 9.472V203.84c0 5.216-4 9.504-8.896 9.504z m0 458.656H375.14666667c-4.896 0-8.896-4.256-8.896-9.472V596.16c0-5.216 4-9.504 8.896-9.504H926.18666667c4.896 0 8.896 4.288 8.896 9.504v66.368c0 5.216-4 9.472-8.896 9.472z m-778.88 137.6h779.072c4.8 0 8.704 4.256 8.704 9.472v66.368c0 5.216-3.904 9.504-8.704 9.504H147.37066667c-4.8 0-8.704-4.288-8.704-9.504v-66.368c0-5.216 3.904-9.472 8.704-9.472z m0-454.048h779.072c4.8 0 8.704 4.256 8.704 9.472v66.368c0 5.216-3.904 9.504-8.704 9.504H147.33866667c-4.768 0-8.672-4.288-8.672-9.504v-66.368c0-5.216 3.904-9.472 8.672-9.472z'],
  ...props
});

const RoundcloseThickNormal = props => createSvgIcon({
  name: 'roundclose-thick',
  viewBox: '0 0 1024 1024',
  path: ['M512 64c247.424 0 448 200.576 448 448s-200.576 448-448 448S64 759.424 64 512 264.576 64 512 64z m-105.6 282.069333a42.666667 42.666667 0 1 0-60.330667 60.330667L451.626667 512l-105.6 105.6a42.666667 42.666667 0 1 0 60.373333 60.330667l105.557333-105.6 105.6 105.6a42.666667 42.666667 0 1 0 60.373334-60.330667L572.330667 512l105.6-105.6a42.666667 42.666667 0 1 0-60.373334-60.330667L512 451.669333z'],
  ...props
});

const SearchNormal = props => createSvgIcon({
  name: 'search',
  viewBox: '0 0 1024 1024',
  path: ['M640 320c129.6 0 234.666667 105.066667 234.666667 234.666667 0 63.317333-25.088 120.789333-65.856 163.008l102.570666 125.994666a42.858667 42.858667 0 0 1-3.84 58.026667l-2.304 2.005333-2.432 1.834667a43.242667 43.242667 0 0 1-57.728-8.149333l-105.834666-130.005334C709.098667 781.44 675.456 789.333333 640 789.333333c-129.6 0-234.666667-105.066667-234.666667-234.666666s105.066667-234.666667 234.666667-234.666667z m-206.101333 487.189333a10.666667 10.666667 0 0 1 10.666666 10.666667v64a10.666667 10.666667 0 0 1-10.666666 10.666667H117.610667a10.666667 10.666667 0 0 1-10.666667-10.666667v-64a10.666667 10.666667 0 0 1 10.666667-10.666667h316.288zM640 405.333333a149.333333 149.333333 0 1 0 0 298.666667 149.333333 149.333333 0 0 0 0-298.666667z m-308.864 168.362667a10.666667 10.666667 0 0 1 10.666667 10.666667v64a10.666667 10.666667 0 0 1-10.666667 10.666666H117.333333a10.666667 10.666667 0 0 1-10.666666-10.666666v-64a10.666667 10.666667 0 0 1 10.666666-10.666667h213.802667zM330.666667 340.181333a10.666667 10.666667 0 0 1 10.666666 10.666667v64a10.666667 10.666667 0 0 1-10.666666 10.666667h-213.333334a10.666667 10.666667 0 0 1-10.666666-10.666667v-64a10.666667 10.666667 0 0 1 10.666666-10.666667h213.333334zM907.605333 128c4.842667 0 8.810667 4.266667 8.810667 9.472v66.389333c0 5.205333-3.968 9.472-8.810667 9.472H115.477333C110.634667 213.333333 106.666667 209.066667 106.666667 203.861333V137.472C106.666667 132.266667 110.634667 128 115.456 128h792.149333z'],
  ...props
});

const ShareNewNormal = props => createSvgIcon({
  name: 'share-new',
  viewBox: '0 0 1024 1024',
  path: ['M747.353262 553.918715c0-23.562649 19.102057-42.664705 42.664706-42.664705 23.562649 0 42.664705 19.102057 42.664705 42.664705v261.676791c0 80.114642-64.945151 145.059793-145.059793 145.059794H209.778794c-80.114642 0-145.059793-64.945151-145.059793-145.059794V337.751421c0-80.114642 64.945151-145.059793 145.059793-145.059794h261.676791c23.562649 0 42.664705 19.102057 42.664705 42.664705s-19.102057 42.664705-42.664705 42.664706H209.778794c-32.988322 0-59.730383 26.742061-59.730383 59.730383v477.844085c0 32.988322 26.742061 59.730383 59.730383 59.730383h477.844086c32.988322 0 59.730383-26.742061 59.730382-59.730383V553.918715z m59.123563-403.891793H662.023852c-23.562649 0-42.664705-19.102057-42.664706-42.664706s19.102057-42.664705 42.664706-42.664705h255.987209c23.562649 0 42.664705 19.102057 42.664705 42.664705v255.987209c0 23.562649-19.102057 42.664705-42.664705 42.664705-23.562649 0-42.664705-19.102057-42.664706-42.664705v-161.51865L585.325006 491.853148c-16.661472 16.661472-43.675732 16.661472-60.337204 0-16.661472-16.661472-16.661472-43.675732 0-60.337204l281.489023-281.489022z'],
  ...props
});

const ShiftDownNormal = props => createSvgIcon({
  name: 'shift-down',
  viewBox: '0 0 1024 1024',
  path: ['M841.387 170.667c24.32 0 43.946 19.114 43.946 42.666S865.707 256 841.387 256H554.41l0.256 412.501H640a21.333 21.333 0 0 1 17.067 34.134l-128 170.666a21.333 21.333 0 0 1-34.134 0l-128-170.666A21.333 21.333 0 0 1 384 668.5h85.632L469.419 256H182.57c-22.614 0-41.259-16.64-43.648-38.016l-0.256-4.65c0-23.553 19.626-42.667 43.946-42.667zM650.667 512a42.667 42.667 0 0 1 0-85.333h192a42.667 42.667 0 0 1 0 85.333z m-469.334 0a42.667 42.667 0 0 1 0-85.333h192a42.667 42.667 0 0 1 0 85.333z'],
  ...props
});

const ShiftUpNormal = props => createSvgIcon({
  name: 'shift-up',
  viewBox: '0 0 1024 1024',
  path: ['M182.613 853.333c-24.32 0-43.946-19.114-43.946-42.666S158.293 768 182.613 768H469.59l-0.256-412.501H384a21.333 21.333 0 0 1-17.067-34.134l128-170.666a21.333 21.333 0 0 1 34.134 0l128 170.666A21.333 21.333 0 0 1 640 355.5h-85.632L554.581 768l286.848 0.043c22.614 0 41.259 16.64 43.648 38.016l0.256 4.65c0 23.552-19.626 42.667-43.946 42.667zM373.333 512a42.667 42.667 0 0 1 0 85.333h-192a42.667 42.667 0 0 1 0-85.333z m469.334 0a42.667 42.667 0 0 1 0 85.333h-192a42.667 42.667 0 0 1 0-85.333z'],
  ...props
});

const SigmaLightNormal = props => createSvgIcon({
  name: 'sigma-light',
  viewBox: '0 0 1024 1024',
  path: ['M915.748571 152.555102v111.699592a10.44898 10.44898 0 0 1-10.448979 10.448979h-41.795919a10.44898 10.44898 0 0 1-10.448979-10.448979L853.033796 204.8H247.996082l336.039183 292.04898a10.44898 10.44898 0 0 1 3.594449 7.87853l0.062694 36.696817a10.44898 10.44898 0 0 1-3.615347 7.920326l-336.457143 291.73551h605.413878v-50.238694a10.44898 10.44898 0 0 1 10.44898-10.448979h41.795918a10.44898 10.44898 0 0 1 10.448979 10.448979V893.345959a10.44898 10.44898 0 0 1-10.448979 10.44898H156.525714a10.44898 10.44898 0 0 1-10.448979-10.44898V854.099592a10.44898 10.44898 0 0 1 3.552653-7.857633l361.430204-315.18302a10.44898 10.44898 0 0 0 0-15.757061L149.629388 199.742694a10.44898 10.44898 0 0 1-3.594449-7.899429V152.555102a10.44898 10.44898 0 0 1 10.448979-10.44898H905.299592a10.44898 10.44898 0 0 1 10.448979 10.44898z'],
  ...props
});

const SortNormal = props => createSvgIcon({
  name: 'sort',
  viewBox: '0 0 1024 1024',
  path: ['M328.533 806.4a21.333 21.333 0 0 1-4.266-4.267l-128-170.666a21.333 21.333 0 0 1 17.066-34.134h85.376l-0.341-426.666a42.667 42.667 0 1 1 85.333 0L384 597.333h85.333a21.333 21.333 0 0 1 17.067 34.134l-128 170.666a21.333 21.333 0 0 1-29.867 4.267z m366.934-585.259a21.333 21.333 0 0 1 4.266 4.267l128 170.667a21.333 21.333 0 0 1-17.066 34.133H725.29l0.341 423.125a42.667 42.667 0 0 1-85.333 0L640 430.208h-85.333a21.333 21.333 0 0 1-17.067-34.133l128-170.667a21.333 21.333 0 0 1 29.867-4.267z'],
  ...props
});

const SpaceafterNormal = props => createSvgIcon({
  name: 'spaceafter',
  viewBox: '0 0 1024 1024',
  path: ['M908.522667 309.333333H120.938667c-4.842667 0-8.810667 4.266667-8.810667 9.472v66.389334c0 5.205333 3.968 9.472 8.810667 9.472h787.626666c4.821333 0 8.789333-4.266667 8.789334-9.472v-66.389334c0-5.205333-3.968-9.472-8.789334-9.472zM119.466667 234.666667h789.056c4.842667 0 8.810667-4.266667 8.810666-9.472V158.805333C917.333333 153.6 913.365333 149.333333 908.544 149.333333H119.466667c-4.842667 0-8.810667 4.266667-8.810667 9.472v66.389334c0 5.205333 3.968 9.472 8.810667 9.472z m-0.213334 320h789.290667c4.821333 0 8.789333-4.266667 8.789333-9.472v-66.389334c0-5.205333-3.968-9.472-8.789333-9.472H119.253333c-4.842667 0-8.810667 4.266667-8.810666 9.472v66.389334c0 5.205333 3.968 9.472 8.810666 9.472zM480 597.333333a10.666667 10.666667 0 0 0-10.666667 10.666667v202.24c-31.232-3.562667-70.058667-10.538667-116.48-20.906667-9.557333 0-14.976 8.32-9.045333 14.122667l159.146667 153.237333c4.501333 4.416 13.290667 4.416 17.941333 0l159.274667-153.237333c5.930667-5.696 0.64-14.122667-8.938667-14.122667-46.528 10.368-85.397333 17.322667-116.586667 20.906667L554.666667 608a10.666667 10.666667 0 0 0-10.666667-10.666667z'],
  ...props
});

const SpacebeforeNormal = props => createSvgIcon({
  name: 'spacebefore',
  viewBox: '0 0 1024 1024',
  path: ['M904.533333 789.333333c4.842667 0 8.810667 4.266667 8.810667 9.472v66.389334c0 5.205333-3.968 9.472-8.810667 9.472H115.477333C110.634667 874.666667 106.666667 870.4 106.666667 865.194667v-66.389334c0-5.205333 3.968-9.472 8.789333-9.472z m-1.450666-160c4.842667 0 8.810667 4.266667 8.810666 9.472v66.389334c0 5.205333-3.968 9.472-8.810666 9.472H115.456c-4.821333 0-8.789333-4.266667-8.789333-9.472v-66.389334c0-5.205333 3.968-9.472 8.789333-9.472z m1.642666-160c4.842667 0 8.810667 4.266667 8.810667 9.472v66.389334c0 5.205333-3.968 9.472-8.810667 9.472H115.477333C110.634667 554.666667 106.666667 550.4 106.666667 545.194667v-66.389334c0-5.205333 3.968-9.472 8.789333-9.472zM544 64a10.666667 10.666667 0 0 1 10.496 8.746667L554.666667 74.666667v202.24c31.232-3.562667 70.058667-10.538667 116.48-20.906667 9.557333 0 14.976 8.32 9.045333 14.122667l-159.146667 153.237333c-4.501333 4.416-13.290667 4.416-17.941333 0l-159.274667-153.237333c-5.930667-5.696-0.64-14.122667 8.938667-14.122667 46.528 10.368 85.397333 17.322667 116.586667 20.906667L469.333333 74.666667a10.666667 10.666667 0 0 1 8.746667-10.496L480 64h64z'],
  ...props
});

const TableNormal = props => createSvgIcon({
  name: 'table',
  viewBox: '0 0 1024 1024',
  path: ['M810.666667 128c70.698667 0 128 51.584 128 115.2v537.6c0 63.616-57.301333 115.2-128 115.2H213.333333c-70.698667 0-128-51.584-128-115.2V243.2C85.333333 179.584 142.634667 128 213.333333 128h597.333334zM170.666667 773.333333c0 20.608 19.114667 37.333333 42.666666 37.333334h128v-170.666667H170.666667v133.333333zM597.333333 640h-170.666666v170.666667h170.666666v-170.666667z m256 0h-170.666666v170.666667h128c23.552 0 42.666667-16.725333 42.666666-37.333334V640z m0-85.333333V384h-170.666666v170.666667h170.666666zM170.666667 554.666667h170.666666V384H170.666667v170.666667z m426.666666-170.666667h-170.666666v170.666667h170.666666V384z m213.333334-170.666667H213.333333c-23.552 0-42.666667 16.725333-42.666666 37.333334V298.666667h682.666666V250.666667C853.333333 230.058667 834.218667 213.333333 810.666667 213.333333z'],
  ...props
});

const TodoNormal = props => createSvgIcon({
  name: 'todo',
  viewBox: '0 0 1024 1024',
  path: ['M554.88 106.666667a42.666667 42.666667 0 0 1 3.2 85.205333l-3.2 0.128H256a64 64 0 0 0-63.872 60.245333L192 256v512a64 64 0 0 0 60.245333 63.872L256 832h512a64 64 0 0 0 63.872-60.245333L832 768v-256a42.666667 42.666667 0 0 1 85.205333-3.2L917.333333 512v256a149.333333 149.333333 0 0 1-144.213333 149.248L768 917.333333H256a149.333333 149.333333 0 0 1-149.248-144.213333L106.666667 768V256a149.333333 149.333333 0 0 1 144.213333-149.248L256 106.666667h298.88zM820.906667 142.933333a42.666667 42.666667 0 0 1 66.986666 52.736l-2.133333 2.773334-384 448a42.666667 42.666667 0 0 1-62.122667 2.858666l-2.432-2.56-149.333333-170.666666A42.666667 42.666667 0 0 1 349.568 417.28l2.56 2.688 116.864 133.546667 351.957333-410.581334z'],
  ...props
});

const TranslateNormal = props => createSvgIcon({
  name: 'translate',
  viewBox: '0 0 1024 1024',
  path: ['M229.013333 660.522667v73.813333c0 42.282667 32.896 77.44 75.456 80.64l6.122667 0.192h81.92a40.426667 40.426667 0 1 1 0 80.832h-81.92c-90.112 0-163.136-72.384-163.136-161.685333v-73.813334a40.789333 40.789333 0 1 1 81.557333 0z m504-184.533334l170.837334 423.317334a10.666667 10.666667 0 0 1-9.898667 14.656h-64.874667a10.666667 10.666667 0 0 1-9.898666-6.677334l-46.293334-114.581333H606.08l-16.448 40.810667-29.76 73.770666a10.666667 10.666667 0 0 1-9.898667 6.677334h-64.853333a10.666667 10.666667 0 0 1-9.877333-14.656l170.816-423.296a10.666667 10.666667 0 0 1 9.877333-6.677334h67.178667a10.666667 10.666667 0 0 1 9.898666 6.677334z m-43.477333 109.952l-50.858667 125.909334h101.632l-50.773333-125.909334zM334.933333 128v59.52h136.917334a21.333333 21.333333 0 0 1 21.333333 21.333333v268.586667a21.333333 21.333333 0 0 1-21.333333 21.333333H330.026667v99.925334a21.333333 21.333333 0 0 1-21.333334 21.333333h-38.912a21.333333 21.333333 0 0 1-21.333333-21.333333v-99.946667H106.666667a21.333333 21.333333 0 0 1-21.333334-21.333333V208.853333a21.333333 21.333333 0 0 1 21.333334-21.333333h138.858666V128a21.333333 21.333333 0 0 1 21.333334-21.333333h46.72a21.333333 21.333333 0 0 1 21.333333 21.333333z m546.645334 202.112v90.112a40.789333 40.789333 0 1 1-81.578667 0v-90.112a80.469333 80.469333 0 0 0-23.893333-57.173333 81.941333 81.941333 0 0 0-57.685334-23.68h-81.92a40.426667 40.426667 0 1 1 0-80.853334h81.92c90.112 0 163.157333 72.405333 163.157334 161.706667z m-633.109334-55.914667H166.912v136.746667h81.557333v-136.746667z m163.136-0.448h-81.557333v137.194667h81.557333v-137.194667z'],
  ...props
});

const TranslateLightNormal = props => createSvgIcon({
  name: 'translate-light',
  viewBox: '0 0 1024 1024',
  path: ['M708.266667 469.333333a10.666667 10.666667 0 0 1 9.898666 6.677334l170.837334 423.296a10.666667 10.666667 0 0 1-9.877334 14.656h-50.176a10.666667 10.666667 0 0 1-9.813333-6.506667l-54.634667-129.152h-152.554666l-22.314667 55.210667-29.76 73.770666a10.666667 10.666667 0 0 1-9.898667 6.677334h-50.24a10.666667 10.666667 0 0 1-9.898666-14.656l170.816-423.296A10.666667 10.666667 0 0 1 670.506667 469.333333h37.76zM170.666667 608a32 32 0 0 1 31.850666 28.928L202.666667 640v132.693333a74.666667 74.666667 0 0 0 70.570666 74.581334l4.096 0.106666h106.24a32 32 0 0 1 3.093334 63.850667l-3.093334 0.149333H277.333333a138.666667 138.666667 0 0 1-138.581333-133.696l-0.085333-4.970666V640A32 32 0 0 1 170.666667 608z m518.186666-48.533333l-57.6 158.485333h115.157334l-57.578667-158.506667zM299.733333 106.666667a21.333333 21.333333 0 0 1 21.333334 21.333333v59.52h150.762666a21.333333 21.333333 0 0 1 21.333334 21.333333v264.277334a21.333333 21.333333 0 0 1-21.333334 21.333333H321.066667v104.234667a21.333333 21.333333 0 0 1-21.333334 21.333333H277.12a21.333333 21.333333 0 0 1-21.333333-21.333333V494.933333H106.666667a21.333333 21.333333 0 0 1-21.333334-21.333333V208.853333a21.333333 21.333333 0 0 1 21.333334-21.333333h149.12V128a21.333333 21.333333 0 0 1 21.333333-21.333333h22.634667z m446.506667 53.333333a138.666667 138.666667 0 0 1 138.56 133.696l0.085333 4.970667v132.693333a32 32 0 0 1-63.850666 3.093333l-0.149334-3.072V298.666667a74.666667 74.666667 0 0 0-70.570666-74.56l-4.096-0.106667H640a32 32 0 0 1-3.072-63.850667L640 160h106.24z m-490.581333 95.338667H149.973333v177.514666h105.728v-177.514666z m171.776 1.344h-106.666667v174.336h106.666667v-174.336z'],
  ...props
});

const UnderlineNormal = props => createSvgIcon({
  name: 'underline',
  viewBox: '0 0 1024 1024',
  path: ['M824 832H200c-4.416 0-8 4.288-8 9.6v76.8c0 5.312 3.584 9.6 8 9.6h624c4.384 0 8-4.288 8-9.6v-76.8c0-5.312-3.616-9.6-8-9.6zM512 749.12a284.352 284.352 0 0 0 202.176-83.84 283.712 283.712 0 0 0 83.84-202.176l0.128-313.92a13.248 13.248 0 0 0-13.216-13.184h-65.984a13.248 13.248 0 0 0-13.216 13.216l-0.128 313.888a193.888 193.888 0 0 1-193.6 193.6 193.888 193.888 0 0 1-193.6-193.6l0.128-313.92a13.248 13.248 0 0 0-13.184-13.184H239.328a13.248 13.248 0 0 0-13.184 13.216l-0.16 313.888c0 76.352 29.824 148.064 83.84 202.176A283.712 283.712 0 0 0 512 749.12z'],
  ...props
});

const UndoNormal = props => createSvgIcon({
  name: 'undo',
  viewBox: '0 0 1024 1024',
  path: ['M591.04 260.266667c73.685333 0 143.786667 24.192 200.874667 68.010666 79.722667 61.184 127.402667 155.370667 127.402666 257.322667 0 177.536-143.424 321.706667-321.493333 325.269333l-6.784 0.064H426.666667a10.666667 10.666667 0 0 1-10.666667-10.666666v-64a10.666667 10.666667 0 0 1 10.666667-10.666667h164.373333c134.272 0 242.944-107.541333 242.944-240 0-75.093333-35.093333-144.405333-94.037333-189.653333a243.370667 243.370667 0 0 0-140.714667-50.218667l-8.192-0.128h-329.173333l90.773333 90.218667a12.010667 12.010667 0 0 1 1.450667 15.274666l-1.386667 1.664-42.410667 42.922667-1.685333 1.408a12.010667 12.010667 0 0 1-13.653333 0.042667l-1.642667-1.386667-163.52-162.496a42.304 42.304 0 0 1-2.538667-57.216l2.496-2.709333 163.52-163.157334 1.685334-1.408a12.010667 12.010667 0 0 1 13.653333 0.064l1.642667 1.386667 42.496 42.837333a12.010667 12.010667 0 0 1 1.365333 15.296l-1.408 1.642667-90.474667 90.282667h328.810667z'],
  ...props
});

const UploadNormal = props => createSvgIcon({
  name: 'upload',
  viewBox: '0 0 1024 1024',
  path: ['M874.666667 576a42.666667 42.666667 0 0 1 42.56 39.466667L917.333333 618.666667v170.666666a128 128 0 0 1-123.2 127.914667L789.333333 917.333333H234.666667a128 128 0 0 1-127.914667-123.2L106.666667 789.333333v-170.666666a42.666667 42.666667 0 0 1 85.226666-3.2L192 618.666667v170.666666a42.666667 42.666667 0 0 0 39.466667 42.56L234.666667 832h554.666666a42.666667 42.666667 0 0 0 42.56-39.466667L832 789.333333v-170.666666a42.666667 42.666667 0 0 1 42.666667-42.666667zM542.165333 108.8l211.2 211.2a42.666667 42.666667 0 1 1-60.352 60.330667L554.666667 241.962667V661.333333a42.666667 42.666667 0 1 1-85.333334 0V241.962667l-138.346666 138.368A42.666667 42.666667 0 1 1 270.634667 320l211.2-211.2a42.666667 42.666667 0 0 1 60.330666 0z'],
  ...props
});

const VedioNormal = props => createSvgIcon({
  name: 'vedio',
  viewBox: '0 0 1024 1024',
  path: ['M810.666667 128a128 128 0 0 1 128 128v509.802667a128 128 0 0 1-128 128H213.333333a128 128 0 0 1-128-128V256a128 128 0 0 1 128-128h597.333334z m42.666666 267.178667H170.666667v370.624a42.666667 42.666667 0 0 0 39.466666 42.56l3.2 0.106666h597.333334a42.666667 42.666667 0 0 0 42.56-39.466666l0.106666-3.2V395.178667z m-392.533333 80a21.333333 21.333333 0 0 1 11.541333 3.626666l151.104 102.016a21.333333 21.333333 0 0 1-0.64 35.776l-154.538666 96.682667a21.333333 21.333333 0 0 1-32.64-18.474667l3.456-198.677333a21.333333 21.333333 0 0 1 21.696-20.949333zM689.877333 213.312l81.130667 96.533333H853.333333V256a42.666667 42.666667 0 0 0-39.466666-42.56L810.666667 213.333333l-120.768-0.021333z m-464.597333 0L213.333333 213.333333a42.666667 42.666667 0 0 0-42.56 39.466667L170.666667 256v53.845333h135.744L225.28 213.333333z m193.045333 0h-109.461333l81.109333 96.533333h109.44L418.346667 213.333333z m187.968 0h-104.362666l81.109333 96.533333h104.362667L606.293333 213.333333z'],
  ...props
});

const VoiceNormal = props => createSvgIcon({
  name: 'voice',
  viewBox: '0 0 1024 1024',
  path: ['M832 437.333333a42.666667 42.666667 0 0 1 42.56 39.466667l0.106667 3.2c0 185.898667-139.861333 339.114667-320.085334 360.192 0.064 0.810667 0.085333 1.642667 0.085334 2.474667v64a42.666667 42.666667 0 1 1-85.333334 0v-64l0.085334-2.474667C289.194667 819.114667 149.333333 665.898667 149.333333 480l0.106667-3.2a42.666667 42.666667 0 0 1 85.12 0l0.106667 3.2c0 153.173333 124.16 277.333333 277.333333 277.333333s277.333333-124.16 277.333333-277.333333l0.106667-3.2A42.666667 42.666667 0 0 1 832 437.333333z m-320-362.666666c114.730667 0 208.298667 90.56 213.12 204.074666l0.213333 9.258667v192c0 117.824-95.509333 213.333333-213.333333 213.333333-114.730667 0-208.298667-90.56-213.12-204.074666L298.666667 480v-192l0.213333-9.258667C303.68 165.226667 397.248 74.666667 512 74.666667z m0 85.333333c-66.069333 0-120.768 50.197333-127.296 113.237333l-0.533333 7.317334L384 288v211.52l0.128 7.424a128 128 0 0 0 255.658667 1.92L640 501.333333v-211.52l-0.128-7.424A128 128 0 0 0 512 160z'],
  ...props
});

const VoicelightNormal = props => createSvgIcon({
  name: 'voicelight',
  viewBox: '0 0 1024 1024',
  path: ['M842.666667 448a32 32 0 0 1 31.850666 28.928L874.666667 480c0 189.525333-145.386667 345.109333-330.730667 361.28 0.064 0.426667 0.064 0.917333 0.064 1.386667v85.333333a32 32 0 0 1-64 0v-85.333333l0.085333-1.386667C294.741333 825.109333 149.333333 669.546667 149.333333 480l0.149334-3.072a32 32 0 0 1 63.701333 0L213.333333 480C213.333333 639.061333 347.050667 768 512 768s298.666667-128.938667 298.666667-288l0.149333-3.072A32 32 0 0 1 842.666667 448zM512 74.666667c114.730667 0 208.298667 90.56 213.12 204.074666l0.213333 9.258667v192c0 117.824-95.509333 213.333333-213.333333 213.333333-114.730667 0-208.298667-90.56-213.12-204.074666L298.666667 480v-192l0.213333-9.258667C303.68 165.226667 397.248 74.666667 512 74.666667z m0 64c-78.314667 0-142.933333 60.437333-148.842667 136.362666l-0.298666 5.077334-0.192 7.893333v190.634667l0.149333 7.893333a149.333333 149.333333 0 0 0 298.432-1.386667L661.333333 480v-190.634667l-0.149333-7.893333A149.333333 149.333333 0 0 0 512 138.666667z'],
  ...props
});

const WarnFillNormal = props => createSvgIcon({
  name: 'warn-fill',
  viewBox: '0 0 1024 1024',
  path: ['M512 64c247.424 0 448 200.576 448 448s-200.576 448-448 448S64 759.424 64 512 264.576 64 512 64z m0 576a42.666667 42.666667 0 1 0 0 85.333333 42.666667 42.666667 0 0 0 0-85.333333z m6.677333-341.333333h-13.354666a42.666667 42.666667 0 0 0-42.517334 46.464l20.16 225.642666a29.162667 29.162667 0 0 0 58.069334 0l20.16-225.642666A42.666667 42.666667 0 0 0 518.677333 298.666667z'],
  ...props
});

const WarningNormal = props => createSvgIcon({
  name: 'warning',
  viewBox: '0 0 1024 1024',
  path: ['M512 32c265.09714313 0 480 214.90285687 480 480s-214.90285687 480-480 480S32 777.09714313 32 512 246.90285687 32 512 32z m0 87.26857125C295.08571438 119.26857125 119.26857125 295.10857156 119.26857125 512c0 216.91428562 175.84000031 392.73142875 392.73142875 392.73142875 216.91428562 0 392.73142875-175.84000031 392.73142875-392.73142875 0-216.91428562-175.84000031-392.73142875-392.73142875-392.73142875zM512 649.14285688a68.57142844 68.57142844 0 1 1 0 137.14285781 68.57142844 68.57142844 0 0 1 0-137.14285782z m7.15428562-388.57142813a45.71428594 45.71428594 0 0 1 45.55428563 49.78285688l-21.6 241.75999968a31.24571437 31.24571437 0 0 1-62.2171425 0l-21.6-241.75999968A45.71428594 45.71428594 0 0 1 504.84571438 260.57142875h14.30857124z'],
  ...props
});

const WindowLineNormal = props => createSvgIcon({
  name: 'window-line',
  viewBox: '0 0 1024 1024',
  path: ['M352 96h512a128 128 0 0 1 128 128v384a128 128 0 0 1-128 128H352a128 128 0 0 1-128-128V224a128 128 0 0 1 128-128z m0 64a64 64 0 0 0-64 64v384a64 64 0 0 0 64 64h512a64 64 0 0 0 64-64V224a64 64 0 0 0-64-64H352zM160 480a32 32 0 0 1 0 64 64 64 0 0 0-64 64v192a64 64 0 0 0 64 64h256a64 64 0 0 0 64-64 32 32 0 0 1 64 0 128 128 0 0 1-128 128H160a128 128 0 0 1-128-128v-192a128 128 0 0 1 128-128z'],
  ...props
});

const WrapNormal = props => createSvgIcon({
  name: 'wrap',
  viewBox: '0 0 1024 1024',
  path: ['M906.666667 106.666667a10.666667 10.666667 0 0 1 10.666666 10.666666v784.384a10.666667 10.666667 0 0 1-10.666666 10.666667h-64a10.666667 10.666667 0 0 1-10.666667-10.666667V117.333333a10.666667 10.666667 0 0 1 10.666667-10.666666h64z m-725.333334 0a10.666667 10.666667 0 0 1 10.666667 10.666666v784.384a10.666667 10.666667 0 0 1-10.666667 10.666667h-64a10.666667 10.666667 0 0 1-10.666666-10.666667V117.333333a10.666667 10.666667 0 0 1 10.666666-10.666666h64z m379.605334 192c106.453333 0 192.853333 85.888 192.853333 192s-86.4 192-192.853333 192h-145.92l13.141333 74.666666a10.666667 10.666667 0 0 1-17.877333 9.578667l-124.864-119.189333a10.666667 10.666667 0 0 1-0.362667-15.082667l0.362667-0.362667 124.864-119.189333a10.666667 10.666667 0 0 1 17.877333 9.578667l-13.141333 74.666666h145.92a107.093333 107.093333 0 0 0 107.52-106.666666 107.093333 107.093333 0 0 0-107.52-106.666667H343.509333a10.666667 10.666667 0 0 1-10.666666-10.666667v-64a10.666667 10.666667 0 0 1 10.666666-10.666666h217.429334z'],
  ...props
});

const BucketBetaNormal = props => createSvgIcon({
  name: 'bucket-beta',
  viewBox: '0 0 1024 1024',
  path: ['M85.333333 535.466667v75.093333a64 64 0 0 0 18.773334 45.226667l264.106666 264.106666a64 64 0 0 0 45.226667 18.773334h32.426667a64 64 0 0 0 45.226666-18.773334l355.413334-355.413333a42.666667 42.666667 0 0 0 0-60.16l-411.733334-412.586667A21.76 21.76 0 0 0 419.413333 85.333333a21.333333 21.333333 0 0 0-14.933333 6.4l-30.293333 29.866667a21.76 21.76 0 0 0 0 30.293333l34.133333 34.133334-304.213333 304.213333A64 64 0 0 0 85.333333 535.466667z m384-288.853334L733.44 512H203.093333zM831.146667 682.666667h2.56a14.08 14.08 0 0 1 9.813333 4.266666c32 35.84 95.146667 103.253333 95.146667 145.066667a106.666667 106.666667 0 0 1-213.333334 0c0-42.666667 62.293333-108.8 94.72-144.213333a13.653333 13.653333 0 0 1 11.093334-5.12z'],
  ...props
});

const BrushNormal = props => createSvgIcon({
  name: 'brush',
  viewBox: '0 0 1024 1024',
  path: ['M709.994667 149.333333c30.805333 0 56 23.189333 57.898666 52.458667l0.106667 3.541333v51.584h122.496a42.666667 42.666667 0 0 1 42.538667 39.509334l0.128 3.178666 0.170666 253.589334a42.666667 42.666667 0 0 1-39.466666 42.538666l-3.2 0.128-384-0.021333v81.237333h24.533333c4.693333 0 8.533333 3.84 8.533333 8.533334V864a74.666667 74.666667 0 0 1-149.333333 0v-178.389333c0-4.693333 3.84-8.533333 8.533333-8.533334h22.4v-123.882666a42.666667 42.666667 0 0 1 39.466667-42.56l3.2-0.106667 384-0.021333-0.170667-168.234667L768 342.250667v49.749333c0 29.738667-24 54.058667-54.336 55.893333l-3.669333 0.106667H207.36c-30.805333 0-56-23.189333-57.898667-52.458667L149.333333 392v-186.666667c0-29.738667 24-54.058667 54.336-55.893333L207.338667 149.333333H709.973333z'],
  ...props
});

const CommentNormal = props => createSvgIcon({
  name: 'comment',
  viewBox: '0 0 1024 1024',
  path: ['M674.816 481.024H370.517333c-9.493333 0-18.602667 3.690667-25.322666 10.282667a34.752 34.752 0 0 0-10.453334 24.832v18.24c0 19.392 16.021333 35.093333 35.776 35.093333h304.298667c19.754667 0 35.776-15.701333 35.776-35.093333v-18.24c0-9.301333-3.754667-18.24-10.453333-24.832a36.138667 36.138667 0 0 0-25.322667-10.282667z m0-147.434667H370.517333c-9.493333 0-18.602667 3.690667-25.322666 10.282667a34.752 34.752 0 0 0-10.453334 24.832v18.24c0 19.392 16.021333 35.093333 35.776 35.093333h304.298667c19.754667 0 35.776-15.701333 35.776-35.093333v-18.24c0-9.301333-3.754667-18.24-10.453333-24.832a36.138667 36.138667 0 0 0-25.322667-10.282667zM827.392 128c67.349333 0 121.92 52.224 121.941333 116.693333v427.946667a114.261333 114.261333 0 0 1-35.690666 82.56 124.693333 124.693333 0 0 1-86.208 34.197333H593.706667l-242.666667 140.821334a63.274667 63.274667 0 0 1-61.504 0.938666c-19.178667-10.368-31.018667-29.802667-30.997333-50.88v-90.922666h-40.64c-67.328 0-121.898667-52.266667-121.898667-116.714667V244.714667C96 180.266667 150.570667 128 217.898667 128h609.493333z m0 85.333333h-609.493333c-19.84 0-34.816 13.290667-36.416 28.650667l-0.149334 2.730667V672.64c0 15.573333 13.866667 29.717333 33.109334 31.253333l3.456 0.128h125.973333l-0.021333 131.690667 226.901333-131.626667h256.682667c10.453333 0 20.309333-3.925333 27.178666-10.517333 5.397333-5.141333 8.533333-11.52 9.237334-18.090667l0.149333-2.837333V244.693333c0-15.552-13.888-29.696-33.152-31.232L827.392 213.333333z'],
  ...props
});

const PasteNormal = props => createSvgIcon({
  name: 'paste',
  viewBox: '0 0 1024 1024',
  path: ['M800 341.333333a74.666667 74.666667 0 0 1 74.666667 74.666667v469.333333a74.666667 74.666667 0 0 1-74.666667 74.666667h-362.666667a74.666667 74.666667 0 0 1-74.666666-74.666667v-469.333333a74.666667 74.666667 0 0 1 74.666666-74.666667z m0 64h-362.666667a10.666667 10.666667 0 0 0-10.666666 10.666667v469.333333a10.666667 10.666667 0 0 0 10.666666 10.666667h362.666667a10.666667 10.666667 0 0 0 10.666667-10.666667v-469.333333a10.666667 10.666667 0 0 0-10.666667-10.666667zM649.898667 181.333333a74.666667 74.666667 0 0 1-73.898667 64H320a74.666667 74.666667 0 0 1-73.898667-64H213.333333a32 32 0 0 0-31.850666 28.928L181.333333 213.333333v576a32 32 0 0 0 28.928 31.850667L213.333333 821.333333h96c41.472 0 42.624 60.501333 3.434667 63.850667l-3.456 0.149333H213.333333a96 96 0 0 1-95.893333-91.477333L117.333333 789.333333V213.333333a96 96 0 0 1 91.477334-95.893333L213.333333 117.333333h32.746667A74.666667 74.666667 0 0 1 320 53.333333h256a74.666667 74.666667 0 0 1 73.92 64H682.666667a96 96 0 0 1 95.893333 91.477334L778.666667 213.333333v65.109334a32 32 0 0 1-63.850667 3.072l-0.149333-3.072V213.333333a32 32 0 0 0-28.928-31.850666L682.666667 181.333333zM576 117.333333H320a10.666667 10.666667 0 0 0-10.666667 10.666667v42.666667a10.666667 10.666667 0 0 0 10.666667 10.666666h256a10.666667 10.666667 0 0 0 10.666667-10.666666V128a10.666667 10.666667 0 0 0-10.666667-10.666667z'],
  ...props
});

const DoubletoolbarNormal = props => createSvgIcon({
  name: 'doubletoolbar',
  viewBox: '0 0 1024 1024',
  path: ['M490.64875769 594.22236633L252.13900733 286.52964759A13.4719851 13.4719851 0 0 1 262.83007812 264.80761742h498.30894447a13.50288367 13.50288367 0 0 1 10.69107079 21.72203017l-238.47885107 307.69271874a27.00576806 27.00576806 0 0 1-42.70248462 0zM249.35809303 706.66400146v43.25866676a9.26971435 9.26971435 0 0 0 9.26971435 9.26971436h506.74438524a9.26971435 9.26971435 0 0 0 9.26971435-9.26971436v-43.25866676a9.26971435 9.26971435 0 0 0-9.26971435-9.26971435H258.62780738a9.26971435 9.26971435 0 0 0-9.26971435 9.26971435z'],
  ...props
});

const EraserNormal = props => createSvgIcon({
  name: 'eraser',
  viewBox: '0 0 1024 1024',
  path: ['M574.72 133.44c24.533333-25.408 64.192-26.901333 88.576-3.349333l294.528 284.437333c24.405333 23.552 24.298667 63.253333-0.213333 88.661333L637.888 832h219.861333c21.12 0 38.229333 19.093333 38.229334 42.666667 0 21.888-14.762667 39.914667-33.770667 42.389333l-4.48 0.277333H358.250667c-5.354667 0-10.453333-1.237333-15.104-3.456a10.581333 10.581333 0 0 1-6.208-2.901333L114.218667 697.152c-24.405333-23.552-24.277333-63.253333 0.234666-88.64z m-63.082667 191.253333L193.322667 654.784l182.613333 176.32h141.866667l252.394666-256.725333-258.56-249.685334z'],
  ...props
});

const CheckboxlistNormal = props => createSvgIcon({
  name: 'checkboxlist',
  viewBox: '0 0 1024 1024',
  path: ['M445.098667 106.666667a42.666667 42.666667 0 0 1 3.2 85.226666l-3.2 0.106667H256a64 64 0 0 0-63.893333 60.245333L192 256v512a64 64 0 0 0 60.245333 63.893333L256 832h512a64 64 0 0 0 63.893333-60.245333L832 768v-189.098667a42.666667 42.666667 0 0 1 85.226667-3.2l0.106666 3.2V768a149.333333 149.333333 0 0 1-144.213333 149.248L768 917.333333H256a149.333333 149.333333 0 0 1-149.248-144.213333L106.666667 768V256a149.333333 149.333333 0 0 1 144.213333-149.248L256 106.666667h189.098667z', 'M842.261333 121.557333a42.666667 42.666667 0 0 1 66.986667 52.8l-2.176 2.752-384 448a42.666667 42.666667 0 0 1-62.101333 2.858667l-2.410667-2.538667-149.333333-170.666666a42.666667 42.666667 0 0 1 61.674666-58.858667l2.56 2.666667 116.864 133.568L842.261333 121.557333z'],
  ...props
});

const XDownNormal = props => createSvgIcon({
  name: 'x-down',
  viewBox: '0 0 1024 1024',
  path: ['M802.730667 533.333333c95.637333 0 152.256 107.754667 100.330666 189.482667L901.333333 725.333333l-0.469333 1.066667c-12.885333 24.896-40.682667 54.826667-84.394667 91.541333l-6.869333 5.653334h94.250667a42.666667 42.666667 0 0 1 42.368 37.696l0.298666 4.970666a42.666667 42.666667 0 0 1-37.696 42.389334l-4.970666 0.277333H682.752c-41.536 0-58.581333-53.312-24.746667-77.397333l22.250667-16.064c82.474667-60.16 131.605333-104.384 143.765333-126.229334l1.365334-2.730666 4.181333-7.253334c18.666667-26.218667 1.322667-60.586667-26.837333-60.586666-23.893333 0-39.509333 7.338667-51.029334 23.637333l-3.328 5.162667a42.666667 42.666667 0 0 1-73.386666-43.52c27.477333-46.357333 71.893333-70.613333 127.744-70.613334zM187.221333 142.165333l3.584 4.16L366.933333 375.253333l176.128-228.949333 3.584-4.16a46.933333 46.933333 0 0 1 72.853334 58.538667l-2.026667 2.837333L426.133333 452.266667l191.338667 248.725333a46.933333 46.933333 0 0 1-70.826667 61.376l-3.584-4.16L366.933333 529.237333 190.805333 758.208l-3.584 4.16a46.933333 46.933333 0 0 1-72.853333-58.517333l2.026667-2.858667L307.712 452.266667 116.394667 203.541333a46.933333 46.933333 0 0 1 70.826666-61.376z'],
  ...props
});

const XUpNormal = props => createSvgIcon({
  name: 'x-up',
  viewBox: '0 0 1024 1024',
  path: ['M204.288 265.898667l3.584 4.16L384 498.986667l176.128-228.949334 3.584-4.16a46.933333 46.933333 0 0 1 72.853333 58.538667l-2.026666 2.837333L443.178667 576l191.36 248.725333a46.933333 46.933333 0 0 1-70.826667 61.376l-3.584-4.16L384 652.970667 207.872 881.92l-3.584 4.16a46.933333 46.933333 0 0 1-72.853333-58.538667l2.026666-2.837333 191.317334-248.746667-191.317334-248.704a46.933333 46.933333 0 0 1 70.826667-61.376zM823.978667 85.333333c95.637333 0 152.256 107.754667 100.330666 189.482667l-1.728 2.517333-0.469333 1.066667c-12.885333 24.896-40.682667 54.826667-84.394667 91.541333l-6.869333 5.653334h94.250667a42.666667 42.666667 0 0 1 42.368 37.696l0.298666 4.970666a42.666667 42.666667 0 0 1-37.696 42.389334l-4.970666 0.277333H704c-41.536 0-58.581333-53.312-24.746667-77.397333l22.250667-16.064c82.474667-60.16 131.605333-104.384 143.786667-126.229334l1.365333-2.730666 4.16-7.253334C869.482667 205.013333 852.138667 170.666667 823.978667 170.666667c-23.893333 0-39.509333 7.338667-51.029334 23.637333l-3.328 5.162667a42.666667 42.666667 0 1 1-73.386666-43.52C723.690667 109.568 768.106667 85.333333 823.957333 85.333333z'],
  ...props
});

const ArrowDownNormal = props => createSvgIcon({
  name: 'arrow-down',
  viewBox: '0 0 1024 1024',
  path: ['M204.52208879 344.28477571c-16.77152242 11.18101497-16.77152242 39.13355233 0 55.90507476l257.16334391 257.16334391c27.95253739 27.95253739 72.67659719 27.95253739 100.6291346 0L819.47791121 400.18985047c16.77152242-16.77152242 16.77152242-44.72405981 0-61.49558224s-44.72405981-16.77152242-61.49558226 0L512 590.26710467 266.01767105 344.28477571c-16.77152242-16.77152242-44.72405981-16.77152242-61.49558226 0z'],
  ...props
});

const ArrowUpNormal = props => createSvgIcon({
  name: 'arrow-up',
  viewBox: '0 0 1024 1024',
  path: ['M819.47791121 679.71522429c16.77152242-11.18101497 16.77152242-39.13355233 0-55.90507476l-257.16334391-257.16334391c-27.95253739-27.95253739-72.67659719-27.95253739-100.6291346 0L204.52208879 623.81014953c-16.77152242 16.77152242-16.77152242 44.72405981 0 61.49558224s44.72405981 16.77152242 61.49558226 0L512 433.73289532 757.98232895 679.71522429c16.77152242 16.77152242 44.72405981 16.77152242 61.49558226 0z'],
  ...props
});

const ArrowDownTriangleNormal = props => createSvgIcon({
  name: 'arrow-down-triangle',
  viewBox: '0 0 1024 1024',
  path: ['M473.50043139 754.02687525l-349.75835022-388.62038872A51.78153127 51.78153127 0 0 1 162.24164978 278.98311111L861.75835022 278.98311111a51.78153127 51.78153127 0 0 1 38.49956861 86.42337542l-349.78424181 388.62038872a51.78153127 51.78153127 0 0 1-76.97324563 0z'],
  ...props
});

const ArrowUpTriangleNormal = props => createSvgIcon({
  name: 'arrow-up-triangle',
  viewBox: '0 0 1024 1024',
  path: ['M550.49956861 269.97312475l349.75835022 388.62038872A51.78153127 51.78153127 0 0 1 861.75835022 745.01688889H162.24164978a51.78153127 51.78153127 0 0 1-38.49956861-86.42337542l349.78424181-388.62038872a51.78153127 51.78153127 0 0 1 76.97324563 0z'],
  ...props
});

const SelectNormal = props => createSvgIcon({
  name: 'select',
  viewBox: '0 0 1024 1024',
  path: ['M401.322667 680.234667L180.970667 458.432l-3.328-3.114667a74.837333 74.837333 0 0 0-102.272 2.773334 74.666667 74.666667 0 0 0-0.341334 105.6l276.458667 278.272 3.306667 3.136c31.36 27.413333 78.293333 24.533333 105.536-6.250667l491.541333-554.666667 2.922667-3.498666a74.837333 74.837333 0 0 0-9.28-101.888 74.666667 74.666667 0 0 0-105.386667 6.357333L401.322667 680.234667z'],
  ...props
});

const ClosedNormal = props => createSvgIcon({
  name: 'closed',
  viewBox: '0 0 1024 1024',
  path: ['M843.861333 180.138667a42.666667 42.666667 0 0 1 2.176 58.005333l-2.176 2.346667L572.330667 512l271.530666 271.530667a42.666667 42.666667 0 0 1-58.005333 62.506666l-2.346667-2.176L512 572.330667 240.469333 843.861333a42.666667 42.666667 0 0 1-62.506666-58.005333l2.176-2.346667L451.626667 512 180.138667 240.469333a42.666667 42.666667 0 0 1 58.005333-62.506666l2.346667 2.176L512 451.626667 783.530667 180.138667a42.666667 42.666667 0 0 1 60.330666 0z'],
  ...props
});

const DownloadNormal = props => createSvgIcon({
  name: 'download',
  viewBox: '0 0 1024 1024',
  path: ['M874.666667 576a42.666667 42.666667 0 0 1 42.56 39.466667L917.333333 618.666667v170.666666a128 128 0 0 1-123.2 127.914667L789.333333 917.333333H234.666667a128 128 0 0 1-127.914667-123.2L106.666667 789.333333v-170.666666a42.666667 42.666667 0 0 1 85.226666-3.2L192 618.666667v170.666666a42.666667 42.666667 0 0 0 39.466667 42.56L234.666667 832h554.666666a42.666667 42.666667 0 0 0 42.56-39.466667L832 789.333333v-170.666666a42.666667 42.666667 0 0 1 42.666667-42.666667zM512 85.333333a42.666667 42.666667 0 0 1 42.666667 42.666667v419.328l138.346666-138.325333A42.666667 42.666667 0 1 1 753.365333 469.333333l-211.2 211.2a42.666667 42.666667 0 0 1-60.330666 0l-211.2-211.2a42.666667 42.666667 0 1 1 60.352-60.330666L469.333333 547.370667V128a42.666667 42.666667 0 0 1 42.666667-42.666667z'],
  ...props
});

const MoreNormal = props => createSvgIcon({
  name: 'more',
  viewBox: '0 0 1024 1024',
  path: ['M853.333333 426.666667a85.333333 85.333333 0 1 0 0 170.666666 85.333333 85.333333 0 0 0 0-170.666666M170.666667 426.666667a85.333333 85.333333 0 1 0 0 170.666666 85.333333 85.333333 0 0 0 0-170.666666m341.333333 0a85.333333 85.333333 0 1 0 0 170.666666 85.333333 85.333333 0 0 0 0-170.666666'],
  ...props
});

const CommentLightNormal = props => createSvgIcon({
  name: 'comment-light',
  viewBox: '0 0 1024 1024',
  path: ['M827.392 128c67.349333 0 121.92 52.224 121.941333 116.693333v427.946667a114.261333 114.261333 0 0 1-35.690666 82.56 124.693333 124.693333 0 0 1-86.208 34.197333H593.706667l-242.666667 140.821334a63.274667 63.274667 0 0 1-61.504 0.938666c-19.178667-10.368-31.018667-29.802667-30.997333-50.88v-90.922666h-40.64c-67.328 0-121.898667-52.266667-121.898667-116.714667V244.714667C96 180.266667 150.570667 128 217.898667 128h609.493333z m0 64h-609.493333c-31.338667 0-55.936 22.4-57.792 49.450667l-0.106667 3.264V672.64c0 27.392 23.402667 50.837333 54.186667 52.608l3.712 0.106667h104.64l-0.021334 147.413333 253.973334-147.370667h250.944c15.936 0 31.061333-5.994667 41.941333-16.426666 9.301333-8.896 14.784-20.330667 15.786667-32.32l0.170666-4.010667V244.693333c0-27.370667-23.424-50.816-54.208-52.586666L827.392 192z m-152.576 289.024c9.493333 0 18.602667 2.773333 25.322667 7.744 6.698667 4.949333 10.453333 11.669333 10.453333 18.688v13.717333c0 14.570667-16.021333 26.410667-35.776 26.410667H370.517333c-19.754667 0-35.776-11.84-35.776-26.410667v-13.717333c0-7.018667 3.754667-13.738667 10.453334-18.688 6.72-4.970667 15.829333-7.744 25.322666-7.744z m0-147.434667c9.493333 0 18.602667 2.773333 25.322667 7.744 6.698667 4.949333 10.453333 11.669333 10.453333 18.688v13.717334c0 14.592-16.021333 26.410667-35.776 26.410666H370.517333c-19.754667 0-35.776-11.818667-35.776-26.410666v-13.717334c0-7.018667 3.754667-13.738667 10.453334-18.688 6.72-4.970667 15.829333-7.744 25.322666-7.744z'],
  ...props
});

const DocLightNormal = props => createSvgIcon({
  name: 'doc-light',
  viewBox: '0 0 1024 1024',
  path: ['M405.333333 128l115.498667 115.498667a42.666667 42.666667 0 0 0 30.165333 12.501333H832a128 128 0 0 1 128 128v384a128 128 0 0 1-128 128H192a128 128 0 0 1-128-128V256a128 128 0 0 1 128-128h213.333333z m-26.517333 64H192a64 64 0 0 0-63.893333 60.245333L128 256v512a64 64 0 0 0 60.245333 63.893333L192 832h640a64 64 0 0 0 63.893333-60.245333L896 768V384a64 64 0 0 0-60.245333-63.893333L832 320H550.997333a106.666667 106.666667 0 0 1-71.317333-27.349333l-4.096-3.882667L378.816 192zM256 640m32 0l448 0q32 0 32 32l0 0q0 32-32 32l-448 0q-32 0-32-32l0 0q0-32 32-32Z'],
  ...props
});

const PictureLightNormal = props => createSvgIcon({
  name: 'picture-light',
  viewBox: '0 0 1024 1024',
  path: ['M864 149.333333a96 96 0 0 1 96 96v412.245334l1.28 1.28-1.28 1.237333V778.666667a96 96 0 0 1-91.477333 95.893333L864 874.666667H214.677333l-3.84 3.221333L208.106667 874.666667H160a96 96 0 0 1-95.893333-91.477334L64 778.666667v-533.333334A96 96 0 0 1 160 149.333333z m0 64h-704A32 32 0 0 0 128 245.333333v533.333334A32 32 0 0 0 160 810.666667h31.424l404.693333-338.048a138.666667 138.666667 0 0 1 182.762667 4.373333l4.074667 3.904L896 593.706667V245.333333a32 32 0 0 0-28.928-31.850666L864 213.333333zM640.618667 518.997333l-3.477334 2.730667L291.285333 810.666667H864a32 32 0 0 0 31.850667-28.928L896 778.666667v-94.549334l-158.250667-157.930666a74.666667 74.666667 0 0 0-97.130666-7.189334zM298.666667 320a64 64 0 1 1 0 128 64 64 0 0 1 0-128z'],
  ...props
});

const SearchLightNormal = props => createSvgIcon({
  name: 'search-light',
  viewBox: '0 0 1024 1024',
  path: ['M328.533333 432.64H119.466667a12.8 12.8 0 0 1-12.8-12.8v-38.4a12.8 12.8 0 0 1 12.8-12.8h209.066666a12.8 12.8 0 0 1 12.8 12.8v38.4a12.8 12.8 0 0 1-12.8 12.8z m0.469334 219.264H119.466667a12.8 12.8 0 0 1-12.8-12.8v-38.4a12.8 12.8 0 0 1 12.8-12.8h209.536a12.8 12.8 0 0 1 12.8 12.8v38.4a12.8 12.8 0 0 1-12.8 12.8zM115.456 149.333333h792.149333c4.842667 0 8.810667 3.2 8.810667 7.104v49.792c0 3.904-3.968 7.104-8.810667 7.104H115.477333C110.634667 213.333333 106.666667 210.133333 106.666667 206.229333V156.437333C106.666667 152.533333 110.634667 149.333333 115.477333 149.333333z m4.288 657.856h312.021333a12.8 12.8 0 0 1 12.8 12.8v38.4a12.8 12.8 0 0 1-12.8 12.8H119.744a12.8 12.8 0 0 1-12.8-12.8v-38.4a12.8 12.8 0 0 1 12.8-12.8zM894.933333 910.634667l-4.416 3.754666 2.112-1.962666-0.426666 0.341333a36.053333 36.053333 0 0 1-49.813334-7.466667l-105.962666-136.618666A233.813333 233.813333 0 0 1 640 789.333333c-129.6 0-234.666667-105.066667-234.666667-234.666666s105.066667-234.666667 234.666667-234.666667 234.666667 105.066667 234.666667 234.666667c0 69.76-30.421333 132.394667-78.72 175.36l100.288 129.344a40.469333 40.469333 0 0 1-3.157334 52.650666l-0.469333 0.405334 2.325333-1.792zM640 394.666667a160 160 0 1 0 0 320 160 160 0 0 0 0-320z'],
  ...props
});

const TableLightNormal = props => createSvgIcon({
  name: 'table-light',
  viewBox: '0 0 1024 1024',
  path: ['M810.666667 128a128 128 0 0 1 128 128v509.802667a128 128 0 0 1-128 128H213.333333a128 128 0 0 1-128-128V256a128 128 0 0 1 128-128h597.333334zM352 650.666667H149.333333v115.136a64 64 0 0 0 60.245334 63.893333l3.754666 0.106667h138.666667V650.666667z m522.666667 0h-202.688v179.136H810.666667a64 64 0 0 0 63.893333-60.224l0.106667-3.776V650.666667z m-266.688 0H416v179.136h191.978667V650.666667zM352 395.669333H149.333333V586.666667h202.666667v-190.997334z m522.666667 0h-202.688V586.666667H874.666667v-190.997334z m-266.688 0H416V586.666667h191.978667v-190.997334zM810.666667 192H213.333333a64 64 0 0 0-63.893333 60.245333L149.333333 256v75.669333h725.333334V256a64 64 0 0 0-60.245334-63.893333L810.666667 192z'],
  ...props
});

const SingletoolbarNormal = props => createSvgIcon({
  name: 'singletoolbar',
  viewBox: '0 0 1024 1024',
  path: ['M774.79936 706.18074112c20.77733888-0.09708999 37.91379001 17.98599111 38.69051221 40.87504555 0.77672334 22.91332779-15.04900779 42.35567445-35.80207331 43.98193778l-2.91271111 0.09708998h-539.57973334c-20.80161223 0.09708999-37.93806222-17.98599111-38.71478556-40.87504554-0.77672334-22.91332779 15.04900779-42.35567445 35.80207445-43.98193778l2.91271111-0.09708999h539.57973334z m-234.78878777-473.00001223l2.06316999 2.13598777 267.84805888 300.73742222a42.5984 42.5984 0 0 1-1.77189888 58.64258446l-2.18453333 2.01462443a43.93339221 43.93339221 0 0 1-59.3707611-1.74762667l-2.03889778-2.16025998-235.32278556-264.20717113-236.70632335 262.87217778a43.93339221 43.93339221 0 0 1-59.17657998 5.46133333l-2.28162446-1.89326222a42.62267221 42.62267221 0 0 1-5.50987776-58.42412999l1.94180665-2.25735111L476.80474112 235.14680889a43.83630222 43.83630222 0 0 1 63.15728555-1.99035222h0.02427221z'],
  ...props
});

const _createElement$8 = /*#__PURE__*/React__default['default'].createElement;
const SomecolorNormal = props => {
  const iconProps = {
    name: 'somecolor',
    viewBox: '0 0 1024 1024',
    path: ['M512 512m-448 0a448 448 0 1 0 896 0 448 448 0 1 0-896 0Z', 'M512 64v448L96.106667 345.173333C162.261333 180.352 323.541333 64 512 64z', 'M512 512l283.52 346.901333A446.144 446.144 0 0 1 512 960a445.952 445.952 0 0 1-259.498667-82.773333L512 512z', 'M101.162667 333.077333L512 510.250667 259.52 882.133333C141.482667 801.450667 64 665.770667 64 512c0-63.616 13.248-124.117333 37.162667-178.922667z', 'M922.837333 333.077333A446.506667 446.506667 0 0 1 960 512c0 153.770667-77.482667 289.450667-195.52 370.133333L512 510.250667z'],
    pathColors: ['#FDD66F', '#FB9855', '#4897DA', '#DA625A', '#69B763'],
    ...props
  };
  return /*#__PURE__*/_createElement$8(IconBase, iconProps);
};

const MinusNormal = props => createSvgIcon({
  name: 'minus',
  viewBox: '0 0 1024 1024',
  path: ['M153.6 576H870.4a25.6 25.6 0 0 0 25.6-25.6V512v-38.4a25.6 25.6 0 0 0-25.6-25.6H153.6a25.6 25.6 0 0 0-25.6 25.6v76.8c0 14.08 11.52 25.6 25.6 25.6z'],
  ...props
});

const PlusNormal = props => createSvgIcon({
  name: 'plus',
  viewBox: '0 0 1024 1024',
  path: ['M550.4 160c14.08 0 25.6 11.52 25.6 25.6V448h262.4a25.6 25.6 0 0 1 25.088 20.48l0.512 5.12v76.8a25.6 25.6 0 0 1-25.6 25.6H576v256a32 32 0 0 1-26.24 31.488l-5.76 0.512h-64A32 32 0 0 1 448 832V576H185.6a25.6 25.6 0 0 1-25.088-20.48L160 550.4V473.6c0-14.08 11.52-25.6 25.6-25.6H448V185.6a25.6 25.6 0 0 1 20.48-25.088L473.6 160z'],
  ...props
});

const CalendarNormal = props => createSvgIcon({
  name: 'calandar',
  viewBox: '0 0 1024 1024',
  path: ['M704 64a42.666667 42.666667 0 0 1 42.666667 42.666667v42.666666h6.570666c58.453333 0 88 5.269333 118.741334 20.437334 28.288 13.973333 50.752 34.709333 65.877333 60.8 16.426667 28.373333 22.144 55.658667 22.144 109.610666v386.304c0 53.973333-5.696 81.216-22.144 109.589334-15.146667 26.112-37.589333 46.848-65.877333 60.821333-30.72 15.168-60.266667 20.437333-118.741334 20.437333H270.762667c-58.453333 0-88-5.269333-118.741334-20.437333-28.288-13.973333-50.752-34.709333-65.877333-60.8C69.717333 807.701333 64 780.416 64 726.464V340.181333c0-53.973333 5.696-81.216 22.144-109.589333 15.146667-26.112 37.589333-46.848 65.877333-60.821333C182.741333 154.602667 212.288 149.333333 270.762667 149.333333H277.333333V106.666667a42.666667 42.666667 0 1 1 85.333334 0v42.666666h298.666666V106.666667a42.666667 42.666667 0 0 1 42.666667-42.666667z m55.274667 170.666667h-488.533334c-45.568 0-61.781333 2.837333-78.464 10.88-13.44 6.485333-23.701333 15.786667-30.890666 27.904C152.469333 288.512 149.333333 303.146667 149.333333 344.32v377.984c0 41.173333 3.136 55.829333 12.053334 70.890667a70.506667 70.506667 0 0 0 30.890666 27.904c16.682667 8.042667 32.896 10.88 78.485334 10.88h482.474666c45.589333 0 61.802667-2.837333 78.506667-10.88a70.506667 70.506667 0 0 0 30.869333-27.904c8.917333-15.061333 12.053333-29.717333 12.053334-70.890667V344.341333c0-41.173333-3.136-55.829333-12.053334-70.890666a70.506667 70.506667 0 0 0-30.890666-27.904c-15.914667-7.68-31.424-10.602667-72.448-10.88zM768 362.666667a42.666667 42.666667 0 1 1 0 85.333333H256a42.666667 42.666667 0 1 1 0-85.333333h512z'],
  ...props
});

const ClockNormal = props => createSvgIcon({
  name: 'clock',
  viewBox: '0 0 1024 1024',
  path: ['M512 64c247.424 0 448 200.576 448 448s-200.576 448-448 448S64 759.424 64 512 264.576 64 512 64z m0 81.450667C309.546667 145.450667 145.450667 309.568 145.450667 512c0 202.453333 164.117333 366.549333 366.549333 366.549333 202.453333 0 366.549333-164.117333 366.549333-366.549333 0-202.453333-164.117333-366.549333-366.549333-366.549333zM512 234.666667a42.666667 42.666667 0 0 1 42.56 39.466666L554.666667 277.333333v216.64l115.541333 115.904a42.666667 42.666667 0 0 1 2.410667 57.621334l-2.496 2.709333a42.666667 42.666667 0 0 1-57.621334 2.410667l-2.709333-2.496-128-128.405334a42.666667 42.666667 0 0 1-12.288-26.368L469.333333 511.573333V277.333333a42.666667 42.666667 0 0 1 42.666667-42.666666z'],
  ...props
});

const CodeBetaNormal = props => createSvgIcon({
  name: 'code-beta',
  viewBox: '0 0 20 20',
  path: ['M6.38552 7.18162C6.56136 7.39454 6.53131 7.70969 6.31839 7.88553L3.78103 9.98109L6.32177 12.1173C6.53313 12.295 6.56041 12.6104 6.3827 12.8218C6.20499 13.0331 5.88959 13.0604 5.67823 12.8827L2.67823 10.3604C2.56465 10.2649 2.49935 10.1238 2.5 9.97545C2.50066 9.82706 2.56719 9.68663 2.68161 9.59213L5.68161 7.11449C5.89452 6.93865 6.20968 6.9687 6.38552 7.18162Z', 'M13.6145 7.18162C13.7903 6.9687 14.1055 6.93865 14.3184 7.11449L17.3184 9.59213C17.4328 9.68663 17.4994 9.82706 17.5 9.97545C17.5007 10.1238 17.4354 10.2649 17.3218 10.3604L14.3218 12.8827C14.1104 13.0604 13.795 13.0331 13.6173 12.8218C13.4396 12.6104 13.4669 12.295 13.6782 12.1173L16.219 9.98109L13.6816 7.88553C13.4687 7.70969 13.4386 7.39454 13.6145 7.18162Z', 'M12.171 4.03024C12.4305 4.12461 12.5644 4.41149 12.47 4.67101L8.47003 15.671C8.37566 15.9305 8.08878 16.0644 7.82926 15.97C7.56975 15.8757 7.43587 15.5888 7.53024 15.3293L11.5302 4.32926C11.6246 4.06975 11.9115 3.93587 12.171 4.03024Z'],
  ...props
});

const CopyNormal = props => createSvgIcon({
  name: 'copy',
  viewBox: '0 0 1024 1024',
  path: ['M640 213.333333a85.333333 85.333333 0 0 1 85.333333 85.333334v576a85.333333 85.333333 0 0 1-85.333333 85.333333H404.970667a64 64 0 0 1-47.061334-20.629333l-191.637333-207.936A64 64 0 0 1 149.333333 688.064V298.666667a85.333333 85.333333 0 0 1 85.333334-85.333334h405.333333z m0 85.333334H234.666667v345.578666h149.333333a64 64 0 0 1 63.893333 60.245334L448 708.266667V874.666667h192V298.666667zM362.666667 818.624v-89.045333h-82.069334L362.666667 818.624zM754.432 64c65.792 0 117.76 55.488 120.149333 123.157333L874.666667 192v508.949333a42.666667 42.666667 0 0 1-85.226667 3.2l-0.106667-3.2V192c0-23.210667-14.976-40.832-32.170666-42.538667L754.432 149.333333H405.333333a42.666667 42.666667 0 0 1-3.2-85.226666L405.333333 64h349.098667z'],
  ...props
});

const DeleteNormal = props => createSvgIcon({
  name: 'delete',
  viewBox: '0 0 1024 1024',
  path: ['M106.666667 213.333333m42.666666 0l725.333334 0q42.666667 0 42.666666 42.666667l0 0q0 42.666667-42.666666 42.666667l-725.333334 0q-42.666667 0-42.666666-42.666667l0 0q0-42.666667 42.666666-42.666667ZM789.333333 362.666667a42.666667 42.666667 0 0 1 42.56 39.466666L832 405.333333v422.954667c0 70.698667-54.336 129.002667-123.178667 131.626667L704 960H320c-69.482667 0-125.397333-56.704-127.914667-126.805333L192 828.288V405.333333a42.666667 42.666667 0 0 1 85.226667-3.2L277.333333 405.333333v422.954667c0 24.874667 17.856 44.586667 39.68 46.272L320 874.666667h384c22.144 0 40.96-18.624 42.56-43.008l0.106667-3.370667V405.333333a42.666667 42.666667 0 0 1 42.666666-42.666666zM586.666667 64A117.333333 117.333333 0 0 1 704 181.333333V298.666667H320V181.333333A117.333333 117.333333 0 0 1 437.333333 64h149.333334z m0 85.333333h-149.333334a32 32 0 0 0-31.850666 28.928L405.333333 181.333333V213.333333h213.333334V181.333333a32 32 0 0 0-28.928-31.850666L586.666667 149.333333zM384 448m42.666667 0l0 0q42.666667 0 42.666666 42.666667l0 170.666666q0 42.666667-42.666666 42.666667l0 0q-42.666667 0-42.666667-42.666667l0-170.666666q0-42.666667 42.666667-42.666667ZM554.666667 448m42.666666 0l0 0q42.666667 0 42.666667 42.666667l0 170.666666q0 42.666667-42.666667 42.666667l0 0q-42.666667 0-42.666666-42.666667l0-170.666666q0-42.666667 42.666666-42.666667Z'],
  ...props
});

const LoadingNormal = props => createSvgIcon({
  name: 'loading',
  viewBox: '0 0 1024 1024',
  path: ['M512 64c247.424 0 448 200.576 448 448a42.666667 42.666667 0 1 1-85.333333 0c0-200.298667-162.368-362.666667-362.666667-362.666667S149.333333 311.701333 149.333333 512s162.368 362.666667 362.666667 362.666667a361.173333 361.173333 0 0 0 246.442667-96.597334 42.666667 42.666667 0 0 1 58.005333 62.592A446.485333 446.485333 0 0 1 512 960C264.576 960 64 759.424 64 512S264.576 64 512 64z'],
  ...props
});

const NoticeNormal = props => createSvgIcon({
  name: 'notice',
  viewBox: '0 0 1024 1024',
  path: ['M917.314189 703.990662c-43.75862 0-78.929654-34.55398-78.929654-76.79606V428.092985c0-142.815683-94.516654-263.696798-225.128387-305.634956-14.081717-33.949206-54.094012-58.4359-101.256148-58.4359s-87.174432 24.487717-101.256148 58.4359C280.132118 164.396187 185.615465 285.277302 185.615465 428.092985v199.101617c0 42.243103-35.171034 76.79606-78.929654 76.79606-56.886615 0-56.886615 85.329411 0 85.329411h810.627355c56.886615 0 56.886615-85.329411 0.001023-85.329411z m-665.922648 0c12.471033-22.842241 19.552312-48.988738 19.552311-76.79606V428.092985c0-130.211621 107.757213-236.077763 241.055125-236.077763S753.055125 297.881364 753.055125 428.092985v199.101617c0 27.807323 7.082302 53.953819 19.552311 76.79606H251.391541zM575.996546 831.984778H448.00243c-31.760354 0-52.386114 33.461089-38.115086 61.835324 20.244067 40.248679 59.019185 66.007343 102.111633 66.007343s81.868589-25.758664 102.111632-66.007343c14.272052-28.374234-6.353708-61.835324-38.114063-61.835324z'],
  ...props
});

const BorderAllNormal = props => createSvgIcon({
  name: 'border-all',
  viewBox: '0 0 1024 1024',
  path: ['M917.333333 64a42.666667 42.666667 0 0 1 42.666667 42.666667v810.666666a42.666667 42.666667 0 0 1-42.666667 42.666667H106.666667a42.666667 42.666667 0 0 1-42.666667-42.666667V106.666667a42.666667 42.666667 0 0 1 42.666667-42.666667h810.666666zM469.333333 554.666667H149.333333v320h320V554.666667z m405.333334 0H554.666667v320h320V554.666667zM469.333333 149.333333H149.333333v320h320V149.333333z m405.333334 0H554.666667v320h320V149.333333z', 'M917.333333 85.333333a21.333333 21.333333 0 0 1 21.333334 21.333334v810.666666a21.333333 21.333333 0 0 1-21.333334 21.333334H106.666667a21.333333 21.333333 0 0 1-21.333334-21.333334V106.666667a21.333333 21.333333 0 0 1 21.333334-21.333334zM490.666667 533.333333H128v362.666667h362.666667V533.333333z m405.333333 0H533.333333v362.666667h362.666667V533.333333zM490.666667 128H128v362.666667h362.666667V128z m405.333333 0H533.333333v362.666667h362.666667V128z'],
  ...props
});

const BorderBottomNormal = props => createSvgIcon({
  name: 'border-bottom',
  viewBox: '0 0 1024 1024',
  path: ['M938.666667 865.344v82.666667c0 6.613333-5.376 11.989333-12.010667 11.989333H118.677333A11.989333 11.989333 0 0 1 106.666667 948.010667v-82.666667c0-6.634667 5.376-12.010667 12.010666-12.010667h807.978667c6.634667 0 12.010667 5.376 12.010667 12.010667z', 'M910.144 874.666667H135.189333a7.210667 7.210667 0 0 0-7.210666 7.210666v49.6c0 3.968 3.221333 7.189333 7.210666 7.189334h774.933334a7.189333 7.189333 0 0 0 7.189333-7.189334v-49.6a7.210667 7.210667 0 0 0-7.189333-7.210666z', 'M182.528 751.018667H116.138667A9.514667 9.514667 0 0 1 106.666667 741.525333v-66.346666c0-5.226667 4.266667-9.493333 9.472-9.493334h66.389333c5.205333 0 9.472 4.266667 9.472 9.472v66.368c0 5.226667-4.266667 9.493333-9.472 9.493334z m0-562.965334H116.138667A9.514667 9.514667 0 0 1 106.666667 178.581333V112.213333c0-5.226667 4.266667-9.493333 9.472-9.493333h66.389333c5.205333 0 9.472 4.266667 9.472 9.493333v66.346667c0 5.226667-4.266667 9.493333-9.472 9.493333z m0 375.317334H116.138667A9.514667 9.514667 0 0 1 106.666667 553.877333v-66.346666c0-5.226667 4.266667-9.493333 9.472-9.493334h66.389333c5.205333 0 9.472 4.266667 9.472 9.472v66.368c0 5.226667-4.266667 9.493333-9.472 9.493334z m0-187.669334H116.138667A9.514667 9.514667 0 0 1 106.666667 366.229333v-66.368c0-5.226667 4.266667-9.493333 9.472-9.493333h66.389333c5.205333 0 9.472 4.266667 9.472 9.493333v66.368c0 5.205333-4.266667 9.472-9.472 9.472z m187.648 187.669334H303.786667a9.514667 9.514667 0 0 1-9.493334-9.493334v-66.346666c0-5.226667 4.266667-9.493333 9.493334-9.493334h66.346666c5.226667 0 9.493333 4.266667 9.493334 9.472v66.368c0 5.226667-4.266667 9.493333-9.472 9.493334z m0-375.317334H303.786667a9.514667 9.514667 0 0 1-9.493334-9.472V112.213333c0-5.226667 4.266667-9.493333 9.493334-9.493333h66.346666c5.226667 0 9.493333 4.266667 9.493334 9.493333v66.346667c0 5.226667-4.266667 9.493333-9.472 9.493333z m375.296 0h-66.368a9.514667 9.514667 0 0 1-9.472-9.472V112.213333c0-5.226667 4.266667-9.493333 9.472-9.493333h66.368c5.226667 0 9.493333 4.266667 9.493333 9.493333v66.346667c0 5.226667-4.266667 9.493333-9.493333 9.493333z m0 375.317334h-66.368a9.514667 9.514667 0 0 1-9.472-9.493334v-66.346666c0-5.226667 4.266667-9.493333 9.472-9.493334h66.368c5.226667 0 9.493333 4.266667 9.493333 9.472v66.368c0 5.226667-4.266667 9.493333-9.493333 9.493334z m187.648 0h-66.346667a9.514667 9.514667 0 0 1-9.493333-9.493334v-66.346666c0-5.226667 4.266667-9.493333 9.472-9.493334h66.368c5.226667 0 9.493333 4.266667 9.493333 9.472v66.368c0 5.226667-4.266667 9.493333-9.493333 9.493334z m-375.296 0h-66.368a9.514667 9.514667 0 0 1-9.493333-9.493334v-66.346666c0-5.226667 4.266667-9.493333 9.493333-9.493334h66.346667c5.226667 0 9.493333 4.266667 9.493333 9.472v66.368c0 5.226667-4.266667 9.493333-9.472 9.493334zM933.12 188.053333h-66.346667a9.514667 9.514667 0 0 1-9.493333-9.472V112.213333c0-5.226667 4.266667-9.493333 9.472-9.493333h66.368c5.226667 0 9.493333 4.266667 9.493333 9.493333v66.346667c0 5.226667-4.266667 9.493333-9.493333 9.493333z m-375.296 0h-66.368a9.514667 9.514667 0 0 1-9.493333-9.472V112.213333c0-5.226667 4.266667-9.493333 9.493333-9.493333h66.346667c5.226667 0 9.493333 4.266667 9.493333 9.493333v66.346667c0 5.226667-4.266667 9.493333-9.472 9.493333zM933.12 751.018667h-66.346667a9.514667 9.514667 0 0 1-9.493333-9.493334v-66.346666c0-5.226667 4.266667-9.493333 9.472-9.493334h66.368c5.226667 0 9.493333 4.266667 9.493333 9.472v66.368c0 5.226667-4.266667 9.493333-9.493333 9.493334z m-375.296 0h-66.368a9.514667 9.514667 0 0 1-9.493333-9.493334v-66.346666c0-5.226667 4.266667-9.493333 9.493333-9.493334h66.346667c5.226667 0 9.493333 4.266667 9.493333 9.472v66.368c0 5.226667-4.266667 9.493333-9.472 9.493334zM933.12 375.68h-66.346667a9.514667 9.514667 0 0 1-9.493333-9.472v-66.368c0-5.226667 4.266667-9.493333 9.472-9.493333h66.368c5.226667 0 9.493333 4.266667 9.493333 9.493333v66.368c0 5.205333-4.266667 9.472-9.493333 9.472z m-375.296 0h-66.368a9.514667 9.514667 0 0 1-9.493333-9.472v-66.368c0-5.226667 4.266667-9.493333 9.493333-9.493333h66.346667c5.226667 0 9.493333 4.266667 9.493333 9.493333v66.368c0 5.205333-4.266667 9.472-9.472 9.472z'],
  ...props
});

const BorderHorizontalNormal = props => createSvgIcon({
  name: 'border-horizontal',
  viewBox: '0 0 1024 1024',
  path: ['M85.333333 553.344l0-82.666667a11.989333 11.989333 0 0 1 12.010667-12.010666L926.656 458.666667c6.634667 0 12.010667 5.376 12.010667 12.010666l0 82.666667c0 6.613333-5.376 11.989333-11.989334 11.989333l-829.354666 0c-6.613333 0-11.989333-5.376-11.989334-11.989333z', 'M113.856 544L910.144 544A7.210667 7.210667 0 0 0 917.333333 536.81066701l0-49.62133402a7.210667 7.210667 0 0 0-7.210666-7.18933299l-796.266667 0c-3.968 0-7.189333 3.221333-7.189333 7.210667l0 49.60000001a7.210667 7.210667 0 0 0 7.189333 7.18933299z', 'M167.893333 272.981333l-66.346666 0c-5.226667 0-9.493333 4.266667-9.493334 9.493334l0 66.346666c0 5.226667 4.266667 9.493333 9.493334 9.493334l66.346666 0c5.226667 0 9.493333-4.266667 9.493334-9.47199999L177.386667 282.45333301c0-5.226667-4.266667-9.493333-9.47200001-9.49333301z m0 584.298667l-66.346666 0c-5.226667 0-9.493333 4.266667-9.493334 9.472l0 66.368c0 5.226667 4.266667 9.493333 9.493334 9.493333l66.346666 0c5.226667 0 9.493333-4.266667 9.493334-9.493333l0-66.346667c0-5.226667-4.266667-9.493333-9.472-9.493333z m0-780.650667l-66.346666 0c-5.226667 0-9.493333 4.266667-9.493334 9.493334l0 66.346666c0 5.226667 4.266667 9.493333 9.493334 9.493334l66.346666 0c5.226667 0 9.493333-4.266667 9.493334-9.47199999L177.386667 86.122667c0-5.226667-4.266667-9.493333-9.47200001-9.493334z m0 593.002667l-66.346666 0c-5.226667 0-9.493333 4.266667-9.493334 9.472l0 66.368c0 5.226667 4.266667 9.493333 9.493334 9.493333l66.346666 0c5.226667 0 9.493333-4.266667 9.493334-9.493333l0-66.368c0-5.205333-4.266667-9.472-9.472-9.472zM355.584 76.629333l-66.368-1e-8c-5.226667 0-9.493333 4.266667-9.493333 9.49333401l0 66.346666c0 5.226667 4.266667 9.493333 9.493333 9.493334l66.368 0c5.205333 0 9.472-4.266667 9.472-9.472L365.056 86.122667c0-5.226667-4.266667-9.493333-9.472-9.493334z m0 780.650667l-66.368 0c-5.226667 0-9.493333 4.266667-9.493333 9.472l0 66.368c0 5.226667 4.266667 9.493333 9.493333 9.49333299l66.368 1e-8c5.205333 0 9.472-4.266667 9.472-9.493333l0-66.346667c0-5.226667-4.266667-9.493333-9.472-9.493333z m375.296 0l-66.346667 0c-5.226667 0-9.493333 4.266667-9.493333 9.472l0 66.368c0 5.226667 4.266667 9.493333 9.472 9.493333L730.88 942.613333c5.226667 0 9.493333-4.266667 9.493333-9.493333l0-66.346667c0-5.226667-4.266667-9.493333-9.493333-9.493333z m0-780.650667l-66.34666699 0c-5.226667 0-9.493333 4.266667-9.49333301 9.493334l0 66.346666c0 5.226667 4.266667 9.493333 9.472 9.493334L730.88 161.962667c5.226667 0 9.493333-4.266667 9.493333-9.472L740.373333 86.122667c0-5.226667-4.266667-9.493333-9.493333-9.493334z m187.66933301 0l-66.38933301 0c-5.205333 0-9.472 4.266667-9.472 9.493334l0 66.346666c0 5.226667 4.266667 9.493333 9.472 9.493334L918.528 161.962667c5.205333 0 9.472-4.266667 9.472-9.472L928 86.122667c0-5.226667-4.266667-9.493333-9.472-9.493334z m-375.31733301-1e-8l-66.346667 1e-8c-5.226667 0-9.493333 4.266667-9.493333 9.493334l0 66.34666599c0 5.226667 4.266667 9.493333 9.472 9.49333401l66.368 0c5.226667 0 9.493333-4.266667 9.493333-9.47199999L552.725333 86.122667c0-5.226667-4.266667-9.493333-9.493333-9.49333401zM918.528 857.28l-66.389333 0c-5.205333 0-9.472 4.266667-9.472 9.472l0 66.368c0 5.226667 4.266667 9.493333 9.472 9.49333299L918.528 942.613333c5.205333 0 9.472-4.266667 9.472-9.493333l0-66.346667c0-5.226667-4.266667-9.493333-9.472-9.493333z m-375.317333 0l-66.346667 0c-5.226667 0-9.493333 4.266667-9.49333299 9.472l-1e-8 66.368c0 5.226667 4.266667 9.493333 9.472 9.493333l66.368-1e-8c5.226667 0 9.493333-4.266667 9.493333-9.49333299l0-66.346667c0-5.226667-4.266667-9.493333-9.493333-9.493333zM918.528 272.981333l-66.389333-1e-8c-5.205333 0-9.472 4.266667-9.472 9.49333401l0 66.346666c0 5.226667 4.266667 9.493333 9.472 9.493334L918.528 358.314667c5.205333 0 9.472-4.266667 9.472-9.472L928 282.453333c0-5.226667-4.266667-9.493333-9.472-9.493333z m-375.31733299 0l-66.34666701 0c-5.226667 0-9.493333 4.266667-9.493333 9.493334l1e-8 66.346666c0 5.226667 4.266667 9.493333 9.47199999 9.493334l66.368 0c5.226667 0 9.493333-4.266667 9.49333301-9.472L552.70400001 282.453333c0-5.226667-4.266667-9.493333-9.493333-9.493333zM918.528 669.653333l-66.389333 0c-5.205333 0-9.472 4.266667-9.472 9.472l0 66.368c0 5.226667 4.266667 9.493333 9.472 9.49333399L918.528 754.986667c5.205333 0 9.472-4.266667 9.472-9.493334l0-66.368c0-5.205333-4.266667-9.472-9.472-9.472z m-375.317333 0l-66.34666699 0c-5.226667 0-9.493333 4.266667-9.49333301 9.472l0 66.368c0 5.226667 4.266667 9.493333 9.472 9.493334l66.368-1e-8c5.226667 0 9.493333-4.266667 9.49333301-9.49333399l-1e-8-66.368c0-5.205333-4.266667-9.472-9.493333-9.472z'],
  ...props
});

const BorderInnerNormal = props => createSvgIcon({
  name: 'border-inner',
  viewBox: '0 0 1024 1024',
  path: ['M542.805333 85.333333c6.528 0 11.861333 4.181333 11.861334 9.28V458.666667h353.621333c4.416 0 8.128 4.224 8.896 9.728l0.149333 2.133333v82.944c0 6.528-4.053333 11.861333-9.045333 11.861333H554.666667v364.053334c0 4.544-4.224 8.341333-9.728 9.130666l-2.133334 0.149334h-82.944c-6.528 0-11.861333-4.181333-11.861333-9.28V565.333333H94.378667c-4.416 0-8.128-4.224-8.896-9.728l-0.149334-2.133333v-82.944c0-6.528 4.053333-11.861333 9.045334-11.861333H448V94.613333c0-4.544 4.224-8.341333 9.728-9.130666l2.133333-0.149334z', 'M526.229333 106.666667c3.904 0 7.104 3.968 7.104 8.810666L533.312 480h354.112c4.117333 0 7.594667 2.453333 8.405333 5.674667l0.170667 1.429333v49.792c0 3.904-3.861333 7.104-8.576 7.104H533.333333v364.522667c0 4.245333-2.453333 7.808-5.674666 8.64l-1.429334 0.170666h-49.792c-3.904 0-7.104-3.968-7.104-8.810666V544H115.242667c-4.117333 0-7.594667-2.453333-8.405334-5.674667L106.666667 536.896v-49.792c0-3.904 3.861333-7.104 8.576-7.104H469.333333L469.333333 115.477333c0-4.245333 2.453333-7.808 5.674667-8.64L476.437333 106.666667z', 'M913.770667 844.629333c5.205333 0 9.472 4.266667 9.472 9.493334v66.346666c0 5.226667-4.266667 9.493333-9.472 9.493334h-66.368a9.514667 9.514667 0 0 1-9.493334-9.472v-66.368c0-5.226667 4.266667-9.493333 9.493334-9.493334z m-187.648 0c5.205333 0 9.472 4.266667 9.472 9.493334v66.346666c0 5.226667-4.266667 9.493333-9.472 9.493334h-66.389334a9.514667 9.514667 0 0 1-9.472-9.472v-66.368c0-5.226667 4.266667-9.493333 9.472-9.493334z m-375.317334 0c5.226667 0 9.493333 4.266667 9.493334 9.493334v66.346666c0 5.226667-4.266667 9.493333-9.493334 9.493334h-66.368a9.514667 9.514667 0 0 1-9.472-9.472v-66.368c0-5.226667 4.266667-9.493333 9.472-9.493334z m-187.648 0c5.205333 0 9.472 4.266667 9.472 9.493334v66.346666c0 5.226667-4.266667 9.493333-9.472 9.493334H96.789333a9.514667 9.514667 0 0 1-9.493333-9.472v-66.368c0-5.226667 4.266667-9.493333 9.493333-9.493334z m750.613334-196.330666c5.205333 0 9.472 4.266667 9.472 9.472v66.368c0 5.226667-4.266667 9.493333-9.472 9.493333h-66.368a9.514667 9.514667 0 0 1-9.493334-9.493333v-66.368c0-5.205333 4.266667-9.472 9.493334-9.472z m-750.613334 0c5.205333 0 9.472 4.266667 9.472 9.472v66.368c0 5.226667-4.266667 9.493333-9.472 9.493333H96.789333a9.514667 9.514667 0 0 1-9.493333-9.493333v-66.368c0-5.205333 4.266667-9.472 9.493333-9.472z m750.613334-375.317334c5.205333 0 9.472 4.266667 9.472 9.493334v66.346666c0 5.226667-4.266667 9.493333-9.472 9.493334h-66.368a9.514667 9.514667 0 0 1-9.493334-9.472V282.453333c0-5.226667 4.266667-9.493333 9.493334-9.493333z m-750.613334 0c5.205333 0 9.472 4.266667 9.472 9.493334v66.346666c0 5.226667-4.266667 9.493333-9.472 9.493334H96.789333a9.514667 9.514667 0 0 1-9.493333-9.472V282.453333c0-5.226667 4.266667-9.493333 9.493333-9.493333zM913.770667 85.333333c5.205333 0 9.472 4.266667 9.472 9.472v66.389334c0 5.205333-4.266667 9.472-9.472 9.472h-66.368a9.514667 9.514667 0 0 1-9.493334-9.472V94.805333c0-5.205333 4.266667-9.472 9.493334-9.472z m-187.648 0c5.205333 0 9.472 4.266667 9.472 9.472v66.389334c0 5.205333-4.266667 9.472-9.472 9.472h-66.389334a9.514667 9.514667 0 0 1-9.472-9.472V94.805333c0-5.205333 4.266667-9.472 9.472-9.472zM350.805333 85.333333c5.226667 0 9.493333 4.266667 9.493334 9.472v66.389334c0 5.205333-4.266667 9.472-9.493334 9.472h-66.368a9.514667 9.514667 0 0 1-9.472-9.472V94.805333c0-5.205333 4.266667-9.472 9.472-9.472zM163.157333 85.333333c5.205333 0 9.472 4.266667 9.472 9.472v66.389334c0 5.205333-4.266667 9.472-9.472 9.472H96.789333a9.514667 9.514667 0 0 1-9.493333-9.472V94.805333c0-5.205333 4.266667-9.472 9.493333-9.472z'],
  ...props
});

const BorderLeftNormal = props => createSvgIcon({
  name: 'border-left',
  viewBox: '0 0 1024 1024',
  path: ['M158.656 938.666667l-82.666667 0c-6.613333 0-11.989333-5.376-11.989333-12.010667L64 118.677333A11.989333 11.989333 0 0 1 75.989333 106.666667l82.666667 0c6.634667 0 12.010667 5.376 12.010667 12.010666l0 807.978667c0 6.634667-5.376 12.010667-12.010667 12.010667z', 'M149.333333 910.14399999L149.33333299 135.189333a7.210667 7.210667 0 0 0-7.21066599-7.210666l-49.6 0c-3.968 0-7.189333 3.221333-7.189334 7.210666l0 774.933334a7.189333 7.189333 0 0 0 7.189334 7.189333l49.6 0a7.210667 7.210667 0 0 0 7.21066599-7.189333z', 'M272.981333 182.52799999L272.981333 116.138667A9.514667 9.514667 0 0 1 282.474667 106.666667l66.34666599 0c5.226667 0 9.493333 4.266667 9.49333401 9.472l0 66.389333c0 5.205333-4.266667 9.472-9.47199999 9.472l-66.36800001 0c-5.226667 0-9.493333-4.266667-9.493334-9.47200001z m562.965334 1e-8L835.946667 116.138667A9.514667 9.514667 0 0 1 845.418667 106.66666699L911.786667 106.666667c5.226667 0 9.493333 4.266667 9.493333 9.472l0 66.38933299c0 5.205333-4.266667 9.472-9.49333301 9.47200001l-66.34666699 0c-5.226667 0-9.493333-4.266667-9.493333-9.472z m-375.317334 0L460.629333 116.13866701A9.514667 9.514667 0 0 1 470.122667 106.666667l66.346666 0c5.226667 0 9.493333 4.266667 9.493334 9.472l0 66.389333c0 5.205333-4.266667 9.472-9.472 9.472l-66.368 0c-5.226667 0-9.493333-4.266667-9.493334-9.472z m187.669334 0L648.298667 116.138667A9.514667 9.514667 0 0 1 657.770667 106.666667l66.368 0c5.226667 0 9.493333 4.266667 9.493333 9.472l0 66.389333c0 5.205333-4.266667 9.472-9.493333 9.472l-66.36800001 0c-5.205333 0-9.472-4.266667-9.47199999-9.472z m-187.66933399 187.648L460.629333 303.786667a9.514667 9.514667 0 0 1 9.493334-9.493334l66.346666 0c5.226667 0 9.493333 4.266667 9.493334 9.493334l0 66.346666c0 5.226667-4.266667 9.493333-9.472 9.493334l-66.368 0c-5.226667 0-9.493333-4.266667-9.493334-9.47199999z m375.31733399 0L835.946667 303.786667a9.514667 9.514667 0 0 1 9.472-9.49333401L911.786667 294.293333c5.226667 0 9.493333 4.266667 9.493333 9.493334l-1e-8 66.346666c0 5.226667-4.266667 9.493333-9.49333299 9.493334l-66.346667 0c-5.226667 0-9.493333-4.266667-9.493333-9.472z m0 375.296l0-66.368a9.514667 9.514667 0 0 1 9.472-9.472L911.786667 669.632c5.226667 0 9.493333 4.266667 9.493333 9.472l0 66.368c0 5.226667-4.266667 9.493333-9.493333 9.493333l-66.346667 0c-5.226667 0-9.493333-4.266667-9.493333-9.493333z m-375.317334 0l0-66.368a9.514667 9.514667 0 0 1 9.493334-9.472l66.346666 0c5.226667 0 9.493333 4.266667 9.493334 9.472l0 66.368c0 5.226667-4.266667 9.493333-9.472 9.493333l-66.368 0c-5.226667 0-9.493333-4.266667-9.493334-9.493333z m0 187.648l0-66.346667a9.514667 9.514667 0 0 1 9.493334-9.493333l66.346666 0c5.226667 0 9.493333 4.266667 9.493334 9.472l0 66.368c0 5.226667-4.266667 9.493333-9.472 9.493333l-66.368 0c-5.226667 0-9.493333-4.266667-9.493334-9.493333z m0-375.296l0-66.368a9.514667 9.514667 0 0 1 9.493334-9.493333l66.346666 0c5.226667 0 9.493333 4.266667 9.493334 9.493333l0 66.346667c0 5.226667-4.266667 9.493333-9.472 9.493333l-66.368 0c-5.226667 0-9.493333-4.266667-9.493334-9.472zM835.946667 933.12l0-66.346667a9.514667 9.514667 0 0 1 9.472-9.493333L911.786667 857.28c5.226667 0 9.493333 4.266667 9.49333299 9.472l1e-8 66.368c0 5.226667-4.266667 9.493333-9.493333 9.493333l-66.346667-1e-8c-5.226667 0-9.493333-4.266667-9.493333-9.49333299z m0-375.296l0-66.368a9.514667 9.514667 0 0 1 9.472-9.493333L911.786667 481.962667c5.226667 0 9.493333 4.266667 9.493333 9.493333l0 66.346667c0 5.226667-4.266667 9.493333-9.493333 9.493333l-66.346667 0c-5.226667 0-9.493333-4.266667-9.493333-9.472zM272.981333 933.12l0-66.346667a9.514667 9.514667 0 0 1 9.493334-9.493333l66.346666 0c5.226667 0 9.493333 4.266667 9.493334 9.472l0 66.368c0 5.226667-4.266667 9.493333-9.472 9.493333l-66.368 0c-5.226667 0-9.493333-4.266667-9.493334-9.493333z m0-375.29599999l0-66.36800001a9.514667 9.514667 0 0 1 9.493334-9.493333l66.346666 0c5.226667 0 9.493333 4.266667 9.493334 9.493333l0 66.346667c0 5.226667-4.266667 9.493333-9.472 9.493333l-66.368 0c-5.226667 0-9.493333-4.266667-9.493334-9.47199999zM648.32 933.12l0-66.346667a9.514667 9.514667 0 0 1 9.472-9.493333l66.368 0c5.226667 0 9.493333 4.266667 9.493333 9.472l0 66.368c0 5.226667-4.266667 9.493333-9.493333 9.493333l-66.368 0c-5.205333 0-9.472-4.266667-9.472-9.493333z m0-375.296l0-66.368a9.514667 9.514667 0 0 1 9.472-9.493333l66.368 0c5.226667 0 9.493333 4.266667 9.493333 9.493333l0 66.346667c0 5.226667-4.266667 9.493333-9.493333 9.493333l-66.368 0c-5.205333 0-9.472-4.266667-9.472-9.472z'],
  ...props
});

const BorderNoneNormal = props => createSvgIcon({
  name: 'border-none',
  viewBox: '0 0 1024 1024',
  path: ['M847.402667 754.965333h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.493333v-66.368c0-5.205333-4.266667-9.472-9.472-9.472h-66.368c-5.226667 0-9.493333 4.266667-9.493334 9.472v66.368c0 5.226667 4.266667 9.493333 9.493334 9.493333z m0-562.965333h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.472V116.138667c0-5.205333-4.266667-9.472-9.472-9.472h-66.368c-5.226667 0-9.493333 4.266667-9.493334 9.472v66.389333c0 5.205333 4.266667 9.472 9.493334 9.472z m0 759.296h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.472v-66.368c0-5.226667-4.266667-9.493333-9.472-9.493333h-66.368c-5.226667 0-9.493333 4.266667-9.493334 9.493333v66.346667c0 5.226667 4.266667 9.493333 9.493334 9.493333z m0-571.648h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.472V303.786667c0-5.226667-4.266667-9.493333-9.472-9.493334h-66.368c-5.226667 0-9.493333 4.266667-9.493334 9.493334v66.346666c0 5.226667 4.266667 9.493333 9.493334 9.493334z m-187.669334 571.648h66.389334c5.205333 0 9.472-4.266667 9.472-9.472v-66.368c0-5.226667-4.266667-9.493333-9.472-9.493333h-66.389334c-5.205333 0-9.472 4.266667-9.472 9.493333v66.346667c0 5.226667 4.266667 9.493333 9.472 9.493333z m0-759.296h66.389334c5.205333 0 9.472-4.266667 9.472-9.472V116.138667c0-5.205333-4.266667-9.472-9.472-9.472h-66.389334c-5.205333 0-9.472 4.266667-9.472 9.472v66.389333c0 5.205333 4.266667 9.472 9.472 9.472zM284.437333 192h66.368c5.226667 0 9.493333-4.266667 9.493334-9.472V116.138667c0-5.205333-4.266667-9.472-9.493334-9.472h-66.368c-5.205333 0-9.472 4.266667-9.472 9.472v66.389333c0 5.205333 4.266667 9.472 9.472 9.472z m0 759.296h66.368c5.226667 0 9.493333-4.266667 9.493334-9.472v-66.368c0-5.226667-4.266667-9.493333-9.493334-9.493333h-66.368c-5.205333 0-9.472 4.266667-9.472 9.493333v66.346667c0 5.226667 4.266667 9.493333 9.472 9.493333z m-187.648 0h66.346667c5.226667 0 9.493333-4.266667 9.493333-9.472v-66.368c0-5.226667-4.266667-9.493333-9.472-9.493333H96.789333c-5.226667 0-9.493333 4.266667-9.493333 9.493333v66.346667c0 5.226667 4.266667 9.493333 9.493333 9.493333z m375.296 0h66.368c5.226667 0 9.493333-4.266667 9.493334-9.472v-66.368c0-5.226667-4.266667-9.493333-9.493334-9.493333h-66.346666c-5.226667 0-9.493333 4.266667-9.493334 9.493333v66.346667c0 5.226667 4.266667 9.493333 9.472 9.493333zM96.789333 192h66.346667c5.226667 0 9.493333-4.266667 9.493333-9.472V116.138667c0-5.205333-4.266667-9.472-9.472-9.472H96.789333c-5.226667 0-9.493333 4.266667-9.493333 9.472v66.389333c0 5.205333 4.266667 9.472 9.493333 9.472z m375.296 0h66.368c5.226667 0 9.493333-4.266667 9.493334-9.472V116.138667c0-5.205333-4.266667-9.472-9.493334-9.472h-66.346666c-5.226667 0-9.493333 4.266667-9.493334 9.472v66.389333c0 5.205333 4.266667 9.472 9.472 9.472zM96.789333 576h66.346667c5.226667 0 9.493333-4.266667 9.493333-9.472v-66.389333c0-5.205333-4.266667-9.472-9.472-9.472H96.789333c-5.226667 0-9.493333 4.266667-9.493333 9.472v66.389333c0 5.205333 4.266667 9.472 9.493333 9.472z m187.648 0h66.368c5.226667 0 9.493333-4.266667 9.493334-9.472v-66.389333c0-5.205333-4.266667-9.472-9.493334-9.472h-66.368c-5.205333 0-9.472 4.266667-9.472 9.472v66.389333c0 5.205333 4.266667 9.472 9.472 9.472z m375.296 0h66.389334c5.205333 0 9.472-4.266667 9.472-9.472v-66.389333c0-5.205333-4.266667-9.472-9.472-9.472h-66.389334c-5.205333 0-9.472 4.266667-9.472 9.472v66.389333c0 5.205333 4.266667 9.472 9.472 9.472z m187.669334 0h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.472v-66.389333c0-5.205333-4.266667-9.472-9.472-9.472h-66.368c-5.226667 0-9.493333 4.266667-9.493334 9.472v66.389333c0 5.205333 4.266667 9.472 9.493334 9.472z m-375.317334 0h66.368c5.226667 0 9.493333-4.266667 9.493334-9.472v-66.389333c0-5.205333-4.266667-9.472-9.493334-9.472h-66.346666c-5.226667 0-9.493333 4.266667-9.493334 9.472v66.389333c0 5.205333 4.266667 9.472 9.472 9.472zM96.789333 754.965333h66.346667c5.226667 0 9.493333-4.266667 9.493333-9.493333v-66.368c0-5.205333-4.266667-9.472-9.472-9.472H96.789333c-5.226667 0-9.493333 4.266667-9.493333 9.472v66.368c0 5.226667 4.266667 9.493333 9.493333 9.493333z m375.296 0h66.368c5.226667 0 9.493333-4.266667 9.493334-9.493333v-66.368c0-5.205333-4.266667-9.472-9.493334-9.472h-66.346666c-5.226667 0-9.493333 4.266667-9.493334 9.472v66.368c0 5.226667 4.266667 9.493333 9.472 9.493333zM96.789333 379.648h66.346667c5.226667 0 9.493333-4.266667 9.493333-9.472V303.786667c0-5.226667-4.266667-9.493333-9.472-9.493334H96.789333c-5.226667 0-9.493333 4.266667-9.493333 9.493334v66.346666c0 5.226667 4.266667 9.493333 9.493333 9.493334z m375.296 0h66.368c5.226667 0 9.493333-4.266667 9.493334-9.472V303.786667c0-5.226667-4.266667-9.493333-9.493334-9.493334h-66.346666c-5.226667 0-9.493333 4.266667-9.493334 9.493334v66.346666c0 5.226667 4.266667 9.493333 9.472 9.493334z'],
  ...props
});

const BorderOuterNormal = props => createSvgIcon({
  name: 'border-outer',
  viewBox: '0 0 1024 1024',
  path: ['M960 106.666667v810.666666a42.666667 42.666667 0 0 1-42.666667 42.666667H106.666667a42.666667 42.666667 0 0 1-42.666667-42.666667V131.2 106.666667a42.666667 42.666667 0 0 1 42.666667-42.666667h810.666666a42.666667 42.666667 0 0 1 42.666667 42.666667z m-85.333333 42.666666H149.333333v725.333334h725.333334V149.333333z', 'M917.333333 85.333333H106.666667a21.333333 21.333333 0 0 0-21.333334 21.333334v810.666666a21.333333 21.333333 0 0 0 21.333334 21.333334h810.666666a21.333333 21.333333 0 0 0 21.333334-21.333334V106.666667a21.333333 21.333333 0 0 0-21.333334-21.333334z m-21.333333 42.666667v768H128V128h768z', 'M282.453333 554.666667h66.389334c5.205333 0 9.472-4.266667 9.472-9.472v-66.389334c0-5.205333-4.266667-9.472-9.472-9.472H282.453333c-5.226667 0-9.493333 4.266667-9.493333 9.472v66.389334c0 5.205333 4.266667 9.472 9.493333 9.472z m375.317334 0h66.368c5.226667 0 9.493333-4.266667 9.493333-9.472v-66.389334c0-5.205333-4.266667-9.472-9.493333-9.472h-66.368c-5.205333 0-9.472 4.266667-9.472 9.472v66.389334c0 5.205333 4.266667 9.472 9.472 9.472z m-187.648 0h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.472v-66.389334c0-5.205333-4.266667-9.472-9.472-9.472h-66.368c-5.226667 0-9.493333 4.266667-9.493334 9.472v66.389334c0 5.205333 4.266667 9.472 9.493334 9.472z m0 178.965333h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.493333v-66.368c0-5.205333-4.266667-9.472-9.472-9.472h-66.368c-5.226667 0-9.493333 4.266667-9.493334 9.472v66.368c0 5.226667 4.266667 9.493333 9.493334 9.493333z m0-375.317333h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.472V282.453333c0-5.226667-4.266667-9.493333-9.472-9.493333h-66.368c-5.226667 0-9.493333 4.266667-9.493334 9.493333v66.346667c0 5.226667 4.266667 9.493333 9.493334 9.493333z'],
  ...props
});

const BorderRightNormal = props => createSvgIcon({
  name: 'border-right',
  viewBox: '0 0 1024 1024',
  path: ['M865.344 85.333333l82.666667 0c6.613333 0 11.989333 5.376 11.989333 12.010667L960 905.322667A11.989333 11.989333 0 0 1 948.010667 917.333333l-82.666667 0c-6.634667 0-12.010667-5.376-12.010667-12.010666l0-807.978667c0-6.634667 5.376-12.010667 12.010667-12.010667z', 'M874.666667 113.85600001L874.66666701 888.810667a7.210667 7.210667 0 0 0 7.21066599 7.210666l49.6 0c3.968 0 7.189333-3.221333 7.189334-7.210666l0-774.933334a7.189333 7.189333 0 0 0-7.189334-7.189333l-49.6 0a7.210667 7.210667 0 0 0-7.21066599 7.189333z', 'M751.018667 841.47200001L751.018667 907.861333A9.514667 9.514667 0 0 1 741.525333 917.333333l-66.34666599 0c-5.226667 0-9.493333-4.266667-9.49333401-9.472l0-66.389333c0-5.205333 4.266667-9.472 9.47199999-9.472l66.36800001 0c5.226667 0 9.493333 4.266667 9.493334 9.47200001z m-562.965334-1e-8L188.053333 907.861333A9.514667 9.514667 0 0 1 178.581333 917.33333301L112.213333 917.333333c-5.226667 0-9.493333-4.266667-9.493333-9.472l0-66.38933299c0-5.205333 4.266667-9.472 9.49333301-9.47200001l66.34666699 0c5.226667 0 9.493333 4.266667 9.493333 9.472z m375.317334 0L563.370667 907.86133299A9.514667 9.514667 0 0 1 553.877333 917.333333l-66.346666 0c-5.226667 0-9.493333-4.266667-9.493334-9.472l0-66.389333c0-5.205333 4.266667-9.472 9.472-9.472l66.368 0c5.226667 0 9.493333 4.266667 9.493334 9.472z m-187.669334 0L375.701333 907.861333A9.514667 9.514667 0 0 1 366.229333 917.333333l-66.368 0c-5.226667 0-9.493333-4.266667-9.493333-9.472l0-66.389333c0-5.205333 4.266667-9.472 9.493333-9.472l66.36800001 0c5.205333 0 9.472 4.266667 9.47199999 9.472z m187.66933399-187.648L563.370667 720.213333a9.514667 9.514667 0 0 1-9.493334 9.493334l-66.346666 0c-5.226667 0-9.493333-4.266667-9.493334-9.493334l0-66.346666c0-5.226667 4.266667-9.493333 9.472-9.493334l66.368 0c5.226667 0 9.493333 4.266667 9.493334 9.47199999z m-375.31733399 0L188.053333 720.213333a9.514667 9.514667 0 0 1-9.472 9.49333401L112.213333 729.706667c-5.226667 0-9.493333-4.266667-9.493333-9.493334l1e-8-66.346666c0-5.226667 4.266667-9.493333 9.49333299-9.493334l66.346667 0c5.226667 0 9.493333 4.266667 9.493333 9.472z m0-375.296l0 66.368a9.514667 9.514667 0 0 1-9.472 9.472L112.213333 354.368c-5.226667 0-9.493333-4.266667-9.493333-9.472l0-66.368c0-5.226667 4.266667-9.493333 9.493333-9.493333l66.346667 0c5.226667 0 9.493333 4.266667 9.493333 9.493333z m375.317334 0l0 66.368a9.514667 9.514667 0 0 1-9.493334 9.472l-66.346666 0c-5.226667 0-9.493333-4.266667-9.493334-9.472l0-66.368c0-5.226667 4.266667-9.493333 9.472-9.493333l66.368 0c5.226667 0 9.493333 4.266667 9.493334 9.493333z m0-187.648l0 66.346667a9.514667 9.514667 0 0 1-9.493334 9.493333l-66.346666 0c-5.226667 0-9.493333-4.266667-9.493334-9.472l0-66.368c0-5.226667 4.266667-9.493333 9.472-9.493333l66.368 0c5.226667 0 9.493333 4.266667 9.493334 9.493333z m0 375.296l0 66.368a9.514667 9.514667 0 0 1-9.493334 9.493333l-66.346666 0c-5.226667 0-9.493333-4.266667-9.493334-9.493333l0-66.346667c0-5.226667 4.266667-9.493333 9.472-9.493333l66.368 0c5.226667 0 9.493333 4.266667 9.493334 9.472zM188.053333 90.88l0 66.346667a9.514667 9.514667 0 0 1-9.472 9.493333L112.213333 166.72c-5.226667 0-9.493333-4.266667-9.49333299-9.472l-1e-8-66.368c0-5.226667 4.266667-9.493333 9.493333-9.493333l66.346667 1e-8c5.226667 0 9.493333 4.266667 9.493333 9.49333299z m0 375.296l0 66.368a9.514667 9.514667 0 0 1-9.472 9.493333L112.213333 542.037333c-5.226667 0-9.493333-4.266667-9.493333-9.493333l0-66.346667c0-5.226667 4.266667-9.493333 9.493333-9.493333l66.346667 0c5.226667 0 9.493333 4.266667 9.493333 9.472zM751.018667 90.88l0 66.346667a9.514667 9.514667 0 0 1-9.493334 9.493333l-66.346666 0c-5.226667 0-9.493333-4.266667-9.493334-9.472l0-66.368c0-5.226667 4.266667-9.493333 9.472-9.493333l66.368 0c5.226667 0 9.493333 4.266667 9.493334 9.493333z m0 375.29599999l0 66.36800001a9.514667 9.514667 0 0 1-9.493334 9.493333l-66.346666 0c-5.226667 0-9.493333-4.266667-9.493334-9.493333l0-66.346667c0-5.226667 4.266667-9.493333 9.472-9.493333l66.368 0c5.226667 0 9.493333 4.266667 9.493334 9.47199999zM375.68 90.88l0 66.346667a9.514667 9.514667 0 0 1-9.472 9.493333l-66.368 0c-5.226667 0-9.493333-4.266667-9.493333-9.472l0-66.368c0-5.226667 4.266667-9.493333 9.493333-9.493333l66.368 0c5.205333 0 9.472 4.266667 9.472 9.493333z m0 375.296l0 66.368a9.514667 9.514667 0 0 1-9.472 9.493333l-66.368 0c-5.226667 0-9.493333-4.266667-9.493333-9.493333l0-66.346667c0-5.226667 4.266667-9.493333 9.493333-9.493333l66.368 0c5.205333 0 9.472 4.266667 9.472 9.472z'],
  ...props
});

const BorderTopNormal = props => createSvgIcon({
  name: 'border-top',
  viewBox: '0 0 1024 1024',
  path: ['M85.333333 158.656l0-82.666667c0-6.613333 5.376-11.989333 12.010667-11.989333L905.322667 64A11.989333 11.989333 0 0 1 917.333333 75.989333l0 82.666667c0 6.634667-5.376 12.010667-12.010666 12.010667l-807.978667 0c-6.634667 0-12.010667-5.376-12.010667-12.010667z', 'M113.85600001 149.333333L888.810667 149.33333299a7.210667 7.210667 0 0 0 7.210666-7.21066599l0-49.6c0-3.968-3.221333-7.189333-7.210666-7.189334l-774.933334 0a7.189333 7.189333 0 0 0-7.189333 7.189334l0 49.6a7.210667 7.210667 0 0 0 7.189333 7.21066599z', 'M841.47200001 272.981333L907.861333 272.981333A9.514667 9.514667 0 0 1 917.333333 282.474667l0 66.34666599c0 5.226667-4.266667 9.493333-9.472 9.49333401l-66.389333 0c-5.205333 0-9.472-4.266667-9.472-9.47199999l0-66.36800001c0-5.226667 4.266667-9.493333 9.47200001-9.493334z m-1e-8 562.965334L907.861333 835.946667A9.514667 9.514667 0 0 1 917.33333301 845.418667L917.333333 911.786667c0 5.226667-4.266667 9.493333-9.472 9.493333l-66.38933299 0c-5.205333 0-9.472-4.266667-9.47200001-9.49333301l0-66.34666699c0-5.226667 4.266667-9.493333 9.472-9.493333z m0-375.317334L907.86133299 460.629333A9.514667 9.514667 0 0 1 917.333333 470.122667l0 66.346666c0 5.226667-4.266667 9.493333-9.472 9.493334l-66.389333 0c-5.205333 0-9.472-4.266667-9.472-9.472l0-66.368c0-5.226667 4.266667-9.493333 9.472-9.493334z m0 187.669334L907.861333 648.298667A9.514667 9.514667 0 0 1 917.333333 657.770667l0 66.368c0 5.226667-4.266667 9.493333-9.472 9.493333l-66.389333 0c-5.205333 0-9.472-4.266667-9.472-9.493333l0-66.36800001c0-5.205333 4.266667-9.472 9.472-9.47199999z m-187.648-187.66933399L720.213333 460.629333a9.514667 9.514667 0 0 1 9.493334 9.493334l0 66.346666c0 5.226667-4.266667 9.493333-9.493334 9.493334l-66.346666 0c-5.226667 0-9.493333-4.266667-9.493334-9.472l0-66.368c0-5.226667 4.266667-9.493333 9.47199999-9.493334z m0 375.31733399L720.213333 835.946667a9.514667 9.514667 0 0 1 9.49333401 9.472L729.706667 911.786667c0 5.226667-4.266667 9.493333-9.493334 9.493333l-66.346666-1e-8c-5.226667 0-9.493333-4.266667-9.493334-9.49333299l0-66.346667c0-5.226667 4.266667-9.493333 9.472-9.493333z m-375.296 0l66.368 0a9.514667 9.514667 0 0 1 9.472 9.472L354.368 911.786667c0 5.226667-4.266667 9.493333-9.472 9.493333l-66.368 0c-5.226667 0-9.493333-4.266667-9.493333-9.493333l0-66.346667c0-5.226667 4.266667-9.493333 9.493333-9.493333z m0-375.317334l66.368 0a9.514667 9.514667 0 0 1 9.472 9.493334l0 66.346666c0 5.226667-4.266667 9.493333-9.472 9.493334l-66.368 0c-5.226667 0-9.493333-4.266667-9.493333-9.472l0-66.368c0-5.226667 4.266667-9.493333 9.493333-9.493334z m-187.648 0l66.346667 0a9.514667 9.514667 0 0 1 9.493333 9.493334l0 66.346666c0 5.226667-4.266667 9.493333-9.472 9.493334l-66.368 0c-5.226667 0-9.493333-4.266667-9.493333-9.472l0-66.368c0-5.226667 4.266667-9.493333 9.493333-9.493334z m375.296 0l66.368 0a9.514667 9.514667 0 0 1 9.493333 9.493334l0 66.346666c0 5.226667-4.266667 9.493333-9.493333 9.493334l-66.346667 0c-5.226667 0-9.493333-4.266667-9.493333-9.472l0-66.368c0-5.226667 4.266667-9.493333 9.472-9.493334zM90.88 835.946667l66.346667 0a9.514667 9.514667 0 0 1 9.493333 9.472L166.72 911.786667c0 5.226667-4.266667 9.493333-9.472 9.49333299l-66.368 1e-8c-5.226667 0-9.493333-4.266667-9.493333-9.493333l1e-8-66.346667c0-5.226667 4.266667-9.493333 9.49333299-9.493333z m375.296 0l66.368 0a9.514667 9.514667 0 0 1 9.493333 9.472L542.037333 911.786667c0 5.226667-4.266667 9.493333-9.493333 9.493333l-66.346667 0c-5.226667 0-9.493333-4.266667-9.493333-9.493333l0-66.346667c0-5.226667 4.266667-9.493333 9.472-9.493333zM90.88 272.981333l66.346667 0a9.514667 9.514667 0 0 1 9.493333 9.493334l0 66.346666c0 5.226667-4.266667 9.493333-9.472 9.493334l-66.368 0c-5.226667 0-9.493333-4.266667-9.493333-9.472l0-66.368c0-5.226667 4.266667-9.493333 9.493333-9.493334z m375.29599999 0l66.36800001 0a9.514667 9.514667 0 0 1 9.493333 9.493334l0 66.346666c0 5.226667-4.266667 9.493333-9.493333 9.493334l-66.346667 0c-5.226667 0-9.493333-4.266667-9.493333-9.472l0-66.368c0-5.226667 4.266667-9.493333 9.47199999-9.493334zM90.88 648.32l66.346667 0a9.514667 9.514667 0 0 1 9.493333 9.472l0 66.368c0 5.226667-4.266667 9.493333-9.472 9.493333l-66.368 0c-5.226667 0-9.493333-4.266667-9.493333-9.493333l0-66.368c0-5.205333 4.266667-9.472 9.493333-9.472z m375.296 0l66.368 0a9.514667 9.514667 0 0 1 9.493333 9.472l0 66.368c0 5.226667-4.266667 9.493333-9.493333 9.493333l-66.346667 0c-5.226667 0-9.493333-4.266667-9.493333-9.493333l0-66.368c0-5.205333 4.266667-9.472 9.472-9.472z'],
  ...props
});

const BorderVerticalNormal = props => createSvgIcon({
  name: 'border-vertical',
  viewBox: '0 0 1024 1024',
  path: ['M553.344 938.666667h-82.666667a11.989333 11.989333 0 0 1-12.010666-12.010667V97.344c0-6.634667 5.376-12.010667 12.010666-12.010667h82.666667c6.613333 0 11.989333 5.376 11.989333 11.989334v829.354666c0 6.613333-5.376 11.989333-11.989333 11.989334z', 'M544 910.144V113.856A7.210667 7.210667 0 0 0 536.810667 106.666667h-49.621334a7.210667 7.210667 0 0 0-7.189333 7.210666v796.266667c0 3.968 3.221333 7.189333 7.210667 7.189333h49.6a7.210667 7.210667 0 0 0 7.189333-7.189333z', 'M272.981333 856.106667v66.346666c0 5.226667 4.266667 9.493333 9.493334 9.493334h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.493334v-66.346666c0-5.226667-4.266667-9.493333-9.472-9.493334H282.453333c-5.226667 0-9.493333 4.266667-9.493333 9.472z m584.298667 0v66.346666c0 5.226667 4.266667 9.493333 9.472 9.493334h66.368c5.226667 0 9.493333-4.266667 9.493333-9.493334v-66.346666c0-5.226667-4.266667-9.493333-9.493333-9.493334h-66.346667c-5.226667 0-9.493333 4.266667-9.493333 9.472z m-780.650667 0v66.346666c0 5.226667 4.266667 9.493333 9.493334 9.493334h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.493334v-66.346666c0-5.226667-4.266667-9.493333-9.472-9.493334H86.122667c-5.226667 0-9.493333 4.266667-9.493334 9.472z m593.002667 0v66.346666c0 5.226667 4.266667 9.493333 9.472 9.493334h66.368c5.226667 0 9.493333-4.266667 9.493333-9.493334v-66.346666c0-5.226667-4.266667-9.493333-9.493333-9.493334h-66.368c-5.205333 0-9.472 4.266667-9.472 9.472zM76.629333 668.416v66.368c0 5.226667 4.266667 9.493333 9.493334 9.493333h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.493333v-66.368c0-5.205333-4.266667-9.472-9.472-9.472H86.122667c-5.226667 0-9.493333 4.266667-9.493334 9.472z m780.650667 0v66.368c0 5.226667 4.266667 9.493333 9.472 9.493333h66.368c5.226667 0 9.493333-4.266667 9.493333-9.493333v-66.368c0-5.205333-4.266667-9.472-9.493333-9.472h-66.346667c-5.226667 0-9.493333 4.266667-9.493333 9.472z m0-375.296v66.346667c0 5.226667 4.266667 9.493333 9.472 9.493333h66.368c5.226667 0 9.493333-4.266667 9.493333-9.472V293.12c0-5.226667-4.266667-9.493333-9.493333-9.493333h-66.346667c-5.226667 0-9.493333 4.266667-9.493333 9.493333z m-780.650667 0v66.346667c0 5.226667 4.266667 9.493333 9.493334 9.493333h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.472V293.12c0-5.226667-4.266667-9.493333-9.472-9.493333H86.122667c-5.226667 0-9.493333 4.266667-9.493334 9.493333z m0-187.669333v66.389333c0 5.205333 4.266667 9.472 9.493334 9.472h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.472V105.472c0-5.205333-4.266667-9.472-9.472-9.472H86.122667c-5.226667 0-9.493333 4.266667-9.493334 9.472z m0 375.317333v66.346667c0 5.226667 4.266667 9.493333 9.493334 9.493333h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.472v-66.368c0-5.226667-4.266667-9.493333-9.472-9.493333H86.122667c-5.226667 0-9.493333 4.266667-9.493334 9.493333zM857.28 105.472v66.389333c0 5.205333 4.266667 9.472 9.472 9.472h66.368c5.226667 0 9.493333-4.266667 9.493333-9.472V105.472c0-5.205333-4.266667-9.472-9.493333-9.472h-66.346667c-5.226667 0-9.493333 4.266667-9.493333 9.472z m0 375.317333v66.346667c0 5.226667 4.266667 9.493333 9.472 9.493333h66.368c5.226667 0 9.493333-4.266667 9.493333-9.472v-66.368c0-5.226667-4.266667-9.493333-9.493333-9.493333h-66.346667c-5.226667 0-9.493333 4.266667-9.493333 9.493333zM272.981333 105.472v66.389333c0 5.205333 4.266667 9.472 9.493334 9.472h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.472V105.472c0-5.205333-4.266667-9.472-9.472-9.472H282.453333c-5.226667 0-9.493333 4.266667-9.493333 9.472z m0 375.317333v66.346667c0 5.226667 4.266667 9.493333 9.493334 9.493333h66.346666c5.226667 0 9.493333-4.266667 9.493334-9.472v-66.368c0-5.226667-4.266667-9.493333-9.472-9.493333H282.453333c-5.226667 0-9.493333 4.266667-9.493333 9.493333zM669.653333 105.472v66.389333c0 5.205333 4.266667 9.472 9.472 9.472h66.368c5.226667 0 9.493333-4.266667 9.493334-9.472V105.472c0-5.205333-4.266667-9.472-9.493334-9.472h-66.368c-5.205333 0-9.472 4.266667-9.472 9.472z m0 375.317333v66.346667c0 5.226667 4.266667 9.493333 9.472 9.493333h66.368c5.226667 0 9.493333-4.266667 9.493334-9.472v-66.368c0-5.226667-4.266667-9.493333-9.493334-9.493333h-66.368c-5.205333 0-9.472 4.266667-9.472 9.493333z'],
  ...props
});

const AddpeopleNormal = props => createSvgIcon({
  name: 'addpeople',
  viewBox: '0 0 1024 1024',
  path: ['M554.666667 576a42.666667 42.666667 0 1 1 0 85.333333h0.021333v0.170667C547.669333 661.397333 540.544 661.333333 533.333333 661.333333c-118.186667 0-217.344 14.506667-297.386666 43.136-26.261333 9.386667-43.946667 35.52-43.946667 64.96 0 31.573333 19.2 59.562667 47.530667 69.184C309.653333 862.464 407.786667 874.666667 533.333333 874.666667c7.210667 0 14.336-0.042667 21.376-0.128A42.837333 42.837333 0 0 1 597.333333 917.333333a42.666667 42.666667 0 0 1-45.333333 42.581334l2.709333-0.021334c-7.04 0.064-14.165333 0.106667-21.376 0.106667-134.741333 0-241.92-13.184-322.069333-40.106667C148.970667 898.944 106.666667 838.122667 106.666667 769.429333c0-66.069333 40.170667-124.757333 99.797333-145.834666C296.576 591.744 405.504 576 533.333333 576c6.186667 0 12.309333 0.042667 18.410667 0.106667z m234.666666 21.333333a42.666667 42.666667 0 0 1 42.666667 42.666667v85.333333h85.333333a42.666667 42.666667 0 1 1 0 85.333334h-85.333333v85.333333a42.666667 42.666667 0 1 1-85.333333 0l-0.021334-85.333333H661.333333a42.666667 42.666667 0 1 1 0-85.333334h85.333334v-85.333333a42.666667 42.666667 0 0 1 42.666666-42.666667zM533.333333 64c129.6 0 234.666667 105.066667 234.666667 234.666667s-105.066667 234.666667-234.666667 234.666666-234.666667-105.066667-234.666666-234.666666S403.733333 64 533.333333 64z m0 85.333333a149.333333 149.333333 0 1 0 0 298.666667 149.333333 149.333333 0 0 0 0-298.666667z'],
  ...props
});

const ChecklistNormal = props => createSvgIcon({
  name: 'checklist',
  viewBox: '0 0 1024 1024',
  path: ['M984.736 128H455.264c-4 0-7.264 4.256-7.264 9.472V203.84c0 5.216 3.264 9.504 7.264 9.504h529.472c4 0 7.264-4.288 7.264-9.504V137.472c0-5.216-3.264-9.472-7.264-9.472zM984.736 483.552H455.264c-4 0-7.264 4.256-7.264 9.472v66.368c0 5.216 3.264 9.504 7.264 9.504h529.472c4 0 7.264-4.288 7.264-9.504v-66.368c0-5.216-3.264-9.472-7.264-9.472zM984.736 809.6H455.264c-4 0-7.264 4.256-7.264 9.472v66.368c0 5.216 3.264 9.504 7.264 9.504h529.472c4 0 7.264-4.288 7.264-9.504v-66.368c0-5.216-3.264-9.472-7.264-9.472z', 'M307.904 87.264a42.656 42.656 0 0 1 69.408 49.472l-2.56 3.52-157.76 199.136c-14.976 18.88-42.336 21.44-60.512 6.464l-3.296-3.008-98.24-99.52a42.656 42.656 0 0 1 57.536-62.912l3.2 2.944L180.096 248.64l127.84-161.344zM307.904 371.712a42.656 42.656 0 0 1 69.408 49.44l-2.56 3.584-157.76 199.104c-14.976 18.88-42.336 21.44-60.512 6.464l-3.296-3.008-98.24-99.552a42.656 42.656 0 0 1 57.536-62.88l3.2 2.944 64.384 65.248 127.84-161.344zM307.904 656.16a42.656 42.656 0 0 1 69.408 49.44l-2.56 3.552-157.76 199.136c-14.976 18.88-42.336 21.44-60.512 6.464l-3.296-3.008-98.24-99.552a42.656 42.656 0 0 1 57.536-62.88l3.2 2.944 64.384 65.248 127.84-161.344z'],
  ...props
});

const GroupNormal = props => createSvgIcon({
  name: 'group',
  viewBox: '0 0 1024 1024',
  path: ['M817.990043 865.209484a90.143043 90.143043 0 0 0-50.811246-60.017932l-180.584892-79.979566a134.300752 134.300752 0 0 1-32.909527-20.735253c-56.374962-48.215118-62.989613-133.002177-14.773472-189.377139l3.187599-3.726881a277.31905 277.31905 0 0 0 66.566068-180.2472v-32.763195c0-77.214593-58.866712-141.694139-135.762033-148.706856-4.737908-0.431835-9.469676-0.647753-14.199397-0.647753-82.117253 0-148.687414 66.569138-148.687414 148.687414v28.526707a290.596448 290.596448 0 0 0 69.753667 188.877764 134.319172 134.319172 0 0 1 20.735254 32.909528c30.040177 67.826781-0.592494 147.162688-68.419276 177.202864L151.500483 805.191552a90.143043 90.143043 0 0 0-50.811246 60.017932l-2.332115 9.087982h721.964012l-2.331091-9.087982zM623.465674 130.657782c7.495718-15.734356 24.246217-25.877367 42.600237-24.118304a222.620263 222.620263 0 0 1 76.970023 21.801539l0.423648 0.208754c63.662949 31.287587 104.006795 95.567589 104.006796 166.010965v27.089985c0 70.272483-21.087271 138.956795-60.582797 197.380416-12.623505 18.673292-7.526417 43.806715 11.602246 56.382125a42.337247 42.337247 0 0 0 4.541433 2.599198l131.327024 64.755839c42.336224 20.875446 73.380264 59.041698 84.909855 104.522542l3.072988 12.124132c10.262738 40.48404-14.598486 81.346703-55.134714 91.340311a76.097142 76.097142 0 0 1-18.209734 2.211365h-46.053895l3.448541 13.44215c10.248412 39.940664-13.82282 80.627319-53.763484 90.87573a74.665537 74.665537 0 0 1-18.555611 2.342348H84.610026c-41.235147 0-74.662467-33.42732-74.662466-74.662467 0-6.258541 0.786922-12.493545 2.342347-18.555611l5.748935-22.404266A175.472454 175.472454 0 0 1 116.946502 727.174688l180.585915-79.979566c24.737404-10.956539 35.909861-39.891546 24.954345-64.629973a49.001017 49.001017 0 0 0-7.562233-12.003382 375.924835 375.924835 0 0 1-90.236164-244.338914v-28.526707c0-129.243573 104.772228-234.014778 234.015802-234.014778 7.319709 0 14.637372 0.333598 21.948894 1.000793 55.728232 5.081739 105.431238 29.371958 142.812613 65.975621z m45.578058 62.34493c15.987113 31.768541 24.948205 67.595514 24.948205 105.36063v32.763194a362.641297 362.641297 0 0 1-87.048565 235.707327l-3.187598 3.726881c-17.585517 20.561291-15.172561 51.484581 5.38873 69.070098a48.970318 48.970318 0 0 0 12.003382 7.562233l180.585914 79.979566a175.396729 175.396729 0 0 1 58.311058 41.891086 42.707684 42.707684 0 0 1 10.982122-1.426489h65.36573c-5.498224-20.926612-19.968797-38.57455-39.774889-48.339962l-131.326001-64.755839a127.59605 127.59605 0 0 1-13.68058-7.830339c-58.777685-38.643112-74.732052-117.313869-35.417651-175.469384 29.966499-44.328601 45.945425-96.372931 45.945425-149.59304v-27.089985c0-37.795814-21.744233-72.440869-56.314587-89.430822l-0.423649-0.208754a137.225361 137.225361 0 0 0-36.357046-11.916401z'],
  ...props
});

const LinethicknessNormal = props => createSvgIcon({
  name: 'linethickness',
  viewBox: '0 0 1024 1024',
  path: ['M949.333333 746.666667a10.666667 10.666667 0 0 1 10.666667 10.666666v106.666667a10.666667 10.666667 0 0 1-10.666667 10.666667h-874.666666a10.666667 10.666667 0 0 1-10.666667-10.666667v-106.666667a10.666667 10.666667 0 0 1 10.666667-10.666666h874.666666z m0-213.333334a10.666667 10.666667 0 0 1 10.666667 10.666667v85.333333a10.666667 10.666667 0 0 1-10.666667 10.666667h-874.666666a10.666667 10.666667 0 0 1-10.666667-10.666667v-85.333333a10.666667 10.666667 0 0 1 10.666667-10.666667h874.666666z m0-192a10.666667 10.666667 0 0 1 10.666667 10.666667v64a10.666667 10.666667 0 0 1-10.666667 10.666667h-874.666666a10.666667 10.666667 0 0 1-10.666667-10.666667v-64a10.666667 10.666667 0 0 1 10.666667-10.666667h874.666666z m0-192a10.666667 10.666667 0 0 1 10.666667 10.666667v42.666667a10.666667 10.666667 0 0 1-10.666667 10.666666h-874.666666a10.666667 10.666667 0 0 1-10.666667-10.666666v-42.666667a10.666667 10.666667 0 0 1 10.666667-10.666667h874.666666z'],
  ...props
});

const LinetypeNormal = props => createSvgIcon({
  name: 'linetype',
  viewBox: '0 0 1024 1024',
  path: ['M266.666667 789.333333a10.666667 10.666667 0 0 1 10.666666 10.666667v64a10.666667 10.666667 0 0 1-10.666666 10.666667h-192a10.666667 10.666667 0 0 1-10.666667-10.666667v-64a10.666667 10.666667 0 0 1 10.666667-10.666667h192z m320 0a10.666667 10.666667 0 0 1 10.666666 10.666667v64a10.666667 10.666667 0 0 1-10.666666 10.666667h-192a10.666667 10.666667 0 0 1-10.666667-10.666667v-64a10.666667 10.666667 0 0 1 10.666667-10.666667h192z m320 0a10.666667 10.666667 0 0 1 10.666666 10.666667v64a10.666667 10.666667 0 0 1-10.666666 10.666667h-192a10.666667 10.666667 0 0 1-10.666667-10.666667v-64a10.666667 10.666667 0 0 1 10.666667-10.666667h192z m0-256a10.666667 10.666667 0 0 1 10.666666 10.666667v64a10.666667 10.666667 0 0 1-10.666666 10.666667h-832a10.666667 10.666667 0 0 1-10.666667-10.666667v-64a10.666667 10.666667 0 0 1 10.666667-10.666667h832zM285.482667 140.970667l2.304 2.602666 124.906666 151.914667L537.6 143.573333a42.666667 42.666667 0 0 1 63.616-2.602666l2.304 2.602666 124.906667 151.914667 118.122666-143.68a10.666667 10.666667 0 0 1 13.44-2.56l1.578667 1.088 49.429333 40.661333a10.666667 10.666667 0 0 1 1.493334 14.997334L761.386667 389.76a42.666667 42.666667 0 0 1-63.616 2.602667l-2.304-2.602667-124.906667-151.936-124.906667 151.936a42.666667 42.666667 0 0 1-63.616 2.602667l-2.304-2.602667-124.906666-151.936-118.144 143.701333a10.666667 10.666667 0 0 1-13.418667 2.56l-1.6-1.088-49.429333-40.661333a10.666667 10.666667 0 0 1-1.450667-14.997333L221.866667 143.573333a42.666667 42.666667 0 0 1 63.616-2.602666z'],
  ...props
});

const PictureBorderNormal = props => createSvgIcon({
  name: 'picture-border',
  viewBox: '0 0 1024 1024',
  path: ['M981.333333 844.010667v146.645333c0 6.634667-5.376 12.010667-12.010666 12.010667H54.677333A11.989333 11.989333 0 0 1 42.666667 990.656v-146.645333c0-6.634667 5.376-12.010667 12.010666-12.010667h914.645334c6.634667 0 12.010667 5.376 12.010666 12.010667z', 'M931.477333 874.666667H92.522667a7.210667 7.210667 0 0 0-7.210667 7.189333v70.933333c0 3.989333 3.221333 7.210667 7.210667 7.210667h838.933333a7.210667 7.210667 0 0 0 7.189333-7.189333v-70.933334a7.210667 7.210667 0 0 0-7.189333-7.210666z', 'M256 64v106.666667h704v85.333333H256v405.333333h704v85.333334H256v85.333333H170.666667v-85.333333H64v-85.333334h106.666667V256H64V170.666667h106.666667V64h85.333333z m507.626667 265.92l2.453333 2.24 117.077333 114.389333a42.666667 42.666667 0 0 1-56.896 63.509334l-2.752-2.474667-72.042666-70.4-51.989334 125.141333c-12.949333 31.189333-54.869333 35.370667-74.005333 8.597334l-1.898667-2.88-56.106666-92.757334-70.997334 117.866667a42.666667 42.666667 0 0 1-63.68 10.901333l-2.517333-2.261333-97.28-94.037333a42.666667 42.666667 0 0 1 56.576-63.786667l2.773333 2.432 58.688 56.768 79.808-132.437333c15.957333-26.453333 53.504-27.498667 71.104-2.986667l1.941334 2.922667 49.109333 81.152 43.861333-105.514667a42.666667 42.666667 0 0 1 66.773334-16.384z'],
  ...props
});

const PlaceholderNormal = props => createSvgIcon({
  name: 'placeholder',
  viewBox: '0 0 1024 1024',
  path: ['M890.88 715.755102h64.992653c5.12 0 9.299592-4.179592 9.299592-9.278694v-65.034449c0-5.099102-4.179592-9.278694-9.299592-9.278694h-64.992653c-5.12 0-9.299592 4.179592-9.299592 9.278694v65.034449c0 5.099102 4.179592 9.278694 9.278694 9.278694z m0-485.877551h64.992653c5.12 0 9.299592-4.179592 9.299592-9.278694V155.564408c0-5.099102-4.179592-9.278694-9.299592-9.278694h-64.992653c-5.12 0-9.299592 4.179592-9.299592 9.278694v65.034449c0 5.099102 4.179592 9.278694 9.278694 9.278694z m0 161.959184h64.992653c5.12 0 9.299592-4.179592 9.299592-9.278694v-65.034449c0-5.099102-4.179592-9.278694-9.299592-9.278694h-64.992653c-5.12 0-9.299592 4.179592-9.299592 9.278694v65.034449c0 5.099102 4.179592 9.278694 9.278694 9.278694zM692.349388 229.877551h64.992653c5.12 0 9.299592-4.179592 9.299592-9.278694V155.564408c0-5.099102-4.179592-9.278694-9.299592-9.278694h-64.992653c-5.12 0-9.299592 4.179592-9.299592 9.278694v65.034449c0 5.099102 4.179592 9.278694 9.278694 9.278694z m-397.061225 0h64.992653c5.12 0 9.299592-4.179592 9.299592-9.278694V155.564408c0-5.099102-4.179592-9.278694-9.299592-9.278694h-64.992653c-5.12 0-9.299592 4.179592-9.299592 9.278694v65.034449c0 5.099102 4.179592 9.278694 9.278694 9.278694z m-198.530612 0h64.992653c5.12 0 9.299592-4.179592 9.299592-9.278694V155.564408c0-5.099102-4.179592-9.278694-9.299592-9.278694H96.757551c-5.12 0-9.299592 4.179592-9.299592 9.278694v65.034449c0 5.099102 4.179592 9.278694 9.278694 9.278694z m397.061225 0h64.992653c5.12 0 9.299592-4.179592 9.299591-9.278694V155.564408c0-5.099102-4.179592-9.278694-9.299591-9.278694h-64.992653c-5.12 0-9.299592 4.179592-9.299592 9.278694v65.034449c0 5.099102 4.179592 9.278694 9.278694 9.278694z m-397.061225 647.836735h64.992653c5.12 0 9.299592-4.179592 9.299592-9.278694v-65.034449c0-5.099102-4.179592-9.278694-9.299592-9.278694H96.757551c-5.12 0-9.299592 4.179592-9.299592 9.278694v65.034449c0 5.099102 4.179592 9.278694 9.278694 9.278694z m198.530612 0h64.992653c5.12 0 9.299592-4.179592 9.299592-9.278694v-65.034449c0-5.099102-4.179592-9.278694-9.299592-9.278694h-64.992653c-5.12 0-9.299592 4.179592-9.299592 9.278694v65.034449c0 5.099102 4.179592 9.278694 9.278694 9.278694z m397.061225 0h64.992653c5.12 0 9.299592-4.179592 9.299592-9.278694v-65.034449c0-5.099102-4.179592-9.278694-9.299592-9.278694h-64.992653c-5.12 0-9.299592 4.179592-9.299592 9.278694v65.034449c0 5.099102 4.179592 9.278694 9.278694 9.278694z m198.530612 0h64.992653c5.12 0 9.299592-4.179592 9.299592-9.278694v-65.034449c0-5.099102-4.179592-9.278694-9.299592-9.278694h-64.992653c-5.12 0-9.299592 4.179592-9.299592 9.278694v65.034449c0 5.099102 4.179592 9.278694 9.278694 9.278694z m-397.061224 0h64.992653c5.12 0 9.299592-4.179592 9.299591-9.278694v-65.034449c0-5.099102-4.179592-9.278694-9.299591-9.278694h-64.992653c-5.12 0-9.299592 4.179592-9.299592 9.278694v65.034449c0 5.099102 4.179592 9.278694 9.278694 9.278694z m-397.061225-334.367347h64.992653c5.12 0 9.299592-4.179592 9.299592-9.278694v-65.034449c0-5.099102-4.179592-9.278694-9.299592-9.278694H96.757551c-5.12 0-9.299592 4.179592-9.299592 9.278694v65.034449c0 5.099102 4.179592 9.278694 9.278694 9.278694z m794.122449 10.448979h64.992653c5.12 0 9.299592-4.179592 9.299592-9.278694v-65.034448c0-5.099102-4.179592-9.278694-9.299592-9.278694h-64.992653c-5.12 0-9.299592 4.179592-9.299592 9.278694v65.034448c0 5.099102 4.179592 9.278694 9.278694 9.278694z m-794.122449 156.734694h64.992653c5.12 0 9.299592-4.179592 9.299592-9.278694v-65.034449c0-5.099102-4.179592-9.278694-9.299592-9.278693H96.757551c-5.12 0-9.299592 4.179592-9.299592 9.278693v65.034449c0 5.099102 4.179592 9.278694 9.278694 9.278694z m0-313.469388h64.992653c5.12 0 9.299592-4.179592 9.299592-9.278693v-65.034449c0-5.099102-4.179592-9.278694-9.299592-9.278694H96.757551c-5.12 0-9.299592 4.179592-9.299592 9.278694v65.034449c0 5.099102 4.179592 9.278694 9.278694 9.278693z'],
  ...props
});

const ReadNormal = props => createSvgIcon({
  name: 'read',
  viewBox: '0 0 1024 1024',
  path: ['M362.88 150.4a170.24 170.24 0 0 1 125.824 55.36l2.24 2.432 2.176-2.432a170.24 170.24 0 0 1 120.512-55.232l5.312-0.128h180.48a128 128 0 0 1 128 123.2V746.368a128 128 0 0 1-123.136 127.936l-4.8 0.064H594.496l-73.472 73.216a42.688 42.688 0 0 1-57.472 2.432l-2.752-2.432-73.472-73.216H192a128 128 0 0 1-127.936-123.2L64 746.368V278.4a128 128 0 0 1 123.2-127.872L192 150.4h170.88z m0 85.376H192a42.688 42.688 0 0 0-42.56 39.488l-0.128 3.2v467.904c0 22.528 17.408 40.96 39.488 42.56l3.2 0.128h212.992c9.984 0 19.712 3.52 27.328 9.92l2.752 2.56 13.184 13.056V321.088l-0.128-4.288A85.312 85.312 0 0 0 367.36 235.84l-4.352-0.064z m436.608 0H618.88c-45.696 0-83.008 35.904-85.248 81.024l-0.128 4.288v493.504l13.184-13.12a42.688 42.688 0 0 1 26.368-12.288l3.776-0.128h222.592c22.464 0 40.96-17.408 42.56-39.488l0.128-3.2V278.4a42.688 42.688 0 0 0-39.488-42.56l-3.2-0.064z'],
  ...props
});

const ChangePicNormal = props => createSvgIcon({
  name: 'change-pic',
  viewBox: '0 0 1024 1024',
  path: ['M874.666667 448a42.666667 42.666667 0 0 1 42.56 39.466667L917.333333 490.666667v337.429333a85.333333 85.333333 0 0 1-81.066666 85.226667l-4.266667 0.106666H170.666667a85.333333 85.333333 0 0 1-85.226667-81.066666l-0.106667-4.266667v-322.346667a42.666667 42.666667 0 0 1 85.226667-3.178666l0.106667 3.2v322.346666h661.333333V490.666667a42.666667 42.666667 0 0 1 42.666667-42.666667z m-306.496-22.186667c17.024-27.946667 57.877333-27.136 73.749333 1.493334l142.058667 256C799.765333 711.744 779.2 746.666667 746.666667 746.666667H298.666667c-35.413333 0-55.402667-40.618667-33.813334-68.693334l142.186667-184.810666a42.666667 42.666667 0 0 1 67.072-0.725334l30.442667 37.866667z m34.730666 107.029334l-57.024 93.738666a42.666667 42.666667 0 0 1-69.696 4.565334L441.6 588.16 385.322667 661.333333h288.874666l-71.296-128.490666zM513.024 106.666667a352.106667 352.106667 0 0 1 337.642667 252.202666 42.666667 42.666667 0 0 1-81.856 24.170667A266.794667 266.794667 0 0 0 513.024 192a265.557333 265.557333 0 0 0-182.037333 71.786667l40.832 57.28a4.266667 4.266667 0 0 1-2.346667 6.613333l-1.130667 0.149333H196.266667a4.266667 4.266667 0 0 1-4.266667-4.138666l0.128-1.152 43.797333-179.989334a4.266667 4.266667 0 0 1 6.656-2.453333l0.96 0.981333 37.589334 52.757334A350.784 350.784 0 0 1 513.024 106.666667z'],
  ...props
});

const ClockwiseNormal = props => createSvgIcon({
  name: 'clockwise',
  viewBox: '0 0 1024 1024',
  path: ['M512 64c149.12 0 281.216 72.853333 362.666667 184.917333V162.133333a12.8 12.8 0 0 1 12.8-12.8h59.733333a12.8 12.8 0 0 1 12.8 12.8v328.469334h-0.490667c0.32 7.104 0.490667 14.229333 0.490667 21.397333h-85.333333l-0.064-6.890667C870.933333 307.989333 709.994667 149.333333 512 149.333333 311.701333 149.333333 149.333333 311.701333 149.333333 512s162.368 362.666667 362.666667 362.666667a361.813333 361.813333 0 0 0 269.696-120.170667c5.418667-6.037333 12.544-14.890667 21.397333-26.538667a12.8 12.8 0 0 1 17.493334-2.794666l49.109333 33.984a12.8 12.8 0 0 1 2.944 18.218666c-9.28 12.373333-16.085333 21.077333-20.394667 26.112A447.168 447.168 0 0 1 512 960C264.576 960 64 759.424 64 512S264.576 64 512 64z m56.810667 320.490667c35.882667 0 61.781333 14.805333 77.696 44.309333 12.373333 22.805333 18.496 53.994667 18.496 93.696 0 37.610667-5.610667 68.693333-16.810667 93.312-16.192 35.285333-42.794667 52.906667-79.573333 52.906667-33.216 0-57.92-14.421333-74.218667-43.306667-13.504-24.106667-20.309333-56.405333-20.309333-97.002667 0-31.402667 4.117333-58.410667 12.202666-80.896 15.210667-42.026667 42.709333-63.018667 82.496-63.018666zM346.794667 384c40.32 0 68.096 18.090667 83.413333 54.4 8.490667 19.904 12.693333 44.906667 12.693333 74.88 0 33.813333-5.12 63.829333-15.296 89.92-16.896 43.52-45.504 65.194667-85.802666 65.194667-27.008 0-47.594667-7.104-61.610667-21.205334a70.378667 70.378667 0 0 1-19.285333-35.797333 18.538667 18.538667 0 0 1 13.504-21.589333l0.896 0.106666a18.602667 18.602667 0 0 1 22.293333 12.181334c3.498667 10.218667 9.898667 17.706667 19.093333 22.613333 7.104 3.904 15.104 5.802667 24 5.802667 16.597333 0 30.805333-6.912 42.496-20.8 11.712-13.802667 20.010667-32.704 24.917334-75.093334-7.701333 12.181333-17.301333 20.778667-28.714667 25.792a90.666667 90.666667 0 0 1-36.8 7.402667c-26.688 0-47.701333-8.32-63.296-24.917333C263.808 526.293333 256 505.002667 256 478.805333c0-25.109333 7.68-47.104 22.997333-66.197333 15.296-19.008 37.909333-28.608 67.797334-28.608z m224 45.802667c-17.898667 0-30.997333 8.405333-39.296 25.194666-8.298667 16.810667-12.394667 41.6-12.394667 74.304 0 24.597333 2.602667 44.394667 7.893333 59.392 8.106667 22.826667 21.994667 34.304 41.6 34.304 15.701333 0 28.309333-6.997333 37.696-20.906666 9.386667-13.888 14.016-39.893333 14.016-77.994667 0-27.392-3.413333-50.005333-10.112-67.690667-6.805333-17.706667-19.904-26.602667-39.402666-26.602666z m-223.402667-3.413334c-13.994667 0-25.173333 4.693333-33.386667 14.101334-8.213333 9.408-12.416 22.016-12.416 37.717333 0 14.890667 3.626667 26.688 10.901334 35.498667 7.210667 8.789333 18.816 13.098667 34.602666 13.098666 11.413333 0 21.802667-3.797333 31.210667-11.306666 9.386667-7.509333 14.08-20.608 14.08-39.296 0-16.810667-4.181333-29.312-12.693333-37.504-8.490667-8.192-19.2-12.288-32.298667-12.288z m414.506667-41.685333c16.298667 0 30.101333 5.696 41.301333 16.896 11.2 11.306667 16.810667 25.002667 16.810667 41.194667 0 16.704-5.802667 30.72-17.493334 41.813333-11.626667 11.2-25.216 16.789333-40.618666 16.789333-17.088 0-31.189333-5.802667-42.090667-17.408-10.901333-11.584-16.426667-25.088-16.426667-40.597333 0-16.490667 5.824-30.4 17.322667-41.685333a56.896 56.896 0 0 1 41.194667-17.002667z m0 26.688c-8.597333 0-16.106667 3.114667-22.4 9.301333-6.293333 6.186667-9.386667 13.717333-9.386667 22.613334-0.106667 8.384 2.986667 15.786667 9.28 22.101333 6.208 6.186667 13.717333 9.301333 22.506667 9.301333 8.405333 0 15.786667-3.114667 22.101333-9.301333 6.293333-6.208 9.386667-13.717333 9.386667-22.613333 0-8.490667-3.093333-15.893333-9.28-22.101334a30.293333 30.293333 0 0 0-22.186667-9.301333z'],
  ...props
});

const CounterclockwiseNormal = props => createSvgIcon({
  name: 'counterclockwise',
  viewBox: '0 0 1024 1024',
  path: ['M512 64c247.424 0 448 200.576 448 448s-200.576 448-448 448a447.168 447.168 0 0 1-340.245333-156.522667c-4.309333-5.034667-11.093333-13.738667-20.394667-26.112a12.8 12.8 0 0 1 2.944-18.218666l49.130667-33.984a12.8 12.8 0 0 1 17.493333 2.773333c8.832 11.669333 15.957333 20.522667 21.376 26.56A361.813333 361.813333 0 0 0 512 874.666667c200.298667 0 362.666667-162.368 362.666667-362.666667S712.298667 149.333333 512 149.333333C314.026667 149.333333 153.066667 307.989333 149.397333 505.109333L149.333333 512H64c0-7.168 0.170667-14.293333 0.490667-21.376H64V162.133333a12.8 12.8 0 0 1 12.8-12.8h59.733333a12.8 12.8 0 0 1 12.8 12.8v86.784C230.784 136.853333 362.88 64 512 64z m56.810667 320.490667c35.882667 0 61.781333 14.805333 77.696 44.309333 12.373333 22.805333 18.496 53.994667 18.496 93.696 0 37.610667-5.610667 68.693333-16.810667 93.312-16.192 35.285333-42.794667 52.906667-79.573333 52.906667-33.216 0-57.92-14.421333-74.218667-43.306667-13.504-24.106667-20.309333-56.405333-20.309333-97.002667 0-31.402667 4.117333-58.410667 12.202666-80.896 15.210667-42.026667 42.709333-63.018667 82.496-63.018666zM346.794667 384c40.32 0 68.096 18.090667 83.413333 54.4 8.490667 19.904 12.693333 44.906667 12.693333 74.88 0 33.813333-5.12 63.829333-15.296 89.92-16.896 43.52-45.504 65.194667-85.802666 65.194667-27.008 0-47.594667-7.104-61.610667-21.205334a70.378667 70.378667 0 0 1-19.285333-35.797333 18.538667 18.538667 0 0 1 13.504-21.589333l0.896 0.106666a18.602667 18.602667 0 0 1 22.293333 12.181334c3.498667 10.218667 9.898667 17.706667 19.093333 22.613333 7.104 3.904 15.104 5.802667 24 5.802667 16.597333 0 30.805333-6.912 42.496-20.8 11.712-13.802667 20.010667-32.704 24.917334-75.093334-7.701333 12.181333-17.301333 20.778667-28.714667 25.792a90.666667 90.666667 0 0 1-36.8 7.402667c-26.688 0-47.701333-8.32-63.296-24.917333C263.808 526.293333 256 505.002667 256 478.805333c0-25.109333 7.68-47.104 22.997333-66.197333 15.296-19.008 37.909333-28.608 67.797334-28.608z m224 45.802667c-17.898667 0-30.997333 8.405333-39.296 25.194666-8.298667 16.810667-12.394667 41.6-12.394667 74.304 0 24.597333 2.602667 44.394667 7.893333 59.392 8.106667 22.826667 21.994667 34.304 41.6 34.304 15.701333 0 28.309333-6.997333 37.696-20.906666 9.386667-13.888 14.016-39.893333 14.016-77.994667 0-27.392-3.413333-50.005333-10.112-67.690667-6.805333-17.706667-19.904-26.602667-39.402666-26.602666z m-223.402667-3.413334c-13.994667 0-25.173333 4.693333-33.386667 14.101334-8.213333 9.408-12.416 22.016-12.416 37.717333 0 14.890667 3.626667 26.688 10.901334 35.498667 7.210667 8.789333 18.816 13.098667 34.602666 13.098666 11.413333 0 21.802667-3.797333 31.210667-11.306666 9.386667-7.509333 14.08-20.608 14.08-39.296 0-16.810667-4.181333-29.312-12.693333-37.504-8.490667-8.192-19.2-12.288-32.298667-12.288z m414.506667-41.685333c16.298667 0 30.101333 5.696 41.301333 16.896 11.2 11.306667 16.810667 25.002667 16.810667 41.194667 0 16.704-5.802667 30.72-17.493334 41.813333-11.626667 11.2-25.216 16.789333-40.618666 16.789333-17.088 0-31.189333-5.802667-42.090667-17.408-10.901333-11.584-16.426667-25.088-16.426667-40.597333 0-16.490667 5.824-30.4 17.322667-41.685333a56.896 56.896 0 0 1 41.194667-17.002667z m0 26.688c-8.597333 0-16.106667 3.114667-22.4 9.301333-6.293333 6.186667-9.386667 13.717333-9.386667 22.613334-0.106667 8.384 2.986667 15.786667 9.28 22.101333 6.208 6.186667 13.717333 9.301333 22.506667 9.301333 8.405333 0 15.786667-3.114667 22.101333-9.301333 6.293333-6.208 9.386667-13.717333 9.386667-22.613333 0-8.490667-3.093333-15.893333-9.28-22.101334a30.293333 30.293333 0 0 0-22.186667-9.301333z'],
  ...props
});

const CutPicNormal = props => createSvgIcon({
  name: 'cut-pic',
  viewBox: '0 0 1024 1024',
  path: ['M874.965333 110.4l42.282667 42.197333a12.8 12.8 0 0 1 0 18.090667l-109.248 109.482667v450.026666l94.016 0.021334a12.8 12.8 0 0 1 12.8 12.8v59.733333a12.8 12.8 0 0 1-12.8 12.8h-94.016v92.48a12.8 12.8 0 0 1-12.8 12.8h-59.733333a12.8 12.8 0 0 1-12.8-12.8V815.573333H256.149333a42.666667 42.666667 0 0 1-42.56-39.466666l-0.106666-3.2-0.021334-470.72H119.466667a12.8 12.8 0 0 1-12.8-12.8v-59.733334a12.8 12.8 0 0 1 12.8-12.8h93.994666V124.373333a12.8 12.8 0 0 1 12.8-12.8h59.733334a12.8 12.8 0 0 1 12.8 12.8v92.48h451.882666l106.176-106.410666a12.8 12.8 0 0 1 18.112 0z m-152.277333 255.296L358.976 730.197333h363.690667l0.021333-364.501333z m-57.152-63.530667H298.794667v367.530667l366.741333-367.530667z'],
  ...props
});

const DeleteLinkNormal = props => createSvgIcon({
  name: 'delete-link',
  viewBox: '0 0 1024 1024',
  path: ['M256 170.688a213.44 213.44 0 0 0-212.352 234.304c10.624 110.912 110.144 192.32 221.632 192.32H384A42.688 42.688 0 0 0 384 512h-120.768c-69.312 0-131.328-51.968-135.04-121.152A127.936 127.936 0 0 1 256 256h128a42.688 42.688 0 0 0 0-85.312h-128z m384 0A42.688 42.688 0 0 0 640 256h120.768c69.312 0 131.328 51.968 135.04 121.152A127.936 127.936 0 0 1 768 512h-128a42.688 42.688 0 0 0 0 85.312h128a213.44 213.44 0 0 0 212.352-234.304c-10.624-110.912-110.144-192.32-221.632-192.32H640z m-298.688 170.624a42.688 42.688 0 1 0 0 85.376h341.376a42.688 42.688 0 1 0 0-85.376H341.312z m384 341.376a42.624 42.624 0 0 0-30.144 72.832L771.648 832l-76.48 76.48a42.666667 42.666667 0 1 0 60.352 60.352L832 892.352l75.584 75.52a42.666667 42.666667 0 1 0 60.352-60.288L892.352 832l76.48-76.48a42.666667 42.666667 0 1 0-60.352-60.352L832 771.648l-76.48-76.48a42.432 42.432 0 0 0-30.208-12.48z'],
  ...props
});

const FilterSheetNormal = props => createSvgIcon({
  name: 'filter-sheet',
  viewBox: '0 0 1024 1024',
  path: ['M106.666667 106.666667m21.333333 0l768 0q21.333333 0 21.333333 21.333333l0 42.666667q0 21.333333-21.333333 21.333333l-768 0q-21.333333 0-21.333333-21.333333l0-42.666667q0-21.333333 21.333333-21.333333ZM234.666667 277.333333m21.333333 0l533.333333 0q21.333333 0 21.333334 21.333334l0 42.666666q0 21.333333-21.333334 21.333334l-533.333333 0q-21.333333 0-21.333333-21.333334l0-42.666666q0-21.333333 21.333333-21.333334ZM341.333333 448m21.333334 0l298.666666 0q21.333333 0 21.333334 21.333333l0 42.666667q0 21.333333-21.333334 21.333333l-298.666666 0q-21.333333 0-21.333334-21.333333l0-42.666667q0-21.333333 21.333334-21.333333ZM469.333333 618.666667m21.333334 0l42.666666 0q21.333333 0 21.333334 21.333333l0 256q0 21.333333-21.333334 21.333333l-42.666666 0q-21.333333 0-21.333334-21.333333l0-256q0-21.333333 21.333334-21.333333Z'],
  ...props
});

const AutowidthNormal = props => createSvgIcon({
  name: 'autowidth',
  viewBox: '0 0 1024 1024',
  path: ['M136.533333 149.333333a12.8 12.8 0 0 1 12.8 12.8v699.733334a12.8 12.8 0 0 1-12.8 12.8H76.8a12.8 12.8 0 0 1-12.8-12.8V162.133333a12.8 12.8 0 0 1 12.8-12.8h59.733333z m810.666667 0a12.8 12.8 0 0 1 12.8 12.8v699.733334a12.8 12.8 0 0 1-12.8 12.8h-59.733333a12.8 12.8 0 0 1-12.8-12.8V162.133333a12.8 12.8 0 0 1 12.8-12.8h59.733333z m-257.322667 200.064l1.664 1.6 146.986667 169.6a12.8 12.8 0 0 1 1.130667 15.274667l-1.28 1.706667-147.2 163.456a12.8 12.8 0 0 1-16.213334 2.346666l-1.856-1.386666-44.394666-39.978667a12.8 12.8 0 0 1-2.346667-16.213333l1.408-1.856L688.896 576H327.701333l61.141334 67.946667a12.8 12.8 0 0 1-0.938667 18.069333l-44.373333 39.978667a12.8 12.8 0 0 1-18.090667-0.96l-147.2-163.477334a12.8 12.8 0 0 1-0.170667-16.938666l147.008-169.6a12.8 12.8 0 0 1 18.069334-1.301334l45.141333 39.125334a12.8 12.8 0 0 1 2.624 16.170666l-1.344 1.877334L316.928 490.666667h382.741333l-72.618666-83.776a12.8 12.8 0 0 1-0.32-16.384l1.6-1.664 45.141333-39.125334a12.8 12.8 0 0 1 16.405333-0.32z'],
  ...props
});

const CommentFillNormal = props => createSvgIcon({
  name: 'comment-fill',
  viewBox: '0 0 1024 1024',
  path: ['M816.725333 128c67.349333 0 121.92 52.224 121.941334 116.693333v427.946667a114.261333 114.261333 0 0 1-35.690667 82.56 124.693333 124.693333 0 0 1-86.208 34.197333H583.04l-242.666667 140.821334a63.274667 63.274667 0 0 1-61.504 0.938666c-19.178667-10.368-31.018667-29.802667-30.997333-50.88v-90.922666H207.232C139.904 789.354667 85.333333 737.088 85.333333 672.64V244.714667C85.333333 180.266667 139.904 128 207.232 128h609.493333z m-152.576 374.357333H359.850667c-9.493333 0-18.602667 3.690667-25.322667 10.282667-6.677333 6.528-10.453333 15.488-10.453333 24.832v18.24c0 19.392 16.021333 35.093333 35.776 35.093333h304.298666c19.754667 0 35.776-15.701333 35.776-35.093333v-18.24c0-9.301333-3.754667-18.24-10.453333-24.832a36.138667 36.138667 0 0 0-25.322667-10.282667z m0-168.768H359.850667c-9.493333 0-18.602667 3.690667-25.322667 10.282667-6.677333 6.528-10.453333 15.488-10.453333 24.832v18.24c0 19.392 16.021333 35.093333 35.776 35.093333h304.298666c19.754667 0 35.776-15.701333 35.776-35.093333v-18.24c0-9.301333-3.754667-18.24-10.453333-24.832a36.138667 36.138667 0 0 0-25.322667-10.282667z'],
  ...props
});

const FillNormal = props => createSvgIcon({
  name: 'fill',
  viewBox: '0 0 1024 1024',
  path: ['M613.824 75.776c200.234667 46.72 342.613333 223.594667 346.112 428.970667l0.064 7.722666-0.213333 4.16c-12.757333 142.826667-74.090667 217.834667-176.874667 205.44-38.784-4.693333-68.992-25.045333-91.477333-60.181333l-3.605334-5.888-1.408 2.005333a228.928 228.928 0 0 1-170.773333 93.205334l-7.125333 0.32-6.933334 0.106666c-126.592 0-229.205333-102.613333-229.205333-229.226666 0-126.570667 102.613333-229.205333 229.205333-229.205334 44.010667 0 86.122667 12.458667 122.218667 35.264l6.698667 4.394667 5.354666 3.797333v-0.618666c0-26.453333 19.754667-48.32 45.312-51.648l3.370667-0.341334 3.413333-0.106666a52.096 52.096 0 0 1 51.989334 48.682666l0.106666 3.413334 0.064 25.130666c0.362667 52.8 2.389333 88.896 7.338667 128.149334 9.834667 78.186667 30.634667 127.232 47.936 129.301333 33.621333 4.053333 52.736-25.877333 60.416-108.416A343.786667 343.786667 0 0 0 203.733333 359.829333 343.786667 343.786667 0 0 0 721.066667 784.981333a52.096 52.096 0 0 1 63.338666 82.709334A448 448 0 0 1 110.293333 313.706667 448 448 0 0 1 613.824 75.776z m-112.234667 321.621333a125.013333 125.013333 0 1 0 0 250.048 125.013333 125.013333 0 0 0 0-250.026666z'],
  ...props
});

const RefreshNormal = props => createSvgIcon({
  name: 'refresh',
  viewBox: '0 0 1024 1024',
  path: ['M166.613333 401.066667A362.816 362.816 0 0 0 720.725333 808.746667l2.325334-1.664-101.184-59.2a42.666667 42.666667 0 1 1 43.093333-73.642667l153.045333 89.514667a42.666667 42.666667 0 0 1 8.64 67.306666c-142.357333 140.565333-362.88 170.410667-538.645333 68.928-175.808-101.504-260.202667-307.477333-209.578667-501.098666 2.090667-8.042667 4.416-16.042667 6.976-23.957334A42.666667 42.666667 0 1 1 166.613333 401.066667zM736 124.032c176.298667 101.802667 260.629333 308.608 209.194667 502.570667-2.005333 7.573333-4.202667 15.082667-6.613334 22.549333A42.666667 42.666667 0 1 1 857.386667 622.933333a362.816 362.816 0 0 0-555.456-406.698666l-1.877334 1.344 66.666667 38.613333 34.986667 20.202667a42.666667 42.666667 0 1 1-42.666667 73.898666l-148.053333-85.930666a501.461333 501.461333 0 0 1-6.741334-4.053334 42.666667 42.666667 0 0 1-7.637333-66.602666c142.293333-141.184 363.306667-171.370667 539.413333-69.696z'],
  ...props
});

const SelectDownloadNormal = props => createSvgIcon({
  name: 'select-download',
  viewBox: '0 0 1024 1024',
  path: ['M500.29525776 689.51163895l-2.69187578-2.46755288-179.45842722-179.45842721a44.93190384 44.93190384 0 0 1 60.79154196-66.17529439l2.69187664 2.69187663L484.3683226 546.84219034V127.13379477a44.88703859 44.88703859 0 0 1 89.7292136-3.36484536v423.29756384l102.51562547-102.0669805a45.26838821 45.26838821 0 0 1 67.29691063 60.56721905l-2.69187662 2.91619955-179.45842637 179.45842637-5.83239907 4.93510659a46.43486802 46.43486802 0 0 1-20.63771885 7.85130613h-7.17833739a43.29434557 43.29434557 0 0 1-27.81605623-11.21615149zM933.01438895 543.02869831a44.86460681 44.86460681 0 0 1 44.8646068 41.49976144v179.45842638a179.45842637 179.45842637 0 0 1-173.85035105 179.45842637H260.04528942a179.45842637 179.45842637 0 0 1-179.45842639-173.85035105v-179.45842637a44.88703859 44.88703859 0 0 1 89.72921362-3.36484537v179.45842637a89.72921361 89.72921361 0 0 0 85.242752 89.72921362H798.42056937a89.72921361 89.72921361 0 0 0 89.72921278-85.24275285v-179.45842638a44.86460681 44.86460681 0 0 1 44.8646068-48.22945216z'],
  ...props
});

const VoiceFillNormal = props => createSvgIcon({
  name: 'voice-fill',
  viewBox: '0 0 1024 1024',
  path: ['M832 426.666667a53.333333 53.333333 0 0 0-53.184 49.365333l-0.149333 3.584C778.666667 627.285333 659.285333 746.666667 512 746.666667s-266.666667-119.381333-266.666667-266.666667l-0.128-3.584a53.333333 53.333333 0 1 0-106.389333-0.384l-0.149333 3.584 0.085333 7.296c3.477333 182.165333 137.557333 334.208 315.136 361.92l4.778667 0.704V906.666667A53.333333 53.333333 0 0 0 512 960l3.498667-0.106667A53.333333 53.333333 0 0 0 565.333333 906.666667v-57.130667l4.778667-0.704C750.058667 820.736 885.333333 665.002667 885.333333 480l-0.128-3.584A53.418667 53.418667 0 0 0 832 426.666667z', 'M512 74.666667c114.730667 0 208.298667 90.56 213.12 204.074666l0.213333 9.258667v192c0 117.824-95.509333 213.333333-213.333333 213.333333-114.730667 0-208.298667-90.56-213.12-204.074666L298.666667 480v-192l0.213333-9.258667C303.68 165.226667 397.248 74.666667 512 74.666667z'],
  ...props
});

const LinkLightNormal = props => createSvgIcon({
  name: 'link-light',
  viewBox: '0 0 1024 1024',
  path: ['M434.986667 352.597333a228.117333 228.117333 0 0 1 166.698666 91.669334 32 32 0 1 1-51.370666 38.165333 164.117333 164.117333 0 0 0-119.914667-66.005333 163.648 163.648 0 0 0-123.52 43.754666l-4.48 4.352-117.482667 118.314667c-62.442667 65.088-61.546667 168.661333 2.005334 232.661333 62.037333 62.485333 161.450667 64.682667 225.770666 6.378667l4.245334-3.968 67.2-67.669333a32 32 0 0 1 47.594666 42.666666l-2.197333 2.432-67.584 68.053334a227.498667 227.498667 0 0 1-320.426667-2.794667C55.04 773.525333 52.288 633.813333 134.528 543.04l4.565333-4.906667 117.888-118.698666a227.712 227.712 0 0 1 178.005334-66.837334z m447.509333-189.205333c86.442667 87.082667 89.173333 226.794667 6.954667 317.568l-4.565334 4.906667-117.888 118.698666a227.712 227.712 0 0 1-178.005333 66.837334 228.117333 228.117333 0 0 1-166.677333-91.669334 32 32 0 1 1 51.370666-38.165333 164.117333 164.117333 0 0 0 119.914667 66.005333 163.648 163.648 0 0 0 123.52-43.754666l4.48-4.352 117.482667-118.314667c62.442667-65.088 61.546667-168.661333-2.005334-232.661333a163.498667 163.498667 0 0 0-230.4-2.005334 32 32 0 0 1-44.629333-45.866666 227.498667 227.498667 0 0 1 320.426667 2.773333z'],
  ...props
});

const ReferenceNormal = props => createSvgIcon({
  name: 'reference',
  viewBox: '0 0 1024 1024',
  path: ['M427.562667 244.202667a13.994667 13.994667 0 0 1 0.213333 0.554666l16 50.624a18.048 18.048 0 0 1-8.597333 21.312l-2.133334 0.981334c-68.181333 26.197333-118.293333 77.056-151.765333 154.88a339.008 339.008 0 0 0-22.848 74.453333 138.666667 138.666667 0 1 1-55.36 191.573333l-0.170667 0.085334c-40.32-55.872-45.546667-193.92 0-299.84 42.069333-97.813333 108.458667-165.269333 197.76-200.106667l8.426667-3.2a14.442667 14.442667 0 0 1 18.474667 8.682667z m382.165333 0a13.973333 13.973333 0 0 1 0.192 0.554666l16 50.624a18.048 18.048 0 0 1-8.597333 21.312l-2.133334 0.981334c-68.181333 26.197333-118.272 77.056-151.744 154.88a339.008 339.008 0 0 0-22.869333 74.453333 138.666667 138.666667 0 1 1-55.36 191.573333l-0.170667 0.085334c-40.32-55.872-45.546667-193.92 0-299.84 42.069333-97.813333 108.458667-165.269333 197.76-200.106667l8.426667-3.2a14.442667 14.442667 0 0 1 18.496 8.682667z'],
  ...props
});

const ReferenceLightNormal = props => createSvgIcon({
  name: 'reference-light',
  viewBox: '0 0 1024 1024',
  path: ['M795.093333 250.154667a17.109333 17.109333 0 0 1 0.256 0.789333l8.682667 27.434667a18.453333 18.453333 0 0 1-8.810667 21.802666l-2.176 1.002667c-71.04 27.221333-123.328 80.213333-157.952 160.704-12.202667 28.352-20.778667 55.914667-25.749333 82.816a138.666667 138.666667 0 1 1-60.544 126.826667c-16.448-74.752-7.573333-153.429333 27.498667-234.922667 40.533333-94.208 103.872-159.189333 189.013333-193.28l8.042667-3.114667a16.896 16.896 0 0 1 21.738666 9.941334z m-348.821333-4.48a17.109333 17.109333 0 0 1 0.277333 0.810666l8.661334 27.434667a18.453333 18.453333 0 0 1-8.789334 21.781333l-2.197333 1.002667c-71.04 27.242667-123.328 80.213333-157.952 160.725333-12.181333 28.330667-20.757333 55.893333-25.749333 82.773334a138.666667 138.666667 0 1 1-60.544 126.826666c-16.448-74.730667-7.552-153.386667 27.52-234.88 40.512-94.229333 103.850667-159.210667 188.992-193.301333l8.042666-3.114667a16.896 16.896 0 0 1 21.738667 9.941334z'],
  ...props
});

const DingdocNormal = props => createSvgIcon({
  name: 'dingdoc',
  viewBox: '0 0 1024 1024',
  path: ['M244.63739221 865.31185778h422.63438222c2.18453333 0 3.98070557 1.74762667 3.98070557 3.93216a3.88361443 3.88361443 0 0 1-0.63108779 2.11171555l-29.03001998 44.54020779a3.98070557 3.98070557 0 0 1-3.34961778 1.79617109H214.36947001a3.95643221 3.95643221 0 0 1-3.95643335-3.93216 3.88361443 3.88361443 0 0 1 0.65536-2.18453333l30.26792334-44.54020665a3.98070557 3.98070557 0 0 1 3.30107221-1.72335445z m560.04152889-261.97409223h35.02535111c2.18453333 0 3.95643221 1.74762667 3.95643336 3.93216a3.88361443 3.88361443 0 0 1-0.58254223 2.06317112l-19.83070891 31.45728a3.98070557 3.98070557 0 0 1-3.3981622 1.84471666h-35.82634666a3.95643221 3.95643221 0 0 1-3.98070557-3.93216 3.88361443 3.88361443 0 0 1 0.65536-2.13598776l20.65597667-31.43300779a3.98070557 3.98070557 0 0 1 3.32534443-1.79617223z m-295.0333622 130.97491h131.16908999c2.18453333 0 3.98070557 1.77189888 3.98070556 3.93216a3.88361443 3.88361443 0 0 1-0.65536 2.13598778l-29.0057489 44.54020778a3.98070557 3.98070557 0 0 1-3.34961778 1.79617223h-132.38272a3.95643221 3.95643221 0 0 1-3.98070443-3.93216 3.88361443 3.88361443 0 0 1 0.67963221-2.18453333l30.24365-44.54020779a3.98070557 3.98070557 0 0 1 3.30107335-1.74762667z m185.51542443 0h51.65207779c2.18453333 0 3.98070557 1.77189888 3.98070443 3.93216a3.88361443 3.88361443 0 0 1-0.63108665 2.13598778l-29.03002112 44.54020778a3.98070557 3.98070557 0 0 1-3.34961778 1.79617223H664.91733333a3.95643221 3.95643221 0 0 1-3.95643221-3.93216 3.88361443 3.88361443 0 0 1 0.65536-2.18453333l30.26792221-44.54020779a3.98070557 3.98070557 0 0 1 3.30107334-1.74762667z m-66.26417778-130.97491h117.91625557c2.18453333 0 3.98070557 1.74762667 3.98070443 3.93216a3.88361443 3.88361443 0 0 1-0.63108665 2.11171555l-29.03002112 44.54020779a3.98070557 3.98070557 0 0 1-3.34961778 1.79617223H598.65315555a3.95643221 3.95643221 0 0 1-3.98070556-3.93216 3.88361443 3.88361443 0 0 1 0.67963335-2.18453333l30.24364999-44.54020779a3.98070557 3.98070557 0 0 1 3.30107222-1.72335445zM152.83844779 836.42747221l74.32267776-153.4756022s2.79134777-7.71868445 2.42726002-18.2287178a389.50229333 389.50229333 0 0 1 66.3127222-255.44476444l66.19136-96.99328c146.07246222-214.08426667 319.69431666-283.26115555 520.8898378-207.50639332a13.01011001 13.01011001 0 0 1 6.26232888 19.56370888l-16.99081557 24.92795334a13.25283555 13.25283555 0 0 1-7.18468665 5.24288l-115.29481557 33.98162888a2.62144 2.62144 0 0 0-1.89326223 2.35444224 2.62144 2.62144 0 0 0 2.47580445 2.79134776l76.04603335 5.26715222a6.67496334 6.67496334 0 0 1 3.25252665 1.09226666 6.50505443 6.50505443 0 0 1 1.79617223 9.10222223l-44.66156999 65.39036444a13.27710777 13.27710777 0 0 1-9.68476445 5.72833223l-61.36111445 5.92251222a2.62144 2.62144 0 0 0-0.41263445 5.14579l42.06440334 10.67994112a6.50505443 6.50505443 0 0 1 3.83507001 10.00030778l-196.2196389 287.58167665a397.87633778 397.87633778 0 0 1-259.08565333 166.9954378l-43.59357668 7.76722887c-2.25735111 0.3883611-3.37388999-2.66998557-1.6990811-4.56324665a3612.02877667 3612.02877667 0 0 1 136.46051556-146.07246222 4406.93191111 4406.93191111 0 0 1 168.33043-160.49038223 6.50505443 6.50505443 0 0 0-1.35926556-10.60712334l-72.18668999-38.18078776c16.96654222-37.52542777 71.14296889-109.7121189 162.57782443-216.65716224a2.59716779 2.59716779 0 0 0-0.31554333-3.68943332 2.66998557 2.66998557 0 0 0-3.47098112 0.04854442c-90.14840889 79.20147001-154.68923221 136.94596779-193.59819776 173.20922112-38.35069667 35.72925667-65.31754667 63.15728555-80.87627889 82.2840889a6.50505443 6.50505443 0 0 0 2.2573511 10.00030776l59.32221668 28.78729558a2.59716779 2.59716779 0 0 1 1.01944889 3.81079666L127.81340445 947.96003555a2.18453333 2.18453333 0 0 1-3.95643222-1.09226666v-0.16990777c-2.11171555-49.5403611 12.42756779-78.40047445 28.98147556-110.27038891z'],
  ...props
});

const EditorNormal = props => createSvgIcon({
  name: 'editor',
  viewBox: '0 0 1024 1024',
  path: ['M567.24000031 171.99999969l-176.64 176.64a116.65999969 116.65999969 0 0 0-34.16000062 80.60000062l-2.11999969 129a116.65999969 116.65999969 0 0 0 118.56 118.57999969l129.04000031-2.11999969a116.65999969 116.65999969 0 0 0 80.58-34.16000062L812 511.02000031v239.07999938A121.90000031 121.90000031 0 0 1 690.09999969 872h-456.19999969A121.90000031 121.90000031 0 0 1 111.99999969 750.09999969v-456.19999969A121.90000031 121.90000031 0 0 1 233.9 171.99999969h333.34000031z m206.73999938-49.44l127.46000062 127.46000062a36.06 36.06 0 0 1 0 51L623.13999969 579.32c-6.6 6.6-15.54 10.39999969-24.9 10.56l-129.6 2.11999969A36.06 36.06 0 0 1 432.00000031 555.36000031l2.11999969-129.6c0.16000031-9.36 3.94000031-18.28000031 10.56-24.9L723.00000031 122.55999969a36.06 36.06 0 0 1 51 0z'],
  ...props
});

const SquareNormal = props => createSvgIcon({
  name: 'square',
  viewBox: '0 0 1024 1024',
  path: ['M459.605333 80.64A106.666667 106.666667 0 0 1 618.666667 173.589333v151.744a106.432 106.432 0 0 1 86.976 20.437334l137.024 106.986666a138.666667 138.666667 0 0 1 53.333333 109.312V874.666667h21.333333a42.666667 42.666667 0 1 1 0 85.333333H106.666667a42.666667 42.666667 0 1 1 0-85.333333h21.333333V348.650667a138.666667 138.666667 0 0 1 65.770667-117.973334l4.778666-2.816z m70.976 82.453333a21.333333 21.333333 0 0 0-29.056-8.106666l-261.056 147.2A53.333333 53.333333 0 0 0 213.333333 348.650667V874.666667h320V173.568a21.333333 21.333333 0 0 0-1.557333-8.021333z m92.586667 253.610667l-1.578667 2.346667a21.333333 21.333333 0 0 0-2.922666 10.773333V874.666667h192V562.048a53.333333 53.333333 0 0 0-20.501334-42.026667l-137.045333-107.008a21.333333 21.333333 0 0 0-29.930667 3.690667zM394.666667 704a32 32 0 0 1 32 32v42.666667a32 32 0 0 1-32 32h-42.666667a32 32 0 0 1-32-32v-42.666667a32 32 0 0 1 32-32h42.666667z m341.333333-85.333333a32 32 0 0 1 32 32v42.666666a32 32 0 0 1-32 32h-42.666667a32 32 0 0 1-32-32v-42.666666a32 32 0 0 1 32-32h42.666667z m-341.333333-106.666667a32 32 0 0 1 32 32v42.666667a32 32 0 0 1-32 32h-42.666667a32 32 0 0 1-32-32v-42.666667a32 32 0 0 1 32-32h42.666667z m0-192a32 32 0 0 1 32 32v42.666667a32 32 0 0 1-32 32h-42.666667a32 32 0 0 1-32-32v-42.666667a32 32 0 0 1 32-32h42.666667z'],
  ...props
});

const ViewNormal = props => createSvgIcon({
  name: 'view',
  viewBox: '0 0 1024 1024',
  path: ['M954.581333 489.28C870.229333 324.693333 703.232 213.333333 512 213.333333c-191.232 0-358.272 111.445333-442.581333 275.968a50.325333 50.325333 0 0 0 0 45.418667C153.770667 699.306667 320.768 810.666667 512 810.666667c191.232 0 358.272-111.445333 442.581333-275.968 7.232-14.293333 7.232-31.146667 0-45.418667zM512 736c-123.712 0-224-100.288-224-224S388.288 288 512 288 736 388.288 736 512A223.893333 223.893333 0 0 1 512 736z m0-74.666667a149.333333 149.333333 0 1 0 0-298.666666 149.333333 149.333333 0 0 0 0 298.666666z'],
  ...props
});

const RangePickerBetaNormal = props => createSvgIcon({
  name: 'range-picker-beta',
  viewBox: '0 0 1024 1024',
  path: ['M213.333333 192h128v149.333333H170.666667v-106.666666a42.666667 42.666667 0 0 1 42.666666-42.666667z', 'M810.666667 106.666667c70.698667 0 128 53.013333 128 118.4v508.032l-90.517334-79.424 55.082667-30.997334c52.736-29.717333 38.570667-109.248-21.162667-118.954666L853.333333 499.072V426.666667h-170.666666l-0.021334 44.714666-85.333333-13.845333L597.333333 426.666667h-170.666666v149.333333l57.152-0.021333 22.122666 85.333333L426.666667 661.333333l-0.021334 149.333334h118.016l9.194667 35.498666 1.088 3.754667c17.28 53.994667 92.650667 60.501333 118.293333 8.448l23.466667-47.701333h6.890667l97.258666 85.333333H213.333333c-70.698667 0-128-53.013333-128-118.4v-552.533333C85.333333 159.68 142.634667 106.666667 213.333333 106.666667h597.333334zM341.333333 661.333333H170.666667v110.677334c0 21.333333 19.093333 38.656 42.666666 38.656h127.978667L341.333333 661.333333z m0-234.666666H170.666667v149.333333h170.666666v-149.333333z m-0.021333-234.666667H213.333333c-23.573333 0-42.666667 17.301333-42.666666 38.677333V341.333333h170.666666l-0.021333-149.333333zM810.666667 192h-128.021334L682.666667 341.333333h170.666666v-110.677333c0-21.333333-19.093333-38.656-42.666666-38.656zM597.312 192h-170.666667L426.666667 341.333333h170.666666l-0.021333-149.333333z', 'M533.333333 512l338.474667 54.912-133.738667 75.328 205.056 179.904a21.333333 21.333333 0 0 1 1.962667 30.101333l-28.16 32.085334a21.333333 21.333333 0 0 1-30.08 1.962666l-208.597333-182.997333-62.442667 126.805333L533.333333 512z'],
  ...props
});

const ConditionalFormattingBetaNormal = props => createSvgIcon({
  name: 'conditional-formatting-beta',
  viewBox: '0 0 1024 1024',
  path: ['M341.333333 170.666667h192v192h-192zM341.333333 426.666667h106.666667v149.333333h-106.666667zM341.333333 640h298.666667v213.333333H341.333333z', 'M853.333333 106.666667a85.333333 85.333333 0 0 1 85.333334 85.333333v640a85.333333 85.333333 0 0 1-85.333334 85.333333H170.666667a85.333333 85.333333 0 0 1-85.333334-85.333333V192a85.333333 85.333333 0 0 1 85.333334-85.333333h682.666666zM277.333333 640H149.333333v213.333333h128V640z m362.666667 0H341.333333v213.333333h298.666667V640z m234.666667 0h-170.666667v213.333333h170.666667V640zM277.333333 426.666667H149.333333v149.333333h128v-149.333333z m170.666667 0h-106.666667v149.333333h106.666667v-149.333333z m426.666667 0H512v149.333333h362.666667v-149.333333zM277.333333 170.666667H149.333333v192h128V170.666667z m256 0h-192v192h192V170.666667z m341.333334 0H597.333333v192h277.333334V170.666667z'],
  ...props
});

const MemberNormal = props => createSvgIcon({
  name: 'member',
  viewBox: '0 0 1024 1024',
  path: ['M515.413333 63.351467L502.9888 63.010133a231.082667 231.082667 0 0 0-231.424 231.082667v27.170133c0 88.405333 31.675733 173.8752 89.2928 240.981334a47.240533 47.240533 0 0 1-17.066667 74.1376L157.218133 716.8a171.349333 171.349333 0 0 0-98.0992 114.619733 91.136 91.136 0 0 0 88.2688 113.8688h713.386667a91.136 91.136 0 0 0 88.200533-113.8688 171.2128 171.2128 0 0 0-98.167466-114.551466L663.415467 636.245333a47.104 47.104 0 0 1-17.066667-74.001066l3.003733-3.549867a357.034667 357.034667 0 0 0 86.289067-232.789333V294.229333A231.082667 231.082667 0 0 0 515.413333 63.351467z m11.8784 85.6064A147.0464 147.0464 0 0 1 651.605333 294.229333v31.675734a273.066667 273.066667 0 0 1-55.773866 165.341866l-13.243734 16.1792a131.140267 131.140267 0 0 0 47.7184 206.0288l187.392 80.554667c24.7808 10.6496 43.281067 32.1536 50.039467 58.299733a7.099733 7.099733 0 0 1-5.12 8.669867l-1.774933 0.2048H147.456a7.099733 7.099733 0 0 1-7.168-7.099733l0.273067-1.774934a87.381333 87.381333 0 0 1 49.9712-58.368l186.436266-80.349866a131.2768 131.2768 0 0 0 47.581867-206.165334 285.559467 285.559467 0 0 1-68.949333-186.1632v-27.170133c0-78.6432 61.781333-143.36 140.288-146.909867l7.099733-0.136533c8.055467 0 16.1792 0.682667 24.302933 1.911467z'],
  ...props
});

const PositionNormal = props => createSvgIcon({
  name: 'position',
  viewBox: '0 0 1024 1024',
  path: ['M529.339733 957.781333a41.984 41.984 0 0 1-50.449066 0 1213.917867 1213.917867 0 0 1-55.022934-45.4656 1329.3568 1329.3568 0 0 1-119.330133-118.715733c-111.138133-126.088533-178.517333-254.1568-178.517333-379.562667 0-206.165333 169.233067-372.053333 378.129066-372.053333 208.896 0 378.0608 165.888 378.0608 372.053333 0 125.405867-67.3792 253.474133-178.517333 379.562667a1329.3568 1329.3568 0 0 1-174.353067 164.2496z m-0.4096-108.544a1246.344533 1246.344533 0 0 0 111.752534-111.2064c98.850133-112.162133 157.4912-223.6416 157.4912-323.925333 0-159.402667-131.208533-288.085333-294.024534-288.085333-162.884267 0-294.0928 128.682667-294.0928 288.085333 0 100.283733 58.709333 211.7632 157.559467 323.925333a1246.344533 1246.344533 0 0 0 136.533333 132.437334c7.7824-6.5536 16.042667-13.653333 24.7808-21.230934z m-24.7808-250.538666a189.098667 189.098667 0 1 1 0-378.197334 189.098667 189.098667 0 0 1 0 378.197334z m0-84.104534a104.994133 104.994133 0 1 0 0-209.988266 104.994133 104.994133 0 0 0 0 209.988266z'],
  ...props
});

const GotoNormal = props => createSvgIcon({
  name: 'goto',
  viewBox: '0 0 1024 1024',
  path: ['M512 64a448 448 0 1 1 0 896A448 448 0 0 1 512 64z m0 85.312a362.688 362.688 0 1 0 0 725.376A362.688 362.688 0 0 0 512 149.312z m133.76 201.472l146.368 146.368a32 32 0 0 1 0 45.248l-146.304 146.304a38.4 38.4 0 0 1-54.336 0l-6.016-6.016a38.4 38.4 0 0 1 0-54.336l63.04-63.04H294.4a38.4 38.4 0 0 1-38.4-38.4V518.4a38.4 38.4 0 0 1 38.4-38.4h359.936L585.472 411.136a38.4 38.4 0 0 1 0-54.272l6.016-6.08a38.4 38.4 0 0 1 54.336 0z'],
  ...props
});

const ContactNormal = props => createSvgIcon({
  name: 'contact-normal',
  viewBox: '0 0 1024 1024',
  path: ['M716.16 64c56.896 0 85.632 5.76 115.52 22.144 27.52 15.104 49.408 37.568 64.128 65.92 16 30.72 21.504 60.224 21.504 118.72v482.432c0 58.496-5.504 88-21.504 118.784-14.72 28.288-36.608 50.752-64.128 65.92-29.888 16.384-58.624 22.08-115.52 22.08H350.528c-56.96 0-85.632-5.76-115.52-22.144a156.864 156.864 0 0 1-64.128-65.92c-16-30.72-21.568-60.224-21.568-118.72V704h-42.624a42.688 42.688 0 0 1-42.24-36.352L64 661.312c0-23.552 19.072-42.624 42.688-42.624l42.624-0.064V405.312h-42.624a42.688 42.688 0 0 1-42.24-36.352L64 362.688C64 339.072 83.072 320 106.688 320h42.624v-49.28c0-58.432 5.568-87.936 21.568-118.72 14.72-28.288 36.544-50.752 64.128-65.92C264.896 69.76 293.632 64 350.528 64h365.632z m-1.408 85.312h-362.88c-43.968 0-59.648 3.2-75.776 12.096a72.448 72.448 0 0 0-29.76 30.848c-8.64 16.64-11.648 32.896-11.648 78.528v482.432c0 45.632 3.008 61.824 11.648 78.528 6.912 13.44 16.832 23.68 29.76 30.848 16.128 8.96 31.808 12.096 75.776 12.096h362.88c44.032 0 59.712-3.2 75.776-12.096 12.992-7.168 22.912-17.408 29.824-30.848 8.64-16.64 11.648-32.896 11.648-78.528V270.784c0-45.632-3.008-61.824-11.648-78.528a72.448 72.448 0 0 0-29.824-30.848c-16.064-8.96-31.744-12.096-75.776-12.096z m-32.064 128c23.552 0 42.624 19.136 42.624 42.688v384A42.688 42.688 0 1 1 640 704V320c0-23.552 19.072-42.688 42.688-42.688z'],
  ...props
});

const FontNormal = props => createSvgIcon({
  name: 'font',
  viewBox: '0 0 1024 1024',
  path: ['M896 540.44444478a42.666667 42.666667 0 0 1 42.368 37.674666L938.666667 583.11111078v256a42.666667 42.666667 0 0 1-81.578667 17.536 170.666667 170.666667 0 1 1 0.085333-291.072A42.453333 42.453333 0 0 1 896 540.44444478zM350.72 127.77244478c18.858667 5.333333 34.133333 18.944 41.642667 36.778666l2.176 6.101334 200.96 655.957333a42.666667 42.666667 0 0 1-79.914667 29.653333l-1.706667-4.693333L444.714667 625.77777778H232.448L169.045333 850.63111078a42.666667 42.666667 0 0 1-47.786666 30.592l-4.821334-1.109333a42.666667 42.666667 0 0 1-30.592-47.786667l1.109334-4.821333L271.744 172.01777778A64 64 0 0 1 350.72 127.77244478zM768 625.77777778a85.333333 85.333333 0 1 0 0 170.666667 85.333333 85.333333 0 0 0 0-170.666667zM334.208 264.94577778L256.512 540.44444478H418.56L334.208 264.94577778z'],
  ...props
});

const WechatNormal = props => createSvgIcon({
  name: 'wechat',
  viewBox: '0 0 1024 1024',
  path: ['M842.611813 773.665535l14.722306-13.70514c38.365796-35.716456 59.98007-83.084277 59.98007-133.402289 0-105.165178-94.719268-191.990662-213.323527-191.990663s-213.323527 86.825484-213.323526 191.990663S585.386404 818.548768 703.990662 818.548768c14.292518 0 28.383444-1.26276 42.141796-3.745301l16.820084-3.035126 85.328388 56.338123-5.669117-94.440929z m93.40125 131.917472c2.117221 35.280528-24.76708 65.599044-60.047608 67.716264a63.99757 63.99757 0 0 1-39.096436-10.475585l-92.993974-61.399396a324.152704 324.152704 0 0 1-39.885406 2.453889c-164.152641 0-298.651914-123.292024-298.651914-277.320073s134.500297-277.320073 298.651914-277.320073 298.651914 123.292024 298.651914 277.320073c0 67.711148-26.252921 131.473357-72.502267 181.190688l5.873777 97.834213z m-146.69299-279.024901c-23.562649 0-42.664705-19.102057-42.664705-42.664706s19.102057-42.664705 42.664705-42.664705c23.562649 0 42.664705 19.102057 42.664705 42.664705s-19.102057 42.664705-42.664705 42.664706zM501.334079 370.569874c-29.453822 0-53.330626-23.876804-53.330625-53.330626s23.876804-53.330626 53.330625-53.330626 53.330626 23.876804 53.330626 53.330626-23.877827 53.330626-53.330626 53.330626z m117.327173 255.988232c-23.562649 0-42.664705-19.102057-42.664706-42.664706s19.102057-42.664705 42.664706-42.664705 42.664705 19.102057 42.664705 42.664705-19.102057 42.664705-42.664705 42.664706z m-330.650699-255.988232c-29.453822 0-53.330626-23.876804-53.330626-53.330626s23.876804-53.330626 53.330626-53.330626 53.330626 23.876804 53.330626 53.330626-23.876804 53.330626-53.330626 53.330626z m-84.60798 246.715031l-23.653723 64.203254 115.857705-42.684148a42.669822 42.669822 0 0 1 25.213241-1.327228 337.541643 337.541643 0 0 0 27.028587 5.668093c23.239284 3.891633 38.924521 25.885554 35.032887 49.124837-3.891633 23.239284-25.885554 38.924521-49.124837 35.032888a424.741657 424.741657 0 0 1-20.691251-3.994988l-147.188271 54.227043c-33.165354 12.218276-69.956282-4.761444-82.175581-37.926798a63.999616 63.999616 0 0 1 0-44.24776l29.964453-81.331353c-58.859549-60.998259-92.310406-139.093918-92.310406-222.126007C21.3564 202.037483 194.444551 50.585095 405.338748 50.585095c148.854213 0 282.987143 75.968206 346.517062 193.985086 11.168364 20.747533 3.403516 46.620807-17.34504 57.790195-20.747533 11.168364-46.620807 3.403516-57.790195-17.34504-48.27447-89.678462-153.194054-149.10083-271.381827-149.10083-166.114318 0-298.651914 115.971291-298.651914 255.987209 0 67.358107 30.584576 130.862443 84.859713 178.596607a42.666752 42.666752 0 0 1 11.856026 46.786583z'],
  ...props
});

const PersonNormal = props => createSvgIcon({
  name: 'person',
  viewBox: '0 0 1024 1024',
  path: ['M837.9392 503.808l107.7248 107.6736a38.7584 38.7584 0 0 1-0.256 61.8496l-107.4688 107.52a38.4 38.4 0 0 1-54.272-54.272l48.128-48.1792-10.752 0.256a238.9504 238.9504 0 0 0-227.9936 238.6944 38.4 38.4 0 0 1-76.8 0 315.7504 315.7504 0 0 1 310.9888-315.6992l-43.6224-43.52a38.4 38.4 0 0 1 54.3232-54.272zM473.6 576c13.056 0 25.856 0.1536 38.5024 0.512a38.8608 38.8608 0 0 1 34.048 38.4 38.4 38.4 0 0 1-33.2288 38.0416l-4.352 0.256 3.5328-0.2048v0.3072l-3.6352-0.1024h-0.2048l3.84 0.1024h-5.5808 1.2288l0.3584-0.1024-15.0528-0.256a1422.08 1422.08 0 0 0-19.456-0.1536c-115.0464 0-211.2512 13.568-288.8192 40.2432a66.6112 66.6112 0 0 0-43.9808 63.488c0 31.0784 19.456 58.2656 47.4624 67.4304 40.8576 13.312 91.5456 22.784 152.064 28.2112 19.712 2.0992 35.1232 18.5856 35.1232 38.7072a38.4 38.4 0 0 1-33.1776 38.0416l-1.8944 0.1536 0.0512 0.2048-1.4848-0.1536-1.8944 0.1536 1.792-0.1536h-0.1024l-20.9408-1.9456c-59.2896-6.144-110.3872-16.1792-153.3952-30.208-59.8016-19.5584-100.4032-76.288-100.4032-140.4416 0-61.6448 38.5536-116.4288 95.7952-136.0896 86.528-29.7472 191.0784-44.4416 313.8048-44.4416zM486.4 51.2a230.4 230.4 0 1 1 0 460.8 230.4 230.4 0 0 1 0-460.8z m0 76.8a153.6 153.6 0 1 0 0 307.2 153.6 153.6 0 0 0 0-307.2z'],
  ...props
});

const UnlockNormal = props => createSvgIcon({
  name: 'unlock',
  viewBox: '0 0 1024 1024',
  path: ['M790.1184 51.2c122.2144 0 222.1056 90.624 229.0688 204.8h-0.8704a40.8064 40.8064 0 0 1-25.4976 32.256c-20.736 8.3968-44.032-0.7168-51.968-20.3776a36.5568 36.5568 0 0 1-2.56-11.8784h-0.3072c-6.8096-71.7824-70.4-128-147.8656-128-78.9504 0-143.5648 58.4704-148.224 132.1984l-0.256 8.6016-0.0512 38.3488L768 307.2a153.6 153.6 0 0 1 153.6 153.6v307.2a153.6 153.6 0 0 1-153.6 153.6H256a153.6 153.6 0 0 1-153.6-153.6V460.8a153.6 153.6 0 0 1 153.6-153.6l304.64-0.0512V268.8c0-116.6336 96.768-211.8656 218.368-217.344L790.1184 51.2zM768 384H256c-42.3936 0-76.8 38.7072-76.8 86.4256v287.9488c0 47.7184 34.4064 86.4256 76.8 86.4256h512c42.3936 0 76.8-38.7072 76.8-86.4256V470.4768c0-47.7184-34.4064-86.4256-76.8-86.4256zM499.2 512a38.4 38.4 0 0 1 38.4 38.4v128a38.4 38.4 0 1 1-76.8 0v-128a38.4 38.4 0 0 1 38.4-38.4z'],
  ...props
});

const DetailsFillNormal = props => createSvgIcon({
  name: 'details-fill',
  viewBox: '0 0 1024 1024',
  path: ['M512 64c247.424 0 448 200.576 448 448s-200.576 448-448 448S64 759.424 64 512 264.576 64 512 64z m74.645333 358.613333h-22.976l-127.509333 19.669334-4.842667 14.464c5.44 0 9.664-0.576 13.290667-0.576 8.469333 0 15.125333 2.325333 19.946667 6.357333 4.842667 4.053333 7.253333 8.682667 7.253333 13.888 0 8.682667-2.410667 20.821333-7.253333 37.610667l-52.565334 172.970666c-4.245333 13.888-6.656 24.874667-6.656 34.133334 0 13.312 4.842667 24.874667 14.506667 33.557333 9.664 8.682667 22.954667 13.312 39.274667 13.312 42.922667 0 83.413333-31.829333 121.472-94.869333l-12.693334-6.954667c-15.701333 23.146667-29.610667 39.338667-40.490666 48.597333a17.770667 17.770667 0 0 1-12.693334 5.205334c-2.410667 0-4.821333-1.152-7.253333-3.477334-2.410667-2.304-3.626667-4.629333-3.626667-7.509333 0-4.629333 2.432-14.464 6.656-28.928L586.666667 422.613333zM563.072 256c-15.104 0-28.416 5.205333-39.296 15.616s-15.701333 23.146667-15.701333 37.610667c0 14.464 5.44 27.178667 16.32 37.610666 10.88 10.410667 23.573333 15.616 38.677333 15.616s28.394667-5.205333 39.274667-15.616c10.88-10.432 16.32-23.146667 16.32-37.610666 0-14.464-5.44-27.2-16.32-37.610667S578.773333 256 563.072 256z'],
  ...props
});

const InsertNormal = props => createSvgIcon({
  name: 'insert',
  viewBox: '0 0 1024 1024',
  path: ['M768 810.666667a21.333333 21.333333 0 0 1 21.333333 21.333333v42.666667a21.333333 21.333333 0 0 1-21.333333 21.333333H128a21.333333 21.333333 0 0 1-21.333333-21.333333v-42.666667a21.333333 21.333333 0 0 1 21.333333-21.333333h640zM414.165333 353.834667a42.666667 42.666667 0 0 1 0 60.330666L358.997333 469.333333H938.666667a21.333333 21.333333 0 0 1 21.333333 21.333334v42.666666a21.333333 21.333333 0 0 1-21.333333 21.333334H358.997333l55.168 55.168a42.666667 42.666667 0 0 1-60.330666 60.330666l-128-128a42.624 42.624 0 0 1 0-60.330666l128-128a42.666667 42.666667 0 0 1 60.330666 0zM768 128a21.333333 21.333333 0 0 1 21.333333 21.333333v42.666667a21.333333 21.333333 0 0 1-21.333333 21.333333H128a21.333333 21.333333 0 0 1-21.333333-21.333333V149.333333a21.333333 21.333333 0 0 1 21.333333-21.333333h640z'],
  ...props
});

const InvisibleNormal = props => createSvgIcon({
  name: 'invisible',
  viewBox: '0 0 1024 1024',
  path: ['M170.263273 747.101091C90.949818 667.554909 46.545455 574.836364 46.545455 519.586909v-13.218909c0-111.616 180.642909-376.087273 465.454545-376.087273 82.990545 0 156.346182 22.109091 219.368727 55.761455l-52.317091 52.317091A390.190545 390.190545 0 0 0 512 200.098909c-240.221091 0-395.636364 227.560727-395.636364 306.269091v13.218909c0 38.493091 37.329455 112.453818 103.330909 178.036364l-49.431272 49.477818zM977.454545 505.809455v13.777454c-0.977455 115.060364-177.803636 376.040727-465.454545 376.040727-98.769455 0-184.552727-32.069818-255.022545-78.382545L106.123636 968.145455a34.816 34.816 0 0 1-49.338181 0 34.909091 34.909091 0 0 1 0-49.384728L917.876364 57.716364a34.909091 34.909091 0 1 1 49.384727 49.384727l-143.080727 143.080727c97.559273 84.014545 152.669091 192.046545 153.274181 255.627637z m-365.195636-43.752728l-151.226182 151.179637c15.36 7.959273 32.488727 12.8 50.920728 12.8 62.370909 0 113.105455-50.734545 113.105454-113.105455a109.195636 109.195636 0 0 0-12.8-50.874182z m295.377455 44.032c-0.465455-48.733091-49.431273-137.122909-132.933819-206.475636l-111.616 111.662545c19.828364 29.090909 31.883636 63.860364 31.883637 101.655273a183.109818 183.109818 0 0 1-182.923637 182.923636c-37.841455 0-72.610909-12.055273-101.701818-31.930181l-102.493091 102.493091c57.576727 35.141818 126.231273 59.345455 204.194909 59.345454 236.404364 0 394.845091-218.158545 395.636364-306.501818v-13.172364zM512 399.872c1.722182 0 3.304727 0.418909 5.026909 0.512l58.321455-58.321455A180.270545 180.270545 0 0 0 512 330.053818a183.109818 183.109818 0 0 0-182.923636 182.923637c0 22.341818 4.608 43.566545 11.962181 63.348363l58.321455-58.321454c0-1.722182-0.465455-3.304727-0.465455-5.026909 0-62.370909 50.734545-113.105455 113.105455-113.105455z'],
  ...props
});

const DarkModeNormal = props => createSvgIcon({
  name: 'dark-mode',
  viewBox: '0 0 1024 1024',
  path: ['M512 64c247.424 0 448 200.576 448 448s-200.576 448-448 448S64 759.424 64 512 264.576 64 512 64z m0 85.333333v725.333334c200.298667 0 362.666667-162.368 362.666667-362.666667S712.298667 149.333333 512 149.333333z'],
  ...props
});

const PercentNormal = props => createSvgIcon({
  name: 'percent',
  viewBox: '0 0 1024 1024',
  path: ['M846.15168 132.99712a40.96 40.96 0 0 1 6.10304 55.02976l-2.21184 2.7648-611.96288 700.33408a40.96 40.96 0 0 1-63.8976-51.13856l2.21184-2.7648L788.35712 136.88832a40.96 40.96 0 0 1 57.79456-3.8912zM747.52 491.52a153.6 153.6 0 0 1 153.6 153.6v97.85344a153.6 153.6 0 0 1-307.2 0V645.12a153.6 153.6 0 0 1 153.6-153.6z m0 75.5712a71.68 71.68 0 0 0-71.68 71.68v106.7008a71.68 71.68 0 0 0 143.36 0v-106.7008a71.68 71.68 0 0 0-71.68-71.68z m-450.56-444.76416a153.6 153.6 0 0 1 153.6 153.6v97.85344a153.6 153.6 0 0 1-307.2 0v-97.85344a153.6 153.6 0 0 1 153.6-153.6z m0 75.55072a71.68 71.68 0 0 0-71.68 71.68v106.7008a71.68 71.68 0 0 0 143.36 0v-106.7008a71.68 71.68 0 0 0-71.68-71.68z'],
  ...props
});

const AddCalendarNormal = props => createSvgIcon({
  name: 'add-calendar',
  viewBox: '0 0 1024 1024',
  path: ['M704 64a42.666667 42.666667 0 0 1 42.666667 42.666667v42.666666h6.570666c58.453333 0 88 5.269333 118.741334 20.437334 28.288 13.973333 50.752 34.709333 65.877333 60.8 16.426667 28.373333 22.144 55.658667 22.144 109.610666V448a42.666667 42.666667 0 1 1-85.333333 0v-103.68c0-41.152-3.136-55.808-12.053334-70.869333a70.506667 70.506667 0 0 0-30.890666-27.904c-15.914667-7.68-31.424-10.602667-72.448-10.88h-488.533334c-45.568 0-61.781333 2.837333-78.464 10.88-13.44 6.485333-23.701333 15.786667-30.890666 27.904C152.469333 288.512 149.333333 303.146667 149.333333 344.32v377.984c0 41.173333 3.136 55.829333 12.053334 70.890667a70.506667 70.506667 0 0 0 30.890666 27.904c16.682667 8.042667 32.896 10.88 78.485334 10.88H490.666667a42.666667 42.666667 0 1 1 0 85.333333H270.762667c-58.453333 0-88-5.269333-118.741334-20.437333-28.288-13.973333-50.752-34.709333-65.877333-60.8C69.717333 807.701333 64 780.416 64 726.464V340.181333c0-53.973333 5.696-81.216 22.144-109.589333 15.146667-26.112 37.589333-46.848 65.877333-60.821333C182.741333 154.602667 212.288 149.333333 270.762667 149.333333H277.333333V106.666667a42.666667 42.666667 0 1 1 85.333334 0v42.666666h298.666666V106.666667a42.666667 42.666667 0 0 1 42.666667-42.666667z m42.666667 426.666667a42.666667 42.666667 0 0 1 42.666666 42.666666v128h128a42.666667 42.666667 0 1 1 0 85.333334h-128v128a42.666667 42.666667 0 1 1-85.333333 0v-128h-128a42.666667 42.666667 0 1 1 0-85.333334h128v-128a42.666667 42.666667 0 0 1 42.666667-42.666666z m-256-128a42.666667 42.666667 0 1 1 0 85.333333H277.333333a42.666667 42.666667 0 1 1 0-85.333333h213.333334z'],
  ...props
});

const DragNormal = props => createSvgIcon({
  name: 'drag',
  viewBox: '0 0 1024 1024',
  path: ['M238.933333 273.066667h546.133334V204.8H238.933333v68.266667zM238.933333 546.133333h546.133334V477.866667H238.933333v68.266666zM238.933333 819.2h546.133334v-68.266667H238.933333v68.266667z'],
  ...props
});

const _createElement$9 = /*#__PURE__*/React__default['default'].createElement;
const AddHeadNormal = props => {
  const iconProps = {
    name: 'addhead',
    viewBox: '0 0 1024 1024',
    path: ['M512 512m-512 0a512 512 0 1 0 1024 0 512 512 0 1 0-1024 0Z', 'M546.5088 571.5456a129.3824 129.3824 0 0 0-26.368 78.5408c0 23.552 6.2464 45.568 17.152 64.6144 3.3792 5.8368-1.4336 16.5888-7.7824 16.5888H309.4528a32.4608 32.4608 0 0 1-29.952-45.056c7.3728-17.4592 19.5584-31.744 36.6592-42.8544 45.056-29.3376 123.4944-32.768 123.4944-79.1552 0-12.3904-4.6592-27.8528-14.0288-41.7792-9.3184-13.9264-14.0288-18.5856-28.0064-37.2736C383.5904 466.432 378.88 438.8864 378.88 424.96c0-13.8752 9.3184-9.216 9.3184-18.4832-0.6656-49.5104 5.9392-86.528 51.4048-111.4112 9.3184-5.12 31.3856-7.8336 41.8816-7.8336 11.5712-1.1776 0.1536-10.752 25.6-10.752s60.8256 11.4176 77.7728 46.6944c16.896 35.2768 18.3296 73.984 18.3296 83.2512 0 9.2672 9.3696 4.608 9.3696 18.5344s-4.096 41.472-18.432 60.2112c-14.336 18.688-18.944 23.3472-28.3136 37.2736-8.2944 12.288-12.9024 25.6-13.824 37.2736a50.0736 50.0736 0 0 1-5.5296 11.776z', 'M650.24 552.96a97.28 97.28 0 1 1 0 194.56 97.28 97.28 0 0 1 0-194.56z m0.0512 35.84a12.544 12.544 0 0 0-12.8 12.288v36.352h-36.352a12.3904 12.3904 0 0 0-12.032 9.8304l-0.3072 2.9184c0 7.0144 5.4784 12.8 12.288 12.8l36.352-0.0512v36.4544c0 5.7856 4.1984 10.7008 9.8304 11.9808l2.9184 0.3072c7.0144 0 12.8-5.4784 12.8-12.288v-36.4032l36.352 0.0512a12.3904 12.3904 0 0 0 12.032-9.8304l0.3072-2.9184a12.544 12.544 0 0 0-12.288-12.8h-36.4032l0.0512-36.352a12.3904 12.3904 0 0 0-9.8304-12.032z'],
    pathColors: ['#C9CBCF', '#FFFFFF', '#FFFFFF'],
    ...props
  };
  return /*#__PURE__*/_createElement$9(IconBase, iconProps);
};

const FenduanfuNormal = props => createSvgIcon({
  name: 'fenduanfu',
  viewBox: '0 0 1024 1024',
  path: ['M682.666667 85.333333v0.256L851.882667 256H853.333333v17.28l1.792 667.093333h-682.666666L170.666667 85.333333H682.666667z m-42.666667 42.624H213.333333l1.706667 769.706667h597.333333L810.752 298.666667H640V256H298.666667V213.333333h341.333333V127.957333zM725.333333 341.333333v42.666667H298.666667V341.333333h426.666666z m-42.666666-85.333333h109.098666L682.666667 146.133333V256z', 'M426.666667 512h298.666666v42.666667h-298.666666zM298.666667 640h426.666666v42.666667H298.666667zM298.666667 768h298.666666v42.666667H298.666667zM298.666667 469.333333l95.232 64.682667L298.666667 597.333333z'],
  pathColors: ['#111F2C', '#0F66CF'],
  ...props
});

const FengefuNormal = props => createSvgIcon({
  name: 'fengefu',
  viewBox: '0 0 1024 1024',
  path: ['M703.6416 563.2L870.4 738.1504V972.8h-51.2v-203.8272l-153.6-1.1776V614.4H256V972.8H204.8v-409.6h498.8416zM716.8 651.1616v65.8432l63.232 0.4608L716.8 651.1616zM51.2 435.2l128.4096 87.2448L51.2 607.744V435.2zM256 102.4v307.2h563.2V102.4h51.2v358.4H204.8V102.4h51.2z'],
  ...props
});

const FenjiefuNormal = props => createSvgIcon({
  name: 'fenjiefu',
  viewBox: '0 0 1024 1024',
  path: ['M853.333333 960h-42.666666V768h-170.666667v-170.709333H213.333333V960H170.666667V554.666667h512v0.213333L851.882667 725.333333H853.333333v234.666667zM791.765333 725.333333L682.666667 615.466667V725.333333h109.098666zM213.333333 42.666667v384h597.333334V42.666667h42.666666v426.666666H170.666667V42.666667h42.666666z m512 256v42.666666H298.666667V298.666667h426.666666z m0-128v42.666666H298.666667V170.666667h426.666666z', 'M298.666667 682.666667h341.333333v42.666666H298.666667zM298.666667 810.666667h426.666666v42.666666H298.666667z', 'M44.629333 424.789333L173.056 512l-128.426667 85.333333z'],
  pathColors: ['#111F2C', '#0F66CF'],
  ...props
});

const FenyefuNormal = props => createSvgIcon({
  name: 'fenyefu',
  viewBox: '0 0 1024 1024',
  path: ['M682.453333 554.666667H682.666667v0.170666L851.797333 725.333333H853.333333v234.666667h-42.666666V768h-170.666667v-170.709333H213.333333V960H170.666667V554.666667h511.786666z m0.170667 60.8L682.666667 725.333333h109.056L682.666667 615.466667zM44.629333 424.746667L173.056 512l-128.426667 85.333333V424.789333zM213.333333 42.666667v384h597.333334V42.666667h42.666666v426.666666H170.666667V42.666667h42.666666z'],
  ...props
});

const ChatNormal = props => createSvgIcon({
  name: 'chat',
  viewBox: '0 0 20 20',
  path: ["M10.25,2.5 C14.5302068,2.5 18,5.96979319 18,10.25 C18,14.5302068 14.5302068,18 10.25,18 C8.86146387,18 7.52520046,17.6338888 6.35119636,16.9492675 L6.538,17.052 L4.24432606,17.6788999 C3.70907979,17.8248762 3.15910564,17.5708494 2.91231697,17.0984844 L2.86089243,16.9856839 L2.8211001,16.8656279 C2.76664418,16.6659562 2.76664418,16.4553456 2.8211001,16.2556739 L2.8211001,16.2556739 L3.447,13.961 L3.38624034,13.8519859 C2.86023558,12.8517496 2.55817308,11.7451982 2.50759977,10.5959814 L2.50759977,10.5959814 L2.5,10.25 C2.5,5.96979319 5.96979319,2.5 10.25,2.5 Z M10.25,3.5 C6.52207794,3.5 3.5,6.52207794 3.5,10.25 C3.5,11.4603222 3.81853539,12.6229394 4.41458006,13.6450503 L4.41458006,13.6450503 L4.52021039,13.8261876 L3.78586392,16.5187913 C3.77838958,16.5461973 3.77838958,16.5751046 3.78586392,16.6025105 C3.80898233,16.687278 3.89644115,16.7372545 3.98120866,16.7141361 L3.98120866,16.7141361 L6.67381238,15.9797896 L6.85494966,16.0854199 C7.87706056,16.6814646 9.03967777,17 10.25,17 C13.9779221,17 17,13.9779221 17,10.25 C17,6.52207794 13.9779221,3.5 10.25,3.5 Z M12.5,7.5 C13.1903559,7.5 13.75,8.05964406 13.75,8.75 C13.75,9.44035594 13.1903559,10 12.5,10 C11.8096441,10 11.25,9.44035594 11.25,8.75 C11.25,8.05964406 11.8096441,7.5 12.5,7.5 Z M7.5,7.5 C8.19035594,7.5 8.75,8.05964406 8.75,8.75 C8.75,9.44035594 8.19035594,10 7.5,10 C6.80964406,10 6.25,9.44035594 6.25,8.75 C6.25,8.05964406 6.80964406,7.5 7.5,7.5 Z"],
  ...props
});

const NotificationNormal = props => createSvgIcon({
  name: 'notification',
  viewBox: '0 0 1024 1024',
  path: ['M614.4 870.4a102.4 102.4 0 1 1-204.8 0zM512 102.4c43.1104 0 79.7184 24.2176 92.5696 57.7536 115.5584 40.0896 200.2432 153.2928 205.568 288.4608l0.3072 13.568v196.8128c0 41.728 32.1536 75.8784 72.192 75.8784 49.8688 0 51.8656 77.7216 5.9392 83.968l-5.9904 0.3584H141.4144c-52.0192 0-52.0192-84.3264 0-84.3264 37.632 0 68.352-30.208 71.8336-68.608l0.3072-7.2704V462.1824c0-141.1072 86.4256-260.608 205.824-302.0288C432.3328 126.6176 468.9408 102.4 512 102.4z m0 94.1568c-22.8864 0-47.6672 3.4816-74.3424 10.3936l5.0688-1.2288a51.2 51.2 0 0 1-6.5024 2.816c-97.4848 33.792-166.5536 129.7408-171.2128 241.664l-0.256 11.9808v196.8128c0 44.4928-22.3232 84.0704-56.4736 106.8032l-3.584 2.2016h614.5536l-3.584-2.2016a128 128 0 0 1-56.1664-98.56l-0.256-8.2432V462.1824c0-116.992-70.5024-218.624-171.4688-253.6448l-2.2016-0.9728C555.9296 200.2432 531.456 196.608 512 196.608z'],
  ...props
});

const NameCardNormal = props => createSvgIcon({
  name: 'name-card',
  viewBox: '0 0 1024 1024',
  path: ['M878.4896 153.6A94.72 94.72 0 0 1 972.8 248.6784v526.6432A94.72 94.72 0 0 1 878.4896 870.4H145.5104A94.72 94.72 0 0 1 51.2 775.3216V248.6784A94.72 94.72 0 0 1 145.5104 153.6z m0 51.2H145.5104l-5.4272 0.3584a43.6224 43.6224 0 0 0-37.6832 43.52v526.6432l0.3584 5.4784c2.6624 21.6576 20.7872 38.4 42.752 38.4h732.9792l5.4272-0.3584a43.6224 43.6224 0 0 0 37.6832-43.52V248.6784l-0.3584-5.4784a43.4176 43.4176 0 0 0-42.752-38.4z m-153.7536 51.2c16.384 0 39.168 7.168 50.0224 29.5424 10.9056 22.3232 11.8272 46.848 11.8272 52.736 0 5.888 6.0416 2.9184 6.0416 11.776 0 8.8064-2.6112 26.2656-11.8272 38.0928-9.216 11.8272-12.288 14.7968-18.2784 23.6032a48.64 48.64 0 0 0-9.0112 26.4704c0 29.3376 50.2784 31.5392 79.4112 50.0736 11.9296 7.6288 20.1728 17.5616 24.7296 29.8496a19.2 19.2 0 0 1-18.0224 25.856h-244.4288a19.2 19.2 0 0 1-18.0224-25.9072c4.608-12.288 12.8-22.1696 24.6272-29.7984 28.9792-18.5344 79.5136-20.736 79.5136-50.0736a49.152 49.152 0 0 0-9.0112-26.4704c-6.0416-8.8064-9.0112-11.776-18.0736-23.6032-9.0112-11.8272-12.032-29.2864-12.032-38.0928 0-8.8576 6.0416-5.888 6.0416-11.776-0.4096-31.3344 3.7888-54.7328 33.0752-70.5024 5.9904-3.2768 20.1728-4.9664 26.9824-4.9664 7.424-0.768 0.0512-6.8096 16.4352-6.8096z', 'M204.8 512h256v51.2H204.8zM204.8 665.6h384v51.2H204.8z'],
  ...props
});

const CodeNormal = props => createSvgIcon({
  name: 'code',
  viewBox: '0 0 1024 1024',
  path: ['M825.6 128c74.24 0 134.4 57.301333 134.4 128v509.802667c0 70.698667-60.16 128-134.4 128H198.4c-74.24 0-134.4-57.301333-134.4-128V256c0-70.698667 60.16-128 134.4-128h627.2z m0 85.333333H198.4c-26.794667 0-47.232 18.346667-48.938667 39.744L149.333333 256v509.802667c0 21.632 19.264 40.917333 45.44 42.56l3.626667 0.106666h627.2c26.794667 0 47.232-18.346667 48.938667-39.722666l0.128-2.944V256c0-21.632-19.264-40.917333-45.44-42.56L825.6 213.333333z m-220.736 66.176a12.8 12.8 0 0 1 12.309333 16.298667l-120.746666 425.6a12.8 12.8 0 0 1-12.309334 9.28h-59.264a12.8 12.8 0 0 1-12.288-16.384l124.8-425.6a12.8 12.8 0 0 1 12.288-9.173333h55.210667zM377.536 369.066667l30.464 29.866666a21.333333 21.333333 0 0 1 2.069333 28.138667l-1.749333 2.026667-91.456 93.333333 89.728 84.842667a21.333333 21.333333 0 0 1 0.853333 30.165333l-29.333333 30.997333a21.333333 21.333333 0 0 1-30.165333 0.853334l-137.045334-129.621334a21.333333 21.333333 0 0 1-0.853333-30.144l0.277333-0.277333 137.045334-139.861333a21.333333 21.333333 0 0 1 30.165333-0.32z m289.984 0a21.333333 21.333333 0 0 1 30.165333 0.32l137.024 139.861333a21.333333 21.333333 0 0 1-0.576 30.421333l-137.045333 129.621334a21.333333 21.333333 0 0 1-30.144-0.853334l-29.333333-30.997333a21.333333 21.333333 0 0 1 0.853333-30.165333l89.706667-84.842667-91.434667-93.333333-1.770667-2.026667a21.333333 21.333333 0 0 1 2.069334-28.16z'],
  ...props
});

const AddThinNormal = props => createSvgIcon({
  name: 'addThin',
  viewBox: '0 0 1024 1024',
  path: ['M546.133333 477.866667V136.533333H477.866667v341.333334H136.533333v68.266666h341.333334v341.333334h68.266666V546.133333h341.333334V477.866667H546.133333z'],
  ...props
});

const VideoMeetingNormal = props => createSvgIcon({
  name: 'VideoMeeting',
  viewBox: '0 0 20 20',
  path: ['M13.5528 11.3556C13.214 11.525 13 11.8712 13 12.25V14C13 15.1046 12.1046 16 11 16H4C2.89543 16 2 15.1046 2 14V6C2 4.89543 2.89543 4 4 4H11C12.1046 4 13 4.89543 13 6V7.75C13 8.12877 13.214 8.47503 13.5528 8.64443C13.8916 8.81382 14.297 8.77726 14.6 8.55L18 6V14L14.6 11.45C14.297 11.2227 13.8916 11.1862 13.5528 11.3556ZM14 6C14 4.34315 12.6569 3 11 3H4C2.34315 3 1 4.34315 1 6V14C1 15.6569 2.34315 17 4 17H11C12.6569 17 14 15.6569 14 14V12.25L17.4 14.8C18.0592 15.2944 19 14.824 19 14V6C19 5.17595 18.0592 4.70557 17.4 5.2L14 7.75V6Z', 'M10 10L6 12V8L10 10Z'],
  ...props
});

const _createElement$a = /*#__PURE__*/React__default['default'].createElement;
const LeftWrap = /*#__PURE__*/styled__default['default'].div(["position:relative;"]);
const Close = /*#__PURE__*/styled__default['default'].div(["position:absolute;top:25px;right:10px;font-size:17px;width:25px;height:25px;cursor:pointer;"]);
const Resizer = /*#__PURE__*/styled__default['default'].div(["position:absolute;", ";top:0;bottom:0;width:1px;box-sizing:border-box;cursor:col-resize;z-index:999;&:before{content:'';position:absolute;top:-1px;right:-1px;bottom:-1px;left:-1px;}"], p => p.isLeft ? 'right:0' : 'left:0');
var side;

(function (side) {
  side["left"] = "left";
  side["right"] = "right";
})(side || (side = {}));

var _ref = /*#__PURE__*/_createElement$a(ClosedNormal, null);

const SidePanel = ({
  closable,
  isLeft,
  maxWidth,
  minWidth,
  allowResize,
  children,
  onClose,
  width,
  onPanelWidthChange
}) => {
  const rootRef = React.useRef();
  const resizerRef = React.useRef();
  const onMouseDown = React.useCallback(e => {
    const ox = e.pageX;
    const ow = rootRef.current.offsetWidth;
    const resizeEl = resizerRef.current;
    let originalUserSelect = '';
    let isStarted = false;

    function adjustDiff(diff) {
      const toBeWidth = ow - diff;

      if (maxWidth) {
        if (toBeWidth > maxWidth) {
          diff = ow - maxWidth;
        }
      }

      if (minWidth) {
        if (toBeWidth < minWidth) {
          diff = ow - minWidth;
        }
      }

      return diff;
    }

    function onMouseMove(moveEvent) {
      if (!isStarted && Math.abs(moveEvent.pageX - ox) > 5) {
        isStarted = true;
        resizeEl.style.border = '1px dashed gray';
        originalUserSelect = document.body.style.userSelect;
        document.body.style.userSelect = 'none';
      }

      if (isStarted) {
        if (isLeft) {
          resizeEl.style.right = `${adjustDiff(ox - moveEvent.pageX)}px`;
        } else {
          resizeEl.style.left = `${adjustDiff(moveEvent.pageX - ox)}px`;
        }
      }
    }

    document.addEventListener('mousemove', onMouseMove, false);

    function onMouseUp() {
      if (isStarted) {
        document.body.style.userSelect = originalUserSelect;
        resizerRef.current.style.border = '';
        let w = 0;

        if (isLeft) {
          w = parseInt(resizerRef.current.style.right, 10);
        } else {
          w = parseInt(resizerRef.current.style.left, 10);
        }

        const finalWidth = Math.min(maxWidth, Math.max(minWidth, ow - w));
        onPanelWidthChange && onPanelWidthChange(finalWidth, isLeft ? side.left : side.right);
        rootRef.current.style.width = `${finalWidth}px`;
        resizerRef.current.style[isLeft ? 'right' : 'left'] = '0px';
      }

      document.removeEventListener('mouseup', onMouseUp, false);
      document.removeEventListener('mousemove', onMouseMove, false);
    }

    document.addEventListener('mouseup', onMouseUp, false);
  }, []);
  return /*#__PURE__*/_createElement$a(LeftWrap, {
    ref: rootRef,
    style: {
      width
    }
  }, closable ? /*#__PURE__*/_createElement$a(Close, {
    onClick: onClose
  }, _ref) : null, allowResize ? /*#__PURE__*/_createElement$a(Resizer, {
    isLeft: !!isLeft,
    onMouseDown: onMouseDown,
    ref: resizerRef
  }) : null, children);
};

const _createElement$b = /*#__PURE__*/React__default['default'].createElement;
const Container = /*#__PURE__*/styled__default['default'].div(["display:flex;flex-direction:column;height:100vh;"]);
const Main = /*#__PURE__*/styled__default['default'].div(["flex:1;display:flex;flex-direction:row;height:0;"]);
const Center = /*#__PURE__*/styled__default['default'].div(["flex:1;width:0;"]);
const Layout = ({
  leftPanel,
  allowLeftPanelResize,
  allowRightPanelResize,
  maxLeftPanelWidth = Infinity,
  minLeftPanelWidth = 0,
  leftPanelWidth,
  rightPanelWidth,
  maxRightPanelWidth = Infinity,
  minRightPanelWidth = 0,
  rightPanel,
  topPanel,
  bottomPanel,
  children,
  allowLeftPanelClose,
  allowRightPanelClose,
  onLeftPanelClose,
  onRightPanelClose,
  onSidePanelWidthChange,
  style
}) => /*#__PURE__*/_createElement$b(Container, {
  style: style
}, topPanel ? /*#__PURE__*/_createElement$b("div", null, topPanel) : null, /*#__PURE__*/_createElement$b(Main, null, leftPanel ? /*#__PURE__*/_createElement$b(SidePanel, {
  closable: allowLeftPanelClose,
  onClose: onLeftPanelClose,
  width: leftPanelWidth,
  isLeft: true,
  onPanelWidthChange: onSidePanelWidthChange,
  maxWidth: maxLeftPanelWidth,
  minWidth: minLeftPanelWidth,
  allowResize: allowLeftPanelResize
}, leftPanel) : null, /*#__PURE__*/_createElement$b(Center, null, children), rightPanel ? /*#__PURE__*/_createElement$b(SidePanel, {
  closable: allowRightPanelClose,
  onClose: onRightPanelClose,
  width: rightPanelWidth,
  maxWidth: maxRightPanelWidth,
  minWidth: minRightPanelWidth,
  onPanelWidthChange: onSidePanelWidthChange,
  allowResize: allowRightPanelResize
}, rightPanel) : null), bottomPanel ? /*#__PURE__*/_createElement$b("div", null, bottomPanel) : null);

dayjs__default['default'].extend(localeData__default['default']);
const resources = {};
const defaultLocale = 'zh-CN';
const LocaleContext = /*#__PURE__*/React__default['default'].createContext(defaultLocale);
const LocaleProvider = LocaleContext.Provider;
function defineLocale(lang, res) {
  resources[lang] = {
    translation: res
  };
}
function useTranslate(locale) {
  const contextLocale = React.useContext(LocaleContext);
  const l = locale || contextLocale || defaultLocale;
  return getT(l);
}
const cacheT = {};

function getT(locale) {
  if (cacheT[locale]) {
    return cacheT[locale];
  }

  const inst = i18next__default['default'].createInstance();
  inst.init({
    fallbackLng: defaultLocale,
    lng: locale,
    resources
  });
  cacheT[locale] = inst.t.bind(inst);
  return cacheT[locale];
}

function useDayjsLocale(locale) {
  const contextLocale = React.useContext(LocaleContext);
  const l = locale || contextLocale || defaultLocale;
  const DAYJS_LOCALE_MAP = {
    'zh-CN': 'zh-cn',
    zh_CN: 'zh-cn',
    'zh-TW': 'zh-tw',
    zh_TW: 'zh-tw',
    'zh-HK': 'zh-hk',
    zh_HK: 'zh-hk',
    ja: 'ja',
    ja_JP: 'ja',
    'en-US': 'en',
    en_US: 'en'
  };
  return DAYJS_LOCALE_MAP[l];
}

/** 用于class组件 */
const TranslateComp = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    locale,
    textKey
  } = props;
  const t = useTranslate(locale);
  return t(textKey);
});

var useKeyboards = ((options = {}) => {
  const {
    keyboards = [],
    on = true,
    onFocus,
    onBlur,
    onKeyDown,
    onKeyUp
  } = options; // 当前是否聚焦

  const [isFocused, setIsFocused] = React.useState(false); // 记录当前按下的所有键位的keyCode

  const keyPressed = React.useRef([]); // 当on变化时，直接清除

  if (on === false) {
    keyPressed.current = [];
  }
  /**
   * 是否需要进行键位检测
   */


  const hasKeyboard = on && keyboards.some(([,, enable]) => {
    return enable || typeof enable === 'undefined' && isFocused;
  });
  /**
   * 聚焦
   *
   * @param {React.FocusEvent<HTMLElement>} e
   * @return {void}
   */

  const handleFocus = React.useCallback(e => {
    setIsFocused(true);

    if (onFocus) {
      onFocus(e);
    }
  }, [onFocus]);
  /**
   * 失焦
   *
   * @param {React.FocusEvent<HTMLElement>} e
   * @return {void}
   */

  const handleBlur = React.useCallback(e => {
    setIsFocused(false);

    if (onBlur) {
      onBlur(e);
    }
  }, [onBlur]);
  /**
   * 按下键盘时处理
   *
   * @param {React.FocusEvent<HTMLElement>} e
   * @return {void}
   */

  const handleKeyDown = React.useCallback(e => {
    const keyCode = e.which;

    if (keyPressed.current.indexOf(keyCode) === -1) {
      keyPressed.current.push(keyCode);
    }

    keyboards.forEach(([keyCodes, handler, enable]) => {
      const enableKeyboard = typeof enable === 'boolean' ? enable && isFocused : isFocused;

      if (enableKeyboard) {
        let meetKeyCodes = false;

        if (Array.isArray(keyCodes)) {
          meetKeyCodes = isEqual(keyCodes, keyPressed.current);
        } else if (keyCodes.and) {
          meetKeyCodes = isEqual(keyCodes.and, keyPressed.current);
        } else if (keyCodes.or) {
          meetKeyCodes = keyCodes.or.some(orCode => {
            return keyPressed.current.indexOf(orCode) !== -1;
          });
        }

        if (meetKeyCodes) {
          handler(e);
          e.preventDefault();
        }
      }
    });

    if (onKeyDown) {
      onKeyDown(e);
    }
  }, [onKeyDown, keyboards, isFocused]);
  /**
   * 键盘放开的处理
   *
   * @param {React.FocusEvent<HTMLElement>} e
   * @return {void}
   */

  const handleKeyUp = React.useCallback(e => {
    const keyCode = e.which;
    const index = keyPressed.current.indexOf(keyCode);

    if (index !== -1) {
      keyPressed.current.splice(index, 1);
    }

    if (onKeyUp) {
      onKeyUp(e);
    }
  }, [onKeyUp]);
  return {
    onKeyDown: hasKeyboard ? handleKeyDown : onKeyDown,
    onKeyUp: hasKeyboard ? handleKeyUp : onKeyUp,
    onFocus: handleFocus,
    onBlur: handleBlur
  };
});

/* eslint-disable @typescript-eslint/explicit-function-return-type */
const Ellipsis = /*#__PURE__*/styled.css(["overflow:hidden;word-wrap:normal;white-space:nowrap;text-overflow:ellipsis;"]);
const Placeholder = color => `
  &::-moz-placeholder {
    opacity: 1;
  }

  &::placeholder {
    color: ${color};
  }

  &:placeholder-shown {
    text-overflow: ellipsis;
  }
`;
const resetComponent = /*#__PURE__*/styled.css(["box-sizing:border-box;margin:0;padding:0;color:", ";font-size:", ";line-height:", ";list-style:none;"], ({
  theme
}) => theme.ui.textColor, ({
  theme
}) => theme.ui.fontSize, ({
  theme
}) => theme.ui.lineHeightBase);
const optionWrapStyle = /*#__PURE__*/styled.css(["", " position:relative;display:flex;justify-content:space-between;align-items:center;padding:", " 20px;margin:0 ", ";height:100%;min-width:100px;min-height:32px;font-size:12px;white-space:nowrap;cursor:pointer;user-select:none;border-radius:", ";&:hover,&.hovered{background-color:", ";}&.disabled{color:", ";background-color:transparent;cursor:not-allowed;}"], resetComponent, ({
  theme
}) => theme.ui.paddingSmall, ({
  theme
}) => theme.ui.marginMedium, ({
  theme
}) => theme.ui.radiusLarge, ({
  theme
}) => theme.ui.backgroundColor, ({
  theme
}) => theme.ui.disabledColor);
const dropdownBoxStyle = /*#__PURE__*/styled.css(["border:0.5px solid ", ";box-shadow:", ";background-color:", ";border-radius:", ";"], ({
  theme
}) => theme.ui.dropdownBorderColor, ({
  theme
}) => theme.ui.shadow4, ({
  theme
}) => theme.ui.colorGray1, ({
  theme
}) => theme.ui.radiusLarge);

/* eslint-disable prefer-template */
const InputWrap = withTheme(styled__default['default'].label(["position:relative;display:flex;align-items:center;width:100%;height:", ";padding:", " ", ";color:", ";font-size:", ";background-color:", ";border:1px solid ", ";border-radius:", ";box-sizing:border-box;cursor:text;*{box-sizing:border-box;}input{background-color:transparent;}&:hover,&.focused{border-color:", ";}&.disabled{background-color:", ";border-color:", ";cursor:not-allowed;}.clear-icon{cursor:pointer;color:", ";transition:all .3s;&:hover{color:", ";}}"], ({
  theme
}) => theme.ui.elementHeight, ({
  theme
}) => theme.ui.paddingTiny, ({
  theme
}) => theme.ui.padding, ({
  theme
}) => theme.ui.textColor, ({
  theme
}) => theme.ui.fontSize, ({
  theme
}) => theme.ui.colorGray1, ({
  theme
}) => theme.ui.commonLineLightColor, ({
  theme
}) => theme.ui.radius, ({
  theme
}) => theme.ui.primaryColor, ({
  theme
}) => theme.ui.colorGray3, ({
  theme
}) => theme.ui.colorGray4, ({
  theme
}) => theme.ui.colorText2, ({
  theme
}) => theme.ui.colorText3));
const InputPrefix = withTheme(styled__default['default'].span(["margin-right:", ";color:", ";display:flex;align-items:center;"], ({
  theme
}) => theme.ui.marginSmall, ({
  theme
}) => theme.ui.colorText2));
const InputSuffix = withTheme(styled__default['default'].span(["margin-left:", ";color:", ";display:flex;align-items:center;"], ({
  theme
}) => theme.ui.marginSmall, ({
  theme
}) => theme.ui.colorText3));
const InputNode = withTheme(styled__default['default'].input(["", " display:inline-block;width:0;flex:1 auto;margin:0;padding:0;outline:none;border:0;", ""], resetComponent, ({
  theme,
  placeholderColor
}) => Placeholder(placeholderColor || theme.ui.colorText2)));

const _createElement$c = /*#__PURE__*/React__default['default'].createElement;
// eslint-disable-next-line max-lines-per-function
const Input = /*#__PURE__*/React__default['default'].forwardRef((props, ref) => {
  const {
    suffix,
    prefix,
    onChange,
    type = 'text',
    locale,
    onFocus,
    onBlur,
    allowClear,
    id,
    className,
    disabled,
    style,
    onKeyDown,
    onEnter,
    testid,
    placeholderColor,
    defaultValue,
    inputStyle,
    ...restProps
  } = props;
  const inputRef = React.useRef(null);
  const [isFocused, setIsFocused] = React.useState(false);
  const [value, setValue] = useControlledValue(props.value, defaultValue);
  const uid = React.useMemo(() => id || uuid(), [id]);
  React.useImperativeHandle(ref, () => ({
    focus: () => {
      inputRef.current.focus();
    },
    select: () => {
      inputRef.current.select();
    },
    blur: () => {
      inputRef.current.blur();
    }
  }));
  const t = useTranslate(locale);
  const placeholder = typeof props.placeholder === 'string' ? props.placeholder : t('we_ui_input_placeholder');
  const handleChange = React.useCallback(e => {
    if (onChange) {
      onChange(e);
    }

    setValue(e.target.value);
  }, [onChange, setValue]);
  const handleFocus = React.useCallback(e => {
    if (onFocus) {
      onFocus(e);
    }

    setIsFocused(true);
  }, [onFocus]);
  const handleBlur = React.useCallback(e => {
    if (onBlur) {
      onBlur(e);
    }

    setIsFocused(false);
  }, [onBlur]);
  const handleReset = React.useCallback(() => {
    handleChange({
      target: {
        value: ''
      }
    });
  }, [handleChange]);
  const handleKeyDown = React.useCallback(e => {
    if (onKeyDown) {
      onKeyDown(e);
    }

    if (e.which === KEY_CODES.ENTER && onEnter) {
      onEnter(e);
    }
  }, [onKeyDown, onEnter]);
  return /*#__PURE__*/_createElement$c(InputWrap, {
    htmlFor: uid,
    className: classnames(className, {
      focused: isFocused,
      disabled
    }),
    style: style
  }, !!prefix && /*#__PURE__*/_createElement$c(InputPrefix, null, prefix), /*#__PURE__*/_createElement$c(InputNode, _extends__default['default']({}, restProps, {
    ref: inputRef,
    value: value || '',
    onChange: handleChange,
    type: type,
    placeholder: placeholder,
    id: uid,
    key: uid,
    onFocus: handleFocus,
    onBlur: handleBlur,
    disabled: !!disabled,
    onKeyDown: handleKeyDown,
    "data-testid": testid ? `Input_${testid}` : undefined,
    placeholderColor: placeholderColor,
    style: inputStyle
  })), !!allowClear && !!value && /*#__PURE__*/_createElement$c(RoundcloseThickNormal, {
    onClick: handleReset,
    className: "clear-icon"
  }), !!suffix && /*#__PURE__*/_createElement$c(InputSuffix, null, suffix));
});
Input.defaultProps = {
  allowClear: false
};
const InputMemo = /*#__PURE__*/React__default['default'].memo(Input);

const iconStyle = /*#__PURE__*/styled.css(["text-transform:none;text-rendering:optimizeLegibility;line-height:0;text-align:center;"]);
const SelectWrap = withTheme(styled__default['default'].div(["", " display:inline-block;user-select:none;height:", ";padding:", ";border-radius:", ";transition:all .1s ease-in-out;cursor:pointer;outline:none;&.small{height:", ";}&.large{height:", ";padding:", ";}&:hover{background-color:", ";}&:active,&.actived{background-color:", ";outline:none;}&.bordered{border:1px solid ", ";}&.errored{border:1px solid #FF523C;}&.disabled{cursor:not-allowed;color:", ";background-color:transparent;& .weicon{color:", ";}& .select-arrow{color:", ";;}}"], resetComponent, ({
  theme
}) => theme.ui.elementHeight, ({
  showArrow
}) => showArrow && '0 4px 0 6px', ({
  theme
}) => theme.ui.radius, ({
  theme
}) => theme.ui.elementHeightSmall, ({
  theme
}) => theme.ui.elementHeightLarge, ({
  showArrow
}) => showArrow && '0 12px 0 12px', ({
  theme
}) => theme.ui.commonBgHoverColor, ({
  theme
}) => theme.ui.commonBgPressColor, ({
  theme
}) => theme.ui.commonLineLightColor, ({
  theme
}) => theme.ui.disabledColor, ({
  theme
}) => theme.ui.disabledColor, ({
  theme
}) => theme.ui.disabledColor));
const TriggerWrap = withTheme(styled__default['default'].div(["position:relative;height:100%;display:flex;align-items:center;justify-content:space-between;.weicon{display:block;color:", ";}.select-arrow{", " color:", ";flex-shrink:0;flex-grow:0;font-size:12px;transform:rotate(0deg) scale(0.67);transform-origin:center center;margin-left:2px;&.opened{transform:rotate(180deg) scale(0.67);}&.hidden{display:none;}}"], ({
  theme
}) => theme.ui.commonActionIconColor, iconStyle, ({
  theme
}) => theme.ui.commonBaseColor3));
const TriggerContent = withTheme(styled__default['default'].div(["", ";flex-grow:1;flex-shrink:1;"], Ellipsis));
const OverlayWrap$1 = withTheme(styled__default['default'].div(["max-height:400px;overflow-y:auto;padding:", " 0;"], ({
  theme
}) => theme.ui.padding));
const SelectOptionWrap = withTheme(styled__default['default'].div(["", " position:relative;display:flex;justify-content:space-between;align-items:center;padding:", " 20px;margin:0 ", ";height:100%;min-width:100px;min-height:32px;font-size:13px;line-height:20px;white-space:nowrap;cursor:pointer;user-select:none;border-radius:", ";&:hover,&.hovered{background-color:", ";}&.selected{.check-icon{display:inline-block;}}&.disabled{color:", ";background-color:transparent;cursor:not-allowed;}.check-icon{", " color:", ";font-size:12px;display:none;color:#3296fa;position:absolute;left:4px;top:50%;transform:translateY(-50%);}"], resetComponent, ({
  theme
}) => theme.ui.paddingSmall, ({
  theme
}) => theme.ui.marginMedium, ({
  theme
}) => theme.ui.radiusLarge, ({
  theme
}) => theme.ui.backgroundColor, ({
  theme
}) => theme.ui.disabledColor, iconStyle, ({
  theme
}) => theme.ui.primaryColor));
const InputStyled = withTheme(styled__default['default'](InputMemo)(["border:0;background-color:transparent;color:inherit;font-size:inherit;line-height:inherit;padding-left:0;padding-right:0;& > input{font-size:inherit;color:inherit;line-height:inherit;}"]));
const EmptyWrap = withTheme(styled__default['default'].div(["padding:60px 24px;"]));
const OptionGroupWrap = withTheme(styled__default['default'].div(["position:relative;&:after{display:block;content:' ';height:1px;background-color:", ";width:80%;margin:6px auto;}&:before{display:block;content:' ';height:1px;background-color:", ";width:80%;margin:6px auto;}&:nth-child(1){&:before{display:none;}}&:last-child{&:after{display:none;}}~ .select-group-wrapper{&:before{display:none;}}"], ({
  theme
}) => theme.ui.commonLineLightColor, ({
  theme
}) => theme.ui.commonLineLightColor));

let executed = false;
let context; // 为了传人VT，需要写成函数的形式，但是应该是单例

const createSelectContext = () => {
  if (!executed) {
    context = /*#__PURE__*/React__default['default'].createContext({});
    executed = true;
  }

  return context;
};

/* eslint-disable no-nested-ternary */
const _createElement$d = /*#__PURE__*/React__default['default'].createElement;
const noopWrapperStyle = {};
const getTitleContent = title => {
  if (typeof title === 'string' || !title) {
    return title;
  }

  return title.title;
};
const getTitlePlacement = title => {
  if (typeof title === 'string' || !title) {
    return 'right';
  }

  return title.placement;
}; // eslint-disable-next-line max-lines-per-function

var _ref$1 = /*#__PURE__*/_createElement$d(SelectNormal, {
  className: "check-icon"
});

const SelectOptionFC = props => {
  const {
    children,
    style,
    disabled,
    disabledTip,
    value,
    onSelect,
    testid,
    className,
    title
  } = props;
  const SelectContext = createSelectContext();
  const context = React.useContext(SelectContext);

  if (!context) {
    throw new Error('[we-ui] Select.Option 必须为 Select 的子组件');
  }

  React.useEffect(() => {
    if (value) {
      context.onUpdateOption(value, children);
    }

    return () => {
      if (value) {
        context.onRemoveOption(value);
      }
    }; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [value]);
  React.useEffect(() => {
    if (value) {
      context.onCacheOptionDisabled(value, !!disabled);
    }

    return () => {
      if (value) {
        context.onUncacheOptionDisabled(value);
      }
    }; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [value, disabled]); // 是否选中

  const selected = context.value === value && value !== undefined; // 容器样式

  const optionWrapperStyle = context.optionWrapperStyle || noopWrapperStyle; // 输入过程中是否隐藏

  const hidden = context.isSearching && context.showOptionValues.indexOf(value) === -1; // 键盘事件中高亮

  const hovered = context && context.keyboardAt === value && value !== undefined;
  /**
   * 点击选中
   *
   * @return {void}
   */

  const handleClick = React.useCallback(() => {
    if (value !== undefined) {
      context.onClickOption({
        value: value,
        disabled: !!disabled
      });
    } else if (onSelect) {
      onSelect();
    }
  }, [value, disabled, context, onSelect]); // 样式

  const styleCombined = React.useMemo(() => ({ ...optionWrapperStyle,
    ...style
  }), [optionWrapperStyle, style]);
  return hidden ? null : /*#__PURE__*/_createElement$d(Tooltip, {
    title: disabled && disabledTip ? disabledTip : getTitleContent(title),
    placement: disabled && disabledTip ? 'top' : getTitlePlacement(title)
  }, /*#__PURE__*/_createElement$d(SelectOptionWrap, {
    style: styleCombined,
    className: classnames(className, {
      selected,
      disabled,
      hovered
    }),
    onClick: handleClick,
    "data-testid": testid && `option-${testid}`
  }, !!context.selectable && !!selected && _ref$1, children));
};

SelectOptionFC.defaultProps = {
  style: {}
};
SelectOptionFC.displayName = 'SelectOption';
const SelectOption = /*#__PURE__*/React__default['default'].memo(SelectOptionFC);

const _createElement$e = /*#__PURE__*/React__default['default'].createElement;
const SelectOptionGroup = /*#__PURE__*/React__default['default'].memo(({
  children
}) => {
  return /*#__PURE__*/_createElement$e(OptionGroupWrap, {
    className: "select-group-wrapper"
  }, children);
});
SelectOptionGroup.displayName = 'SelectOptionGroup';

const _createElement$f = /*#__PURE__*/React__default['default'].createElement;

const stopPropagation = e => {
  e.stopPropagation();
};

const getValueString = value => typeof value === 'undefined' ? '' : `${value}`;

function SelectButton(props) {
  const {
    locale,
    renderTrigger,
    value,
    children,
    mode,
    visible,
    keyword,
    isInputFocused,
    onFocus,
    onBlur,
    onEnter,
    onChange,
    inputRef,
    testid
  } = props; // 自定义显示区函数优先级最高

  if (typeof renderTrigger === 'function') {
    return renderTrigger(value);
  } // 支持输入的模式


  if (mode === 'search' || mode === 'input') {
    return /*#__PURE__*/_createElement$f(InputStyled, {
      ref: inputRef,
      placeholder: getValueString(value),
      locale: locale,
      value: `${!isInputFocused || !visible ? getValueString(value) : keyword}`,
      autoComplete: "off",
      readOnly: !visible,
      onFocus: onFocus,
      onChange: onChange,
      onBlur: onBlur,
      onEnter: onEnter,
      onMouseDown: visible ? stopPropagation : undefined,
      onClick: visible ? stopPropagation : undefined,
      "data-testid": testid && `input-${testid}`
    });
  }

  return children;
}

const isSelectOption = child => {
  return /*#__PURE__*/React__default['default'].isValidElement(child) && child.type && child.type.displayName === 'SelectOption';
};
const isSelectOptionGroup = child => {
  return /*#__PURE__*/React__default['default'].isValidElement(child) && child.type && child.type.displayName === 'SelectOptionGroup';
};

const _createElement$g = /*#__PURE__*/React__default['default'].createElement;

// eslint-disable-next-line max-lines-per-function
const Select = (props, ref) => {
  const {
    children,
    getContainer,
    style,
    className,
    overlayStyle,
    renderTrigger,
    bordered,
    onChange,
    disabled,
    onVisibleChange,
    optionWrapperStyle,
    selectable,
    locale,
    size,
    zIndex,
    showArrow,
    placement,
    overlayClassName,
    mode,
    rules,
    autoClose,
    testid,
    title,
    errored,
    ...restProps
  } = props; // value 受控

  const [value, setValue] = useControlledValue(props.value, props.defaultValue); // visible 受控

  const [visible, setVisible] = useControlledValue(props.visible, props.defaultVisible); // 初始化的时候收集一次 SelectOption 节点，选中的节点

  const OptionChildrenRecord = React.useMemo(() => {
    const result = new Map();

    function iterator(nodes) {
      React__default['default'].Children.forEach(nodes, node => {
        if (isSelectOptionGroup(node)) {
          iterator(node.props.children);
        } else if (isSelectOption(node)) {
          result.set(node.props.value, node.props.children);
        }
      });
    }

    iterator(children);
    return result; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []); // 状态

  const state = React.useRef({
    OptionChildrenRecord,
    OptionDisabledRecord: new Map(),
    keyword: '',
    showOptionValues: [],
    isInputFocused: false,
    keyboardAt: null
  }).current; // 是否正在搜索

  const isSearching = state.keyword.length > 0 && mode === 'search'; // Input 实例

  const inputRef = React.useRef(null); // 强制刷新函数

  const flush = useFlush(); // 国际化

  const t = useTranslate(locale);
  /**
   * 可见性变化处理函数
   *
   * @param {boolean} e 可见性
   * @return {void}
   */

  const handleVisibleChange = React.useCallback(e => {
    if (e !== visible) {
      if (onVisibleChange) {
        onVisibleChange(e);
      }

      setVisible(e);
    } // 下拉选择消失时，手动触发blur事件


    if (!e && inputRef && inputRef.current) {
      inputRef.current.blur();
    }
  }, [visible, onVisibleChange, setVisible]);
  /**
   * 值变化处理函数
   *
   * @param {ValueType} e 变化值
   * @return {void}
   */

  const handleValueChange = React.useCallback(e => {
    if (onChange && (e !== value || !selectable)) {
      let error;

      for (const rule of rules || []) {
        if (typeof rule !== 'object') return;
        const {
          validator
        } = rule;

        if (typeof validator === 'function' && !validator(e)) {
          error = {
            violatedRule: rule,
            prevVal: value
          };
          break;
        }
      }

      onChange(e, error);
    }

    if (e !== value) {
      setValue(e);
    }
  }, [value, selectable, onChange, setValue, rules]);
  /**
   * 点击 Option 选项
   *
   * @param {IClickOptionEvent<VT>} event { value, disabled }
   * @return {void}
   */

  const handleClickOption = React.useCallback(event => {
    if (event.disabled) {
      if (autoClose) {
        handleVisibleChange(false);
      }

      return;
    } // 如果 selectable 为 false，那么一直可以触发 onChange


    if (event.value !== undefined && (!selectable || value !== event.value)) {
      handleValueChange(event.value);
    }

    if (autoClose) {
      handleVisibleChange(false);
    }
  }, [value, selectable, handleVisibleChange, handleValueChange, autoClose]);
  /**
   * Option 被移除
   *
   * @param {ValueType} key
   * @return {void}
   */

  const handleRemoveOption = React.useCallback(key => {
    state.OptionChildrenRecord.delete(key);
    flush();
  }, [state, flush]);
  /**
   * Option 被添加或者被更新
   *
   * @param {ValueType} key
   * @return {void}
   */

  const handleUpdateOption = React.useCallback((key, newChildren) => {
    const oldChildren = state.OptionChildrenRecord.get(key);

    if (oldChildren !== newChildren) {
      state.OptionChildrenRecord.set(key, newChildren);
      flush();
    }
  }, [state, flush]);
  /**
   * Option disabled更新
   *
   * @param {ValueType} key
   * @param {boolean}
   * @return {void}
   */

  const handleCacheOptionDisabled = React.useCallback((key, newDisabled) => {
    state.OptionDisabledRecord.set(key, newDisabled);
  }, [state]);
  /**
   * Option disabled删除
   *
   * @param {ValueType} key
   * @return {void}
   */

  const handleUncacheOptionDisabled = React.useCallback(key => {
    state.OptionDisabledRecord.delete(key);
  }, [state]);
  /**
   * 点开菜单输入框聚焦的时候，点击我们不希望生效，不然会收起弹层
   *
   * @return {void}
   */

  const handleClickTrigger = React.useCallback(() => {
    if (visible && state.isInputFocused || disabled) {
      return false;
    }
  }, [visible, state.isInputFocused, disabled]);
  /**
   * 当展开菜单的时候，点击trigger我们不希望Input失焦
   */

  const handleMouseDownTrigger = React.useCallback(e => {
    if (visible && state.isInputFocused) {
      e.preventDefault();
    }
  }, [visible, state.isInputFocused]);
  /**
   * 输入框失焦
   *
   * @param {React.FocusEvent<HTMLInputElement>} e
   * @return {void}
   */

  const handleInputBlur = React.useCallback(e => {
    const inputValue = (state.keyword || e.target.value).trim();
    state.keyword = '';
    state.showOptionValues = [];
    state.isInputFocused = false;
    const values = Array.from(state.OptionChildrenRecord.keys());

    if (mode === 'search') {
      const index = values.findIndex(v => `${v}` === inputValue);

      if (index !== -1) {
        handleValueChange(values[index]);
      }
    } else if (mode === 'input') {
      // input 模式的 ValueType 只支持 string | number
      let processedInputValue;

      if (typeof values[0] === 'number') {
        processedInputValue = Number(inputValue);
      } else {
        processedInputValue = inputValue;
      }

      handleValueChange(processedInputValue);
    }

    handleVisibleChange(false);
  }, [state, handleValueChange, handleVisibleChange, mode]);
  /**
   * 输入框聚焦
   *
   * @return {void}
   */

  const handleInputFocus = React.useCallback(() => {
    state.keyword = String(value);
    state.isInputFocused = true;
    state.showOptionValues = Array.from(state.OptionChildrenRecord.keys());
    flush();

    if (inputRef.current) {
      inputRef.current.select();
    }
  }, [state, flush, value]);
  /**
   * 输入框回车
   *
   * @return {void}
   */

  const handleInputEnter = React.useCallback(() => {
    if (state.keyboardAt === null && inputRef.current) {
      inputRef.current.blur();
    }
  }, [state]);
  /**
   * 输入值变化
   *
   * @param {React.ChangeEvent<HTMLInputElement>}
   * @return {void}
   */

  const handleInputChange = React.useCallback(e => {
    state.keyword = e.target.value;
    state.keyboardAt = null;
    state.showOptionValues = Array.from(state.OptionChildrenRecord.keys()).filter(v => {
      return `${v}`.includes(e.target.value.trim());
    });
    flush();
  }, [state, flush]);
  /**
   * 选项高亮移动
   *
   * @param {1 | -1} step
   * @return {void}
   */

  const handleChangeKeyboardAt = React.useCallback(step => {
    const values = isSearching ? state.showOptionValues : Array.from(state.OptionChildrenRecord.keys());
    let index = state.keyboardAt ? values.indexOf(state.keyboardAt) : -1; // 需要跳过disabled的选项

    do {
      index += step;
    } while (index < values.length && !!state.OptionDisabledRecord.get(values[index]));

    if (index >= 0 && index <= values.length - 1) {
      if (values[index] !== state.keyboardAt) {
        state.keyboardAt = values[index];
        flush();
      }
    }
  }, [state, flush, isSearching]);
  /**
   * 按下向下键，聚焦时触发选项高亮
   *
   * @return {void}
   */

  const handlePressDown = React.useCallback(() => {
    handleChangeKeyboardAt(1);
  }, [handleChangeKeyboardAt]);
  /**
   * 按下向上键，聚焦时触发选项高亮
   *
   * @return {void}
   */

  const handlePressUp = React.useCallback(() => {
    handleChangeKeyboardAt(-1);
  }, [handleChangeKeyboardAt]);
  /**
   * 按下Enter键，选择高亮选项
   */

  const handlePressEnter = React.useCallback(() => {
    if (state.keyboardAt !== null) {
      handleValueChange(state.keyboardAt);
    }

    handleVisibleChange(false);
  }, [handleValueChange, handleVisibleChange, state.keyboardAt]); // 键盘事件定义

  const keyboards = React.useMemo(() => {
    return [[[KEY_CODES.DOWN], handlePressDown], [[KEY_CODES.UP], handlePressUp], [[KEY_CODES.ENTER], handlePressEnter]];
  }, [handlePressDown, handlePressUp, handlePressEnter]); // 绑定键盘事件

  const keyboardHandlers = useKeyboards({
    keyboards,
    on: visible
  }); // context

  const context = React.useMemo(() => {
    return {
      value: value,
      selectable: !!selectable,
      showOptionValues: state.showOptionValues,
      isSearching,
      keyboardAt: state.keyboardAt,
      optionWrapperStyle,
      onClickOption: handleClickOption,
      onUpdateOption: handleUpdateOption,
      onRemoveOption: handleRemoveOption,
      onCacheOptionDisabled: handleCacheOptionDisabled,
      onUncacheOptionDisabled: handleUncacheOptionDisabled
    };
  }, [value, selectable, isSearching, state.keyboardAt, state.showOptionValues, optionWrapperStyle, handleClickOption, handleUpdateOption, handleRemoveOption, handleCacheOptionDisabled, handleUncacheOptionDisabled]); // 获取选中的 Option 的子节点

  let SelectedOptionChildren = null;

  if (value !== null && value !== undefined) {
    SelectedOptionChildren = state.OptionChildrenRecord.get(value) || null;
  }

  const SelectContext = createSelectContext();
  const searchNoMatch = isSearching && state.showOptionValues.length === 0;
  return /*#__PURE__*/_createElement$g(SelectContext.Provider, {
    value: context
  }, /*#__PURE__*/_createElement$g(Dropdown, {
    title: title,
    trigger: "click",
    visible: visible,
    onVisibleChange: handleVisibleChange,
    getContainer: getContainer,
    overlayStyle: overlayStyle,
    overlayClassName: overlayClassName,
    zIndex: zIndex,
    placement: placement,
    testid: testid,
    overlay: /*#__PURE__*/_createElement$g(OverlayWrap$1, {
      "data-testid": testid && `overlay-${testid}`
    }, /*#__PURE__*/_createElement$g("div", {
      style: {
        display: searchNoMatch ? 'none' : 'block'
      }
    }, children), searchNoMatch && /*#__PURE__*/_createElement$g(EmptyWrap, null, /*#__PURE__*/_createElement$g("span", {
      className: "message"
    }, t('we_ui_search_no_data'))))
  }, /*#__PURE__*/_createElement$g(SelectWrap, _extends__default['default']({
    showArrow: showArrow,
    ref: ref,
    tabIndex: disabled ? undefined : '0',
    style: style,
    className: classnames(className, size, {
      bordered,
      focused: state.isInputFocused,
      disabled,
      actived: visible,
      errored: !disabled && errored
    })
  }, keyboardHandlers, restProps, {
    onClick: handleClickTrigger,
    onMouseDown: handleMouseDownTrigger,
    "data-testid": testid ? `SelectWrap-${testid}` : undefined
  }), /*#__PURE__*/_createElement$g(TriggerWrap, null, /*#__PURE__*/_createElement$g(TriggerContent, null, /*#__PURE__*/_createElement$g(SelectButton, {
    value: value,
    locale: locale,
    renderTrigger: renderTrigger,
    mode: mode,
    visible: visible,
    isInputFocused: state.isInputFocused,
    keyword: state.keyword,
    onBlur: handleInputBlur,
    onFocus: handleInputFocus,
    onEnter: handleInputEnter,
    onChange: handleInputChange,
    inputRef: inputRef,
    testid: testid
  }, SelectedOptionChildren || /*#__PURE__*/_createElement$g("span", null, value))), /*#__PURE__*/_createElement$g(ArrowDownTriangleNormal, {
    "data-testid": testid && `select-arrow-${testid}`,
    className: classnames('select-arrow', {
      opened: visible,
      hidden: !showArrow
    })
  })))));
}; // 为了 hack VT的传递、Select.Option、Select.OptionGroup的定义


const SelectMemo = /*#__PURE__*/React__default['default'].memo( /*#__PURE__*/React__default['default'].forwardRef(Select));
SelectMemo.defaultProps = {
  defaultVisible: false,
  disabled: false,
  mode: 'default',
  selectable: true,
  size: 'normal',
  showArrow: true,
  autoClose: true
};
SelectMemo.displayName = 'Select';
SelectMemo.Option = SelectOption;
SelectMemo.OptionGroup = SelectOptionGroup;

/* eslint-disable no-nested-ternary */
const commonButton = /*#__PURE__*/styled.css(["", " display:inline-block;width:fit-content;border:1px solid ", ";outline:0;height:", ";", ";min-width:", ";padding:", ";cursor:", ";transition:all .2s ease-out;user-select:none;"], resetComponent, ({
  theme
}) => theme.ui.commonLineLightColor, ({
  theme,
  size
}) => {
  let sizeString = '';
  if (size === 'small') sizeString = 'Small';
  if (size === 'large') sizeString = 'Large';
  return theme.ui[`elementHeight${sizeString}`];
}, ({
  theme,
  onlyIcon,
  size
}) => {
  const isRect = onlyIcon;
  const width = theme.ui[`elementHeight${size === 'small' ? 'Small' : size === 'large' ? 'Large' : ''}`];
  return isRect ? `
      width: ${width};
    ` : '';
}, ({
  theme,
  size,
  onlyIcon
}) => {
  let sizeString = '';
  if (onlyIcon) return 'auto';
  if (size === 'small') sizeString = 'Small';
  if (size === 'large') sizeString = 'Large';
  return theme.ui[`elementHeight${sizeString}`];
}, ({
  theme,
  onlyIcon
}) => {
  if (onlyIcon) return '0';
  return `0 ${theme.ui.paddingLarge}`;
}, ({
  disabled
}) => disabled ? 'not-allowed' : 'pointer');
const roundButton = /*#__PURE__*/styled.css(["border-radius:", ";"], ({
  theme
}) => theme.ui.elementHeightSmall);
const rectButton = /*#__PURE__*/styled.css(["border-radius:", ";"], ({
  theme
}) => theme.ui.radius);
const circleButton = /*#__PURE__*/styled.css(["border-radius:50%;"]);
const primaryButton = /*#__PURE__*/styled.css(["background-color:", ";border-color:", ";color:", ";", ";"], ({
  theme
}) => theme.ui.primaryColor, ({
  theme
}) => theme.ui.primaryColor, ({
  theme
}) => theme.ui.colorGray1, ({
  theme,
  disabled
}) => {
  if (!disabled) {
    return `
        &:hover, &:focus {
          border-color: ${theme.ui.primaryHoverColor};
          background-color: ${theme.ui.primaryHoverColor};
        }

        &:active, &.active {
          border-color: ${theme.ui.primaryPressColor};
          background-color: ${theme.ui.primaryPressColor};
        }
      `;
  }

  return `
      border-color: ${theme.ui.primaryDisabledColor};
      background-color: ${theme.ui.primaryDisabledColor};
    `;
});
const normalButton = /*#__PURE__*/styled.css(["border-color:", ";", ";"], ({
  theme
}) => theme.ui.borderColor, ({
  theme,
  disabled
}) => {
  if (!disabled) {
    return `
        &:hover, &:focus {
          background-color: ${theme.ui.buttonNormalHoverBgColor};
        }

        &.toolBoxHover {
          background-color: ${theme.ui.buttonNormalHoverBgColor};
        }

        &:active {
          background-color: ${theme.ui.buttonNormalClickBgColor};
        }

        &.active {
          background-color: ${theme.ui.buttonNormalActiveBgColor};
        }
      `;
  }

  return `
      border-color: ${theme.ui.buttonNormalDisabledBorderColor};
      background-color: transparent;
      color: ${theme.ui.disabledColor};
    `;
});
const dangerButton = /*#__PURE__*/styled.css(["background-color:", ";border-color:", ";color:", ";", ";"], ({
  theme
}) => theme.ui.buttonDangerBgColor, ({
  theme
}) => theme.ui.buttonDangerBgColor, ({
  theme
}) => theme.ui.colorGray1, ({
  theme,
  disabled
}) => {
  if (!disabled) {
    return `
        &:hover, &:focus {
          background-color: ${theme.ui.buttonDangerHoverBgColor};
        }

        &:active, &.active {
          background-color: ${theme.ui.buttonDangerActiveBgColor};
        }
      `;
  }

  return `
      border-color: ${theme.ui.buttonDangerDisabledBgColor};
      background-color: ${theme.ui.buttonDangerDisabledBgColor};
    `;
});
const ghostButton = /*#__PURE__*/styled.css(["background-color:transparent;border-color:", ";color:", ";", ";"], ({
  theme
}) => theme.ui.colorGray1, ({
  theme
}) => theme.ui.colorGray1, ({
  theme,
  disabled
}) => {
  if (!disabled) {
    return `
        &:hover, &:focus {
          background-color: ${theme.ui.buttonGhostHoverBgColor};
          border-color: ${theme.ui.buttonGhostHoverBorderColor};
        }

        &:active, &.active {
          background-color: ${theme.ui.buttonGhostActiveBgColor};
          border-color: ${theme.ui.buttonGhostActiveBorderColor};
        }
      `;
  }

  return `
      border-color: ${theme.ui.buttonGhostDisabledBorderColor};
      color: ${theme.ui.buttonGhostDisabledBorderColor};
    `;
});
const textButton = /*#__PURE__*/styled.css(["background-color:transparent;border-color:transparent;color:", ";padding:0;", ";"], ({
  theme
}) => theme.ui.primaryColor, ({
  theme,
  disabled
}) => {
  if (!disabled) {
    return `
        &:hover, &:focus {
          color: ${theme.ui.buttonPrimaryHoverBgColor};
        }

        &:active, &.active {
          color: ${theme.ui.buttonPrimaryActiveBgColor};
        }
      `;
  }

  return `
      color: ${theme.ui.buttonPrimaryDisabledBgColor};
    `;
});
const ButtonInner = /*#__PURE__*/styled__default['default'].div(["box-sizing:border-box;height:100%;display:flex;align-items:center;justify-content:center;", ""], Ellipsis);
const ButtonChildrenWrap = /*#__PURE__*/styled__default['default'].div(["max-width:100%;", ""], Ellipsis);
const ButtonWrap = withTheme(styled__default['default'].div(["", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", ""], resetComponent, commonButton, ({
  disabled,
  theme
}) => disabled ? '' : `.weicon {color: ${theme.ui.commonActionIconColor};}`, ({
  shape
}) => shape === 'round' && roundButton, ({
  shape
}) => shape === 'rect' && rectButton, ({
  shape
}) => shape === 'circle' && circleButton, ({
  type
}) => type === 'primary' && primaryButton, ({
  type
}) => type === 'normal' && normalButton, ({
  type
}) => type === 'danger' && dangerButton, ({
  type
}) => type === 'ghost' && ghostButton, ({
  type
}) => type === 'text' && textButton, ({
  bordered
}) => !bordered && `
    border-color: transparent !important;
  `));
const SplitButtonWrap = withTheme(styled__default['default'].div(["", " ", " ", " border:", ";border-radius:", "};padding:0;overflow:hidden;", ";&.leftSelected .splitbutton-left{background-color:", ";}&.leftSelected .splitbutton-right{background-color:", ";}"], resetComponent, commonButton, ({
  disabled,
  theme
}) => disabled ? '' : `.weicon {color: ${theme.ui.commonActionIconColor};}`, ({
  bordered,
  theme
}) => bordered ? `1px solid ${theme.ui.commonLineLightColor}` : 'none', ({
  theme
}) => theme.ui.radius, ({
  theme,
  disabled
}) => {
  if (!disabled) {
    return `
        &:hover, &.active {
          background-color: ${theme.ui.splitButtonBgColor};
        }
      `;
  }

  return `
      cursor: not-allowed;
      background-color: transparent;
      color: ${theme.ui.disabledColor};

      // 提升此规则的优先级
      .arrow-icon.arrow-icon {
        color: ${theme.ui.disabledColor};
      }
    `;
}, ({
  theme
}) => theme.ui.splitButtonLeftActiveBgColor, ({
  theme
}) => theme.ui.splitButtonBgColor));
const SplitButtonInner = /*#__PURE__*/styled__default['default'].div(["box-sizing:border-box;height:100%;display:flex;align-items:stretch;justify-content:center;", ""], Ellipsis);
const SplitButtonLeft = withTheme(styled__default['default'].div(["display:flex;align-items:center;justify-content:center;padding:0 4px 0 4px;margin:2px 0 2px 0;transition:background-color 0.1s ease-in-out;", ""], ({
  disabled,
  theme
}) => {
  if (!disabled) {
    return `
          &:hover {
            padding-right: 3px;
            border-right: 1px solid ${theme.ui.commonLineLightColor};
          }
          &:active {
            background-color: ${theme.ui.splitButtonLeftActiveBgColor};
          }
        `;
  }

  return 'opacity:0.5';
}));
const SplitButtonRight = withTheme(styled__default['default'].div(["display:flex;align-items:center;justify-content:center;width:10px;padding:0 4px 0 1px;box-sizing:content-box;", " .arrow-icon{transform:", ";font-size:12px;color:", ";}"], ({
  disabled,
  theme,
  active
}) => {
  if (!disabled) {
    if (active) {
      return `background-color: ${theme.ui.splitButtonActiveBgColor};`;
    }

    return `
          &:hover {
            background-color: ${theme.ui.splitButtonHoverBgColor};
          }
        `;
  }

  return '';
}, ({
  active
}) => active ? 'rotate(180deg) scale(.67)' : 'rotate(0) scale(.67)', ({
  theme
}) => theme.ui.commonBaseColor3));

const _createElement$h = /*#__PURE__*/React__default['default'].createElement;
const Button = /*#__PURE__*/React__default['default'].memo( /*#__PURE__*/React__default['default'].forwardRef((props, ref) => {
  const {
    style,
    children,
    className,
    onClick,
    shape,
    size,
    type,
    onDoubleClick,
    onMouseDown,
    bordered,
    icon,
    active,
    disabled,
    tabIndex,
    title,
    testid,
    ...restProps
  } = props;

  const buttonNode = /*#__PURE__*/_createElement$h(ButtonWrap, _extends__default['default']({}, restProps, {
    className: classnames(className, {
      active
    }),
    shape: shape,
    style: style,
    size: size,
    type: type,
    ref: ref,
    onClick: disabled ? undefined : onClick,
    onDoubleClick: disabled ? undefined : onDoubleClick,
    onMouseDown: disabled ? undefined : onMouseDown,
    bordered: bordered,
    disabled: disabled,
    onlyIcon: !!icon && !children,
    tabIndex: tabIndex === '-1' ? undefined : tabIndex || '0',
    "data-testid": testid ? `button-${testid}` : undefined
  }), /*#__PURE__*/_createElement$h(ButtonInner, null, icon, /*#__PURE__*/_createElement$h(ButtonChildrenWrap, null, children)));

  return title ? /*#__PURE__*/_createElement$h(Tooltip, {
    title: title
  }, buttonNode) : buttonNode;
}));
Button.defaultProps = {
  shape: 'rect',
  size: 'normal',
  type: 'normal',
  bordered: true,
  icon: null,
  active: false,
  disabled: false
};

const _createElement$i = /*#__PURE__*/React__default['default'].createElement;
const SplitButton = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    disabled,
    overlay,
    overlayStyle,
    className,
    onActiveChange,
    children,
    style,
    size,
    bordered,
    onClickLeft,
    zIndex,
    testid,
    title,
    highlight
  } = props;
  const [active, setActive] = useControlledValue(props.active, props.defaultActive);
  /**
   * 下拉面板是否可见修改函数
   *
   * @param {boolean} visible
   * @return {void}
   */

  const onVisibleChange = React.useCallback(visible => {
    if (!disabled) {
      if (onActiveChange) {
        onActiveChange(visible);
      }

      setActive(visible);
    }
  }, [onActiveChange, setActive, disabled]);
  /**
   * 点击左部区域
   *
   * @param {React.MouseEvent<HTMLElement>}
   * @return {void}
   */

  const handleClickLeft = React.useCallback(e => {
    if (!disabled) {
      if (!active) {
        e.stopPropagation();
      }

      if (onClickLeft) {
        onClickLeft(e);
      }
    }
  }, [disabled, active, onClickLeft]);
  return /*#__PURE__*/_createElement$i(Dropdown, {
    title: title,
    visible: disabled ? false : active,
    overlay: /*#__PURE__*/React__default['default'].cloneElement(overlay, {
      'data-testid': testid && `overlay-${testid}`
    }),
    overlayStyle: overlayStyle,
    onVisibleChange: onVisibleChange,
    zIndex: zIndex
  }, /*#__PURE__*/_createElement$i(SplitButtonWrap, {
    active: active,
    disabled: disabled,
    className: classnames(className, {
      active: active || highlight
    }),
    size: size,
    style: style,
    bordered: bordered
  }, /*#__PURE__*/_createElement$i(SplitButtonInner, null, /*#__PURE__*/_createElement$i(SplitButtonLeft, {
    disabled: disabled,
    onClick: handleClickLeft,
    "data-testid": testid && `splitbutton-left-${testid}`,
    className: "splitbutton-left"
  }, children), /*#__PURE__*/_createElement$i(SplitButtonRight, {
    active: active,
    disabled: disabled,
    className: "splitbutton-right"
  }, /*#__PURE__*/_createElement$i(ArrowDownTriangleNormal, {
    className: "arrow-icon",
    "data-testid": testid && `splitbutton-arrow-${testid}`
  })))));
});
SplitButton.defaultProps = {
  defaultActive: false,
  size: 'normal',
  bordered: false
};

const BoxCommon = /*#__PURE__*/styled.css(["", ""], ({
  disabled
}) => disabled && `
  position: relative;
  opacity: .5;
  &::before{
    content: '';
    position: absolute;
    width: 100%;
    top: 0;
    bottom: 0;
    z-index: 1;
    cursor: not-allowed;
  }
  &:hover{
    .tool-button{
      background-color:initial;
    }
  }
  `);
const ToolsShow = /*#__PURE__*/styled__default['default'].div(["flex:0 1 auto;white-space:nowrap;display:flex;"]);
const dividerStyle = /*#__PURE__*/styled.css(["content:'';display:block;position:absolute;top:50%;transform:translateY(-50%);background-color:", ";"], ({
  theme: {
    ui
  }
}) => ui.commonLineLightColor);
const ToolsMore = withTheme(styled__default['default'].div(["flex:0 0 auto;padding-right:8px;padding-left:9px;display:flex;align-items:center;position:relative;::before{", " left:4px;width:1px;height:", ";}"], dividerStyle, ({
  isSingleLine
}) => isSingleLine ? '24px' : '42px'));
const Content = withTheme(styled__default['default'].div(["flex:auto;display:flex;&.left{justify-content:flex-start;}&.center{justify-content:center;}&.right{justify-content:flex-end;}"]));
const ToolbarWrapper = withTheme(styled__default['default'].div(["display:flex;position:relative;flex:auto;"]));
const ToolbarFrame = withTheme(styled__default['default'].div(["display:flex;flex-direction:row;align-items:center;padding:0 20px;.toggle-button{fontSize:12px;color:", ";}"], ({
  theme: {
    ui
  }
}) => ui.commonBaseColor3));
const BoxVerticalWrap = /*#__PURE__*/styled__default['default'].div(["display:flex;flex-direction:column;align-items:center;box-sizing:border-box;width:42px;height:58px;padding:0px 4px;cursor:pointer;", " & >:first-child{width:32px;height:32px;margin-top:2px;.weicon{font-size:20px;}.select-arrow{font-size:12px;transform:scale(.67)}}"], BoxCommon);
const BoxHorizontalWrap = /*#__PURE__*/styled__default['default'].div(["display:flex;flex-direction:row;align-items:center;width:fit-content;cursor:pointer;", ""], BoxCommon);
const BoxSingleWrap = /*#__PURE__*/styled__default['default'].div(["display:flex;align-items:center;cursor:pointer;margin:0 2px;", ""], BoxCommon);
const ToolBoxText = withTheme(styled__default['default'].div(["width:50px;text-align:center;font-size:12px;transform:scale(.9);margin-top:1px;color:", ";user-select:none;", ";"], p => p.theme.ui.commonActionIconColor, Ellipsis));
const ToolSubGroupWrap = withTheme(styled__default['default'].div(["display:flex;flex-direction:row;align-items:center;position:relative;height:", ";&+&{padding-left:", ";margin-top:", "};&+&::before{", " left:4px;width:", ";height:24px;}"], p => p.isSingleLine ? '36px' : undefined, p => p.isSingleLine ? '9px' : undefined, p => p.isSingleLine ? undefined : '1px', dividerStyle, p => p.isSingleLine ? '1px' : '0px'));
const ToolGroupWrap = withTheme(styled__default['default'].div(["display:flex;visibility:", ";width:", ";flex-direction:column;justify-content:center;flex-wrap:", ";height:", "px;position:relative;&+&{padding-left:13px;}&+&::before{", " width:1px;left:6px;height:42px;}"], p => p.isComplexLayout && !p.width ? 'hidden' : 'visible', p => p.width ? `${p.width}px` : undefined, p => p.isComplexLayout ? 'wrap' : 'nowrap', p => p.height, dividerStyle));
const ToolbarDivider = withTheme(styled__default['default'].div(["display:block;position:relative;height:24px;width:16px;::before{", " width:1px;height:16px;}"], dividerStyle));

const _createElement$j = /*#__PURE__*/React__default['default'].createElement;

(function (EToolBoxLayout) {
  EToolBoxLayout["Single"] = "single";
  EToolBoxLayout["Vertical"] = "vertical";
  EToolBoxLayout["Horizontal"] = "horizontal";
})(exports.EToolBoxLayout || (exports.EToolBoxLayout = {}));

class ToolBox extends React__default['default'].PureComponent {
  constructor(...args) {
    super(...args);

    this.handleMouseEnter = () => {
      const {
        onMouseEnter
      } = this.props;

      if (typeof onMouseEnter === 'function') {
        onMouseEnter();
      }
    };

    this.handleMouseLeave = () => {
      const {
        onMouseLeave
      } = this.props;

      if (typeof onMouseLeave === 'function') {
        onMouseLeave();
      }
    };

    this.renderSingle = () => {
      const {
        children,
        name,
        className,
        disabled,
        disabledTip
      } = this.props;
      const child = React__default['default'].Children.only(children);

      const innerNode = /*#__PURE__*/_createElement$j(BoxSingleWrap, {
        className: className,
        disabled: disabled
      }, child);

      return /*#__PURE__*/_createElement$j(Tooltip, {
        title: disabled ? disabledTip || name : name
      }, innerNode);
    };

    this.renderVertical = () => {
      const {
        children,
        name,
        onClick,
        onDoubleClick,
        className,
        disabled,
        disabledTip
      } = this.props;
      return /*#__PURE__*/_createElement$j(Tooltip, {
        title: disabled && disabledTip
      }, /*#__PURE__*/_createElement$j(BoxVerticalWrap, {
        onClick: onClick,
        onDoubleClick: onDoubleClick,
        className: className,
        onMouseEnter: this.handleMouseEnter,
        onMouseLeave: this.handleMouseLeave,
        disabled: disabled
      }, children, /*#__PURE__*/_createElement$j(ToolBoxText, null, name)));
    };

    this.renderHorizontal = () => {
      const {
        children,
        name,
        onClick,
        onDoubleClick,
        className,
        disabled,
        disabledTip
      } = this.props;
      return /*#__PURE__*/_createElement$j(Tooltip, {
        title: disabled && disabledTip
      }, /*#__PURE__*/_createElement$j(BoxHorizontalWrap, {
        onClick: onClick,
        onDoubleClick: onDoubleClick,
        className: className,
        onMouseEnter: this.handleMouseEnter,
        onMouseLeave: this.handleMouseLeave,
        disabled: disabled
      }, children, /*#__PURE__*/_createElement$j(ToolBoxText, null, name)));
    };
  }

  render() {
    const {
      layout
    } = this.props;
    return /*#__PURE__*/_createElement$j(React__default['default'].Fragment, null, layout === exports.EToolBoxLayout.Single ? this.renderSingle() : null, layout === exports.EToolBoxLayout.Vertical ? this.renderVertical() : null, layout === exports.EToolBoxLayout.Horizontal ? this.renderHorizontal() : null);
  }

}
ToolBox.defaultProps = {
  layout: exports.EToolBoxLayout.Single,
  disabled: false
};
const ToolButton = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    layout = exports.EToolBoxLayout.Single,
    name,
    icon,
    disabled,
    active,
    style,
    className,
    testid,
    boxClassName,
    size,
    disabledTip
  } = props;
  const [hovered, setHovered] = React__default['default'].useState(false);
  const cName = hovered ? 'toolBoxHover' : '';
  const onClick = disabled ? undefined : props.onClick;
  const onDoubleClick = disabled ? undefined : props.onDoubleClick;
  return /*#__PURE__*/_createElement$j(ToolBox, {
    layout: layout,
    name: name // vertical 或者 horizontal 布局时，点击文字区域也能响应 click 事件
    ,
    onClick: layout === exports.EToolBoxLayout.Single ? undefined : onClick,
    onDoubleClick: layout === exports.EToolBoxLayout.Single ? undefined : onDoubleClick,
    className: boxClassName,
    onMouseEnter: () => setHovered(true),
    onMouseLeave: () => setHovered(false),
    disabled: disabled,
    disabledTip: disabledTip
  }, /*#__PURE__*/_createElement$j(Button, {
    bordered: false,
    shape: "rect",
    icon: icon,
    active: active,
    onClick: layout === exports.EToolBoxLayout.Single ? onClick : undefined,
    onDoubleClick: layout === exports.EToolBoxLayout.Single ? onDoubleClick : undefined,
    tabIndex: "false",
    style: style,
    className: classnames('tool-button', cName, className),
    testid: testid,
    size: size
  }));
});

const _createElement$k = /*#__PURE__*/React__default['default'].createElement;
class ToolLine extends React__default['default'].PureComponent {
  constructor(props) {
    super(props);
    let hasIllegalChild = false;
    React__default['default'].Children.forEach(props.children, child => {
      if (child.type !== ToolBox && child.type !== ToolButton) {
        hasIllegalChild = true;
      }
    });
    warning__default['default'](!hasIllegalChild, 'Children of ToolLine must be ToolBox or ToolButton');
  }

  render() {
    const {
      children,
      isSingleLine,
      style
    } = this.props;
    return /*#__PURE__*/_createElement$k(ToolSubGroupWrap, {
      isSingleLine: isSingleLine,
      style: style
    }, children);
  }

}
ToolLine.defaultProps = {
  isSingleLine: true
};
class HiddenToolLine extends ToolLine {}

/* eslint-disable react/no-did-mount-set-state */
const _createElement$l = /*#__PURE__*/React__default['default'].createElement;
// 工具栏 单行的高度
const DEFAULT_GROUP_HEIGHT = 58;
class ToolGroup extends React__default['default'].Component {
  constructor(props) {
    super(props);
    this.refToolGroup = /*#__PURE__*/React__default['default'].createRef();

    this.calculateWidth = () => {
      let widthSum = 0;
      let tmpHeight = 0;
      const {
        height: groupHeight = DEFAULT_GROUP_HEIGHT
      } = this.props;
      const domGroup = this.refToolGroup.current;

      if (domGroup) {
        const {
          children
        } = domGroup;

        for (let index = 0; index < children.length; index++) {
          const item = children[index];
          const width = item.offsetWidth;
          const height = item.offsetHeight;
          tmpHeight += height;

          if (tmpHeight >= groupHeight) {
            widthSum += width;
            tmpHeight = 0;
          } else {
            tmpHeight += height;
          }
        }
      }

      return widthSum;
    };

    let hasIllegalChild = false;
    React__default['default'].Children.forEach(props.children, child => {
      const isToolBox = child.type === ToolLine;

      if (!isToolBox) {
        hasIllegalChild = true;
      }
    });
    warning__default['default'](!hasIllegalChild, 'Children of ToolGroup must be ToolLine');
    this.state = {
      groupWidth: 0
    };
  }

  componentDidMount() {
    const {
      isComplexLayout
    } = this.props;
    const domGroup = this.refToolGroup.current;

    if (isComplexLayout && domGroup) {
      const width = this.calculateWidth();
      this.setState({
        groupWidth: width
      });
    }
  }

  componentDidUpdate(prevProps, prevState) {
    const {
      isComplexLayout
    } = this.props;
    const domGroup = this.refToolGroup.current;

    if (isComplexLayout && domGroup && prevProps !== this.props) {
      const width = this.calculateWidth();
      const {
        groupWidth
      } = prevState;

      if (width !== groupWidth) {
        this.setState({
          groupWidth: width
        });
      }
    }
  }

  render() {
    const {
      isComplexLayout,
      children,
      height: groupHeight = DEFAULT_GROUP_HEIGHT
    } = this.props;
    const {
      groupWidth
    } = this.state;
    return /*#__PURE__*/_createElement$l(ToolGroupWrap, {
      isComplexLayout: isComplexLayout,
      width: groupWidth,
      height: groupHeight,
      ref: this.refToolGroup
    }, React__default['default'].Children.map(children, child => /*#__PURE__*/React__default['default'].cloneElement(child, {
      isSingleLine: false
    })));
  }

}
class HiddenToolGroup extends ToolGroup {}

const _createElement$m = /*#__PURE__*/React__default['default'].createElement;
const INIT_PIVOT = -1;
/**
 * 获取初始的自组件(包含首次渲染和children变化的情况), 重新布局
 * @param children
 */

const getChildren = children => {
  const groups = [];
  const hiddenGroups = [];
  let hasIllegalChild = false;

  const handleChild = child => {
    if (!child) return;

    if (child.type === ToolLine) {
      groups.push(child);
    } else if (child.type === HiddenToolLine) {
      hiddenGroups.push(child);
    } else if (child.type === React__default['default'].Fragment) {
      React__default['default'].Children.forEach(child.props.children, handleChild);
    } else {
      hasIllegalChild = true;
    }
  };

  React__default['default'].Children.forEach(children, handleChild);
  warning__default['default'](!hasIllegalChild, 'Children of SingleLineToolbar must be ToolLine or HiddenToolLine');

  if (!((groups.length || hiddenGroups.length) > 0)) {
    throw new Error('SingleLineToolbar should has more than one child which type is ToolLine or HiddenToolLine');
  }

  return {
    groups,
    hiddenGroups
  };
};

const toolsMoreOverlayStyle = {
  padding: '0 10px'
};

var _ref$2 = /*#__PURE__*/_createElement$m(Button, {
  bordered: false,
  shape: "rect",
  icon: /*#__PURE__*/_createElement$m(MoreNormal, null)
});

class SingleLineToolbar extends React.Component {
  // eslint-disable-next-line react/static-property-placement
  // Slot的宽度缓存
  constructor(props) {
    super(props);
    this.resizeObserver = void 0;
    this.slotsWidthList = [];
    this.refToolbar = /*#__PURE__*/React__default['default'].createRef();
    this.refToolContent = /*#__PURE__*/React__default['default'].createRef();
    this.refShow = /*#__PURE__*/React__default['default'].createRef();
    this.refMore = /*#__PURE__*/React__default['default'].createRef();
    this.recomputeLayout = debounce(() => {
      this.calculateWidth(false);
    }, 50);

    this.mouseDownAtShow = e => {
      const whiteTags = ['input', 'textarea'];
      const tagName = (e.target.tagName || '').toLowerCase();

      if (!whiteTags.includes(tagName)) {
        e.preventDefault();
      }
    };

    this.getLineWidth = toolLine => {
      if (!toolLine) {
        return {
          totalWidth: 0,
          buttonWidths: []
        };
      }

      const totalWidth = toolLine.offsetWidth;
      const buttonWidths = [];
      const buttons = toolLine.children;

      for (let btnIdx = 0; btnIdx < buttons.length; btnIdx++) {
        const button = buttons[btnIdx];

        if (button) {
          buttonWidths.push(button.offsetWidth);
        }
      }

      return {
        totalWidth,
        buttonWidths
      };
    };

    this.calculateWidth = (isFirst = false) => {
      if (!this.refShow.current || !this.refShow.current.children) return;
      const {
        children
      } = this.refShow.current;
      const parentElement = this.refShow.current.parentElement;
      const {
        offsetWidth: containerWidth
      } = parentElement;
      let pivot = INIT_PIVOT;
      let buttonPivot = INIT_PIVOT; // 更多(...)的宽度

      let sum = 32;

      if (this.refMore.current) {
        sum = this.refMore.current.offsetWidth;
      } // 非第一次计算(如resize)，从缓存中取已计算好的数据


      if (!isFirst && this.slotsWidthList && this.slotsWidthList.length > 0) {
        for (let index = 0; index < this.slotsWidthList.length; index += 1) {
          const lineWidth = this.slotsWidthList[index];

          if (sum + lineWidth.totalWidth > containerWidth) {
            pivot = index;
            const widths = lineWidth.buttonWidths;
            const leftPadding = lineWidth.totalWidth - widths.reduce((a, b) => a + b, 0);
            sum += leftPadding;

            for (let btnIdx = 0; btnIdx < widths.length; btnIdx++) {
              const btnWidth = widths[btnIdx];
              sum += btnWidth;

              if (sum > containerWidth && buttonPivot <= INIT_PIVOT) {
                buttonPivot = btnIdx;
              }
            }

            break;
          } else {
            sum += lineWidth.totalWidth;
          }
        }

        this.setState({
          hiddenPivot: pivot,
          hiddenBtnPivot: buttonPivot
        });
        return;
      } // 第一次渲染或children发生变化，重新计算宽度


      for (let index = 0; index < children.length; index += 1) {
        const child = children[index]; // 计算的结构存入缓存

        const lineWidth = this.getLineWidth(child);
        this.slotsWidthList.push(lineWidth);

        if (sum + lineWidth.totalWidth > containerWidth && pivot <= INIT_PIVOT) {
          pivot = index;
          const widths = lineWidth.buttonWidths;

          for (let btnIdx = 0; btnIdx < widths.length; btnIdx++) {
            const btnWidth = widths[btnIdx];
            sum += btnWidth;

            if (sum > containerWidth && buttonPivot <= INIT_PIVOT) {
              buttonPivot = btnIdx;
            }
          }
        } else {
          sum += lineWidth.totalWidth;
        }
      }

      this.setState({
        hiddenPivot: pivot,
        hiddenBtnPivot: buttonPivot
      });
    };

    this.getResizeContainer = () => this.refToolbar.current;

    this.handleResize = () => {
      this.recomputeLayout();
    };

    this.handleClickMorePanel = e => {
      const {
        autoCloseMorePanel
      } = this.props; // 阻止冒泡

      e.stopPropagation();

      if (autoCloseMorePanel) {
        this.setState({
          morePanelVisible: false
        });
      }
    };

    this.handleMorePanelVisibleChange = e => {
      this.setState({
        morePanelVisible: e
      });
    };

    this.state = {
      hiddenPivot: INIT_PIVOT,
      hiddenBtnPivot: INIT_PIVOT,
      groups: [],
      hiddenGroups: [],
      // eslint-disable-next-line react/no-unused-state
      prevChildren: null,
      // 用于状态比对
      needCalculating: false,
      morePanelVisible: false
    };
    this.resizeObserver = new ResizeObserver__default['default'](this.handleResize);
  }

  componentDidMount() {
    const {
      autoFolding
    } = this.props;
    if (!autoFolding) return;
    setTimeout(() => this.calculateWidth(true), 0);

    if (this.refToolContent.current && this.resizeObserver) {
      this.resizeObserver.observe(this.refToolContent.current);
    }

    if (this.refShow.current) {
      this.refShow.current.addEventListener('mousedown', this.mouseDownAtShow);
    }
  }

  componentDidUpdate(prevProps) {
    const {
      needCalculating
    } = this.state;

    if (prevProps.children !== this.props.children && needCalculating) {
      this.calculateWidth(true);
    }
  }

  componentWillUnmount() {
    const {
      autoFolding
    } = this.props;
    if (!autoFolding) return;

    if (this.resizeObserver) {
      this.resizeObserver.disconnect();
    }

    if (this.refShow.current) {
      this.refShow.current.removeEventListener('mousedown', this.mouseDownAtShow);
    }
  }

  renderMore(splitHiddenBoxs, hiddenSlots) {
    const {
      zIndex
    } = this.props;
    const {
      morePanelVisible
    } = this.state;

    if (splitHiddenBoxs.length === 0 && hiddenSlots.length === 0) {
      return null;
    }

    const DropContent = /*#__PURE__*/_createElement$m(ToolsShow, {
      onClick: this.handleClickMorePanel
    }, splitHiddenBoxs.length ? /*#__PURE__*/_createElement$m(ToolLine, null, splitHiddenBoxs) : null, hiddenSlots);

    return /*#__PURE__*/_createElement$m(ToolsMore, {
      ref: this.refMore,
      isSingleLine: true
    }, /*#__PURE__*/_createElement$m(Dropdown, {
      trigger: "click",
      overlay: DropContent,
      placement: "bottomRight",
      zIndex: zIndex,
      overlayStyle: toolsMoreOverlayStyle,
      visible: morePanelVisible,
      onVisibleChange: this.handleMorePanelVisibleChange
    }, _ref$2));
  }

  render() {
    const {
      style,
      autoFolding,
      alignType,
      className
    } = this.props;
    const {
      hiddenPivot,
      hiddenBtnPivot,
      hiddenGroups,
      groups
    } = this.state;
    let computedShowSlots = groups;
    let computedHiddenSlots = hiddenGroups;
    let splitHiddenBox = [];
    let splitShowBox = []; // 如果为初始值, 说明没有计算, 直接略过

    if (hiddenPivot > INIT_PIVOT) {
      // 分割点的ToolLine
      const toolLine = groups[hiddenPivot];
      const buttons = toolLine && toolLine.props && toolLine.props.children;

      if (buttons && buttons.length) {
        splitShowBox = buttons.slice(0, hiddenBtnPivot);
        splitHiddenBox = buttons.slice(hiddenBtnPivot);
      }

      computedShowSlots = groups.slice(0, hiddenPivot);
      computedHiddenSlots = computedHiddenSlots.concat(groups.slice(hiddenPivot + 1));
    }

    const styles = {
      width: autoFolding ? '0' : '100%'
    };
    return /*#__PURE__*/_createElement$m(ToolbarWrapper, {
      style: { ...style
      },
      ref: this.refToolbar,
      className: className
    }, /*#__PURE__*/_createElement$m(Content, {
      ref: this.refToolContent,
      style: styles,
      className: alignType
    }, /*#__PURE__*/_createElement$m(ToolsShow, {
      ref: this.refShow
    }, computedShowSlots, splitShowBox.length ? /*#__PURE__*/_createElement$m(ToolLine, null, splitShowBox) : null), this.renderMore(splitHiddenBox, computedHiddenSlots)));
  }

}
SingleLineToolbar.defaultProps = {
  autoFolding: true,
  alignType: 'center'
};

SingleLineToolbar.isNeedCalculating = params => {
  const {
    prevGroups,
    prevHiddenGroups,
    groups,
    hiddenGroups
  } = params;

  if (prevGroups.length !== groups.length || prevHiddenGroups.length !== hiddenGroups.length) {
    return true;
  }

  for (let i = 0; i < groups.length; i++) {
    const {
      children: prevChildren = []
    } = prevGroups[i].props;
    const {
      children: curChildren = []
    } = groups[i].props;

    if (prevChildren.length !== curChildren.length) {
      return true;
    }
  }

  for (let i = 0; i < hiddenGroups.length; i++) {
    const {
      children: prevChildren = []
    } = prevHiddenGroups[i].props;
    const {
      children: curChildren = []
    } = hiddenGroups[i].props;

    if (prevChildren.length !== curChildren.length) {
      return true;
    }
  }

  return false;
};

SingleLineToolbar.getDerivedStateFromProps = (props, state) => {
  const {
    prevChildren
  } = state;
  const {
    children,
    autoFolding
  } = props;
  const {
    groups,
    hiddenGroups
  } = getChildren(children);

  if (!autoFolding) {
    return {
      groups,
      hiddenGroups,
      prevChildren: children,
      hiddenPivot: INIT_PIVOT,
      hiddenBtnPivot: INIT_PIVOT,
      needCalculating: false
    };
  }
  /**
   * 分两种情况
   * 1: 布局变换, 则重新计算布局
   * 2: 布局没变化, 但是children变换(children的props变化), 需要重新渲染
   */


  if (children !== prevChildren) {
    // TODO 如果对应自组件长度变化, 则认为布局变化
    const needCalculating = SingleLineToolbar.isNeedCalculating({
      prevGroups: state.groups,
      prevHiddenGroups: state.hiddenGroups,
      groups,
      hiddenGroups
    });

    if (needCalculating) {
      return {
        groups,
        hiddenGroups,
        prevChildren: children,
        hiddenPivot: INIT_PIVOT,
        hiddenBtnPivot: INIT_PIVOT,
        needCalculating: true
      };
    } // 布局未变化, 则沿用上次计算结果


    return {
      groups,
      hiddenGroups,
      prevChildren: children,
      needCalculating: false
    };
  }

  return null;
};

const TranslateProvider = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    children
  } = props;
  const translate = useTranslate(props.locale);
  return children(translate);
});

const _createElement$n = /*#__PURE__*/React__default['default'].createElement;
const INIT_PIVOT$1 = -1;
/**
 * 获取初始的自组件(包含首次渲染和children变化的情况), 重新布局
 * @param children
 */

const getChildren$1 = children => {
  const groups = [];
  const hiddenGroups = [];
  let hasIllegalChild = false;

  const handleChild = child => {
    if (!child) return;

    if (child.type === ToolGroup) {
      groups.push(child);
    } else if (child.type === HiddenToolGroup) {
      hiddenGroups.push(child);
    } else if (child.type === React__default['default'].Fragment) {
      React__default['default'].Children.forEach(child.props.children, handleChild);
    } else {
      hasIllegalChild = true;
    }
  };

  React__default['default'].Children.forEach(children, handleChild);
  warning__default['default'](!hasIllegalChild, 'Children of DoubleLineToolbar must be ToolGroup or HiddenToolGroup');

  if (!((groups.length || hiddenGroups.length) > 0)) {
    throw new Error('DoubleLineToolbar should has more than one child which type is ToolGroup or HiddenToolGroup');
  }

  return {
    groups,
    hiddenGroups
  };
};

const toolsMoreOverlayStyle$1 = {
  padding: '0 10px'
};

var _ref$3 = /*#__PURE__*/_createElement$n(Button, {
  bordered: false,
  shape: "rect",
  icon: /*#__PURE__*/_createElement$n(MoreNormal, null)
});

class DoubleLineToolbar extends React.Component {
  // eslint-disable-next-line react/static-property-placement
  // Slot的宽度缓存
  constructor(props) {
    super(props);
    this.resizeObserver = void 0;
    this.slotsWidthList = [];
    this.refToolbar = /*#__PURE__*/React__default['default'].createRef();
    this.refToolContent = /*#__PURE__*/React__default['default'].createRef();
    this.refShow = /*#__PURE__*/React__default['default'].createRef();
    this.refMore = /*#__PURE__*/React__default['default'].createRef();
    this.recomputeLayout = debounce(() => {
      this.calculateWidth(false);
    }, 50);

    this.mouseDownAtShow = e => {
      const whiteTags = ['input', 'textarea'];
      const tagName = (e.target.tagName || '').toLowerCase();

      if (!whiteTags.includes(tagName)) {
        e.preventDefault();
      }
    };

    this.calculateWidth = (isFirst = false) => {
      if (!this.refShow.current || !this.refShow.current.children) return;
      const {
        children
      } = this.refShow.current;
      const parentElement = this.refShow.current.parentElement;
      const {
        offsetWidth: containerWidth
      } = parentElement;
      let pivot = INIT_PIVOT$1; // 更多(...)的宽度

      let sum = 32;

      if (this.refMore.current) {
        sum = this.refMore.current.offsetWidth;
      } // 非第一次计算(如resize)，从缓存中取已计算好的数据


      if (!isFirst && this.slotsWidthList && this.slotsWidthList.length > 0) {
        for (let index = 0; index < this.slotsWidthList.length; index += 1) {
          sum += this.slotsWidthList[index];

          if (sum > containerWidth) {
            pivot = index;
            break;
          }
        }

        this.setState({
          hiddenPivot: pivot
        });
        return;
      } // 第一渲染或children发生变化，重新计算宽度


      for (let index = 0; index < children.length; index += 1) {
        const child = children[index];

        if (isFirst) {
          this.slotsWidthList.push(child.offsetWidth);
        }

        sum += child.offsetWidth;

        if (sum > containerWidth && pivot <= INIT_PIVOT$1) {
          pivot = index;
        }
      }

      this.setState({
        hiddenPivot: pivot
      });
    };

    this.getResizeContainer = () => this.refToolbar.current;

    this.handleResize = () => {
      this.recomputeLayout();
    };

    this.handleClickMorePanel = e => {
      const {
        autoCloseMorePanel
      } = this.props; // 阻止冒泡

      e.stopPropagation();

      if (autoCloseMorePanel) {
        this.setState({
          morePanelVisible: false
        });
      }
    };

    this.handleMorePanelVisibleChange = e => {
      this.setState({
        morePanelVisible: e
      });
    };

    this.state = {
      hiddenPivot: INIT_PIVOT$1,
      groups: [],
      hiddenGroups: [],
      // eslint-disable-next-line react/no-unused-state
      prevChildren: null,
      // 用于状态比对
      needCalculating: false,
      morePanelVisible: false
    };
    this.resizeObserver = new ResizeObserver__default['default'](this.handleResize);
  }

  componentDidMount() {
    const {
      autoFolding
    } = this.props;
    if (!autoFolding) return;
    setTimeout(() => this.calculateWidth(true));

    if (this.refToolContent.current && this.resizeObserver) {
      this.resizeObserver.observe(this.refToolContent.current);
    }

    if (this.refShow.current) {
      this.refShow.current.addEventListener('mousedown', this.mouseDownAtShow);
    }
  }

  componentDidUpdate(prevProps) {
    const {
      needCalculating
    } = this.state;

    if (prevProps.children !== this.props.children && needCalculating) {
      this.calculateWidth(true);
    }
  }

  componentWillUnmount() {
    const {
      autoFolding
    } = this.props;
    if (!autoFolding) return;

    if (this.resizeObserver) {
      this.resizeObserver.disconnect();
    }

    if (this.refShow.current) {
      this.refShow.current.removeEventListener('mousedown', this.mouseDownAtShow);
    }
  }

  // render hidden slots
  renderMore(hiddenSlots) {
    const {
      zIndex
    } = this.props;
    const {
      morePanelVisible
    } = this.state;

    if (hiddenSlots.length === 0) {
      return null;
    }

    const DropContent = /*#__PURE__*/_createElement$n(ToolsShow, {
      onClick: this.handleClickMorePanel
    }, hiddenSlots);

    return /*#__PURE__*/_createElement$n(ToolsMore, {
      ref: this.refMore,
      isSingleLine: false
    }, /*#__PURE__*/_createElement$n(TranslateProvider, null, t => /*#__PURE__*/_createElement$n(Dropdown, {
      trigger: "click",
      overlay: DropContent,
      placement: "bottomRight",
      zIndex: zIndex,
      overlayStyle: toolsMoreOverlayStyle$1,
      visible: morePanelVisible,
      onVisibleChange: this.handleMorePanelVisibleChange
    }, /*#__PURE__*/_createElement$n(ToolBox, {
      layout: exports.EToolBoxLayout.Vertical,
      name: t('we_ui_double_line_toolbar_more')
    }, _ref$3))));
  }

  render() {
    const {
      style,
      autoFolding,
      alignType,
      className
    } = this.props;
    const {
      hiddenPivot,
      hiddenGroups,
      groups
    } = this.state;
    let computedShowSlots = groups;
    let computedHiddenSlots = hiddenGroups; // 如果为初始值, 说明没有计算, 直接略过

    if (hiddenPivot > INIT_PIVOT$1) {
      computedHiddenSlots = hiddenGroups.concat(computedShowSlots.slice(hiddenPivot));
      computedShowSlots = computedShowSlots.slice(0, hiddenPivot);
    }

    const styles = {
      width: autoFolding ? '0' : '100%'
    };
    return /*#__PURE__*/_createElement$n(ToolbarWrapper, {
      style: { ...style
      },
      ref: this.refToolbar,
      className: className
    }, /*#__PURE__*/_createElement$n(Content, {
      ref: this.refToolContent,
      style: styles,
      className: alignType
    }, /*#__PURE__*/_createElement$n(ToolsShow, {
      ref: this.refShow
    }, computedShowSlots), this.renderMore(computedHiddenSlots)));
  }

}
DoubleLineToolbar.defaultProps = {
  autoFolding: true,
  alignType: 'center'
};

DoubleLineToolbar.getDerivedStateFromProps = (props, state) => {
  const {
    prevChildren
  } = state;
  const {
    children,
    autoFolding
  } = props;
  const {
    groups,
    hiddenGroups
  } = getChildren$1(children);

  if (!autoFolding) {
    return {
      groups,
      hiddenGroups,
      prevChildren: children,
      hiddenPivot: INIT_PIVOT$1,
      needCalculating: false
    };
  }
  /**
   * 分两种情况
   * 1: 布局变换, 则重新计算布局
   * 2: 布局没变化, 但是children变换(children的props变化), 需要重新渲染
   */


  if (children !== prevChildren) {
    // TODO 如果对应自组件长度变化, 则认为布局变化
    if (groups.length !== state.groups.length || hiddenGroups.length !== state.hiddenGroups.length) {
      return {
        groups,
        hiddenGroups,
        prevChildren: children,
        hiddenPivot: INIT_PIVOT$1,
        needCalculating: true
      };
    } // 布局未变化, 则沿用上次计算结果


    return {
      groups,
      hiddenGroups,
      prevChildren: children,
      needCalculating: false
    };
  }

  return null;
};

const _createElement$o = /*#__PURE__*/React__default['default'].createElement;

(function (EToolbarMode) {
  EToolbarMode["singleLine"] = "singleLine";
  EToolbarMode["doubleLine"] = "doubleLine";
})(exports.EToolbarMode || (exports.EToolbarMode = {}));

class Toolbar extends React__default['default'].Component {
  constructor(_props) {
    super(_props);

    this.handleModeChange = () => {
      // setState是异步执行
      this.setState((preState, props) => {
        const {
          innerMode
        } = preState;
        const newMode = innerMode === exports.EToolbarMode.singleLine ? exports.EToolbarMode.doubleLine : exports.EToolbarMode.singleLine;
        const {
          onModeChange
        } = props; // 受控模式

        if (onModeChange) {
          onModeChange(newMode);
        }

        return {
          innerMode: newMode
        };
      });
    };

    this.state = {
      innerMode: _props.mode || _props.defaultMode || exports.EToolbarMode.singleLine
    };
  }

  render() {
    const {
      mode,
      singleLineToolbar,
      doubleLineToolbar
    } = this.props;
    const {
      innerMode
    } = this.state;
    const activeMode = mode || innerMode;
    const isSingleLine = activeMode === exports.EToolbarMode.singleLine;
    const iconRotate = isSingleLine ? 0 : 180;
    return /*#__PURE__*/_createElement$o(ToolbarFrame, null, isSingleLine ? singleLineToolbar : doubleLineToolbar, /*#__PURE__*/_createElement$o(Tooltip, {
      title: ""
    }, /*#__PURE__*/_createElement$o(Button, {
      bordered: false,
      shape: "rect",
      onClick: this.handleModeChange,
      icon: /*#__PURE__*/_createElement$o(DoubletoolbarNormal, {
        className: "toggle-button",
        rotate: iconRotate
      })
    })));
  }

}

/* eslint-disable @typescript-eslint/no-explicit-any */
const noop = () => {};
function isTransform3dSupported(style) {
  return !!(('transform' in style || 'webkitTransform' in style || 'MozTransform' in style) && window.atob);
}
function setTransform(style, v) {
  style.transform = v;
  style.webkitTransform = v;
}
function toArray(children) {
  // allow [c,[a,b]]
  const c = [];
  React__default['default'].Children.forEach(children, child => {
    if (child) {
      c.push(child);
    }
  });
  return c;
}
function getActiveIndex(children, activeKey) {
  const c = toArray(children);

  for (let i = 0; i < c.length; i++) {
    if (c[i].key === activeKey) {
      return i;
    }
  }

  return -1;
}
function getTransformPropValue(v) {
  return {
    transform: v,
    WebkitTransform: v
  };
}
function getTransformByIndex(index) {
  return `translateX(${-index * 100}%) translateZ(0)`;
}
function getStyle(el, property) {
  return +window.getComputedStyle(el).getPropertyValue(property).replace('px', '');
}
function getDataAttr(props) {
  return Object.keys(props).reduce((prev, key) => {
    if (key.substr(0, 5) === 'aria-' || key.substr(0, 5) === 'data-' || key === 'role') {
      prev[key] = props[key];
    }

    return prev;
  }, {});
}

function toNum(style, property) {
  return +style.getPropertyValue(property).replace('px', '');
}

function getTypeValue(start, current, end, tabNode, wrapperNode) {
  let total = getStyle(wrapperNode, `padding-${start}`);

  if (!tabNode || !tabNode.parentNode) {
    return total;
  }

  const {
    childNodes
  } = tabNode.parentNode;
  Array.prototype.some.call(childNodes, node => {
    const style = window.getComputedStyle(node);

    if (node !== tabNode) {
      total += toNum(style, `margin-${start}`);
      total += node[current];
      total += toNum(style, `margin-${end}`);

      if (style.boxSizing === 'content-box') {
        total += toNum(style, `border-${start}-width`) + toNum(style, `border-${end}-width`);
      }

      return false;
    } // We need count current node margin
    // ref: https://github.com/react-component/tabs/pull/139#issuecomment-431005262


    total += toNum(style, `margin-${start}`);
    return true;
  });
  return total;
}

function getLeft(tabNode, wrapperNode) {
  return getTypeValue('left', 'offsetWidth', 'right', tabNode, wrapperNode);
}
function getTop(tabNode, wrapperNode) {
  return getTypeValue('top', 'offsetHeight', 'bottom', tabNode, wrapperNode);
}

/* eslint-disable no-nested-ternary */
const HorizontalTransition = /*#__PURE__*/styled.css(["transition:transform ", ",width ", ",left ", ";"], ({
  theme
}) => theme.ui.transEaseInOutSlow, ({
  theme
}) => theme.ui.transEaseInOut, ({
  theme
}) => theme.ui.transEaseInOutSlow);
const VerticalTransition = /*#__PURE__*/styled.css(["transition:transform ", ",height ", ",top ", ",width ", ",left ", ";"], ({
  theme
}) => theme.ui.transEaseInOutSlow, ({
  theme
}) => theme.ui.transEaseInOut, ({
  theme
}) => theme.ui.transEaseInOutSlow, ({
  theme
}) => theme.ui.transEaseInOut, ({
  theme
}) => theme.ui.transEaseInOutSlow);
const TabsWrap = withTheme(styled__default['default'].div(["", " &.animated{overflow:hidden;}"], HorizontalTransition));
const TabBarRoot = withTheme(styled__default['default'].div(["margin:0 0;outline:none;transition:padding ", ";position:relative;&.capsule{padding:", " 0;}&.card,&.editable-card{border-bottom:1px solid ", ";padding:0;margin:0 0 ", ";}"], ({
  theme
}) => theme.ui.transEaseInOutSlow, ({
  theme
}) => theme.ui.paddingMedium, ({
  theme
}) => theme.ui.borderColor, ({
  theme
}) => theme.ui.margin));
const NavContainer = withTheme(styled__default['default'].div(["position:relative;font-size:14px;line-height:1.5715;white-space:nowrap;transition:padding ", ";font-size:", ";&.scrolling{padding-right:22px;padding-left:22px;}&.small{font-size:", ";}&.large{font-size:", ";}&.editable-card,&.card{margin-bottom:0;}"], ({
  theme
}) => theme.ui.tabsTransChange, ({
  theme
}) => theme.ui.fontSizeMedium, ({
  theme
}) => theme.ui.fontSizeSmall, ({
  theme
}) => theme.ui.fontSizeLarge));
const NavWrap = withTheme(styled__default['default'].div(["&.editable-card,&.card{margin-bottom:0;}"]));
const NavScroll = withTheme(styled__default['default'].div(["overflow:hidden;white-space:nowrap;"]));
const Nav = withTheme(styled__default['default'].div(["position:relative;&.animated{transition:transform ", ";}&.line,&.editable-line{margin:8px 0;}"], ({
  theme
}) => theme.ui.tabsTransChange));
const TabBarWrapper = /*#__PURE__*/styled__default['default'].div(["&.left{display:flex;flex-direction:column;}"]);
const NavBarDivider = withTheme(styled__default['default'].div(["position:absolute;left:0;right:0;bottom:-2px;border-bottom:1px solid rgba(0,0,0,0.12);"]));
const TabBarTab = withTheme(styled__default['default'].div(["outline:none;position:relative;display:inline-block;height:100%;margin:0 ", " 0 0;text-decoration:none;cursor:pointer;transition:color ", ";color:", ";&.small{padding:", " 0;}&.large{padding:", " 0;}&.actived{font-weight:500;}&.disabled{color:", ";cursor:not-allowed;}&.line,&.editable-line{line-height:1.43;padding:0;color:", ";&.actived{color:", ";}&.single-tab{width:calc(100% - 6px);margin-right:6px;margin-left:0;}.line-tab-close-button{font-size:", ";position:absolute;top:50%;right:4px;transform:translate(0,-50%);opacity:0;transition:opacity ", ";color:", ";&:hover{color:", ";}}&:hover,&.actived{.line-tab-close-button{opacity:1;}}}&.capsule{font-size:", ";line-height:1.34;padding:", " 0;&.actived{color:", ";}}&.editable-card,&.card{position:relative;margin:0;margin-right:-1px;line-height:22px;border:1px solid ", ";border-bottom:0;padding:", " ", ";background:", ";&.actived{color:", ";background-color:", ";border-bottom-color:", ";}.card-tab-close-button{position:absolute;right:5px;top:50%;transform:translate(0,-50%);opacity:0;transition:opacity ", ";color:", ";&:hover{color:", ";}}&:hover,&.actived{.card-tab-close-button{opacity:1;}}}&.left{width:65px;height:32px;padding-left:5px;}"], ({
  theme
}) => theme.ui.marginSmall, ({
  theme
}) => theme.ui.tabsTransChange, ({
  theme
}) => theme.ui.commonBaseColor1, ({
  theme
}) => theme.ui.paddingSmall, ({
  theme
}) => theme.ui.paddingLarge, ({
  theme
}) => theme.ui.disabledColor, ({
  theme
}) => theme.ui.commonBaseColor2, ({
  theme
}) => theme.ui.commonBaseColor1, ({
  theme
}) => theme.ui.fontSizeLarge, ({
  theme
}) => theme.ui.tabsTransChange, ({
  theme
}) => theme.ui.commonBaseColor3, ({
  theme
}) => theme.ui.commonBaseColor1, ({
  theme
}) => theme.ui.fontSizeSmall, ({
  theme
}) => theme.ui.paddingTiny, ({
  theme
}) => theme.ui.primaryColor, ({
  theme
}) => theme.ui.borderColor, ({
  theme
}) => theme.ui.paddingMedium, ({
  theme
}) => theme.ui.paddingHug, ({
  theme
}) => theme.ui.backgroundColor, ({
  theme
}) => theme.ui.primaryColor, ({
  theme
}) => theme.ui.tabsCardHeadActivedBackground, ({
  theme
}) => theme.ui.tabsCardHeadActivedBackground, ({
  theme
}) => theme.ui.tabsTransChange, ({
  theme
}) => theme.ui.commonBaseColor3, ({
  theme
}) => theme.ui.commonBaseColor1));
const TabBarTabItemWrap = withTheme(styled__default['default'].div(["&.editable-line{padding:6px 24px 6px 8px;}&.line{padding:6px 16px;}&.left{padding-left:7px;}&.line,&.editable-line{border-radius:", ";&:hover{background-color:", ";}&:active{background-color:", ";}&.single-tab{background-color:transparent;}}&.capsule{padding:", " ", ";border-radius:", ";background-color:", ";&.actived{background-color:rgba(0,122,255,0.16);}}"], ({
  theme
}) => theme.ui.radiusLarge, ({
  theme
}) => theme.ui.commonBgHoverColor, ({
  theme
}) => theme.ui.commonBgPressColor, ({
  theme
}) => theme.ui.paddingTiny, ({
  theme
}) => theme.ui.padding, ({
  theme
}) => theme.ui.radiusBig, ({
  theme
}) => theme.ui.commonBgHoverColor));
const InkTabBar = withTheme(styled__default['default'].div(["position:absolute;bottom:-4px;left:0;z-index:1;width:0;height:5px;border-radius:", ";background-color:", ";&.animated{", "}"], ({
  theme
}) => theme.ui.marginMini, ({
  theme
}) => theme.ui.primaryColor, HorizontalTransition));
const InkTabBarVertical = withTheme(styled__default['default'].div(["position:absolute;top:6.5px;z-index:1;height:0;width:4px;border-radius:", ";background-color:", ";&.animated{", "}"], ({
  theme
}) => theme.ui.marginMini, ({
  theme
}) => theme.ui.primaryColor, VerticalTransition));
const PrevNextButton = /*#__PURE__*/styled.css(["display:flex;justify-content:center;align-items:center;position:absolute;z-index:", ";width:0;height:100%;color:rgba(0,0,0,0.45);cursor:pointer;opacity:0;transition:width ", ",opacity ", ",color ", ";user-select:none;pointer-events:none;color:", ";&.show{opacity:1;width:", ";height:100%;pointer-events:auto;}&:hover{color:", ";}&.disabled{color:", ";cursor:not-allowed;}"], ({
  theme
}) => theme.ui.zIndexNormal, ({
  theme
}) => theme.ui.tabsTransChange, ({
  theme
}) => theme.ui.tabsTransChange, ({
  theme
}) => theme.ui.tabsTransChange, ({
  theme
}) => theme.ui.commonBaseColor3, ({
  theme
}) => theme.ui.tabsScrollingSize, ({
  theme
}) => theme.ui.commonActionIconColor, ({
  theme
}) => theme.ui.disabledColor);
const PrevButton = withTheme(styled__default['default'].div(["left:0;", ""], PrevNextButton));
const NextButton = withTheme(styled__default['default'].div(["right:0;", ""], PrevNextButton));
const TabPaneWrap = withTheme(styled__default['default'].div(["flex-shrink:0;width:100%;outline:none;"]));
const TabContentWrap = withTheme(styled__default['default'].div(["&.animated{display:flex;flex-direction:row;transition:transform ", ";}.inactived-pane{height:0;opacity:0;overflow:hidden;}"], ({
  theme
}) => theme.ui.tabsTransChange));
const DropdownArrow = withTheme(styled__default['default'].div(["display:flex;justify-content:center;align-items:center;position:absolute;z-index:", ";height:100%;cursor:pointer;user-select:none;right:0;"], ({
  theme
}) => theme.ui.zIndexNormal));
const DropdownWrap = withTheme(styled__default['default'].ul(["", " position:relative;overflow-y:auto;max-height:70vh;text-align:center;"], resetComponent));
const DropdownItemWrap = withTheme(styled__default['default'].li(["min-width:60px;font-size:", ";padding:", " ", ";&:hover{background-color:", ";cursor:pointer;}&.actived{color:", ";}&.disabled{color:", ";&:hover{background-color:transparent;cursor:not-allowed;}}"], ({
  theme
}) => theme.ui.fontSizeMedium, ({
  theme
}) => theme.ui.paddingSmall, ({
  theme
}) => theme.ui.paddingMassive, ({
  theme
}) => theme.ui.backgroundColor, ({
  theme
}) => theme.ui.primaryColor, ({
  theme
}) => theme.ui.disabledColor));

/* eslint-disable @typescript-eslint/explicit-function-return-type */
const _createElement$p = /*#__PURE__*/React__default['default'].createElement;

// eslint-disable-next-line @typescript-eslint/no-explicit-any
function componentDidUpdate(component, init) {
  const {
    styles,
    panes,
    activeKey,
    type
  } = component.props;
  const rootNode = component.props.getRef('root');
  const wrapNode = component.props.getRef('nav') || rootNode;
  const inkBarNode = component.props.getRef('inkBar');
  const activeTab = component.props.getRef('activeTab');
  const inkBarNodeStyle = inkBarNode.style;

  if (init) {
    // prevent mount animation
    inkBarNodeStyle.display = 'none';
  }

  if (activeTab) {
    const tabNode = activeTab;
    const transformSupported = isTransform3dSupported(inkBarNodeStyle); // Reset current style

    setTransform(inkBarNodeStyle, '');
    inkBarNodeStyle.width = '';
    inkBarNodeStyle.height = '';
    inkBarNodeStyle.left = '';
    inkBarNodeStyle.top = '';
    inkBarNodeStyle.bottom = '';
    inkBarNodeStyle.right = '';
    let left = getLeft(tabNode, wrapNode);
    let width = tabNode.offsetWidth; // If tabNode'width equal to wrapNode'width when tabBarPosition is top or bottom
    // It means no css working, then ink bar should not have width until css is loaded
    // Fix https://github.com/ant-design/ant-design/issues/7564

    if (width === rootNode.offsetWidth) {
      width = 0;
    } else if (styles.inkBar && styles.inkBar.width !== undefined) {
      // 传入 styles ，则使用传入的宽度，并重算 left
      width = parseInt(styles.inkBar.width, 10);

      if (width) {
        left += (tabNode.offsetWidth - width) / 2;
      }
    } // 可关闭时左右 padding 不等，为使线条在文字内容中间对齐，需左移 (24 - 8) / 2 = 8px


    if (type === 'editable-line') left -= 8; // use 3d gpu to optimize render

    if (transformSupported) {
      setTransform(inkBarNodeStyle, `translate3d(${left}px,0,0)`);
    } else {
      inkBarNodeStyle.left = `${left}px`;
    }

    inkBarNodeStyle.width = `${width}px`;
  }

  const activeIndex = getActiveIndex(panes, activeKey);
  inkBarNodeStyle.display = activeIndex !== -1 ? 'block' : 'none';
}

class InkTabBarNodeTop extends React__default['default'].Component {
  constructor(...args) {
    super(...args);
    this.timeoutID = -1;
  }

  componentDidMount() {
    // ref https://github.com/ant-design/ant-design/issues/8678
    // ref https://github.com/react-component/tabs/issues/135
    // InkTabBarNode need parent/root ref for calculating position
    // since parent componentDidMount triggered after child componentDidMount
    // we're doing a quick fix here to use setTimeout to calculate position
    // after parent/root component mounted
    this.timeoutID = window.setTimeout(() => {
      componentDidUpdate(this, true);
    }, 0);
  }

  componentDidUpdate() {
    componentDidUpdate(this);
  }

  componentWillUnmount() {
    clearTimeout(this.timeoutID);
  }

  render() {
    const {
      saveRef,
      animated
    } = this.props;
    return /*#__PURE__*/_createElement$p(InkTabBar, {
      className: classnames(animated && 'animated'),
      ref: saveRef('inkBar')
    });
  }

}
InkTabBarNodeTop.defaultProps = {
  styles: {},
  saveRef: noop
};

/* eslint-disable @typescript-eslint/explicit-function-return-type */
const _createElement$q = /*#__PURE__*/React__default['default'].createElement;

const TabBarTabsNode = props => {
  const {
    saveRef,
    panes,
    size,
    activeKey,
    type,
    className,
    tabPosition,
    testid
  } = props;
  const rst = []; // 下面两个ref是为了缓存函数引用，根据key进行缓存
  // eslint-disable-next-line @typescript-eslint/no-explicit-any

  const onTabClicks = React.useRef({}); // eslint-disable-next-line @typescript-eslint/no-explicit-any

  const onTabCloses = React.useRef({}); // eslint-disable-next-line @typescript-eslint/no-explicit-any

  React__default['default'].Children.forEach(panes, child => {
    if (!child) {
      return;
    }

    const key = child.key;
    const isActived = activeKey === key;

    if (!onTabClicks.current[key] || onTabClicks.current[key] !== props.onTabClick) {
      onTabClicks.current[key] = e => {
        if (props.onTabClick) {
          props.onTabClick(key, e);
        }
      };
    }

    if (!onTabCloses.current[key] || onTabCloses.current[key] !== props.onClose) {
      onTabCloses.current[key] = e => {
        e.stopPropagation();

        if (props.onClose) {
          props.onClose(key);
        }
      };
    }

    warning__default['default']('tab' in child.props, 'There must be `tab` property on children of Tabs.');
    const id = props.id ? `${key}-${props.id}` : key;
    const closable = typeof child.props.closable !== 'undefined' ? !!child.props.closable : true;

    const node = /*#__PURE__*/_createElement$q(TabBarTab, {
      role: "tab",
      "aria-disabled": child.props.disabled ? 'true' : 'false',
      "aria-selected": isActived ? 'true' : 'false',
      "aria-controls": `tabpane-${id}`,
      tabIndex: isActived ? 0 : -1,
      key: key,
      id: `tab-${id}`,
      className: classnames(type, size, tabPosition, className, {
        disabled: !!child.props.disabled,
        actived: isActived
      }),
      ref: isActived ? saveRef('activeTab') : undefined,
      onClick: !isActived && !child.props.disabled ? onTabClicks.current[key] : undefined,
      "data-testid": `${testid}_${id}`
    }, /*#__PURE__*/_createElement$q(TabBarTabItemWrap, {
      className: classnames(type, size, tabPosition, className, {
        actived: isActived
      })
    }, child.props.tab, type === 'editable-card' && closable && /*#__PURE__*/_createElement$q(ClosedNormal, {
      onClick: onTabCloses.current[key],
      className: "card-tab-close-button",
      style: {
        fontSize: 14
      }
    }), type === 'editable-line' && closable && /*#__PURE__*/_createElement$q(ClosedNormal, {
      onClick: onTabCloses.current[key],
      className: "line-tab-close-button",
      style: {
        fontSize: 14
      }
    })));

    rst.push(node);
  });
  return /*#__PURE__*/_createElement$q(TabBarWrapper, {
    className: classnames(tabPosition && `${tabPosition}`),
    ref: saveRef('navTabsContainer')
  }, rst);
};

const _createElement$r = /*#__PURE__*/React__default['default'].createElement;

const TabBarRootNode = props => {
  const {
    onKeyDown,
    tabBarStyle: style,
    children,
    saveRef,
    type,
    testid,
    ...restProps
  } = props;
  return /*#__PURE__*/_createElement$r(TabBarRoot, _extends__default['default']({
    className: classnames(type),
    role: "tablist",
    tabIndex: -1,
    ref: saveRef('root'),
    onKeyDown: onKeyDown,
    style: style,
    "data-testid": testid ? `TabBarRootNode_${testid}` : undefined
  }, getDataAttr(restProps)), children);
};

TabBarRootNode.defaultProps = {
  onKeyDown: noop
};

/* eslint-disable max-lines-per-function */
const _createElement$s = /*#__PURE__*/React__default['default'].createElement;

var _ref$4 = /*#__PURE__*/_createElement$s(ArrowLeftNormal, {
  className: "prev-icon"
});

var _ref2 = /*#__PURE__*/_createElement$s(ArrowRightNormal, {
  className: "next-icon"
});

var _ref3 = /*#__PURE__*/_createElement$s(DropdownArrow, null, /*#__PURE__*/_createElement$s(ArrowDownNormal, null));

class TabBarNode extends React.Component {
  constructor(props) {
    super(props);
    this.offset = void 0;
    this.resizeObserver = void 0;
    this.debouncedResize = void 0;
    this.lastNextPrevShown = void 0;

    this.prevTransitionEnd = e => {
      if (e.propertyName !== 'opacity') {
        return;
      }

      const container = this.props.getRef('container');
      this.scrollToActiveTab({
        target: container,
        currentTarget: container
      });
    };

    this.scrollToActiveTab = e => {
      const {
        getRef,
        excessMode
      } = this.props;
      const activeTab = getRef('activeTab');
      const navWrap = getRef('navWrap');

      if (e && e.target !== e.currentTarget || !activeTab) {
        return;
      } // when not scrollable or enter scrollable first time, don't emit scrolling


      if (excessMode === 'arrow') {
        const needToSroll = this.isNextPrevShown() && this.lastNextPrevShown;
        this.lastNextPrevShown = this.isNextPrevShown();

        if (!needToSroll) {
          return;
        }
      }

      const activeTabWH = this.getScrollWH(activeTab);
      const navWrapNodeWH = this.getOffsetWH(navWrap);
      let {
        offset
      } = this;
      const wrapOffset = this.getOffsetLT(navWrap);
      const activeTabOffset = this.getOffsetLT(activeTab);

      if (wrapOffset > activeTabOffset) {
        // activeTab 在 wrap 的可见区域左侧
        offset += wrapOffset - activeTabOffset;
        this.setOffset(offset);
        if (excessMode === 'arrow') this.setNextPrev();
      } else if (wrapOffset + navWrapNodeWH < activeTabOffset + activeTabWH) {
        // activeTab 在 wrap 的可见区域右侧
        offset -= activeTabOffset + activeTabWH - (wrapOffset + navWrapNodeWH);
        this.setOffset(offset);
        if (excessMode === 'arrow') this.setNextPrev();
      }
    };

    this.prev = e => {
      const {
        onPrevClick,
        getRef
      } = this.props;

      if (onPrevClick) {
        onPrevClick(e);
      }

      const navWrapNode = getRef('navWrap');
      const navWrapNodeWH = this.getOffsetWH(navWrapNode);
      const {
        offset
      } = this;
      this.setOffset(offset + navWrapNodeWH);
      this.setNextPrev();
    };

    this.next = e => {
      const {
        onNextClick,
        getRef
      } = this.props;

      if (onNextClick) {
        onNextClick(e);
      }

      const navWrapNode = getRef('navWrap');
      const navWrapNodeWH = this.getOffsetWH(navWrapNode);
      const {
        offset
      } = this;
      this.setOffset(offset - navWrapNodeWH);
      this.setNextPrev();
    };

    this.offset = 0;
    this.state = {
      next: false,
      prev: false,
      needsDropdown: false
    };
  }

  componentDidMount() {
    const {
      getRef,
      excessMode
    } = this.props;
    this.componentDidUpdate();
    let debounceCallback = noop;

    if (excessMode === 'arrow') {
      debounceCallback = () => {
        this.setNextPrev();
        this.scrollToActiveTab();
      };
    } else if (excessMode === 'dropdown') {
      debounceCallback = () => {
        this.setNeedsDropdown();
        this.scrollToActiveTab();
      };
    }

    this.debouncedResize = debounce(debounceCallback, 200);
    this.resizeObserver = new ResizeObserver__default['default'](this.debouncedResize);
    this.resizeObserver.observe(getRef('container'));
  }

  componentDidUpdate(prevProps) {
    const {
      props
    } = this;
    const {
      excessMode
    } = props;

    if (excessMode === 'arrow') {
      const nextPrev = this.setNextPrev(); // wait next, prev show hide

      if (this.isNextPrevShown(this.state) !== this.isNextPrevShown(nextPrev)) {
        // eslint-disable-next-line react/no-did-update-set-state
        this.setState({}, this.scrollToActiveTab);
      } else if (!prevProps || props.activeKey !== prevProps.activeKey) {
        // can not use props.activeKey
        this.scrollToActiveTab();
      }
    } else {
      const needsDropdown = this.setNeedsDropdown();

      if (needsDropdown !== this.state.needsDropdown) {
        this.scrollToActiveTab();
      } else if (!prevProps || props.activeKey !== prevProps.activeKey) {
        this.scrollToActiveTab();
      }
    }
  }

  componentWillUnmount() {
    if (this.resizeObserver) {
      this.resizeObserver.disconnect();
    }

    if (this.debouncedResize && this.debouncedResize.cancel) {
      this.debouncedResize.cancel();
    }
  }
  /**
   * 检测左右按钮的激活状态，并调整 offset
   */


  setNextPrev() {
    const {
      getRef
    } = this.props;
    const navNode = getRef('nav');
    const navTabsContainer = getRef('navTabsContainer');
    const navNodeWH = this.getScrollWH(navTabsContainer || navNode); // Add 1px to fix `offsetWidth` with decimal in Chrome not correct handle
    // https://github.com/ant-design/ant-design/issues/13423

    const containerWH = this.getOffsetWH(getRef('container')) + 1;
    const navWrapNodeWH = this.getOffsetWH(getRef('navWrap'));
    let {
      offset
    } = this;
    const minOffset = containerWH - navNodeWH;
    let {
      next,
      prev
    } = this.state;

    if (minOffset >= 0) {
      next = false;
      this.setOffset(0);
      offset = 0;
    } else if (minOffset < offset) {
      next = true;
    } else {
      next = false; // Fix https://github.com/ant-design/ant-design/issues/8861
      // Test with container offset which is stable
      // and set the offset of the nav wrap node

      const realOffset = navWrapNodeWH - navNodeWH;
      this.setOffset(realOffset);
      offset = realOffset;
    }

    if (offset < 0) {
      prev = true;
    } else {
      prev = false;
    }

    this.setNext(next);
    this.setPrev(prev);
    return {
      next,
      prev
    };
  }
  /**
   * 获取节点的宽度
   *
   * @param {HTMLElement} node
   * @return {number} offsetWidth
   */


  getOffsetWH(node) {
    return node.offsetWidth;
  }
  /**
   * 获取节点的滚动宽度
   *
   * @param {HTMLElement} node
   * @return {number} scrollWidth
   */


  getScrollWH(node) {
    return node.scrollWidth;
  }
  /**
   * 获取节点的偏移量
   *
   * @param {HTMLElement} node
   * @return {number} clientRect.left
   */


  getOffsetLT(node) {
    return node.getBoundingClientRect().left;
  }
  /**
   * 设置偏移量
   *
   */


  setOffset(offset) {
    const {
      getRef
    } = this.props;
    const target = Math.min(0, offset);

    if (this.offset !== target) {
      this.offset = target;
      let navOffset = {};
      const navStyle = getRef('nav').style;
      const transformSupported = isTransform3dSupported(navStyle);

      if (transformSupported) {
        navOffset = {
          value: `translate3d(${target}px,0,0)`
        };
      } else {
        navOffset = {
          name: 'left',
          value: `${target}px`
        };
      }

      if (transformSupported) {
        setTransform(navStyle, navOffset.value);
      } else {
        navStyle[navOffset.name] = navOffset.value;
      }
    }
  }

  setPrev(v) {
    if (this.state.prev !== v) {
      this.setState({
        prev: v
      });
    }
  }

  setNext(v) {
    if (this.state.next !== v) {
      this.setState({
        next: v
      });
    }
  }

  /**
   * 判断左右的按钮是否显示
   */
  isNextPrevShown(state) {
    if (state) {
      return state.next || state.prev;
    }

    const {
      next,
      prev
    } = this.state;
    return next || prev;
  }
  /**
   * 检测 dropdown 是否需要显示，并调整 offset
   */


  setNeedsDropdown() {
    const {
      getRef
    } = this.props;
    const navNode = getRef('nav');
    const navTabsContainer = getRef('navTabsContainer');
    const navNodeWH = this.getScrollWH(navTabsContainer || navNode);
    const containerWH = this.getOffsetWH(getRef('container')) + 1; // 最小的偏移量（可滚动时为负值）

    const minOffset = containerWH - navNodeWH;
    const needsDropdown = minOffset < 0;

    if (!needsDropdown) {
      this.setOffset(0);
    } else if (minOffset > this.offset) {
      // 如果此时偏移量比最小偏移量小（可能是窗口 resize 引起），则重置 offset
      this.setOffset(minOffset);
    }

    if (needsDropdown !== this.state.needsDropdown) {
      this.setState({
        needsDropdown
      });
    }

    return needsDropdown;
  }

  render() {
    const {
      next,
      prev,
      needsDropdown
    } = this.state;
    const showNextPrev = prev || next;
    const {
      prev: prevCallback,
      next: nextCallback,
      prevTransitionEnd
    } = this;
    const {
      size,
      children,
      saveRef,
      animated,
      type,
      excessMode,
      onTabClick,
      panes,
      activeKey
    } = this.props;

    const getPrevNext = function () {
      const prevButton = /*#__PURE__*/_createElement$s(PrevButton, {
        onClick: prev ? prevCallback : undefined,
        unselectable: "on",
        className: classnames({
          disabled: !prev,
          show: showNextPrev
        }),
        onTransitionEnd: prevTransitionEnd
      }, _ref$4);

      const nextButton = /*#__PURE__*/_createElement$s(NextButton, {
        onClick: next ? nextCallback : undefined,
        unselectable: "on",
        className: classnames({
          disabled: !next,
          show: showNextPrev
        })
      }, _ref2);

      return /*#__PURE__*/_createElement$s(React__default['default'].Fragment, null, prevButton, nextButton);
    };

    const getOverlay = function () {
      const rst = [];
      React__default['default'].Children.forEach(panes, child => {
        if (!child) {
          return;
        }

        const key = child.key;
        const isActived = activeKey === key;

        const handleClick = e => {
          if (onTabClick) {
            onTabClick(key, e);
          }
        };

        const node = /*#__PURE__*/_createElement$s(DropdownItemWrap, {
          "aria-disabled": child.props.disabled ? 'true' : 'false',
          "aria-selected": isActived ? 'true' : 'false',
          tabIndex: isActived ? 0 : -1,
          key: key,
          className: classnames({
            disabled: Boolean(child.props.disabled),
            actived: isActived
          }),
          onClick: !isActived && !child.props.disabled ? handleClick : undefined
        }, child.props.tab);

        rst.push(node);
      });
      return /*#__PURE__*/_createElement$s(DropdownWrap, null, rst);
    };

    const excessTabsHelper = function (mode) {
      if (mode === 'arrow') {
        return showNextPrev ? getPrevNext() : undefined;
      } else if (mode === 'dropdown') {
        return needsDropdown ? /*#__PURE__*/_createElement$s(Dropdown, {
          overlay: getOverlay(),
          trigger: "click",
          placement: "bottomRight"
        }, _ref3) : undefined;
      }
    };

    return /*#__PURE__*/_createElement$s(NavContainer, {
      className: classnames(size, type, {
        scrolling: excessMode === 'arrow' ? showNextPrev : needsDropdown
      }),
      ref: saveRef('container')
    }, excessTabsHelper(excessMode), /*#__PURE__*/_createElement$s(NavWrap, {
      className: classnames(type),
      ref: saveRef('navWrap')
    }, /*#__PURE__*/_createElement$s(NavScroll, null, /*#__PURE__*/_createElement$s(Nav, {
      className: classnames(type, animated && 'animated'),
      ref: saveRef('nav')
    }, children))));
  }

}
TabBarNode.defaultProps = {
  tabBarPosition: 'left',
  prefixCls: '',
  onPrevClick: noop,
  onNextClick: noop
};

/* eslint-disable react/static-property-placement */
class SaveRef extends React.Component {
  constructor(...args) {
    super(...args);

    this.getRef = name => this[name];

    this.saveRef = name => node => {
      if (node) {
        this[name] = node;
      }
    };
  }

  render() {
    const {
      children
    } = this.props;
    return children(this.saveRef, this.getRef);
  }

}
SaveRef.defaultProps = {
  children: () => null
};

/* eslint-disable @typescript-eslint/explicit-function-return-type */
const _createElement$t = /*#__PURE__*/React__default['default'].createElement;

// eslint-disable-next-line @typescript-eslint/no-explicit-any
function componentDidUpdate$1(component, init) {
  const {
    styles,
    panes,
    activeKey,
    type
  } = component.props;
  const rootNode = component.props.getRef('root');
  const wrapNode = component.props.getRef('nav') || rootNode;
  const inkBarNode = component.props.getRef('inkBar');
  const activeTab = component.props.getRef('activeTab');
  const inkBarNodeStyle = inkBarNode.style;

  if (init) {
    // prevent mount animation
    inkBarNodeStyle.display = 'none';
  }

  if (activeTab) {
    const tabNode = activeTab;
    const transformSupported = isTransform3dSupported(inkBarNodeStyle); // Reset current style

    setTransform(inkBarNodeStyle, '');
    inkBarNodeStyle.width = '';
    inkBarNodeStyle.height = '';
    inkBarNodeStyle.left = '';
    inkBarNodeStyle.top = '';
    inkBarNodeStyle.bottom = '';
    inkBarNodeStyle.right = '';
    let top = getTop(tabNode, wrapNode);
    let height = tabNode.offsetHeight; // If tabNode'width equal to wrapNode'width when tabBarPosition is top or bottom
    // It means no css working, then ink bar should not have width until css is loaded
    // Fix https://github.com/ant-design/ant-design/issues/7564

    if (height === rootNode.offsetHeight) {
      height = 0;
    } else if (styles.inkBar && styles.inkBar.height !== undefined) {
      // 传入 styles ，则使用传入的宽度，并重算 left
      height = parseInt(styles.inkBar.height, 10);

      if (height) {
        top += (tabNode.offsetHeight - height) / 2;
      }
    } // 可关闭时左右 padding 不等，为使线条在文字内容中间对齐，需左移 (24 - 8) / 2 = 8px


    if (type === 'editable-line') top -= 8; // use 3d gpu to optimize render

    if (transformSupported) {
      setTransform(inkBarNodeStyle, `translate3d(0, ${top}px, 0)`);
    } else {
      inkBarNodeStyle.top = `${top}px`;
    }

    inkBarNodeStyle.height = '20px';
  }

  const activeIndex = getActiveIndex(panes, activeKey);
  inkBarNodeStyle.display = activeIndex !== -1 ? 'block' : 'none';
}

class InkTabBarNodeLeft extends React__default['default'].Component {
  constructor(...args) {
    super(...args);
    this.timeoutID = -1;
  }

  componentDidMount() {
    // ref https://github.com/ant-design/ant-design/issues/8678
    // ref https://github.com/react-component/tabs/issues/135
    // InkTabBarNode need parent/root ref for calculating position
    // since parent componentDidMount triggered after child componentDidMount
    // we're doing a quick fix here to use setTimeout to calculate position
    // after parent/root component mounted
    this.timeoutID = window.setTimeout(() => {
      componentDidUpdate$1(this, true);
    }, 0);
  }

  componentDidUpdate() {
    componentDidUpdate$1(this);
  }

  componentWillUnmount() {
    clearTimeout(this.timeoutID);
  }

  render() {
    const {
      saveRef,
      animated
    } = this.props;
    return /*#__PURE__*/_createElement$t(InkTabBarVertical, {
      className: classnames(animated && 'animated'),
      ref: saveRef('inkBar')
    });
  }

}
InkTabBarNodeLeft.defaultProps = {
  styles: {},
  saveRef: noop
};

const _createElement$u = /*#__PURE__*/React__default['default'].createElement;
const inkTabBarNodeStyles = {
  inkBar: {
    height: '32px',
    width: '24px'
  }
};

var _ref$5 = /*#__PURE__*/_createElement$u(NavBarDivider, null);

const TabBar = props => {
  const singleTab = React__default['default'].Children.count(props.panes) === 1;
  return /*#__PURE__*/_createElement$u(SaveRef, null, (saveRef, getRef) => /*#__PURE__*/_createElement$u(TabBarRootNode, _extends__default['default']({}, props, {
    saveRef: saveRef,
    getRef: getRef
  }), /*#__PURE__*/_createElement$u(TabBarNode, _extends__default['default']({}, props, {
    getRef: getRef,
    saveRef: saveRef
  }), /*#__PURE__*/_createElement$u(TabBarTabsNode, _extends__default['default']({
    saveRef: saveRef
  }, props, {
    className: singleTab ? 'single-tab' : undefined
  })), (props === null || props === void 0 ? void 0 : props.tabPosition) !== 'left' && _ref$5, (props.type === 'line' || props.type === 'editable-line') && !singleTab && ((props === null || props === void 0 ? void 0 : props.tabPosition) === 'left' ? /*#__PURE__*/_createElement$u(InkTabBarNodeLeft, _extends__default['default']({}, props, {
    saveRef: saveRef,
    getRef: getRef,
    styles: inkTabBarNodeStyles
  })) : /*#__PURE__*/_createElement$u(InkTabBarNodeTop, _extends__default['default']({}, props, {
    saveRef: saveRef,
    getRef: getRef,
    styles: inkTabBarNodeStyles
  }))))));
};

/* eslint-disable @typescript-eslint/explicit-function-return-type */
const _createElement$v = /*#__PURE__*/React__default['default'].createElement;
class TabContent extends React.Component {
  getTabPanes() {
    const {
      props
    } = this;
    const {
      activeKey,
      animated,
      tabPosition
    } = props;
    const {
      children
    } = props;
    const newChildren = [];
    const shouldAnimated = animated && tabPosition !== 'left';
    React__default['default'].Children.forEach(children, child => {
      if (!child) {
        return;
      }

      const {
        key
      } = child;
      const actived = activeKey === key;
      newChildren.push( /*#__PURE__*/React__default['default'].cloneElement(child, {
        animated: shouldAnimated,
        actived,
        className: actived ? 'actived-pane' : 'inactived-pane'
      }));
    });
    return newChildren;
  }

  render() {
    const {
      props
    } = this;
    const {
      children,
      activeKey,
      animated,
      tabPosition
    } = props; // todo 左侧 切换动画没做，自动关掉，补上再打开

    const shouldAnimated = animated && tabPosition !== 'left';
    let {
      tabContentStyle: style
    } = props;

    if (shouldAnimated) {
      const activeIndex = getActiveIndex(children, activeKey);

      if (activeIndex !== -1) {
        const animatedStyle = getTransformPropValue(getTransformByIndex(activeIndex));
        style = { ...style,
          ...animatedStyle
        };
      } else {
        style = { ...style,
          display: 'none'
        };
      }
    }

    return /*#__PURE__*/_createElement$v(TabContentWrap, {
      className: classnames(shouldAnimated && 'animated'),
      style: style
    }, this.getTabPanes());
  }

}
TabContent.defaultProps = {
  tabContentStyle: {}
};

const _createElement$w = /*#__PURE__*/React__default['default'].createElement;

function getDefaultActiveKey(props) {
  let activeKey;
  React__default['default'].Children.forEach(props.children, child => {
    if (child && !activeKey && !child.props.disabled) {
      activeKey = child.key;
    }
  });
  return activeKey;
}

function activeKeyIsValid(props, key) {
  const keys = React__default['default'].Children.map(props.children, child => child && child.key);
  return keys.indexOf(key) >= 0;
}

class Tabs extends React__default['default'].Component {
  constructor(props) {
    super(props);

    this.onTabClick = (activeKey, e) => {
      const {
        onTabClick
      } = this.props;

      if (onTabClick) {
        onTabClick(activeKey, e);
      }

      this.setActiveKey(activeKey);
    };

    this.onNavKeyDown = e => {
      const {
        keyboard
      } = this.props;

      if (!keyboard) {
        return;
      }

      const eventKeyCode = e.keyCode;

      if (eventKeyCode === KEY_CODES.RIGHT) {
        e.preventDefault();
        const nextKey = this.getNextActiveKey(true);
        this.onTabClick(nextKey);
      } else if (eventKeyCode === KEY_CODES.LEFT) {
        e.preventDefault();
        const previousKey = this.getNextActiveKey(false);
        this.onTabClick(previousKey);
      }
    };

    this.onScroll = ({
      target,
      currentTarget
    }) => {
      if (target === currentTarget && target.scrollLeft > 0) {
        target.scrollLeft = 0;
      }
    };

    this.setActiveKey = nextActiveKey => {
      const {
        activeKey,
        onChange
      } = this.props;

      if (activeKey !== nextActiveKey) {
        if (!activeKey) {
          this.setState({
            activeKey: nextActiveKey
          });
        }

        if (onChange) {
          onChange(nextActiveKey);
        }
      }
    };

    this.getNextActiveKey = next => {
      const {
        activeKey
      } = this.state;
      const children = [];
      React__default['default'].Children.forEach(this.props.children, c => {
        if (c && !c.props.disabled) {
          if (next) {
            children.push(c);
          } else {
            children.unshift(c);
          }
        }
      });
      const {
        length
      } = children;
      let ret = length && children[0].key;
      children.forEach((child, i) => {
        if (child.key === activeKey) {
          if (i === length - 1) {
            ret = children[0].key;
          } else {
            ret = children[i + 1].key;
          }
        }
      });
      return ret;
    };

    let _activeKey;

    if (props.activeKey) {
      _activeKey = props.activeKey;
    } else if (props.defaultActiveKey) {
      _activeKey = props.defaultActiveKey;
    } else {
      _activeKey = getDefaultActiveKey(props);
    }

    this.state = {
      activeKey: _activeKey
    };
  }

  static getDerivedStateFromProps(props, state) {
    const newState = {};

    if (props.activeKey) {
      newState.activeKey = props.activeKey;
    } else if (!activeKeyIsValid(props, state.activeKey)) {
      newState.activeKey = getDefaultActiveKey(props);
    }

    if (Object.keys(newState).length > 0) {
      return newState;
    }

    return null;
  }

  render() {
    const {
      props,
      state
    } = this;
    const {
      className,
      children,
      animated,
      hasTabBar,
      ...restProps
    } = props;
    return /*#__PURE__*/_createElement$w(TabsWrap, _extends__default['default']({
      className: classnames(className, {
        animated
      }),
      style: props.style
    }, getDataAttr(restProps), {
      onScroll: this.onScroll
    }), hasTabBar && /*#__PURE__*/_createElement$w(TabBar, _extends__default['default']({}, omit(props, ['className']), {
      panes: children,
      activeKey: state.activeKey,
      onTabClick: this.onTabClick,
      onKeyDown: this.onNavKeyDown
    })), /*#__PURE__*/_createElement$w(TabContent, _extends__default['default']({}, omit(props, ['className']), {
      activeKey: state.activeKey
    }), children));
  }

}
Tabs.defaultProps = {
  onChange: noop,
  keyboard: true,
  children: null,
  style: {},
  size: 'default',
  type: 'line',
  animated: true,
  destroyInactiveTabPane: false,
  hasTabBar: true,
  excessMode: 'arrow'
};

const _createElement$x = /*#__PURE__*/React__default['default'].createElement;
const TabPane = props => {
  const {
    className,
    actived,
    forceRender,
    key,
    id,
    children,
    destroyInactiveTabPane,
    animated,
    ...restProps
  } = props; // 此缓存是为了让最近显示过的tab项不销毁

  const isActived = React.useRef(!!actived);
  isActived.current = isActived.current || !!actived;
  const isRender = destroyInactiveTabPane ? actived : isActived.current;
  const shouldRender = isRender || forceRender;
  const tabKeyExists = key && String(key).length > 0;
  const uuid = tabKeyExists && (id ? `${key}-${id}` : `${key}`);
  return /*#__PURE__*/_createElement$x(TabPaneWrap, _extends__default['default']({
    role: "tabpanel",
    "aria-hidden": actived ? 'false' : 'true',
    tabIndex: actived ? 0 : -1,
    className: classnames(className, {
      actived,
      animated
    }),
    id: uuid && `tabpane-${uuid}`,
    "aria-labelledby": uuid && `tab-${uuid}`
  }, getDataAttr(restProps)), shouldRender ? children : null);
};
TabPane.defaultProps = {
  disabled: false
};

/* eslint-disable @typescript-eslint/explicit-function-return-type */
const SelectTrigger = withTheme(styled__default['default'].span(["display:block;width:34px;font-size:", ";line-height:20px;", ""], ({
  theme
}) => theme.ui.fontSizeSmall, Ellipsis));

const _createElement$y = /*#__PURE__*/React__default['default'].createElement;

// eslint-disable-next-line max-lines-per-function
const TextTypeSelect = props => {
  const {
    locale,
    onChange,
    style,
    bordered,
    zIndex,
    className,
    disabled,
    titles,
    title
  } = props;
  const translate = useTranslate(locale); // 文字类型列表：正文、标题1-6

  const options = React.useMemo(() => [{
    title: translate('we_ui_font_family_Body'),
    type: 'paragraph',
    fontSize: 14,
    fontWeight: 400,
    lineHeight: '1.45'
  }, {
    title: translate('we_ui_font_family_Title_1'),
    type: 'heading-1',
    fontSize: '20pt',
    fontWeight: 500,
    lineHeight: '1.45'
  }, {
    title: translate('we_ui_font_family_Title_2'),
    type: 'heading-2',
    fontSize: '16pt',
    fontWeight: 500,
    lineHeight: '1.45'
  }, {
    title: translate('we_ui_font_family_Title_3'),
    type: 'heading-3',
    fontSize: '14pt',
    fontWeight: 500,
    lineHeight: '1.45'
  }, {
    title: translate('we_ui_font_family_Title_4'),
    type: 'heading-4',
    fontSize: '12pt',
    fontWeight: 500,
    lineHeight: '1.45'
  }, {
    title: translate('we_ui_font_family_Title_5'),
    type: 'heading-5',
    fontSize: '12pt',
    fontWeight: 500,
    lineHeight: '1.45'
  }, {
    title: translate('we_ui_font_family_Title_6'),
    type: 'heading-6',
    fontSize: '12pt',
    fontWeight: 500,
    lineHeight: '1.45'
  }], [translate]); // 受控模式处理
  // eslint-disable-next-line prefer-const

  let [value, setValue] = useControlledValue(props.value, props.defaultValue);
  /**
   * 文字类型变化回调函数
   *
   * @param {TextType} type
   * @return {void}
   */

  const handleChange = React.useCallback(type => {
    if (onChange) {
      onChange(type);
    }

    setValue(type);
  }, [setValue, onChange]);
  /**
   * 渲染下拉选择的显示区
   *
   * @param {TextType} type
   * @return {React.ReactNode}
   */

  const renderTrigger = React.useCallback((type = 'paragraph') => {
    const index = options.findIndex(op => op.type === type);
    const currentOption = options[index];
    return /*#__PURE__*/_createElement$y(SelectTrigger, null, (currentOption === null || currentOption === void 0 ? void 0 : currentOption.title) || options[0].title);
  }, [options]);
  return /*#__PURE__*/_createElement$y(SelectMemo, {
    title: title,
    value: value,
    onChange: handleChange,
    renderTrigger: renderTrigger,
    zIndex: zIndex,
    style: style,
    bordered: bordered,
    className: className,
    disabled: disabled,
    testid: "TextTypeSelect",
    selectable: true
  }, // 目前列表要求只显示 1-4
  options.slice(0, 5).map(option => {
    return /*#__PURE__*/_createElement$y(SelectOption, {
      key: option.type,
      value: option.type,
      testid: option.type,
      title: titles[option.type]
    }, /*#__PURE__*/_createElement$y("span", {
      style: {
        fontSize: option.fontSize,
        fontWeight: option.fontWeight,
        lineHeight: option.lineHeight
      }
    }, option.title));
  }));
};

TextTypeSelect.defaultProps = {
  onChange: () => {},
  defaultValue: 'paragraph',
  titles: {}
};

const TriggerWrap$1 = /*#__PURE__*/styled__default['default'].div([""]);
const OptionWrap = withTheme(styled__default['default'].div([".icon{margin-right:8px;}"]));

const _createElement$z = /*#__PURE__*/React__default['default'].createElement;

const VerticalAlignSelect = props => {
  const {
    locale,
    style,
    onChange,
    zIndex,
    disabledKeys,
    title,
    titles,
    ...restProps
  } = props;
  const [value, setValue] = useControlledValue(props.value, props.defaultValue);
  const t = useTranslate(locale); // 垂直对齐的选项

  const options = React.useMemo(() => [{
    title: t('we_ui_align_top'),
    value: 'top',
    Icon: AlignTopNormal
  }, {
    title: t('we_ui_align_center'),
    value: 'middle',
    Icon: AlignCenterNormal
  }, {
    title: t('we_ui_align_bottom'),
    value: 'bottom',
    Icon: AlignBottomNormal
  }], [t]); // 该组件的trigger区域只显示Icon

  const renderTrigger = React.useCallback(align => {
    const index = options.findIndex(option => option.value === align);
    const currentOption = options[index];
    return /*#__PURE__*/_createElement$z(TriggerWrap$1, {
      style: {
        minWidth: 16
      }
    }, currentOption && /*#__PURE__*/_createElement$z(currentOption.Icon, null));
  }, [options]);
  const handleChange = React.useCallback(e => {
    if (onChange) {
      onChange(e);
    }

    setValue(e);
  }, [setValue, onChange]);
  return /*#__PURE__*/_createElement$z(SelectMemo, _extends__default['default']({}, restProps, {
    value: value,
    onChange: handleChange,
    style: style || {
      padding: '0 0 0 6px',
      marginRight: -1
    },
    renderTrigger: renderTrigger,
    zIndex: zIndex,
    title: title,
    testid: "VerticalAlignSelect"
  }), options.map(option => /*#__PURE__*/_createElement$z(SelectOption, {
    value: option.value,
    key: option.value,
    disabled: disabledKeys === null || disabledKeys === void 0 ? void 0 : disabledKeys.includes(option.value),
    title: titles[option.value]
  }, /*#__PURE__*/_createElement$z(OptionWrap, null, /*#__PURE__*/_createElement$z(option.Icon, {
    className: "icon"
  }), /*#__PURE__*/_createElement$z("span", null, option.title)))));
};

VerticalAlignSelect.defaultProps = {
  defaultValue: 'top',
  titles: {}
};

const TriggerWrap$2 = /*#__PURE__*/styled__default['default'].div([""]);
const OptionWrap$1 = withTheme(styled__default['default'](SelectOption)(["justify-content:flex-start;.icon{margin-right:8px;}"]));

const _createElement$A = /*#__PURE__*/React__default['default'].createElement;

const HorizontalAlignSelect = props => {
  const {
    locale,
    onChange,
    disabledKeys,
    title,
    titles,
    style,
    ...restProps
  } = props;
  const [value, setValue] = useControlledValue(props.value, props.defaultValue);
  const t = useTranslate(locale); // 垂直对齐的选项

  const options = React.useMemo(() => [{
    title: t('we_ui_align_left'),
    value: 'left',
    Icon: LeftalignNormal
  }, {
    title: t('we_ui_align_center'),
    value: 'center',
    Icon: CenteralignNormal
  }, {
    title: t('we_ui_align_right'),
    value: 'right',
    Icon: RightalignNormal
  }, {
    title: t('we_ui_align_justify'),
    value: 'justify',
    Icon: JustifyNormal
  }], [t]); // 该组件的trigger区域只显示Icon

  const renderTrigger = React.useCallback(align => {
    const index = options.findIndex(option => option.value === align);
    const currentOption = options[index];
    return /*#__PURE__*/_createElement$A(TriggerWrap$2, {
      style: {
        minWidth: 16
      }
    }, currentOption && /*#__PURE__*/_createElement$A(currentOption.Icon, null));
  }, [options]);
  const handleChange = React.useCallback(e => {
    if (onChange) {
      onChange(e);
    }

    setValue(e);
  }, [onChange, setValue]);
  return /*#__PURE__*/_createElement$A(SelectMemo, _extends__default['default']({}, restProps, {
    value: value,
    style: style || {
      padding: '0 0 0 6px',
      marginRight: -1
    },
    onChange: handleChange,
    renderTrigger: renderTrigger,
    testid: "HorizontalAlignSelect",
    title: title
  }), options.map(option => /*#__PURE__*/_createElement$A(OptionWrap$1, {
    value: option.value,
    key: option.value,
    testid: option.value,
    disabled: disabledKeys === null || disabledKeys === void 0 ? void 0 : disabledKeys.includes(option.value),
    title: titles[option.value]
  }, /*#__PURE__*/_createElement$A(option.Icon, {
    className: "icon"
  }), /*#__PURE__*/_createElement$A("span", null, option.title))));
};

HorizontalAlignSelect.defaultProps = {
  defaultValue: 'left',
  titles: {}
};

const TriggerWrap$3 = withTheme(styled__default['default'].div(["", " width:42px;margin-right:4px;font-size:", ";line-height:20px;"], Ellipsis, ({
  theme
}) => theme.ui.fontSizeSmall));
const OptionWrap$2 = withTheme(styled__default['default'].div(["color:", ";"], ({
  theme,
  disabled
}) => disabled ? theme.ui.disabledColor : theme.ui.textColor));

/* eslint-disable consistent-return */

/* eslint-disable @typescript-eslint/no-explicit-any */
const woff = 'data:font/woff;charset=utf-8;base64,d09GRk9UVE8AAAQYAAoAAAAABlwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABDRkYgAAAA9AAAAMQAAADSEQga8UZGVE0AAAG4AAAAGwAAABxqQJGNT1MvMgAAAdQAAABDAAAAYFYPXfBjbWFwAAACGAAAADcAAAFCAA0D1mhlYWQAAAJQAAAAKQAAADb9ITBXaGhlYQAAAnwAAAAZAAAAJAN7/ztobXR4AAACmAAAAAgAAAAIAfQAAG1heHAAAAKgAAAABgAAAAYAAlAAbmFtZQAAAqgAAAFZAAACjkaWZeZwb3N0AAAEBAAAABMAAAAg/4YAMnicY2RgYWFgZGTkCs0rySzJSU0xZGBkYmBk0PjBz/BDmvGHDNMPWeYf4izdQMAqw7CIX4aBQUCGYamgDAO7DMNpIQZmkGoXBl+GMOei1MSS1BSFpEqFqtS8fCBO19HRUSjPLMlQcMvPK3HLL0pPVTDSM1DQyCgpKbDS108DiqaBRPWK0/TyUks04Y5AuAYIBBmYGBkVFLv3/nDdy7h37++Yvcx7xdR/rHzPtvdPuegP198xf1zZ+fi6RbpFu3m4ANybP/V4nGNgYGBkAIIztovOg+jzjOV2ULoeAEMOBccAeJxjYGH8wviFgZWBgamLaQ8DA0MPhGZ8wGDIyAQUZWBjZoABRgYkEJDmmsJwgMGAwYBZ4b8FQxSGGgUgZAQAfmQKqgB4nGNgYGBmgGAZBkYGELAB8hjBfBYGBSDNAoQgvsH//xDy/0WoSgZGNgYYk2hAqvrBDgBrAQbjAHicY2BkYGAA4pys3ox4fpuvDNzML4AiDOcZy3ci01DAwcAEogAU4ghtAAAAeJxjYGRgYFb4b8EQxQADjAyogAkAMlIBuQAAAAH0AAAAAAAAAABQAAACAAB4nIWQzUoDMRSFT+wPFESkT5CNUGEmzZRuOluhC8Wl3bdMph2omTpNKe1eceebCL6Ca9euXfsE7vTMNBREsBOS+92TMzc3AXCCZwjsvgs8ehZo4cPzEZr48lzDmbjyXEdL3Htu4FS8eG5Sf6dT1FvMHqq/ShZo483zEY7x6bmGS3x7rqMt7jw3IMWT5yb1V/ZXwGAMxzWBxAQbrltmFrmPUwTVkFgjo3NGGnLXkstY0GGo9aCgGTt0OI4FYnQ5Uu9N916FJTNF1VA/5zMVZuxMIicbuTU255wGQSDXmZvJYW7dMC+mRvaUlp2Zc4u4202ppqWqlqmyxrHITXVK2eG8uk1EybrMzU1CvK60DCvcMjFJtmL87xox59+SOz3CACHXkG7N2GepX23Gcn80ORqEUdjTUf9QkyNqBR8nq/qSrF1WV1Use8LIFMsst1LrSGmt5YGCP/yzcc0AAAB4nGNgZgCD/80MRgxYAAAoRAG4AA==';
class FontDetector {
  constructor() {
    this.src = void 0;
    this.css = void 0;
    this.detection = void 0;

    this.inject = () => {
      let elem = document.getElementById('font-detect-test-block');

      if (elem == null) {
        elem = document.createElement('div');
        elem.id = 'font-detect-test-block';
        elem.innerHTML = '0';
        document.body.appendChild(elem);
      }

      let sheet = document.getElementById('font-detect-styles');

      if (sheet == null) {
        sheet = document.createElement('style');
        sheet.setAttribute('type', 'text/css');
        sheet.id = 'font-detect-styles';
        sheet.innerHTML = this.css;
        const head = document.getElementsByTagName('head')[0];
        head.appendChild(sheet);
      }
    };

    this.remove = () => {
      const elem = document.getElementById('font-detect-test-block');

      if (elem != null) {
        elem.remove();
      }

      const sheet = document.getElementById('font-detect-styles');

      if (sheet != null) {
        return sheet.remove();
      }
    };

    this.ready = callback => {
      setTimeout(() => {
        var _elem;

        let elem = document.getElementById('font-detect-test-block');

        if (!elem) {
          this.inject();
          elem = document.getElementById('font-detect-test-block');
        }

        if (((_elem = elem) === null || _elem === void 0 ? void 0 : _elem.style) && elem.clientWidth === 0) {
          return callback();
        }
      }, 0);
    };

    this.getResult = (fonts, callback) => {
      const elem = document.getElementById('font-detect-test-block');
      const results = []; // eslint-disable-next-line no-restricted-syntax

      for (const font of fonts) {
        elem.style.fontFamily = `'${font}', font-detect-0-woff`;
        results.push(elem.clientWidth > 0);
      }

      this.detection = results;
      callback(results);
      return this.remove();
    };

    this.detect = (fonts, callback) => this.detection.length > 0 ? callback(this.detection) : this.ready(() => this.getResult(fonts, callback));

    this.detection = [];
    this.css = `
    @font-face {
      font-family: font-detect-0-woff;
      src: url(${woff}) format('woff');
    }
    #font-detect-test-block {
      display: inline-block;
      position: fixed;
      left: -100%;
      font-family: font-detect-0-woff;
    }`;
    this.src = '';
    this.inject();
  }

}

/**
 * 获取fontFamily, 字体探测结果, 语言转换函数
 * @param locale 本地语言类型
 * @returns {[options, installedRecord, t]}
 */
const useFontFamily = locale => {
  const detector = React.useMemo(() => new FontDetector(), []);
  const [installedRecord, setInstalledRecord] = React.useState({
    default: true
  });
  const t = useTranslate(locale); // 字体列表选项

  const options = React.useMemo(() => {
    const fontFamilies = [{
      title: t('we_ui_font_family_default'),
      value: 'default',
      installed: true
    }, {
      title: 'Arial',
      value: 'Arial',
      installed: false
    }, {
      title: 'Comic Sans MS',
      value: 'Comic Sans MS',
      installed: false
    }, {
      title: 'Courier New',
      value: 'Courier New',
      installed: false
    }, {
      title: 'Georgia',
      value: 'Georgia',
      installed: false
    }, {
      title: 'Helvetica',
      value: 'Helvetica',
      installed: false
    }, {
      title: 'Impact',
      value: 'Impact',
      installed: false
    }, {
      title: 'Times New Roman',
      value: 'Times New Roman',
      installed: false
    }, {
      title: 'Trebuchet MS',
      value: 'Trebuchet MS',
      installed: false
    }, {
      title: 'Verdana',
      value: 'Verdana',
      installed: false
    }, {
      title: t('we_ui_font_family_TheSongS'),
      value: 'FangSong',
      installed: false
    }, {
      title: t('we_ui_font_family_ChineseTheSongS'),
      value: 'STFangsong',
      installed: false
    }, {
      title: t('we_ui_font_family_ChineseFntimesNewRoman'),
      value: 'STSong',
      installed: false
    }, {
      title: t('we_ui_font_family_ChineseItalics'),
      value: 'STKaiti',
      installed: false
    }, {
      title: t('we_ui_font_family_FntimesNewRoman'),
      value: 'SimSun',
      installed: false
    }, {
      title: t('we_ui_font_family_MicrosoftIt'),
      value: 'Microsoft YaHei',
      installed: false
    }, {
      title: t('we_ui_font_family_Italics'),
      value: 'KaiTi',
      installed: false
    }, {
      title: t('we_ui_font_family_ItalicsJane'),
      value: 'Kaiti SC',
      installed: false
    }, {
      title: t('we_ui_font_family_BlackBody'),
      value: 'SimHei',
      installed: false
    }, {
      title: t('we_ui_font_family_BlackBody_Jane'),
      value: 'Heiti SC',
      installed: false
    }, {
      title: t('we_ui_font_family_ChineseFZHei'),
      value: 'FZHei-B01S',
      installed: false
    }, {
      title: t('we_ui_font_family_ChineseFZKai'),
      value: 'FZKai-Z03S',
      installed: false
    }, {
      title: t('we_ui_font_family_ChineseFZFangSong'),
      value: 'FZFangSong-Z02S',
      installed: false
    }];
    return fontFamilies;
  }, [t]); // 设置字体探测

  React.useEffect(() => {
    detector.detect(options.map(f => f.value), results => {
      const newInstalledRecord = {};
      results.forEach((result, index) => {
        if (index !== 0) {
          newInstalledRecord[options[index].value] = result;
        }
      });
      newInstalledRecord.default = true;
      setInstalledRecord(newInstalledRecord);
    });
    return () => {
      setInstalledRecord({
        default: true
      });
    };
  }, [detector, options]);
  return [options, installedRecord, t];
};

/* eslint-disable max-lines-per-function */
const _createElement$B = /*#__PURE__*/React__default['default'].createElement;

const FontFamilySelect = props => {
  const {
    style,
    locale,
    onChange,
    zIndex,
    bordered,
    className,
    disabled,
    titles,
    title
  } = props;
  const [value, setValue] = useControlledValue(props.value, props.defaultValue);
  const [options, installedRecord, t] = useFontFamily(locale); // 该组件的trigger区域只显示Icon

  const renderTrigger = React.useCallback(align => {
    const index = options.findIndex(option => option.value === align);
    const currentOption = options[index];
    const useDefault = props.defaultValue ? options[0] : undefined;
    return /*#__PURE__*/_createElement$B(TriggerWrap$3, null, (currentOption === null || currentOption === void 0 ? void 0 : currentOption.title) || (useDefault === null || useDefault === void 0 ? void 0 : useDefault.title) || align);
  }, [options]);
  const handleChange = React.useCallback(e => {
    if (onChange) {
      onChange(e);
    }

    setValue(e);
  }, [onChange, setValue]);
  return /*#__PURE__*/_createElement$B(SelectMemo, {
    value: value,
    onChange: handleChange,
    renderTrigger: renderTrigger,
    optionWrapperStyle: {
      minWidth: 200
    },
    style: style,
    zIndex: zIndex,
    bordered: bordered,
    className: className,
    disabled: disabled,
    testid: "FontFamilySelect",
    title: title
  }, options.map(option => /*#__PURE__*/_createElement$B(SelectOption, {
    value: option.value,
    key: option.value,
    disabled: !installedRecord[option.value],
    disabledTip: t('we_ui_font_family_UninstallFonts'),
    testid: option.value,
    title: titles[option.value]
  }, /*#__PURE__*/_createElement$B(OptionWrap$2, {
    disabled: !installedRecord[option.value]
  }, /*#__PURE__*/_createElement$B("span", {
    style: {
      fontFamily: option.value,
      color: 'inherit'
    }
  }, option.title)))));
};

FontFamilySelect.defaultProps = {
  titles: {}
};

/* eslint-disable @typescript-eslint/explicit-function-return-type */
const OverlayWrap$2 = withTheme(styled__default['default'].div(["padding:", " 0;"], ({
  theme
}) => theme.ui.padding));
const OverlayItem = withTheme(styled__default['default'].div(["position:relative;display:flex;justify-content:space-between;align-items:center;padding:", " 20px;margin:0 ", ";cursor:pointer;transition:all .1s ease-in-out;font-size:", ";border-radius:", ";height:32px;box-sizing:border-box;&:hover{background-color:", ";}.script-icon{margin-right:8px;color:", ";}.check-icon{color:", ";font-size:12px;display:inline-block;color:#3296fa;position:absolute;left:4px;top:50%;transform:translateY(-50%);}"], ({
  theme
}) => theme.ui.paddingSmall, ({
  theme
}) => theme.ui.marginMedium, ({
  theme
}) => theme.ui.fontSizeSmall, ({
  theme
}) => theme.ui.radiusLarge, ({
  theme
}) => theme.ui.backgroundColor, ({
  theme
}) => theme.ui.commonBaseColor2, ({
  theme
}) => theme.ui.primaryColor));

/* eslint-disable max-lines-per-function */
const _createElement$C = /*#__PURE__*/React__default['default'].createElement;

var _ref$6 = /*#__PURE__*/_createElement$C(SelectNormal, {
  className: "check-icon"
});

var _ref2$1 = /*#__PURE__*/_createElement$C(XUpNormal, null);

var _ref3$1 = /*#__PURE__*/_createElement$C(XDownNormal, null);

const ScriptSelect = props => {
  const {
    locale,
    style,
    onClick,
    className,
    title,
    titles,
    disabled,
    size
  } = props;
  const [value, setValue] = useControlledValue(props.value, props.defaultValue);
  const [active, setActive] = React.useState(false);
  const t = useTranslate(locale);
  /**
   * 点击上下标操作
   */

  const handleClickLeft = React.useCallback(event => {
    if (onClick) {
      onClick(value, event);
    }
  }, [value, onClick]);
  const isSuper = value === 'super';
  const superText = t('we_ui_script_superscript'); // 上标文案

  const subText = t('we_ui_script_subscript'); // 下标文案

  const handleChooseScript = React.useCallback(script => {
    if (onClick) {
      onClick(script);
    }

    setValue(script);
  }, [onClick, setValue]);
  const handleChooseSuper = React.useCallback(() => {
    if (value !== 'super') {
      handleChooseScript('super');
      setActive(false);
    }
  }, [value, handleChooseScript]);
  const handleChooseSub = React.useCallback(() => {
    if (value !== 'sub') {
      handleChooseScript('sub');
      setActive(false);
    }
  }, [value, handleChooseScript]);
  const chooses = [{
    title: superText,
    value: 'super',
    Icon: XUpNormal,
    onClick: handleChooseSuper
  }, {
    title: subText,
    value: 'sub',
    Icon: XDownNormal,
    onClick: handleChooseSub
  }];
  /**
   * 下拉选项
   */

  const DropContent = /*#__PURE__*/_createElement$C(OverlayWrap$2, null, chooses.map(item => /*#__PURE__*/_createElement$C(Tooltip, {
    title: getTitleContent(titles[item.value]),
    placement: getTitlePlacement(titles[item.value]),
    key: item.value
  }, /*#__PURE__*/_createElement$C(OverlayItem, {
    className: value === item.value ? 'selected' : '',
    onClick: item.onClick,
    "data-testid": `option-${item.value}`
  }, /*#__PURE__*/_createElement$C(item.Icon, {
    className: "script-icon"
  }), /*#__PURE__*/_createElement$C("span", null, item.title), value === item.value && _ref$6))));

  return /*#__PURE__*/_createElement$C(SplitButton, {
    overlay: DropContent,
    onClickLeft: handleClickLeft,
    onActiveChange: setActive,
    style: style,
    size: size,
    active: active,
    className: className,
    disabled: disabled,
    title: title || (isSuper ? superText : subText)
  }, isSuper ? _ref2$1 : _ref3$1);
};

ScriptSelect.defaultProps = {
  defaultValue: 'super',
  titles: {}
};

const TriggerWrap$4 = /*#__PURE__*/styled__default['default'].div([""]);
const OptionWrap$3 = withTheme(styled__default['default'].div(["position:relative;.icon{margin-right:8px;}"]));

const _createElement$D = /*#__PURE__*/React__default['default'].createElement;
const LINE_HEIGHT_DEFAULT_VALUES = [1, 1.15, 1.5, 2, 2.5, 3];

var _ref$7 = /*#__PURE__*/_createElement$D(TriggerWrap$4, null, /*#__PURE__*/_createElement$D(LineheightNormal, null));

const LineHeightSelect = props => {
  const {
    style,
    zIndex,
    lineHeightValues,
    className,
    disabled,
    onChange,
    onCustomize,
    title,
    titles,
    locale
  } = props;
  const [value, setValue] = useControlledValue(props.value, props.defaultValue);
  const t = useTranslate(locale);
  const handleChange = React.useCallback(e => {
    if (e !== -1) {
      if (onChange) {
        onChange(e);
      }

      setValue(e);
    } else if (onCustomize) {
      onCustomize();
    }
  }, [onChange, setValue, onCustomize]); // 该组件的trigger区域只显示Icon

  const renderTrigger = React.useCallback(() => _ref$7, []);
  const renderOptions = React.useMemo(() => (lineHeightValues || LINE_HEIGHT_DEFAULT_VALUES).map(lineHeight => /*#__PURE__*/_createElement$D(SelectOption, {
    value: lineHeight,
    key: `${lineHeight}`,
    testid: `${lineHeight}`,
    title: titles[lineHeight]
  }, /*#__PURE__*/_createElement$D(OptionWrap$3, null, /*#__PURE__*/_createElement$D("span", null, lineHeight)))), [lineHeightValues, titles]);
  return /*#__PURE__*/_createElement$D(SelectMemo, {
    value: value,
    onChange: handleChange,
    style: style,
    renderTrigger: renderTrigger,
    zIndex: zIndex,
    className: className,
    disabled: disabled,
    testid: "LineHeightSelect",
    title: title
  }, /*#__PURE__*/_createElement$D(SelectOptionGroup, null, renderOptions), typeof onCustomize === 'function' && /*#__PURE__*/_createElement$D(SelectOption, {
    value: -1,
    key: "selectLineHeight"
  }, /*#__PURE__*/_createElement$D(OptionWrap$3, {
    className: "pseudo-option"
  }, /*#__PURE__*/_createElement$D("span", null, " ", t('we_ui_line_height_select_customized_line_height'), " "))));
};

LineHeightSelect.defaultProps = {
  defaultValue: 1,
  titles: {}
};

const TriggerWrap$5 = /*#__PURE__*/styled__default['default'].div(["display:flex;flex-wrap:nowrap;align-items:center;.title{margin-left:6px;width:56px;", ";}"], Ellipsis);
const OptionWrap$4 = withTheme(styled__default['default'].div(["display:flex;flex-wrap:nowrap;align-items:center;.icon{margin-right:8px;}"]));

const _createElement$E = /*#__PURE__*/React__default['default'].createElement;

const TableWrapSelect = props => {
  const {
    locale,
    style,
    onChange,
    title,
    titles,
    zIndex,
    className,
    showTitle,
    disabled
  } = props;
  const [value, setValue] = useControlledValue(props.value, props.defaultValue);
  const t = useTranslate(locale); // 垂直对齐的选项

  const options = React.useMemo(() => [{
    title: t('we_ui_wrap_overflow'),
    value: 'overflow',
    Icon: OverflowNormal
  }, {
    title: t('we_ui_wrap_auto-wrap'),
    value: 'auto-wrap',
    Icon: WrapNormal
  }, {
    title: t('we_ui_wrap_line-clip'),
    value: 'line-clip',
    Icon: ClipNormal
  }], [t]); // 该组件的trigger区域只显示Icon

  const renderTrigger = React.useCallback(align => {
    const index = options.findIndex(option => option.value === align);
    const currentOption = options[index];
    return /*#__PURE__*/_createElement$E(TriggerWrap$5, {
      className: "we-ui-table-wrap-select-trigger",
      style: {
        minWidth: 16
      }
    }, currentOption && /*#__PURE__*/_createElement$E(React__default['default'].Fragment, null, /*#__PURE__*/_createElement$E(currentOption.Icon, null), showTitle && /*#__PURE__*/_createElement$E("span", {
      className: "title"
    }, currentOption.title)));
  }, [options, showTitle]);
  const handleChange = React.useCallback(e => {
    if (onChange) {
      onChange(e);
    }

    setValue(e);
  }, [setValue, onChange]);
  return /*#__PURE__*/_createElement$E(SelectMemo, {
    value: value,
    onChange: handleChange,
    style: style,
    renderTrigger: renderTrigger,
    zIndex: zIndex,
    title: title,
    className: className,
    disabled: disabled,
    testid: "TableWrapSelect"
  }, options.map(option => /*#__PURE__*/_createElement$E(SelectOption, {
    value: option.value,
    key: option.value,
    title: titles[option.value]
  }, /*#__PURE__*/_createElement$E(OptionWrap$4, null, /*#__PURE__*/_createElement$E(option.Icon, {
    className: "icon"
  }), /*#__PURE__*/_createElement$E("span", null, option.title)))));
};

TableWrapSelect.defaultProps = {
  defaultValue: 'overflow',
  titles: {}
};

var classnames$1 = ((...args) => {
  const names = [];
  args.forEach(item => {
    if (!item) return;

    if (typeof item === 'string') {
      names.push(item);
      return;
    }

    Object.keys(item).forEach(k => {
      if (item[k]) names.push(k);
    });
  });
  return names.join(' ');
});

const _createElement$F = /*#__PURE__*/React__default['default'].createElement;
const DEFAULT_SIZES = ['12', '14', '16', '18', '20', '24', '30', '36'];
const CHINESE_SIZES = ['初号', '小初', '一号', '小一', '二号', '小二', '三号', '小三', '四号', '小四', '五号', '小五', '六号', '小六', '七号', '八号'];
const CHINESE_SIZES_NUMBERS_MAPPER = ['42', '36', '26', '24', '22', '18', '16', '15', '14', '12', '10.5', '9', '7.5', '6.5', '5.5', '5'];

const ch2num = size => {
  const index = CHINESE_SIZES.indexOf(size);
  return CHINESE_SIZES_NUMBERS_MAPPER[index];
};

const num2ch = size => {
  const index = CHINESE_SIZES_NUMBERS_MAPPER.indexOf(size);
  return CHINESE_SIZES[index] || size;
}; // 增加对于.5的小数正则校验


const isNumberSize = num => /^[0-9]+$|^([0-9]+[.][5])$/.test(num);

const fontSizeRules = [{
  validator: e => {
    const value = Number(isNumberSize(e) ? e : ch2num(e));
    return value >= 5 && value <= 200 && Number.isInteger(value * 2);
  },
  message: 'min step should be 0.5'
}];
const SelectStyled = /*#__PURE__*/styled__default['default'](SelectMemo)(["&.select-wrap{font-size:12px;line-height:20px;}"]); // eslint-disable-next-line max-lines-per-function

const FontSizeSelect = props => {
  const {
    style,
    sizes,
    onChange,
    zIndex,
    bordered,
    allowInput,
    className,
    disabled,
    title,
    titles,
    supportChinese
  } = props; // 受控的值

  const [valueControlled, setValue] = useControlledValue(props.value, props.defaultValue); // 是否使用中文选项

  const usingChinese = localStorage.getItem('we-ui-using-chinese') === 'true'; // 将值都转化为string

  const value = React.useMemo(() => {
    if (supportChinese && usingChinese) {
      return num2ch(`${valueControlled}`) || '';
    }

    return `${valueControlled}`;
  }, [valueControlled, supportChinese, usingChinese]); // 有没有错误

  const [hasError, setError] = React.useState(false);
  const rules = allowInput ? fontSizeRules : undefined;
  const mode = allowInput ? 'input' : undefined;
  const lastVal = React.useRef(valueControlled);
  /**
   * 自动修复数据
   */
  // eslint-disable-next-line react-hooks/exhaustive-deps

  const autoFixValue = React.useCallback(debounce(fixValue => {
    setValue(fixValue);
    setError(false);
  }, 1000), [setValue, setError]);
  React.useEffect(() => () => autoFixValue.cancel(), [autoFixValue]);
  const handleChange = React.useCallback((e, error) => {
    if (error) {
      setError(true);
      autoFixValue(lastVal.current);
    } else {
      const isNumber = isNumberSize(e);
      localStorage.setItem('we-ui-using-chinese', (!isNumber).toString());
      const newValue = Number(isNumber ? e : ch2num(e));

      if (onChange) {
        onChange(newValue);
      }

      lastVal.current = newValue;
      setValue(newValue);
    }
  }, [onChange, setValue, autoFixValue]);
  const cssStyle = React.useMemo(() => ({
    width: 52,
    ...style
  }), [style]);
  const options = React.useMemo(() => {
    const fontSizesArray = [...(supportChinese ? CHINESE_SIZES : []), ...(sizes || DEFAULT_SIZES)].map(size => `${size}`);
    return fontSizesArray.map(size => /*#__PURE__*/_createElement$F(SelectOption, {
      value: size,
      key: `${size}`,
      testid: size,
      title: titles[size]
    }, /*#__PURE__*/_createElement$F("span", null, size)));
  }, [sizes, titles, supportChinese]);
  return /*#__PURE__*/_createElement$F(SelectStyled, {
    value: value,
    onChange: handleChange,
    zIndex: zIndex,
    style: cssStyle,
    bordered: bordered,
    mode: mode,
    rules: rules,
    className: classnames$1('select-wrap', className),
    disabled: disabled,
    testid: "FontSizeSelect",
    title: title,
    errored: hasError
  }, options);
};

FontSizeSelect.defaultProps = {
  defaultValue: 12,
  titles: {}
};

const Table = /*#__PURE__*/styled__default['default'].table(["border-spacing:2px;border-collapse:separate;cursor:pointer;td{padding:6px;background-color:#F2F2F2;}td.active{background-color:#3296FA;}"]);
const Title = /*#__PURE__*/styled__default['default'].h4(["text-align:center;margin:0;font-weight:normal;font-size:14px;"]);
const TableWrapper = /*#__PURE__*/styled__default['default'].div(["z-index:1000;padding:10px;"]);

const _createElement$G = /*#__PURE__*/React__default['default'].createElement;
class TablePanel extends React.PureComponent {
  constructor(...args) {
    super(...args);
    this.state = {
      currentRow: 0,
      currentCol: 0
    };

    this.onMouseLeave = () => {
      this.setState({
        currentRow: 0,
        currentCol: 0
      });
    };

    this.pick = () => {
      const {
        currentRow,
        currentCol
      } = this.state; // eslint-disable-next-line react/destructuring-assignment

      this.props.onPick(currentRow, currentCol);
    };
  }

  render() {
    const {
      row,
      col
    } = this.props;
    const {
      currentRow,
      currentCol
    } = this.state;

    if (!row || !col) {
      warning__default['default']('Please define the row and col properties.');
      return null;
    }

    const vRows = [];

    for (let r = 0; r < row; r += 1) {
      const vCols = [];

      for (let c = 0; c < col; c += 1) {
        const props = {
          key: `row-${r}::col-${c}`,
          className: r < currentRow && c < currentCol ? 'active' : '',
          onMouseEnter: () => {
            this.setState({
              currentRow: r + 1,
              currentCol: c + 1
            });
          }
        };
        vCols.push( /*#__PURE__*/_createElement$G("td", props));
      }

      vRows.push( /*#__PURE__*/_createElement$G("tr", {
        key: `row-${r}`
      }, vCols));
    }

    return /*#__PURE__*/_createElement$G(TableWrapper, null, !isMobile && /*#__PURE__*/_createElement$G(Title, null, `${currentRow} × ${currentCol}`), /*#__PURE__*/_createElement$G(Table, {
      onMouseLeave: this.onMouseLeave,
      onClick: this.pick,
      "data-testid": "table-TableSet"
    }, /*#__PURE__*/_createElement$G("tbody", null, vRows)));
  }

}
TablePanel.defaultProps = {
  row: 10,
  col: 10
};

const _createElement$H = /*#__PURE__*/React__default['default'].createElement;
class TableSet extends React__default['default'].PureComponent {
  constructor(...args) {
    super(...args);
    this.state = {
      active: false
    };

    this.getTablePanel = () => {
      const {
        row,
        col
      } = this.props;
      return /*#__PURE__*/_createElement$H(TablePanel, {
        row: row,
        col: col,
        onPick: this.handlePick
      });
    };

    this.handlePick = (row, col) => {
      const {
        onChange
      } = this.props;

      if (onChange) {
        onChange(row, col);
      }

      this.setState({
        active: false
      });
    };

    this.handleChangeActive = active => {
      this.setState({
        active
      });
    };
  }

  render() {
    const {
      btnIcon,
      style,
      bordered = false,
      zIndex,
      className,
      disabled,
      title,
      size
    } = this.props;
    const {
      active
    } = this.state;
    return /*#__PURE__*/_createElement$H(Dropdown, {
      visible: active,
      overlay: this.getTablePanel(),
      onVisibleChange: this.handleChangeActive,
      zIndex: zIndex,
      title: title
    }, /*#__PURE__*/_createElement$H(Button, {
      active: active,
      style: style,
      icon: btnIcon,
      bordered: bordered,
      className: className,
      disabled: disabled,
      size: size,
      "data-testid": "button-TableSet"
    }));
  }

}

/**
 * 颜色版的色值
 */
const colorData = [['#C10002', '#FE0300', '#FCC102', '#FEFF00', '#92D04F', '#00B14D', '#04B0F1', '#0071C1', '#00205C', '#6E30A4'], ['#FFFFFF', '#000000', '#E8E6E7', '#44536B', '#4472C6', '#ED7D33', '#A5A5A5', '#FFC000', '#579AD5', '#70AD48'], ['#F3F3F3', '#7F7F7F', '#CFCECF', '#D7DCE5', '#DAE2F6', '#F9E5D7', '#ECECEC', '#FFF3CE', '#DFEBF6', '#E4EDDB'], ['#D8D8D8', '#595959', '#B0ABAC', '#AEB9CC', '#B2C7E6', '#F6CCAC', '#DBDBDB', '#FEE598', '#BDD8EE', '#C5DFB4'], ['#BFBFBF', '#3F3F3F', '#76716F', '#8495B1', '#90A9DC', '#F7B07F', '#CACACA', '#FFD966', '#9EC3E7', '#A9D08D'], ['#A4A5A5', '#262626', '#3A3839', '#333E4E', '#305299', '#C65A14', '#7B7B7B', '#BF900A', '#3076B6', '#558036'], ['#7e7F7F', '#0C0C0C', '#191718', '#222A35', '#1F3762', '#88370A', '#525252', '#7F6100', '#224E7C', '#375621']];

const Divider = /*#__PURE__*/styled.css(["content:'';display:block;position:absolute;background-color:rgba(17,31,44,0.08);height:1px;width:200px;"]);
const groupCommon = /*#__PURE__*/styled.css(["margin:0 ", ";margin-bottom:10px;padding-bottom:10px;position:relative;&:after{", " bottom:0;}"], ({
  theme
}) => theme.ui.marginMedium, Divider);
const ColorBoxItem = /*#__PURE__*/styled__default['default'].span(["position:relative;box-sizing:border-box;width:20px;height:20px;display:inline-block;border-radius:3px 3px;border:1px solid transparent;flex:0 0 auto;cursor:pointer;background-color:#fff;&:hover{padding:2px 2px;border:1px solid #d9d9d9;box-shadow:0 1px 2px rgba(0,0,0,0.12);}"]);
const ColorBlock = withTheme(styled__default['default'].span(["position:relative;box-sizing:border-box;width:100%;height:100%;display:block;border:1px solid transparent;background-color:", ";border-color:", ";svg{position:absolute;top:-1px;left:1px;width:12px;height:12px;}&.isHover{svg{top:-3px;left:-1px;}}.colorBlockText{position:absolute;left:0;right:0;bottom:0;top:0;display:flex;justify-content:center;align-items:center;font-size:12px;}"], p => p.color || '#fff', p => p.border ? p.theme.ui.borderColor : 'transparent'));
const ClearItem = /*#__PURE__*/styled__default['default'](ColorBoxItem)(["&:after{content:'';display:block;position:absolute;top:8px;left:-2px;width:22px;height:0;border-bottom:2px solid #ff5151;transform:rotate(45deg);}&.isHover{&:after{top:8px;left:1px;width:16px;}}"]);
const MainColorGroup = withTheme(styled__default['default'].div(["", ";"], groupCommon));
const LineGroup = withTheme(styled__default['default'].div(["position:relative;display:flex;width:100%;height:auto;"]));
const PaletteWrapper = /*#__PURE__*/styled__default['default'].div(["box-sizing:border-box;margin:12px 12px;border-radius:6px;"]);
const CustomGroup = withTheme(styled__default['default'].div(["height:auto;cursor:pointer;.sketch-picker{*,*::before,*::after{box-sizing:content-box;}input{border-radius:6px;&:focus{outline:none;}}}"]));
const CustomGroupInnerWrap = withTheme(styled__default['default'].div(["display:flex;flex-direction:row;justify-content:space-between;align-items:center;position:relative;border-radius:", ";margin-top:", ";padding:0 ", ";height:36px;&:hover,&.actived{background-color:", ";}"], ({
  theme
}) => theme.ui.radiusLarge, ({
  theme
}) => theme.ui.marginTiny, ({
  theme
}) => theme.ui.paddingMedium, ({
  theme
}) => theme.ui.commonBgHoverColor));
const CustomPicker = /*#__PURE__*/styled__default['default'].div(["position:absolute;top:-233px;right:", ";"], p => p.rightSide ? '-236px' : '256px');
const CustomText = /*#__PURE__*/styled__default['default'].div(["height:24px;line-height:24px;font-size:12px;padding-left:4px;flex:0 0 auto;display:inline-block;"]);
const DefaultGroup = withTheme(styled__default['default'].div(["", ";display:flex;position:relative;height:auto;cursor:pointer;"], groupCommon));
const SplitButtonWrapper = /*#__PURE__*/styled__default['default'].div(["line-height:0;position:relative;"]);
const FillColorArea = /*#__PURE__*/styled__default['default'].div(["height:2px;background-color:", ";"], p => p.color);
const LatestColorWrap = withTheme(styled__default['default'].div(["", ";display:flex;flex-direction:column;"], groupCommon));
const LatestColorText = withTheme(styled__default['default'].div(["padding-bottom:8px;font-size:12px;"]));
const ColorPaletteWrapper = /*#__PURE__*/styled__default['default'].div([""]);
const FullFillColorArea = withTheme(styled__default['default'].div(["width:", "px;height:", "px;margin:", ";background-color:", ";border-radius:2px;border:", ""], ({
  theme: {
    ui
  }
}) => ui.fillColorAreaWidth, ({
  theme: {
    ui
  }
}) => ui.fillColorAreaHeight, ({
  theme: {
    ui
  }
}) => ui.fillColorAreaMargin, p => p.color, ({
  isWhite,
  theme: {
    ui
  }
}) => isWhite ? `1px solid ${ui.colorLine1}` : 'none'));
const FillColorPickerButton = withTheme(styled__default['default'](SplitButton)(["border:1px solid ", ";border-radius:", ";"], ({
  theme: {
    ui
  }
}) => ui.commonLineLightColor, ({
  theme: {
    ui
  }
}) => ui.radius));

/* eslint-disable max-lines-per-function */
const _createElement$I = /*#__PURE__*/React__default['default'].createElement;
// 勾选的填充色缓存
const fillColorCache = {}; // for:性能优化

var _ref$8 = /*#__PURE__*/_createElement$I("path", {
  d: "M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"
});

// 渲染每个色块
const ColorBlockItem = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    colorBlockText
  } = props;
  /**
   * 将颜色值转换成颜色对象
   */

  const toColorObj = (colorStr, oldHue) => {
    const tinyColor = tinycolor__default['default'](colorStr);
    const hsl = tinyColor.toHsl();
    const hsv = tinyColor.toHsv();
    const rgb = tinyColor.toRgb();
    const hex = tinyColor.toHex();

    if (hsl.s === 0) {
      hsl.h = oldHue || 0;
      hsv.h = oldHue || 0;
    }

    const transparent = hex === '000000' && rgb.a === 0;
    return {
      hsl,
      hex: transparent ? 'transparent' : `#${hex}`,
      rgb,
      hsv,
      source: colorStr
    };
  };
  /**
   * 获取对比色，即：色块选中时打勾的颜色，要和色块本身的背景色形成反差
   * @param color 字符串表示的颜色值
   */


  const getContrastingColor = color => {
    if (!color) {
      return '#FFFFFF';
    }

    let result = fillColorCache[color];

    if (result) {
      return result;
    }

    const colorObj = toColorObj(color);

    if (colorObj.hex === 'transparent') {
      result = 'rgba(0,0,0,0.4)';
    } else {
      const yiq = (colorObj.rgb.r * 299 + colorObj.rgb.g * 587 + colorObj.rgb.b * 114) / 1000;
      result = yiq >= 210 ? '#8C8C8C' : '#FFFFFF';
    }

    fillColorCache[color] = result;
    return result;
  };

  const {
    colorValue,
    clearColor,
    index,
    active,
    onColorPick
  } = props;
  const [isHover, setHover] = React__default['default'].useState(false);
  const key = `${index}-${colorValue}`; // 是否为清空色块，加上红色斜杠

  const isClear = typeof clearColor === 'string' ? clearColor.toLocaleLowerCase() === colorValue.toLocaleLowerCase() : false;

  if (isClear) {
    return /*#__PURE__*/_createElement$I(ClearItem, {
      key: key,
      onClick: () => onColorPick(colorValue),
      onMouseEnter: () => setHover(true),
      onMouseLeave: () => setHover(false),
      className: classnames({
        isHover
      })
    }, /*#__PURE__*/_createElement$I(ColorBlock, {
      color: colorValue,
      border: true,
      className: classnames({
        isHover
      })
    }));
  } // 颜色值为FAFAFA或FFFFFF时， 需要设置边框
  // const border = ['#FAFAFA', '#FFFFFF'].includes(colorValue); // Todo：通过计算来设置


  const border = isWhite(colorValue) || isTransparent(colorValue); // 选中的样式

  const checkStyle = {
    fill: active ? getContrastingColor(colorValue) : '#fff',
    display: active ? 'block' : 'none'
  };
  return /*#__PURE__*/_createElement$I(ColorBoxItem, {
    key: key,
    onClick: () => onColorPick(colorValue),
    onMouseEnter: () => setHover(true),
    onMouseLeave: () => setHover(false)
  }, /*#__PURE__*/_createElement$I(ColorBlock, {
    color: colorValue,
    border: border || isClear,
    className: classnames({
      isHover
    })
  }, /*#__PURE__*/_createElement$I("svg", {
    style: checkStyle,
    viewBox: "0 0 18 18"
  }, _ref$8), colorBlockText && !active && isHover && /*#__PURE__*/_createElement$I("span", {
    className: "colorBlockText",
    style: {
      color: getContrastingColor(colorValue)
    }
  }, colorBlockText)));
});

const simpleCheckForValidColor = data => {
  const keysToCheck = ['r', 'g', 'b', 'a', 'h', 's', 'l', 'v'];
  let checked = 0;
  let passed = 0;
  keysToCheck.forEach(letter => {
    if (data[letter]) {
      checked += 1;

      if (!isNaN(data[letter])) {
        passed += 1;
      }

      if (letter === 's' || letter === 'l') {
        const percentPatt = /^\d+%$/;

        if (percentPatt.test(data[letter])) {
          passed += 1;
        }
      }
    }
  });
  return checked === passed ? data : false;
};
const toState = (data, oldHue) => {
  const color = data.hex ? tinycolor__default['default'](data.hex) : tinycolor__default['default'](data);
  const hsl = color.toHsl();
  const hsv = color.toHsv();
  const rgb = color.toRgb();
  const hex = color.toHex();

  if (hsl.s === 0) {
    hsl.h = oldHue || 0;
    hsv.h = oldHue || 0;
  }

  const transparent = hex === '000000' && rgb.a === 0;
  return {
    hsl,
    hex: transparent ? 'transparent' : `#${hex}`,
    rgb,
    hsv,
    oldHue: data.h || oldHue || hsl.h,
    source: data.source
  };
};
const isValidHex = hex => {
  // disable hex4 and hex8
  const lh = String(hex).charAt(0) === '#' ? 1 : 0;
  return hex.length !== 4 + lh && hex.length < 7 + lh && tinycolor__default['default'](hex).isValid();
};
 // export default exports;

const _createElement$J = /*#__PURE__*/React__default['default'].createElement;
const ColorWrap = Picker => {
  class ColorPicker extends (React.PureComponent || React.Component) {
    constructor(props) {
      super();

      this.handleChange = (data, event) => {
        const isValidColor = simpleCheckForValidColor(data);

        if (isValidColor) {
          const colors = toState(data, data.h || this.state.oldHue);
          this.setState(colors);
          this.props.onChange && this.props.onChange(colors, event); // 不是来自输入框
          // 如果来自输入框，需要是 blur 触发

          if (event._input && event._blur || !event._input) {
            this.props.onChangeComplete && this.debounce(this.props.onChangeComplete, colors, event);
          }
        }
      };

      this.handleSwatchHover = (data, event) => {
        const isValidColor = simpleCheckForValidColor(data);

        if (isValidColor) {
          const colors = toState(data, data.h || this.state.oldHue);
          this.props.onSwatchHover && this.props.onSwatchHover(colors, event);
        }
      };

      this.state = { ...toState(props.color, 0)
      };
      this.debounce = debounce((fn, data, event) => {
        fn(data, event);
      }, 100);
    }

    static getDerivedStateFromProps(nextProps, state) {
      return { ...toState(nextProps.color, state.oldHue)
      };
    }

    render() {
      const optionalEvents = {};

      if (this.props.onSwatchHover) {
        optionalEvents.onSwatchHover = this.handleSwatchHover;
      }

      return /*#__PURE__*/_createElement$J(Picker, _extends__default['default']({}, this.props, this.state, {
        onChange: this.handleChange
      }, optionalEvents));
    }

  }

  ColorPicker.propTypes = { ...Picker.propTypes
  };
  ColorPicker.defaultProps = { ...Picker.defaultProps,
    color: {
      h: 250,
      s: 0.50,
      l: 0.20,
      a: 1
    }
  };
  return ColorPicker;
};

const calculateChange = (e, hsl, container) => {
  const {
    width: containerWidth,
    height: containerHeight
  } = container.getBoundingClientRect();
  const x = typeof e.pageX === 'number' ? e.pageX : e.touches[0].pageX;
  const y = typeof e.pageY === 'number' ? e.pageY : e.touches[0].pageY;
  let left = x - (container.getBoundingClientRect().left + window.pageXOffset);
  let top = y - (container.getBoundingClientRect().top + window.pageYOffset);

  if (left < 0) {
    left = 0;
  } else if (left > containerWidth) {
    left = containerWidth;
  }

  if (top < 0) {
    top = 0;
  } else if (top > containerHeight) {
    top = containerHeight;
  }

  const saturation = left / containerWidth;
  const bright = 1 - top / containerHeight;
  return {
    h: hsl.h,
    s: saturation,
    v: bright,
    a: hsl.a,
    source: 'hsv'
  };
};

const _createElement$K = /*#__PURE__*/React__default['default'].createElement;

var _ref$9 = /*#__PURE__*/_createElement$K("style", null, `
          .saturation-white {
            background: -webkit-linear-gradient(to right, #fff, rgba(255,255,255,0));
            background: linear-gradient(to right, #fff, rgba(255,255,255,0));
          }
          .saturation-black {
            background: -webkit-linear-gradient(to top, #000, rgba(0,0,0,0));
            background: linear-gradient(to top, #000, rgba(0,0,0,0));
          }
        `);

class Saturation extends (React.PureComponent || React.Component) {
  constructor(props) {
    super(props); // todo
    // this.throttle = throttle((fn, data, e) => {
    //   fn(data, e);
    // }, 50);

    this.handleChange = e => {
      typeof this.props.onChange === 'function' && this.throttle(this.props.onChange, calculateChange(e, this.props.hsl, this.container), e);
    };

    this.handleMouseDown = e => {
      this.handleChange(e);
      window.addEventListener('mousemove', this.handleChange);
      window.addEventListener('mouseup', this.handleMouseUp);
    };

    this.handleMouseUp = () => {
      this.unbindEventListeners();
    };

    this.throttle = debounce((fn, data, e) => {
      fn(data, e);
    }, 5);
  }

  componentWillUnmount() {
    // this.throttle.cancel();
    this.unbindEventListeners();
  }

  unbindEventListeners() {
    window.removeEventListener('mousemove', this.handleChange);
    window.removeEventListener('mouseup', this.handleMouseUp);
  }

  render() {
    const {
      color,
      white,
      black,
      pointer,
      circle
    } = this.props.style || {};
    const styles = reactCSS__default['default']({
      default: {
        color: {
          absolute: '0px 0px 0px 0px',
          background: `hsl(${this.props.hsl.h},100%, 50%)`,
          borderRadius: this.props.radius
        },
        white: {
          absolute: '0px 0px 0px 0px',
          borderRadius: this.props.radius
        },
        black: {
          absolute: '0px 0px 0px 0px',
          boxShadow: this.props.shadow,
          borderRadius: this.props.radius
        },
        pointer: {
          position: 'absolute',
          top: `${-(this.props.hsv.v * 100) + 100}%`,
          left: `${this.props.hsv.s * 100}%`,
          cursor: 'default'
        },
        circle: {
          width: '4px',
          height: '4px',
          boxShadow: `0 0 0 1.5px #fff, inset 0 0 1px 1px rgba(0,0,0,.3),
            0 0 1px 2px rgba(0,0,0,.4)`,
          borderRadius: '50%',
          cursor: 'hand',
          transform: 'translate(-2px, -2px)'
        }
      },
      custom: {
        color,
        white,
        black,
        pointer,
        circle
      }
    }, {
      custom: !!this.props.style
    });
    return /*#__PURE__*/_createElement$K("div", {
      style: styles.color,
      ref: container => {
        this.container = container;
      },
      onMouseDown: this.handleMouseDown,
      onTouchMove: this.handleChange,
      onTouchStart: this.handleChange
    }, _ref$9, /*#__PURE__*/_createElement$K("div", {
      style: styles.white,
      className: "saturation-white"
    }, /*#__PURE__*/_createElement$K("div", {
      style: styles.black,
      className: "saturation-black"
    }), /*#__PURE__*/_createElement$K("div", {
      style: styles.pointer
    }, this.props.pointer ? /*#__PURE__*/_createElement$K(this.props.pointer, this.props) : /*#__PURE__*/_createElement$K("div", {
      style: styles.circle
    }))));
  }

}

const calculateChange$1 = (e, direction, hsl, container) => {
  const containerWidth = container.clientWidth;
  const containerHeight = container.clientHeight;
  const x = typeof e.pageX === 'number' ? e.pageX : e.touches[0].pageX;
  const y = typeof e.pageY === 'number' ? e.pageY : e.touches[0].pageY;
  const left = x - (container.getBoundingClientRect().left + window.pageXOffset);
  const top = y - (container.getBoundingClientRect().top + window.pageYOffset);

  if (direction === 'vertical') {
    let h;

    if (top < 0) {
      h = 359;
    } else if (top > containerHeight) {
      h = 0;
    } else {
      const percent = -(top * 100 / containerHeight) + 100;
      h = 360 * percent / 100;
    }

    if (hsl.h !== h) {
      return {
        h,
        s: hsl.s,
        l: hsl.l,
        a: hsl.a,
        source: 'hsl'
      };
    }
  } else {
    let h;

    if (left < 0) {
      h = 0;
    } else if (left > containerWidth) {
      h = 359;
    } else {
      const percent = left * 100 / containerWidth;
      h = 360 * percent / 100;
    }

    if (hsl.h !== h) {
      return {
        h,
        s: hsl.s,
        l: hsl.l,
        a: hsl.a,
        source: 'hsl'
      };
    }
  }

  return null;
};

const _createElement$L = /*#__PURE__*/React__default['default'].createElement;

var _ref$a = /*#__PURE__*/_createElement$L("style", null, `
            .hue-horizontal {
              background: linear-gradient(to right, #f00 0%, #ff0 17%, #0f0
                33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);
              background: -webkit-linear-gradient(to right, #f00 0%, #ff0
                17%, #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);
            }

            .hue-vertical {
              background: linear-gradient(to top, #f00 0%, #ff0 17%, #0f0 33%,
                #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);
              background: -webkit-linear-gradient(to top, #f00 0%, #ff0 17%,
                #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);
            }
          `);

class Hue extends (React.PureComponent || React.Component) {
  constructor(...args) {
    super(...args);

    this.handleChange = e => {
      const change = calculateChange$1(e, this.props.direction, this.props.hsl, this.container);
      change && typeof this.props.onChange === 'function' && this.props.onChange(change, e);
    };

    this.handleMouseDown = e => {
      this.handleChange(e);
      window.addEventListener('mousemove', this.handleChange);
      window.addEventListener('mouseup', this.handleMouseUp);
    };

    this.handleMouseUp = () => {
      this.unbindEventListeners();
    };
  }

  componentWillUnmount() {
    this.unbindEventListeners();
  }

  unbindEventListeners() {
    window.removeEventListener('mousemove', this.handleChange);
    window.removeEventListener('mouseup', this.handleMouseUp);
  }

  render() {
    const {
      direction = 'horizontal'
    } = this.props;
    const styles = reactCSS__default['default']({
      default: {
        hue: {
          absolute: '0px 0px 0px 0px',
          borderRadius: this.props.radius,
          boxShadow: this.props.shadow
        },
        container: {
          padding: '0 2px',
          position: 'relative',
          height: '100%',
          borderRadius: this.props.radius
        },
        pointer: {
          position: 'absolute',
          left: `${this.props.hsl.h * 100 / 360}%`
        },
        slider: {
          marginTop: '1px',
          width: '4px',
          borderRadius: '1px',
          height: '8px',
          boxShadow: '0 0 2px rgba(0, 0, 0, .6)',
          background: '#fff',
          transform: 'translateX(-2px)'
        }
      },
      vertical: {
        pointer: {
          left: '0px',
          top: `${-(this.props.hsl.h * 100 / 360) + 100}%`
        }
      }
    }, {
      vertical: direction === 'vertical'
    });
    return /*#__PURE__*/_createElement$L("div", {
      style: styles.hue
    }, /*#__PURE__*/_createElement$L("div", {
      className: `hue-${direction}`,
      style: styles.container,
      ref: container => {
        this.container = container;
      },
      onMouseDown: this.handleMouseDown,
      onTouchMove: this.handleChange,
      onTouchStart: this.handleChange
    }, _ref$a, /*#__PURE__*/_createElement$L("div", {
      style: styles.pointer
    }, this.props.pointer ? /*#__PURE__*/_createElement$L(this.props.pointer, this.props) : /*#__PURE__*/_createElement$L("div", {
      style: styles.slider
    }))));
  }

}

const calculateChange$2 = (e, hsl, direction, initialA, container) => {
  const containerWidth = container.clientWidth;
  const containerHeight = container.clientHeight;
  const x = typeof e.pageX === 'number' ? e.pageX : e.touches[0].pageX;
  const y = typeof e.pageY === 'number' ? e.pageY : e.touches[0].pageY;
  const left = x - (container.getBoundingClientRect().left + window.pageXOffset);
  const top = y - (container.getBoundingClientRect().top + window.pageYOffset);

  if (direction === 'vertical') {
    let a;

    if (top < 0) {
      a = 0;
    } else if (top > containerHeight) {
      a = 1;
    } else {
      a = Math.round(top * 100 / containerHeight) / 100;
    }

    if (hsl.a !== a) {
      return {
        h: hsl.h,
        s: hsl.s,
        l: hsl.l,
        a,
        source: 'rgb'
      };
    }
  } else {
    let a;

    if (left < 0) {
      a = 0;
    } else if (left > containerWidth) {
      a = 1;
    } else {
      a = Math.round(left * 100 / containerWidth) / 100;
    }

    if (initialA !== a) {
      return {
        h: hsl.h,
        s: hsl.s,
        l: hsl.l,
        a,
        source: 'rgb'
      };
    }
  }

  return null;
};

const checkboardCache = {};
const render = (c1, c2, size, serverCanvas) => {
  if (typeof document === 'undefined' && !serverCanvas) {
    return null;
  } // eslint-disable-next-line new-cap


  const canvas = serverCanvas ? new serverCanvas() : document.createElement('canvas');
  canvas.width = size * 2;
  canvas.height = size * 2;
  const ctx = canvas.getContext('2d');

  if (!ctx) {
    return null;
  } // If no context can be found, return early.


  ctx.fillStyle = c1;
  ctx.fillRect(0, 0, canvas.width, canvas.height);
  ctx.fillStyle = c2;
  ctx.fillRect(0, 0, size, size);
  ctx.translate(size, size);
  ctx.fillRect(0, 0, size, size);
  return canvas.toDataURL();
};
const get = (c1, c2, size, serverCanvas) => {
  const key = `${c1}-${c2}-${size}${serverCanvas ? '-server' : ''}`;

  if (checkboardCache[key]) {
    return checkboardCache[key];
  }

  const checkboard = render(c1, c2, size, serverCanvas);
  checkboardCache[key] = checkboard;
  return checkboard;
};

const _createElement$M = /*#__PURE__*/React__default['default'].createElement;
const Checkboard = ({
  white,
  grey,
  size,
  renderers,
  borderRadius,
  boxShadow,
  children
}) => {
  const styles = reactCSS__default['default']({
    default: {
      grid: {
        borderRadius,
        boxShadow,
        absolute: '0px 0px 0px 0px',
        background: `url(${get(white, grey, size, renderers.canvas)}) center left`
      }
    }
  });
  return /*#__PURE__*/React.isValidElement(children) ? /*#__PURE__*/React__default['default'].cloneElement(children, { ...children.props,
    style: { ...children.props.style,
      ...styles.grid
    }
  }) : /*#__PURE__*/_createElement$M("div", {
    style: styles.grid
  });
};
Checkboard.defaultProps = {
  size: 8,
  white: 'transparent',
  grey: 'rgba(0,0,0,.08)',
  renderers: {}
};

const _createElement$N = /*#__PURE__*/React__default['default'].createElement;
class Alpha extends (React.PureComponent || React.Component) {
  constructor(...args) {
    super(...args);

    this.handleChange = e => {
      const change = calculateChange$2(e, this.props.hsl, this.props.direction, this.props.a, this.container);
      change && typeof this.props.onChange === 'function' && this.props.onChange(change, e);
    };

    this.handleMouseDown = e => {
      this.handleChange(e);
      window.addEventListener('mousemove', this.handleChange);
      window.addEventListener('mouseup', this.handleMouseUp);
    };

    this.handleMouseUp = () => {
      this.unbindEventListeners();
    };

    this.unbindEventListeners = () => {
      window.removeEventListener('mousemove', this.handleChange);
      window.removeEventListener('mouseup', this.handleMouseUp);
    };
  }

  componentWillUnmount() {
    this.unbindEventListeners();
  }

  render() {
    const {
      rgb
    } = this.props;
    const styles = reactCSS__default['default']({
      default: {
        alpha: {
          absolute: '0px 0px 0px 0px',
          borderRadius: this.props.radius
        },
        checkboard: {
          absolute: '0px 0px 0px 0px',
          overflow: 'hidden',
          borderRadius: this.props.radius
        },
        gradient: {
          absolute: '0px 0px 0px 0px',
          background: `linear-gradient(to right, rgba(${rgb.r},${rgb.g},${rgb.b}, 0) 0%,
           rgba(${rgb.r},${rgb.g},${rgb.b}, 1) 100%)`,
          boxShadow: this.props.shadow,
          borderRadius: this.props.radius
        },
        container: {
          position: 'relative',
          height: '100%',
          margin: '0 3px'
        },
        pointer: {
          position: 'absolute',
          left: `${rgb.a * 100}%`
        },
        slider: {
          width: '4px',
          borderRadius: '1px',
          height: '8px',
          boxShadow: '0 0 2px rgba(0, 0, 0, .6)',
          background: '#fff',
          marginTop: '1px',
          transform: 'translateX(-2px)'
        }
      },
      vertical: {
        gradient: {
          background: `linear-gradient(to bottom, rgba(${rgb.r},${rgb.g},${rgb.b}, 0) 0%,
           rgba(${rgb.r},${rgb.g},${rgb.b}, 1) 100%)`
        },
        pointer: {
          left: 0,
          top: `${rgb.a * 100}%`
        }
      },
      overwrite: { ...this.props.style
      }
    }, {
      vertical: this.props.direction === 'vertical',
      overwrite: true
    });
    return /*#__PURE__*/_createElement$N("div", {
      style: styles.alpha
    }, /*#__PURE__*/_createElement$N("div", {
      style: styles.checkboard
    }, /*#__PURE__*/_createElement$N(Checkboard, {
      renderers: this.props.renderers
    })), /*#__PURE__*/_createElement$N("div", {
      style: styles.gradient
    }), /*#__PURE__*/_createElement$N("div", {
      style: styles.container,
      ref: container => {
        this.container = container;
      },
      onMouseDown: this.handleMouseDown,
      onTouchMove: this.handleChange,
      onTouchStart: this.handleChange
    }, /*#__PURE__*/_createElement$N("div", {
      style: styles.pointer
    }, this.props.pointer ? /*#__PURE__*/_createElement$N(this.props.pointer, this.props) : /*#__PURE__*/_createElement$N("div", {
      style: styles.slider
    }))));
  }

}

const _createElement$O = /*#__PURE__*/React__default['default'].createElement;
const DEFAULT_ARROW_OFFSET = 1;
const UP_KEY_CODE = 38;
const DOWN_KEY_CODE = 40;
const ENTER_KEY_CODE = 13;
const VALID_KEY_CODES = [UP_KEY_CODE, DOWN_KEY_CODE];

const isValidKeyCode = keyCode => VALID_KEY_CODES.indexOf(keyCode) > -1;

const getNumberValue = value => Number(String(value).replace(/%/g, ''));

class EditableInput extends (React.PureComponent || React.Component) {
  constructor(props) {
    super();

    this.handleBlur = e => {
      // 给 e 加一个 _blur 属性
      // 用于 onChangeComplete
      e._blur = true;
      this.setUpdatedValue(this.state.value, e);

      if (this.state.blurValue) {
        this.setState({
          value: this.state.blurValue,
          blurValue: null
        });
      }
    };

    this.handleChange = e => {
      this.setUpdatedValue(e.target.value, e);
    };

    this.handleKeyDown = e => {
      // In case `e.target.value` is a percentage remove the `%` character
      // and update accordingly with a percentage
      // https://github.com/casesandberg/react-color/issues/383
      const value = getNumberValue(e.target.value);

      if (!isNaN(value) && isValidKeyCode(e.keyCode)) {
        const offset = this.getArrowOffset();
        const updatedValue = e.keyCode === UP_KEY_CODE ? value + offset : value - offset;
        this.setUpdatedValue(updatedValue, e);
      } // Enter to blur


      if (e.keyCode === ENTER_KEY_CODE) {
        e.target.blur();
      }
    };

    this.handleDrag = e => {
      if (this.props.dragLabel) {
        const newValue = Math.round(this.props.value + e.movementX);

        if (newValue >= 0 && newValue <= this.props.dragMax) {
          this.props.onChange && this.props.onChange(this.getValueObjectWithLabel(newValue), e);
        }
      }
    };

    this.handleMouseDown = e => {
      if (this.props.dragLabel) {
        e.preventDefault();
        this.handleDrag(e);
        window.addEventListener('mousemove', this.handleDrag);
        window.addEventListener('mouseup', this.handleMouseUp);
      }
    };

    this.handleMouseUp = () => {
      this.unbindEventListeners();
    };

    this.unbindEventListeners = () => {
      window.removeEventListener('mousemove', this.handleDrag);
      window.removeEventListener('mouseup', this.handleMouseUp);
    };

    this.state = {
      value: String(props.value).toUpperCase(),
      blurValue: String(props.value).toUpperCase()
    };
  }

  componentDidUpdate(prevProps, prevState) {
    if (this.props.value !== this.state.value && (prevProps.value !== this.props.value || prevState.value !== this.state.value)) {
      if (this.input === document.activeElement) {
        this.setState({
          blurValue: String(this.props.value).toUpperCase()
        });
      } else {
        this.setState({
          value: String(this.props.value).toUpperCase(),
          blurValue: !this.state.blurValue && String(this.props.value).toUpperCase()
        });
      }
    }
  }

  componentWillUnmount() {
    this.unbindEventListeners();
  }

  getValueObjectWithLabel(value) {
    return {
      [this.props.label]: value
    };
  }

  getArrowOffset() {
    return this.props.arrowOffset || DEFAULT_ARROW_OFFSET;
  }

  setUpdatedValue(value, e) {
    const onChangeValue = this.props.label ? this.getValueObjectWithLabel(value) : value; // 给 e 加一个 _input 属性
    // 表明这次的 onChange 由输入框触发

    e._input = true;
    this.props.onChange && this.props.onChange(onChangeValue, e);
    this.setState({
      value
    });
  }

  render() {
    const styles = reactCSS__default['default']({
      default: {
        wrap: {
          position: 'relative'
        }
      },
      'user-override': {
        wrap: this.props.style && this.props.style.wrap ? this.props.style.wrap : {},
        input: this.props.style && this.props.style.input ? this.props.style.input : {},
        label: this.props.style && this.props.style.label ? this.props.style.label : {}
      },
      'dragLabel-true': {
        label: {
          cursor: 'ew-resize'
        }
      }
    }, {
      'user-override': true
    }, this.props);
    return /*#__PURE__*/_createElement$O("div", {
      style: styles.wrap
    }, /*#__PURE__*/_createElement$O("input", {
      style: styles.input,
      ref: input => {
        this.input = input;
      },
      value: this.state.value,
      onKeyDown: this.handleKeyDown,
      onChange: this.handleChange,
      onBlur: this.handleBlur,
      placeholder: this.props.placeholder,
      spellCheck: "false"
    }), this.props.label && !this.props.hideLabel ? /*#__PURE__*/_createElement$O("span", {
      style: styles.label,
      onMouseDown: this.handleMouseDown
    }, this.props.label) : null);
  }

}

const _createElement$P = /*#__PURE__*/React__default['default'].createElement;
const handleFocus = (Component, Span = 'span') => {
  var _temp;

  return _temp = class Focus extends React__default['default'].Component {
    constructor(...args) {
      super(...args);
      this.state = {
        focus: false
      };

      this.handleFocus = () => this.setState({
        focus: true
      });

      this.handleBlur = () => this.setState({
        focus: false
      });
    }

    render() {
      return /*#__PURE__*/_createElement$P(Span, {
        onFocus: this.handleFocus,
        onBlur: this.handleBlur
      }, /*#__PURE__*/_createElement$P(Component, _extends__default['default']({}, this.props, this.state)));
    }

  }, _temp;
};

const _createElement$Q = /*#__PURE__*/React__default['default'].createElement;
const ENTER = 13;
const Swatch = ({
  color,
  style,
  onClick = () => {},
  onHover,
  title = color,
  children,
  focus,
  focusStyle = {}
}) => {
  const transparent = color === 'transparent';
  const styles = reactCSS__default['default']({
    default: {
      swatch: {
        background: color,
        height: '100%',
        width: '100%',
        cursor: 'pointer',
        position: 'relative',
        outline: 'none',
        ...style,
        ...(focus ? focusStyle : {})
      }
    }
  });

  const handleClick = e => onClick(color, e);

  const handleKeyDown = e => e.keyCode === ENTER && onClick(color, e);

  const handleHover = e => onHover(color, e);

  const optionalEvents = {};

  if (onHover) {
    optionalEvents.onMouseOver = handleHover;
  }

  return /*#__PURE__*/_createElement$Q("div", _extends__default['default']({
    style: styles.swatch,
    onClick: handleClick,
    title: title,
    tabIndex: 0,
    onKeyDown: handleKeyDown
  }, optionalEvents), children, transparent && /*#__PURE__*/_createElement$Q(Checkboard, {
    borderRadius: styles.swatch.borderRadius,
    boxShadow: "inset 0 0 0 1px rgba(0,0,0,0.1)"
  }));
};
var Swatch$1 = handleFocus(Swatch);

/* eslint-disable no-param-reassign */
const _createElement$R = /*#__PURE__*/React__default['default'].createElement;
const SketchFields = ({
  onChange,
  rgb,
  hsl,
  hex,
  disableAlpha
}) => {
  const styles = reactCSS__default['default']({
    default: {
      fields: {
        display: 'flex',
        paddingTop: '4px'
      },
      single: {
        flex: '1',
        paddingLeft: '6px'
      },
      alpha: {
        flex: '1',
        paddingLeft: '6px'
      },
      double: {
        flex: '2'
      },
      input: {
        width: '80%',
        padding: '4px 10% 3px',
        border: 'none',
        boxShadow: 'inset 0 0 0 1px #ccc',
        fontSize: '11px'
      },
      label: {
        display: 'block',
        textAlign: 'center',
        fontSize: '11px',
        color: '#222',
        paddingTop: '3px',
        paddingBottom: '4px',
        textTransform: 'capitalize'
      }
    },
    disableAlpha: {
      alpha: {
        display: 'none'
      }
    }
  }, {
    disableAlpha
  });

  const handleChange = (data, e) => {
    if (data.hex) {
      isValidHex(data.hex) && onChange({
        hex: data.hex,
        source: 'hex'
      }, e);
    } else if (data.r || data.g || data.b) {
      onChange({
        r: data.r || rgb.r,
        g: data.g || rgb.g,
        b: data.b || rgb.b,
        a: rgb.a,
        source: 'rgb'
      }, e);
    } else if (data.a) {
      if (data.a < 0) {
        data.a = 0;
      } else if (data.a > 100) {
        data.a = 100;
      }

      data.a /= 100;
      onChange({
        h: hsl.h,
        s: hsl.s,
        l: hsl.l,
        a: data.a,
        source: 'rgb'
      }, e);
    }
  };

  return /*#__PURE__*/_createElement$R("div", {
    style: styles.fields,
    className: "flexbox-fix"
  }, /*#__PURE__*/_createElement$R("div", {
    style: styles.double
  }, /*#__PURE__*/_createElement$R(EditableInput, {
    style: {
      input: styles.input,
      label: styles.label
    },
    label: "hex",
    value: hex.replace('#', ''),
    onChange: handleChange
  })), /*#__PURE__*/_createElement$R("div", {
    style: styles.single
  }, /*#__PURE__*/_createElement$R(EditableInput, {
    style: {
      input: styles.input,
      label: styles.label
    },
    label: "r",
    value: rgb.r,
    onChange: handleChange,
    dragLabel: "true",
    dragMax: "255"
  })), /*#__PURE__*/_createElement$R("div", {
    style: styles.single
  }, /*#__PURE__*/_createElement$R(EditableInput, {
    style: {
      input: styles.input,
      label: styles.label
    },
    label: "g",
    value: rgb.g,
    onChange: handleChange,
    dragLabel: "true",
    dragMax: "255"
  })), /*#__PURE__*/_createElement$R("div", {
    style: styles.single
  }, /*#__PURE__*/_createElement$R(EditableInput, {
    style: {
      input: styles.input,
      label: styles.label
    },
    label: "b",
    value: rgb.b,
    onChange: handleChange,
    dragLabel: "true",
    dragMax: "255"
  })), /*#__PURE__*/_createElement$R("div", {
    style: styles.alpha
  }, /*#__PURE__*/_createElement$R(EditableInput, {
    style: {
      input: styles.input,
      label: styles.label
    },
    label: "a",
    value: Math.round(rgb.a * 100),
    onChange: handleChange,
    dragLabel: "true",
    dragMax: "100"
  })));
};

const _createElement$S = /*#__PURE__*/React__default['default'].createElement;
const SketchPresetColors = ({
  colors,
  onClick = () => {},
  onSwatchHover
}) => {
  const styles = reactCSS__default['default']({
    default: {
      colors: {
        margin: '0 -10px',
        padding: '10px 0 0 10px',
        borderTop: '1px solid #eee',
        display: 'flex',
        flexWrap: 'wrap',
        position: 'relative'
      },
      swatchWrap: {
        width: '16px',
        height: '16px',
        margin: '0 10px 10px 0'
      },
      swatch: {
        borderRadius: '3px',
        boxShadow: 'inset 0 0 0 1px rgba(0,0,0,.15)'
      }
    },
    'no-presets': {
      colors: {
        display: 'none'
      }
    }
  }, {
    'no-presets': !colors || !colors.length
  });

  const handleClick = (hex, e) => {
    onClick({
      hex,
      source: 'hex'
    }, e);
  };

  return /*#__PURE__*/_createElement$S("div", {
    style: styles.colors,
    className: "flexbox-fix"
  }, colors.map(colorObjOrString => {
    const c = typeof colorObjOrString === 'string' ? {
      color: colorObjOrString
    } : colorObjOrString;
    const key = `${c.color}${c.title || ''}`;
    return /*#__PURE__*/_createElement$S("div", {
      key: key,
      style: styles.swatchWrap
    }, /*#__PURE__*/_createElement$S(Swatch$1, _extends__default['default']({}, c, {
      style: styles.swatch,
      onClick: handleClick,
      onHover: onSwatchHover,
      focusStyle: {
        boxShadow: `inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px ${c.color}`
      }
    })));
  }));
};
SketchPresetColors.propTypes = {
  colors: PropTypes__default['default'].arrayOf(PropTypes__default['default'].oneOfType([PropTypes__default['default'].string, PropTypes__default['default'].shape({
    color: PropTypes__default['default'].string,
    title: PropTypes__default['default'].string
  })])).isRequired
};

/* eslint-disable max-lines-per-function */
// import PropTypes from 'prop-types';
// import merge from 'lodash/merge';

const _createElement$T = /*#__PURE__*/React__default['default'].createElement;

var _ref$b = /*#__PURE__*/_createElement$T(Checkboard, null);

const Sketch = ({
  width,
  rgb,
  hex,
  hsv,
  hsl,
  onChange,
  onSwatchHover,
  disableAlpha,
  presetColors,
  renderers,
  styles: passedStyles = {},
  className = ''
}) => {
  const defaultStyles = {
    default: {
      picker: {
        width,
        padding: '10px 10px 0',
        boxSizing: 'initial',
        background: '#fff',
        borderRadius: '8px',
        boxShadow: '0px 10px 20px rgba(0, 0, 0, 0.2)',
        border: '1px solid rgba(17, 31, 44, 0.08)'
      },
      saturation: {
        width: '100%',
        paddingBottom: '75%',
        position: 'relative',
        overflow: 'hidden'
      },
      Saturation: {
        radius: '3px',
        shadow: 'inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)'
      },
      controls: {
        display: 'flex'
      },
      sliders: {
        padding: '4px 0',
        flex: '1'
      },
      color: {
        width: '24px',
        height: '24px',
        position: 'relative',
        marginTop: '4px',
        marginLeft: '4px',
        borderRadius: '3px'
      },
      activeColor: {
        absolute: '0px 0px 0px 0px',
        borderRadius: '2px',
        background: `rgba(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`,
        boxShadow: 'inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)'
      },
      hue: {
        position: 'relative',
        height: '10px',
        overflow: 'hidden'
      },
      Hue: {
        radius: '2px',
        shadow: 'inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)'
      },
      alpha: {
        position: 'relative',
        height: '10px',
        marginTop: '4px',
        overflow: 'hidden'
      },
      Alpha: {
        radius: '2px',
        shadow: 'inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)'
      },
      ...passedStyles
    },
    disableAlpha: {
      color: {
        height: '10px'
      },
      hue: {
        height: '10px'
      },
      alpha: {
        display: 'none'
      }
    }
  };
  const mergedStyles = passedStyles ? Object.assign({}, defaultStyles, passedStyles) : defaultStyles;
  const styles = reactCSS__default['default'](mergedStyles, {
    disableAlpha
  });
  return /*#__PURE__*/_createElement$T("div", {
    style: styles.picker,
    className: `sketch-picker ${className}`
  }, /*#__PURE__*/_createElement$T("div", {
    style: styles.saturation
  }, /*#__PURE__*/_createElement$T(Saturation, {
    style: styles.Saturation,
    hsl: hsl,
    hsv: hsv,
    onChange: onChange
  })), /*#__PURE__*/_createElement$T("div", {
    style: styles.controls,
    className: "flexbox-fix"
  }, /*#__PURE__*/_createElement$T("div", {
    style: styles.sliders
  }, /*#__PURE__*/_createElement$T("div", {
    style: styles.hue
  }, /*#__PURE__*/_createElement$T(Hue, {
    style: styles.Hue,
    hsl: hsl,
    onChange: onChange
  })), /*#__PURE__*/_createElement$T("div", {
    style: styles.alpha
  }, /*#__PURE__*/_createElement$T(Alpha, {
    style: styles.Alpha,
    rgb: rgb,
    hsl: hsl,
    renderers: renderers,
    onChange: onChange
  }))), /*#__PURE__*/_createElement$T("div", {
    style: styles.color
  }, _ref$b, /*#__PURE__*/_createElement$T("div", {
    style: styles.activeColor
  }))), /*#__PURE__*/_createElement$T(SketchFields, {
    rgb: rgb,
    hsl: hsl,
    hex: hex,
    onChange: onChange,
    disableAlpha: disableAlpha
  }), /*#__PURE__*/_createElement$T(SketchPresetColors, {
    colors: presetColors,
    onClick: onChange,
    onSwatchHover: onSwatchHover
  }));
}; // todo
// Sketch.propTypes = {
//   disableAlpha: PropTypes.bool,
//   width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
//   styles: PropTypes.object,
// };

Sketch.defaultProps = {
  disableAlpha: false,
  width: 200,
  styles: {},
  presetColors: ['#D0021B', '#F5A623', '#F8E71C', '#8B572A', '#7ED321', '#417505', '#BD10E0', '#9013FE', '#4A90E2', '#50E3C2', '#B8E986', '#000000', '#4A4A4A', '#9B9B9B', '#FFFFFF']
};
var SketchPicker = ColorWrap(Sketch);

const RECENT_COLOR_KEY = 'alidocs:we-ui:recent-colors';
const colorUtil = {
  getRecentColorsFromLocalStorage() {
    try {
      const colorsString = window.localStorage.getItem(RECENT_COLOR_KEY) || '[]';
      return JSON.parse(colorsString);
    } catch (e) {
      return [];
    }
  },

  saveRecentColorsToLocalStorage(colors) {
    try {
      const colorsString = JSON.stringify(colors);
      window.localStorage.setItem(RECENT_COLOR_KEY, colorsString);
    } catch (e) {// do nothing
    }
  }

};

const _createElement$U = /*#__PURE__*/React__default['default'].createElement;

const decimalToHex = alpha => alpha === 0 ? '00' : Math.round(255 * alpha).toString(16).padStart(2, "0");

// 第一行常用颜色突出显示
const firstLineStyle = {
  paddingBottom: '10px'
};
const CUSTOMER_CONFIG_KEY = 'color-picker-custom-config';
const MAX_LATEST_COLOR = 10;

const ClickOuterRef = props => {
  const {
    handler,
    on,
    children
  } = props;
  const ref = useClickOuterRef(handler, on);
  return children(ref);
};

var _ref$c = /*#__PURE__*/_createElement$U(SomecolorNormal, null);

class ColorPalette extends React.PureComponent {
  // eslint-disable-next-line react/static-property-placement
  constructor(props) {
    super(props);
    this.refPalette = /*#__PURE__*/React__default['default'].createRef();

    this.handlePick = color => {
      const {
        onPick
      } = this.props;
      onPick(color);
    };

    this.handleCustomClick = e => {
      // 阻止 更多颜色面板的 点击事件冒泡
      e.preventDefault();
      e.stopPropagation();
    };

    this.handleCustomPicker = e => {
      const {
        picker
      } = this.props;

      if (!picker) {
        return;
      }

      const {
        target
      } = e; // 确认按钮不阻止事件流

      if (!target.id || target.id !== CUSTOMER_CONFIG_KEY) {
        e.preventDefault();
        e.stopPropagation();
      }

      const {
        showPicker
      } = this.state;

      if (!showPicker) {
        this.changePickerAlignment();
      }

      this.setState({
        showPicker: !showPicker
      });
    };

    this.changePickerAlignment = () => {
      if (!this.refPalette.current) {
        return;
      }

      const {
        left,
        width
      } = this.refPalette.current.getBoundingClientRect();
      const right = window.innerWidth - left - width; // SketchPicker 的宽度为 200px

      if (right <= 210) {
        this.setState({
          isPickerAlignRight: false
        });
      } else {
        this.setState({
          isPickerAlignRight: true
        });
      }
    };

    this.getColorStringColorObj = colorObj => {
      let result = colorObj.hex; // 这里可能是 "transparent"

      if (result.startsWith("#")) {
        if (colorObj.rgb && colorObj.rgb.a !== 1) {
          result = `${colorObj.hex}${decimalToHex(colorObj.rgb.a || 0)}`.toLowerCase();
        }
      }

      return result;
    };

    this.handleCustomPickerChange = colorObj => {
      const {
        onCustomColorPick,
        onPick,
        onCustomColorAfterPick
      } = this.props;
      const color = this.getColorStringColorObj(colorObj);
      this.setState({
        customColor: color
      }); // 选中颜色变化时立即应用

      if (onCustomColorPick) {
        onCustomColorPick(color);
      } else {
        if (!onCustomColorAfterPick) {
          onPick(color);
        }
      }
    };

    this.handleCustomPickerAfterChange = colorObj => {
      const {
        onCustomColorAfterPick
      } = this.props;
      const color = this.getColorStringColorObj(colorObj);

      if (onCustomColorAfterPick) {
        onCustomColorAfterPick(color);
      }
    };

    this.handleConfirmCustomColor = () => {
      const {
        customColor
      } = this.state;
      this.addRecentColor(customColor);
      this.setState({
        customColor: '',
        showPicker: false
      });
    };

    this.addRecentColor = color => {
      if (!color) return;
      this.setState(state => {
        let colors = [...state.recentColors];
        const findIdx = colors.indexOf(color);

        if (findIdx >= 0) {
          // 调整已有元素的位置
          const deleteColor = colors.splice(findIdx, 1);
          colors.unshift(...deleteColor);
        } else {
          colors.unshift(color);
        }

        colors = colors.slice(0, MAX_LATEST_COLOR);
        colorUtil.saveRecentColorsToLocalStorage(colors);
        return {
          recentColors: colors
        };
      });
    };

    this.renderCustomerColor = () => {
      const {
        clearColor,
        color,
        locale,
        showRecentColors,
        colorBlockText
      } = this.props;
      const {
        isPickerAlignRight,
        customColor,
        showPicker,
        recentColors: customerColors
      } = this.state;
      const colorCount = Math.min(customerColors.length, MAX_LATEST_COLOR);
      const limitedColors = customerColors.slice(0, colorCount);
      return /*#__PURE__*/_createElement$U(React__default['default'].Fragment, null, !colorCount || !showRecentColors ? null : /*#__PURE__*/_createElement$U(LatestColorWrap, null, /*#__PURE__*/_createElement$U(LatestColorText, null, /*#__PURE__*/_createElement$U(TranslateComp, {
        locale: locale,
        textKey: 'we_ui_color_picker_latest'
      })), /*#__PURE__*/_createElement$U(LineGroup, {
        key: `latestColors-${limitedColors[0]}`
      }, limitedColors.map((curColor, index) => /*#__PURE__*/_createElement$U(ColorBlockItem, {
        key: `${curColor}-${index}`,
        colorValue: curColor,
        clearColor: clearColor,
        index: index,
        active: color === curColor,
        onColorPick: this.handlePick,
        colorBlockText: colorBlockText
      })))), /*#__PURE__*/_createElement$U(CustomGroup, {
        onClick: this.handleCustomPicker
      }, /*#__PURE__*/_createElement$U(CustomGroupInnerWrap, {
        className: classnames$1({
          actived: showPicker
        })
      }, /*#__PURE__*/_createElement$U("div", {
        style: {
          display: 'flex',
          alignItems: 'center'
        }
      }, _ref$c, /*#__PURE__*/_createElement$U(CustomText, null, /*#__PURE__*/_createElement$U(TranslateComp, {
        locale: locale,
        textKey: 'we_ui_color_picker_more'
      })), showPicker &&
      /*#__PURE__*/
      // 点击 更多颜色 面板之外的区域关闭面板，并将颜色添加到 最近颜色 中
      _createElement$U(ClickOuterRef, {
        handler: this.handleConfirmCustomColor,
        on: showPicker
      }, customPickerRef => /*#__PURE__*/_createElement$U(CustomPicker, {
        rightSide: isPickerAlignRight,
        onClick: this.handleCustomClick,
        ref: customPickerRef
      }, /*#__PURE__*/_createElement$U(SketchPicker, {
        color: customColor,
        onChange: this.handleCustomPickerChange,
        onChangeComplete: this.handleCustomPickerAfterChange
      })))), /*#__PURE__*/_createElement$U(ArrowRightNormal, {
        style: {
          color: 'rgba(17, 31, 44, 0.4)'
        }
      }))));
    };

    this.state = {
      customColor: '',
      showPicker: false,
      isPickerAlignRight: true,
      recentColors: colorUtil.getRecentColorsFromLocalStorage()
    };
  } // 选中颜色之后，数值回调


  render() {
    const {
      color,
      clearColor,
      automaticColor,
      picker,
      locale,
      quickSetText,
      showAutomatic,
      colorBlockText
    } = this.props;
    return /*#__PURE__*/_createElement$U(PaletteWrapper, {
      ref: this.refPalette
    }, showAutomatic && /*#__PURE__*/_createElement$U(DefaultGroup, {
      onClick: () => this.handlePick(automaticColor)
    }, /*#__PURE__*/_createElement$U(ColorBlockItem, {
      colorValue: automaticColor,
      clearColor: clearColor,
      index: 1,
      active: color === automaticColor,
      onColorPick: this.handlePick,
      colorBlockText: colorBlockText
    }), /*#__PURE__*/_createElement$U(CustomText, null, quickSetText || /*#__PURE__*/_createElement$U(TranslateComp, {
      locale: locale,
      textKey: 'we_ui_color_picker_default'
    }))), /*#__PURE__*/_createElement$U(MainColorGroup, null, colorData.map((data, index) => {
      const groupProps = {
        key: `${index}-${data[0]}`,
        style: index === 0 ? firstLineStyle : undefined
      }; // 渲染一行色块

      return /*#__PURE__*/_createElement$U(LineGroup, groupProps, data.map((curColor, colIndex) => /*#__PURE__*/_createElement$U(ColorBlockItem, {
        key: `${curColor}-${colIndex}`,
        colorValue: curColor,
        clearColor: clearColor,
        index: colIndex,
        active: color === curColor,
        onColorPick: this.handlePick,
        colorBlockText: colorBlockText
      })));
    })), picker ? this.renderCustomerColor() : null);
  }

}
ColorPalette.defaultProps = {
  color: 'black',
  onPick: () => {},
  canClear: false,
  automaticColor: '',
  latestColors: [],
  picker: true,
  showRecentColors: true,
  showAutomatic: true
};

/* eslint-disable @typescript-eslint/explicit-function-return-type */
const _createElement$V = /*#__PURE__*/React__default['default'].createElement;
const DEFAULT_COLOR = '#ffffff';
const ICON_DEFAULT_COLOR = 'inherit';

(function (EColorPickerIcon) {
  EColorPickerIcon["font"] = "font";
  EColorPickerIcon["background"] = "background";
  EColorPickerIcon["backgroundfont"] = "backgroundfont";
  EColorPickerIcon["backgroundsheet"] = "backgroundsheet";
})(exports.EColorPickerIcon || (exports.EColorPickerIcon = {}));

class ColorPicker extends React__default['default'].PureComponent {
  constructor(props) {
    super(props);

    this.handlePaletteClick = e => {
      // 阻止冒泡
      e.stopPropagation(); // 阻止默认行为

      e.preventDefault();
    };

    this.handleColorPick = color => {
      const {
        onColorPicker
      } = this.props;
      this.setState({
        currentColor: color,
        currentActive: false
      });

      if (onColorPicker) {
        onColorPicker(color, true);
      }
    };

    this.handleCustomColor = (color, isAfter) => {
      const {
        onColorPicker
      } = this.props; // 设置 custom color 后立即应用，但 colorPicker 不收起

      this.setState({
        currentColor: color
      });

      if (onColorPicker) {
        onColorPicker(color, isAfter);
      }
    };

    this.handleCustomColorPick = color => {
      this.handleCustomColor(color, false);
    };

    this.handleCustomColorAfterPick = color => {
      this.handleCustomColor(color, true);
    };

    this.handleClickLeft = () => {
      const {
        onClickLeft,
        onColorPicker
      } = this.props;
      const {
        currentColor
      } = this.state;

      if (onClickLeft) {
        onClickLeft(currentColor);
      } else {
        onColorPicker(currentColor, true);
      }
    };

    this.handleActive = active => {
      this.setState({
        currentActive: active
      });
    };

    this.getColorPalette = () => {
      const {
        color,
        automaticColor,
        clearColor,
        picker,
        locale,
        btnType,
        showRecentColors,
        showAutomatic,
        colorBlockText
      } = this.props;
      const {
        currentColor
      } = this.state;
      const customText = btnType === exports.EColorPickerIcon.font ? /*#__PURE__*/_createElement$V(TranslateComp, {
        locale: locale,
        textKey: 'we_ui_color_picker_default'
      }) : /*#__PURE__*/_createElement$V(TranslateComp, {
        locale: locale,
        textKey: 'we_ui_color_picker_no_color'
      });
      return /*#__PURE__*/_createElement$V(ColorPaletteWrapper, {
        onClick: this.handlePaletteClick
      }, /*#__PURE__*/_createElement$V(ColorPalette, {
        color: color || currentColor,
        onPick: this.handleColorPick,
        onCustomColorPick: this.handleCustomColorPick,
        onCustomColorAfterPick: this.handleCustomColorAfterPick,
        automaticColor: automaticColor,
        clearColor: clearColor,
        picker: picker,
        locale: locale,
        showRecentColors: showRecentColors,
        quickSetText: customText,
        showAutomatic: showAutomatic,
        colorBlockText: colorBlockText
      }));
    };

    this.state = {
      currentColor: props.color || props.defaultColor || DEFAULT_COLOR,
      currentActive: props.defaultActive || false
    };
  }

  renderCustomTrigger() {
    const {
      children,
      zIndex,
      title
    } = this.props;
    const {
      currentActive
    } = this.state;
    return /*#__PURE__*/_createElement$V(Dropdown, {
      visible: currentActive,
      onVisibleChange: this.handleActive,
      overlay: currentActive ? this.getColorPalette() : null,
      zIndex: zIndex,
      title: title
    }, children);
  }

  render() {
    const {
      currentColor,
      currentActive
    } = this.state;
    const {
      btnType,
      btnIcon,
      color,
      children,
      zIndex,
      style,
      disabled,
      className,
      title,
      size
    } = this.props; // 如果填充部分表现为白色（传入空字符串，白色或透明），则填充的外围边界线需有颜色

    const whiteFilling = !currentColor || isWhite(currentColor) || isTransparent(currentColor);
    const pathColors = disabled ? undefined : [!whiteFilling ? currentColor : ICON_DEFAULT_COLOR, !whiteFilling ? currentColor : 'white', ICON_DEFAULT_COLOR];
    const btnTypeList = {
      [exports.EColorPickerIcon.font]: /*#__PURE__*/_createElement$V(FontcolorNormal, {
        pathColors: pathColors
      }),
      [exports.EColorPickerIcon.background]: /*#__PURE__*/_createElement$V(BgNormal, {
        pathColors: pathColors
      }),
      [exports.EColorPickerIcon.backgroundfont]: /*#__PURE__*/_createElement$V(BgfontcolorNormal, {
        pathColors: pathColors
      }),
      [exports.EColorPickerIcon.backgroundsheet]: /*#__PURE__*/_createElement$V(BgsheetcolorNormal, {
        pathColors: pathColors
      })
    };
    return children ? this.renderCustomTrigger() : /*#__PURE__*/_createElement$V(SplitButton, {
      overlay: this.getColorPalette(),
      onClickLeft: this.handleClickLeft,
      active: currentActive,
      onActiveChange: this.handleActive,
      zIndex: zIndex,
      style: style,
      disabled: disabled,
      className: className,
      testid: `ColorPicker-${btnType}`,
      title: title,
      size: size
    }, /*#__PURE__*/_createElement$V(SplitButtonWrapper, null, btnType ? btnTypeList[btnType] : /*#__PURE__*/_createElement$V(React__default['default'].Fragment, null, btnIcon, /*#__PURE__*/_createElement$V(FillColorArea, {
      color: color || currentColor
    }))));
  }

}

const _createElement$W = /*#__PURE__*/React__default['default'].createElement;
const DEFAULT_COLOR$1 = '#ffffff';
class FillColorPicker extends React__default['default'].PureComponent {
  constructor(props) {
    super(props);

    this.handleColorPick = color => {
      this.setState({
        currentColor: color
      });
      const {
        onColorPicker,
        active,
        onActiveChange
      } = this.props;

      if (active !== undefined && onActiveChange) {
        onActiveChange(false);
      } else {
        this.setState({
          currentActive: false
        });
      }

      if (onColorPicker) {
        onColorPicker(color);
      }
    };

    this.handleCustomColorPick = color => {
      const {
        onColorPicker
      } = this.props;
      this.setState({
        currentColor: color
      });

      if (onColorPicker) {
        onColorPicker(color);
      }
    };

    this.handlePaletteClick = e => {
      // 阻止冒泡
      e.stopPropagation(); // 阻止默认行为

      e.preventDefault();
    };

    this.handleClickLeft = () => {
      const {
        onColorPicker
      } = this.props;
      const {
        currentColor
      } = this.state;
      onColorPicker(currentColor);
    };

    this.handleActive = active => {
      const {
        onActiveChange
      } = this.props;

      if (onActiveChange) {
        onActiveChange(active);
      }

      this.setState({
        currentActive: active
      });
    };

    this.getColorPalette = () => {
      const {
        color,
        automaticColor,
        clearColor,
        picker,
        locale,
        showAutomatic
      } = this.props;
      const {
        currentColor
      } = this.state;
      return /*#__PURE__*/_createElement$W(ColorPaletteWrapper, {
        onClick: this.handlePaletteClick
      }, /*#__PURE__*/_createElement$W(ColorPalette, {
        color: color || currentColor,
        onPick: this.handleColorPick,
        onCustomColorPick: this.handleCustomColorPick,
        automaticColor: automaticColor,
        clearColor: clearColor,
        picker: picker,
        locale: locale,
        showAutomatic: showAutomatic
      }));
    };

    this.state = {
      currentColor: props.color || props.defaultColor || DEFAULT_COLOR$1,
      currentActive: props.defaultActive || false
    };
  }

  render() {
    const {
      currentColor,
      currentActive
    } = this.state;
    const {
      color,
      size,
      style,
      active: propActive,
      title
    } = this.props;
    const active = propActive !== undefined ? propActive : currentActive;
    const activeColor = color || currentColor;
    const isWhite = tinycolor__default['default'].equals(activeColor, '#ffffff');
    return /*#__PURE__*/_createElement$W(FillColorPickerButton, {
      overlay: this.getColorPalette(),
      onClickLeft: this.handleClickLeft,
      active: active,
      onActiveChange: this.handleActive,
      style: style,
      size: size,
      testid: "FillColorPicker",
      title: title
    }, /*#__PURE__*/_createElement$W(SplitButtonWrapper, null, /*#__PURE__*/_createElement$W(FullFillColorArea, {
      isWhite: isWhite,
      color: activeColor
    })));
  }

}

const hoverActive = /*#__PURE__*/styled.css(["&:hover{background-color:", ";cursor:pointer;}"], ({
  theme
}) => theme.ui.backgroundColor);
const handleItemCommon = /*#__PURE__*/styled.css(["position:relative;min-width:150px;height:36px;font-size:13px;line-height:20px;padding:0 ", ";margin:0 ", ";color:", ";border-radius:", ";", " .icon{position:absolute;top:50%;right:23px;transform:translate(120%,-50%);}&.disabled{color:", ";&:hover{background-color:transparent;cursor:not-allowed;}}"], ({
  theme
}) => theme.ui.paddingMedium, ({
  theme
}) => theme.ui.marginMedium, ({
  theme
}) => theme.ui.commonBaseColor1, ({
  theme
}) => theme.ui.radiusLarge, ({
  isHotkeyType,
  hoverable,
  theme
}) => hoverable !== false && `
    &:hover {
      background-color: ${isHotkeyType ? 'inherit' : theme.ui.commonBgHoverColor};
      cursor: pointer;
    }
  `, ({
  theme
}) => theme.ui.disabledColor);
const MenuRoot = withTheme(styled__default['default'].div(["box-sizing:border-box;font-size:13px;color:", ";&.vertical{min-width:150px;padding:8px 0;}&.horizontal{display:flex;}"], ({
  theme
}) => theme.ui.commonActionIconColor));
const Divider$1 = withTheme(styled__default['default'].div(["height:1px;margin:", " 8px;background-color:", ";"], ({
  theme
}) => theme.ui.marginMedium, ({
  theme
}) => theme.ui.commonLineLightColor));
const SubMenuWrap = withTheme(styled__default['default'].div.attrs(({
  path,
  menuId
}) => ({
  'data-path': path,
  'data-menuId': menuId
}))([""]));
const SubMenuInnerWrap = withTheme(styled__default['default'].div(["box-sizing:border-box;", " &.horizontal{height:28px;vertical-align:middle;display:inline-block;padding:", ";margin:0 ", ";border-radius:", ";}&.hotkeyHover{background-color:", " !important;}&.vertical{", "}&.opened{background-color:", ";}.arrow-icon{color:", ";&.disabled{color:", ";}}"], hoverActive, ({
  theme
}) => theme.ui.paddingTiny, ({
  theme
}) => theme.ui.marginTiny, ({
  theme
}) => theme.ui.radiusMedium, ({
  theme
}) => theme.ui.commonBgHoverColor, handleItemCommon, ({
  theme
}) => theme.ui.backgroundColor, ({
  theme
}) => theme.ui.commonBaseColor3, ({
  theme
}) => theme.ui.disabledColor));
const TriggerWrap$6 = withTheme(styled__default['default'].div(["display:flex;align-items:center;height:100%;&.hasArrow{padding-right:24px;}"]));
const TriggerIconWrap = withTheme(styled__default['default'].div(["display:flex;align-items:center;height:100%;margin-right:8px;color:", ";"], ({
  theme
}) => theme.ui.commonActionIconColor));
const MenuItemInner = withTheme(styled__default['default'].div(["display:flex;align-items:center;&.selected{padding-right:35px;}"]));
const MenuItemIconWrap = withTheme(styled__default['default'].div(["display:flex;align-items:center;height:100%;margin-right:8px;color:", ";"], ({
  theme
}) => theme.ui.commonActionIconColor));
const MenuItemContentWrap = withTheme(styled__default['default'].div([""]));
const TriggerTitleWrap = withTheme(styled__default['default'].div([""]));
const MenuItemWrap = withTheme(styled__default['default'].div.attrs(({
  path,
  menuId
}) => ({
  'data-path': path,
  'data-menuId': menuId
}))([".selected-icon{display:none;color:", ";font-size:12px;}&.hotkeyHover{background-color:", " !important;}&.vertical{", ";display:flex;align-items:center;&.selected{.selected-icon{display:inline-block;}}}&.horizontal{", " display:inline-block;padding:", ";margin:0 ", ";border-radius:", ";}"], ({
  theme
}) => theme.ui.primaryColor, ({
  theme
}) => theme.ui.commonBgHoverColor, handleItemCommon, hoverActive, ({
  theme
}) => theme.ui.paddingTiny, ({
  theme
}) => theme.ui.marginTiny, ({
  theme
}) => theme.ui.radiusMedium));
const MenuItemGroupWrap = /*#__PURE__*/styled__default['default'].div([""]);
const MenuItemGroupTitle = withTheme(styled__default['default'].div(["font-size:", ";color:", ";line-height:2;padding-left:", ";"], ({
  theme
}) => theme.ui.fontSizeSmall, ({
  theme
}) => theme.ui.commonBaseColor3, ({
  theme
}) => theme.ui.paddingMedium));
const MenuItemGroupList = /*#__PURE__*/styled__default['default'].div([""]);

const _createElement$X = /*#__PURE__*/React__default['default'].createElement;

var _ref$d = /*#__PURE__*/_createElement$X(Divider$1, null);

const MenuDivider = /*#__PURE__*/React__default['default'].memo(() => _ref$d);

const TextIndentContext = /*#__PURE__*/React__default['default'].createContext(1);
const PathContext = /*#__PURE__*/React__default['default'].createContext('');
const ControllerContext = /*#__PURE__*/React__default['default'].createContext(null);
const MenuKeyContext = /*#__PURE__*/React__default['default'].createContext(null);
const HotkeyPositionContext = /*#__PURE__*/React__default['default'].createContext(null);

/**
 * 获取 Controller
 *
 * @param {String} name Component's name
 * @return {Controller | never}
 */
const useController = name => {
  const ctrl = React.useContext(ControllerContext);

  if (!ctrl) {
    throw new Error(`${name} 组件必须为 Menu 组件的子组件`);
  }

  return ctrl;
};
const useHotkeyController = name => {
  const ctrl = React.useContext(HotkeyPositionContext);

  if (!ctrl) {
    throw new Error(`${name} 组件必须为 Menu 组件的子组件`);
  }

  return ctrl;
};
/**
 * 获取当前 key 路径
 * @param {string} key
 * @return {string}
 */

const usePath = key => {
  const parentPath = React.useContext(PathContext);
  return [...parentPath.split('::'), key].filter(k => k).join('::');
};
/**
 * 处理menukey
 *
 * @param {string} key
 * @return {IUseMenuKeyContext}
 */

const useMenuKeyContext = key => {
  const menuKeys = React.useRef({});
  const ctx = React.useContext(MenuKeyContext); // 获取 key，如果没传，自动生成一个uuid

  const id = React.useMemo(() => `menu-key-${uuid()}`, []);
  const menuKey = key || id; // key的添加和删除方法

  const menuKeyCtxValue = React.useMemo(() => {
    return {
      addKey: (k, keys) => {
        menuKeys.current[k] = keys || {};
      },
      delKey: k => {
        delete menuKeys.current[k];
      }
    };
  }, []);

  if (ctx) {
    ctx.addKey(menuKey, menuKeys.current);
  } // 添加和删除


  React.useLayoutEffect(() => {
    return () => {
      if (ctx) {
        ctx.delKey(menuKey);
      }
    };
  }, [menuKey, ctx]);
  return [menuKeyCtxValue, menuKey, menuKeys.current];
}; // 获取鼠标最后停留位置

const useMousePosition = () => {
  const [mousePosition, setMousePosition] = React.useState(0);
  const setMousePositionDebounce = React.useCallback(debounce(y => {
    setMousePosition(y);
  }, 100), []);
  const handleMouseOver = React.useCallback(e => {
    const clientY = e.clientY;
    setMousePositionDebounce(clientY);
  }, []);
  return {
    handleMouseOver,
    setMousePosition,
    mousePosition
  };
};
/**
 * 菜单快捷键 有滚动条是 滚动到合适位置
 */

const useHotKeyScrollRef = (menuKey, isHotkeyType, hotkeyPosition) => {
  const ref = React.useRef();
  React.useEffect(() => {
    if (hotkeyPosition && menuKey === hotkeyPosition.menuKey && ref.current && isHotkeyType) {
      if (ref.current.scrollIntoView && typeof ref.current.scrollIntoView === 'function') {
        const {
          top,
          position
        } = ref.current.style;
        ref.current.style.position = 'relative';
        ref.current.style.top = hotkeyPosition.eventKey === 'arrowdown' ? '8px' : '-8px';
        ref.current.scrollIntoView({
          block: 'nearest',
          inline: 'nearest'
        });
        ref.current.style.top = top;
        ref.current.style.position = position;
      }
    }
  }, [hotkeyPosition, menuKey]);
  return ref;
};
const useRegisterValidNode = (menuId, shouldSelectFirstItem, openedMenuKeys) => {
  const eleMap = React.useRef({});
  const hotKeyPath = React.useRef();
  const validNodes = React.useRef([]);
  const [hotkeyPosition, setHotkeyPosition] = React.useState(null); // 获取当前节点挂载的父级节点

  const getParentEle = React.useCallback((nodes, parentPathSteps) => {
    const el = nodes.find(o => o.menuKey === parentPathSteps[0]);

    if (parentPathSteps.length === 1) {
      return el;
    } else if (el) {
      return getParentEle(el.children || [], parentPathSteps.slice(1));
    }

    return undefined;
  }, []); // 根据dom 实际渲染情况，重绘 menuTree 方便快捷键调用

  const getHotkeyPosition = React.useCallback(debounce(openedKeys => {
    const nodes = [];
    document.querySelectorAll(`*[data-menuid=${menuId}]`).forEach(o => nodes.push(o));
    let nodeTree = [];

    try {
      nodes.sort((a, b) => {
        const pathAttrA = a.getAttribute('data-path');
        const pathAttrB = b.getAttribute('data-path');

        if (pathAttrA && pathAttrB) {
          return pathAttrA.split('::').length < pathAttrB.split('::').length ? -1 : 1;
        }

        return -1;
      }).forEach(o => {
        const pathAttr = o.getAttribute('data-path');

        if (pathAttr) {
          const path = pathAttr.split('::');
          const menuKey = path[path.length - 1];
          if (!eleMap.current[menuKey]) return;
          const el = eleMap.current[menuKey];

          if (path.length === 1) {
            nodeTree = nodeTree.concat({ ...el,
              index: nodeTree.length
            });
          } else {
            const parentPathSteps = path.slice(0, -1);
            const parentEle = getParentEle(nodeTree, parentPathSteps);

            if (parentEle) {
              const children = parentEle.children || [];
              const elIndex = { ...el,
                index: children.length
              };
              parentEle.children = children.concat(elIndex); // 判断节点是否是在开一个新的子层级

              const isOpenSubMenu = hotKeyPath.current && hotKeyPath.current.path.split('::').length !== elIndex.path.split('::').length; // 高亮subMenu 打开时第一个节点

              if (isOpenSubMenu && parentEle.children.length === 1 && parentPathSteps.join('::') === openedKeys.join('::')) {
                setHotkeyPosition(elIndex);
                hotKeyPath.current = elIndex;
              }
            } else {
              throw new Error(`菜单实例 ${menuId} 子节点 ${path} 找不到父节点 ${parentPathSteps.join('::')}`);
            }
          }
        } else {
          throw new Error(`菜单实例 ${menuId} 存在节点缺少【data-path】属性`);
        }
      });
    } catch (error) {
      throw new Error('菜单实例注册失败');
    }

    validNodes.current = nodeTree; // 默认选中第一个节点

    if (shouldSelectFirstItem && !hotkeyPosition && validNodes.current.length > 0) {
      setHotkeyPosition(validNodes.current[0]);
      hotKeyPath.current = validNodes.current[0];
    }
  }, 80), [shouldSelectFirstItem, hotkeyPosition, setHotkeyPosition]);
  const registerValidNode = React.useCallback(node => {
    if (eleMap.current[node.menuKey]) return; // 如果是新增节点触发重绘

    eleMap.current[node.menuKey] = node;
    getHotkeyPosition(openedMenuKeys);
  }, [openedMenuKeys]);
  const unRegisterValidNode = React.useCallback(node => {
    delete eleMap.current[node.menuKey];
  }, []);
  return {
    registerValidNode,
    unRegisterValidNode,
    hotkeyPosition,
    setHotkeyPosition,
    validNodes,
    hotKeyPath
  };
};

(function (EMenuMode) {
  EMenuMode["horizontal"] = "horizontal";
  EMenuMode["vertical"] = "vertical";
})(exports.EMenuMode || (exports.EMenuMode = {}));

const MENU_VISIBLE_TOGGLE_DELAY = 100;

const _createElement$Y = /*#__PURE__*/React__default['default'].createElement;

var _ref$e = /*#__PURE__*/_createElement$Y(SelectNormal, {
  className: "icon selected-icon"
});

const MenuItem = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    children,
    disabled,
    disabledTip,
    style,
    selected,
    onClick,
    hoverable,
    height,
    testid,
    icon
  } = props; // 接口

  const controller = useController('MenuItem'); // 快捷键触达的位置key

  const hotkeyController = useHotkeyController('MenuItem');
  const {
    hotkeyPosition,
    isHotkeyType,
    mousePosition,
    registerValidNode,
    unRegisterValidNode
  } = hotkeyController; // 被 Group 包裹需要缩进

  const textIndent = React.useContext(TextIndentContext); // menuKey处理

  const [menuKeyCtxValue, menuKey] = useMenuKeyContext(props.menuKey); // 父组件的key路径

  const parentPath = React.useContext(PathContext); // 支持快捷键时 菜单过长元素自动定位

  const elRef = useHotKeyScrollRef(menuKey, isHotkeyType, hotkeyPosition); // 是否选中，props.selected优先级最高

  const isSelected = typeof selected === 'boolean' ? selected : controller.isMenuItemSelected(menuKey); // 自动关闭，当前组件的props优先级更高

  const autoClose = typeof props.autoClose === 'boolean' ? props.autoClose : controller.autoClose;
  /**
   * 点击 Item
   *
   * @param {React.MouseEvent<HTMLElement>} event
   * @return {void}
   */

  const handleClick = React.useCallback(event => {
    // 自动关闭处理
    if (autoClose) {
      controller.closeAllMenu();
    }

    if (disabled) {
      return;
    } // 点击处理


    if (onClick) {
      onClick(menuKey, event);
    } // 选中处理


    controller.selectMenuItem(menuKey);

    if (controller.clickMenuItem) {
      controller.clickMenuItem(menuKey, event);
    }
  }, [disabled, autoClose, controller, onClick, menuKey]);
  /**
   * 如果有快捷键时新增的鼠标进入事件
   */

  const hotkeyMouseEnterHander = React.useCallback(event => {
    if (!disabled && mousePosition !== event.clientY) {
      hotkeyController.setHotkeyType(false);
      hotkeyController.setMousePosition(event.clientY);
      hotkeyController.setHotkeyPosition(hotkeyController.getActionNode(menuKey));
    }
  }, [disabled, mousePosition, hotkeyController, menuKey]);
  /**
   * 鼠标移入 Item
   * 应该收起其他菜单
   *
   * @return {void}
   */

  const handleMouseEnter = React.useCallback(event => {
    if (controller.shortcutKey) {
      hotkeyMouseEnterHander(event);
    }

    if (controller.showMenuTimer) {
      window.clearTimeout(controller.showMenuTimer);
    }

    controller.showMenuTimer = window.setTimeout(() => {
      controller.showSubMenu(parentPath);
    }, MENU_VISIBLE_TOGGLE_DELAY);
  }, [parentPath, controller, hotkeyMouseEnterHander]); // 整合height样式

  const styleCombined = React.useMemo(() => {
    const combined = { ...(style || {})
    };

    if (typeof height === 'number' || height === 'auto') {
      combined.height = height;
    }

    return combined;
  }, [height, style]);
  /**
  * 快捷键：注册有效节点
  */

  React.useEffect(() => {
    if (!disabled && controller.shortcutKey && elRef.current) {
      registerValidNode({
        menuKey,
        path: `${parentPath ? `${parentPath}::` : ''}${menuKey}`,
        onClick: handleClick,
        parentPath
      });
      return () => {
        unRegisterValidNode({
          menuKey,
          path: `${parentPath ? `${parentPath}::` : ''}${menuKey}`
        });
      };
    }
  }, [disabled, controller]);
  return /*#__PURE__*/_createElement$Y(Tooltip, {
    disabled: !(disabled && disabledTip),
    title: disabledTip,
    placement: 'top'
  }, /*#__PURE__*/_createElement$Y(MenuItemWrap, {
    path: `${parentPath ? `${parentPath}::` : ''}${menuKey}`,
    menuId: controller.menuId,
    className: classnames('vertical', {
      selected: isSelected,
      disabled,
      hotkeyHover: hotkeyPosition && menuKey === hotkeyPosition.menuKey && !disabled && hoverable && controller.shortcutKey
    }),
    ref: elRef,
    hoverable: hoverable,
    isHotkeyType: isHotkeyType,
    textIndent: textIndent,
    onClick: handleClick,
    style: styleCombined,
    onMouseEnter: handleMouseEnter,
    "data-testid": testid ? `menu-item-${testid}` : undefined
  }, _ref$e, /*#__PURE__*/_createElement$Y(MenuKeyContext.Provider, {
    value: menuKeyCtxValue
  }, icon ? /*#__PURE__*/_createElement$Y(MenuItemInner, {
    className: classnames({
      selected: isSelected
    })
  }, /*#__PURE__*/_createElement$Y(MenuItemIconWrap, null, icon), /*#__PURE__*/_createElement$Y(MenuItemContentWrap, null, children)) : children)));
});
MenuItem.defaultProps = {
  disabled: false,
  hoverable: true
};

const _createElement$Z = /*#__PURE__*/React__default['default'].createElement;

const SubMenu = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    children,
    title,
    showArrow,
    disabled,
    disabledTip,
    overlayClassName,
    overlayStyle,
    testid,
    icon
  } = props;
  const controller = useController('SubMenu');
  const {
    mode,
    zIndex,
    menuId,
    destroyOverlayWhenInvisible,
    shortcutKey,
    menuRootRef
  } = controller;
  const {
    hotkeyPosition,
    setHotkeyPosition,
    isHotkeyType,
    setHotkeyType,
    setMousePosition,
    mousePosition,
    getActionNode,
    registerValidNode,
    unRegisterValidNode
  } = useHotkeyController('SubMenu'); // 处理menuKey

  const [menuKeyCtxValue, menuKey] = useMenuKeyContext(props.menuKey); // key路径

  const path = usePath(menuKey); // 层级

  const level = path.split('::').length - 1; // 是否可见

  const visible = controller.isSubMenuOpened(menuKey); // 是否为第一级横向菜单

  const isHorizontal = mode === exports.EMenuMode.horizontal && level === 0; // 第一级横向菜单在其他菜单展开 / 非第一级横向菜单的 action 都是 hover

  const dropdownTrigger = (!isHorizontal || controller.isAnySubMenuOpened(path)) && !isHotkeyType ? 'hover' : 'click';
  const elRef = useHotKeyScrollRef(menuKey, isHotkeyType, hotkeyPosition);
  /**
   * 可见性变化处理
   * 只有显示的时候处理，不可见应该是通过click来实现
   *
   * @param {boolean} e
   * @return {void}
   */

  const handleVisibleChange = React.useCallback(e => {
    if (e && !visible) {
      if (controller.showMenuTimer) {
        window.clearTimeout(controller.showMenuTimer);
      }

      controller.showMenuTimer = window.setTimeout(() => {
        controller.showSubMenu(path);
      }, MENU_VISIBLE_TOGGLE_DELAY);
    }
  }, [controller, path, visible]);
  const finalVisible = disabled ? false : visible;

  const getContainer = () => {
    return (menuRootRef === null || menuRootRef === void 0 ? void 0 : menuRootRef.current) || document.body;
  };
  /**
   * 允许快捷键时绑定鼠标进入事件，记录当前位置
   */


  const handleMouseEnter = React.useCallback(event => {
    if (!shortcutKey || mousePosition === event.clientY) return;
    setMousePosition(event.clientY);
    setHotkeyType(false);
    setHotkeyPosition(getActionNode(menuKey));
  }, [mousePosition]);
  /**
   * 快捷键：注册有效节点
   */

  React.useEffect(() => {
    if (!disabled && shortcutKey) {
      registerValidNode({
        menuKey,
        path,
        children: [],
        parentPath: path.split('::').slice(0, -1).join('::')
      });
      return () => {
        unRegisterValidNode({
          menuKey,
          path
        });
      };
    }
  }, [shortcutKey]);
  return /*#__PURE__*/_createElement$Z(Dropdown, {
    placement: isHorizontal ? 'bottomLeft' : 'rightTop',
    trigger: dropdownTrigger,
    visible: finalVisible,
    getContainer: getContainer,
    onVisibleChange: handleVisibleChange,
    overlayStyle: {
      padding: '8px 0',
      ...(overlayStyle || {})
    },
    overlayClassName: classnames(overlayClassName, `we-ui-submenu-${menuId}-overlay`),
    overlay: destroyOverlayWhenInvisible && !visible ? null : /*#__PURE__*/_createElement$Z(PathContext.Provider, {
      value: path
    }, /*#__PURE__*/_createElement$Z(MenuKeyContext.Provider, {
      value: menuKeyCtxValue
    }, children)),
    offsetY: isHorizontal ? 0 : -12,
    zIndex: typeof zIndex === 'number' ? zIndex + level : undefined
  }, /*#__PURE__*/_createElement$Z(SubMenuWrap, {
    ref: elRef,
    path: path,
    menuId: controller.menuId,
    className: classnames(`level-${level}-wrap`, {
      vertical: !isHorizontal,
      horizontal: isHorizontal,
      opened: finalVisible
    }),
    "data-testid": testid ? `submenu-${testid}` : undefined,
    onMouseEnter: handleMouseEnter
  }, /*#__PURE__*/_createElement$Z(Tooltip, {
    disabled: !(disabled && disabledTip),
    title: disabledTip,
    placement: 'top'
  }, /*#__PURE__*/_createElement$Z(SubMenuInnerWrap, {
    isHotkeyType: isHotkeyType,
    className: classnames(`level-${level}-inner-wrap`, {
      vertical: !isHorizontal,
      horizontal: isHorizontal,
      opened: finalVisible,
      disabled,
      hotkeyHover: hotkeyPosition && menuKey === hotkeyPosition.menuKey && isHotkeyType && shortcutKey
    })
  }, /*#__PURE__*/_createElement$Z(TriggerWrap$6, {
    className: classnames(`level-${level}-trigger`, {
      hasArrow: showArrow && !isHorizontal
    })
  }, icon && /*#__PURE__*/_createElement$Z(TriggerIconWrap, null, icon), /*#__PURE__*/_createElement$Z(TriggerTitleWrap, {
    className: classnames({
      vertical: !isHorizontal
    })
  }, title)), /*#__PURE__*/_createElement$Z(ArrowRightNormal, {
    className: classnames('icon arrow-icon', {
      disabled
    }),
    style: {
      display: showArrow && !isHorizontal ? 'inline-block' : 'none'
    }
  })))));
});
SubMenu.defaultProps = {
  showArrow: true
};

const _createElement$_ = /*#__PURE__*/React__default['default'].createElement;
const MenuItemGroup = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    title,
    children
  } = props; // 锁进

  const textIndent = React.useContext(TextIndentContext);
  return title ? /*#__PURE__*/_createElement$_(MenuItemGroupWrap, null, /*#__PURE__*/_createElement$_(MenuItemGroupTitle, null, title), /*#__PURE__*/_createElement$_(MenuItemGroupList, null, /*#__PURE__*/_createElement$_(TextIndentContext.Provider, {
    value: textIndent + 1
  }, children))) : children;
});

const _createElement$$ = /*#__PURE__*/React__default['default'].createElement;

/**
 * 获取同层级的所有的 menuKey
 *
 * @param {Record<string, string>} menuKeys
 * @param {string} path
 * @return {string[]}
 */
const getSameLevelMenuKeys = (menuKeys, path) => {
  const paths = path.split('::');
  paths.pop();
  const levelMenuKeys = Object.keys(paths.reduce((keys, key) => keys[key], menuKeys));
  return levelMenuKeys;
}; // eslint-disable-next-line max-lines-per-function


const Menu = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    mode,
    children,
    className,
    style,
    selectedKeys,
    defaultSelectedKeys,
    zIndex,
    onClick,
    autoClose,
    destroyOverlayWhenInvisible,
    shortcutKey,
    shouldSelectFirstItem,
    insertSubmenuToMenuRoot
  } = props;
  const menuId = React.useMemo(() => uuid(), []);
  const menuRootRef = React__default['default'].useRef(); // 展开的submenu的key

  const [openedMenuKeys, setOpenedMenuKeys] = React.useState([]); // 处理menuKeys

  const [menuKeyCtxValue,, menuKeys] = useMenuKeyContext(); // 选中的 key，受控

  const [selectedMenuKeys, setSelectedMenuKeys] = useControlledValue(selectedKeys, defaultSelectedKeys);
  const {
    handleMouseOver,
    setMousePosition,
    mousePosition
  } = useMousePosition();
  const [isHotkeyType, setHotkeyType] = React.useState(shortcutKey || false);
  const {
    registerValidNode,
    unRegisterValidNode,
    hotkeyPosition,
    setHotkeyPosition,
    validNodes,
    hotKeyPath
  } = useRegisterValidNode(menuId, !!shouldSelectFirstItem, openedMenuKeys); // useEffect(() => {
  //   // eslint-disable-next-line no-console
  //   console.log('当前位置', validNodes, hotkeyPosition, mousePosition);
  // }, [hotkeyPosition, mousePosition, validNodes]);

  /**
   * 绑定快捷键
   */

  React.useEffect(() => {
    if (shortcutKey) {
      document.addEventListener('keydown', addHotKeys);
      return () => {
        document.removeEventListener('keydown', addHotKeys);
        hotKeyPath.current = undefined;
        setHotkeyPosition && setHotkeyPosition(null);
      };
    }
  }, [shortcutKey, mode]);
  /**
  * 添加快捷方式
  */

  const addHotKeys = React.useCallback(event => {
    const key = event.key.toLowerCase();
    setHotkeyType(true);
    if (validNodes.current.length === 0) return;
    if (!hotKeyPath.current) return;

    if (key === 'arrowup' || event.keyCode === 38) {
      event.preventDefault();

      if (hotKeyPath.current.path.split('::').length === 2 && mode === exports.EMenuMode.horizontal && hotKeyPath.current.index === 0) {
        arrowLeft();
      } else {
        arrowDownOrUp('up');
      }
    } else if (key === 'arrowright' || event.keyCode === 39) {
      event.preventDefault();

      if (hotKeyPath.current.path.split('::').length === 1 && mode === exports.EMenuMode.horizontal) {
        arrowDownOrUp('down');
      } else {
        arrowRight();
      }
    } else if (key === 'arrowdown' || event.keyCode === 40) {
      event.preventDefault();

      if (hotKeyPath.current.path.split('::').length === 1 && mode === exports.EMenuMode.horizontal) {
        arrowRight();
      } else {
        arrowDownOrUp('down');
      }
    } else if (key === 'arrowleft' || event.keyCode === 37) {
      event.preventDefault();

      if (hotKeyPath.current.path.split('::').length === 2 && mode === exports.EMenuMode.horizontal) {
        return;
      } else if (hotKeyPath.current.path.split('::').length === 1 && mode === exports.EMenuMode.horizontal) {
        arrowDownOrUp('up');
      } else {
        arrowLeft();
      }
    } else if (key === 'enter' || event.keyCode === 13) {
      event.preventDefault();

      if (hotKeyPath.current && hotKeyPath.current.onClick) {
        hotKeyPath.current.onClick();
        controller.closeAllMenu();
      }

      return;
    }

    if (setHotkeyPosition && hotKeyPath.current) setHotkeyPosition({ ...hotKeyPath.current,
      eventKey: key
    });
  }, [openedMenuKeys, mode]);
  /**
   * 快捷键：从有效的结构树中获取节点
   */

  const getActionNode = React.useCallback((key, nodes) => {
    let node = null;
    (nodes || validNodes.current).every(o => {
      if (o.menuKey === key) {
        node = o;
        return false;
      }

      node = getActionNode(key, o.children || []);
      if (node) return false;
      return true;
    });
    return node;
  }, [validNodes]);
  /**
   * 键盘向右
   */

  const arrowRight = () => {
    if (!hotKeyPath.current || !hotKeyPath.current.children) return;
    showSubMenu(hotKeyPath.current.path);

    if (hotKeyPath.current && hotKeyPath.current.children.length > 0) {
      hotKeyPath.current = hotKeyPath.current.children[0];
    }
  };
  /**
  * 键盘向坐左
  */


  const arrowLeft = () => {
    if (!hotKeyPath.current) {
      return;
    }

    let current;

    const findParentNode = _validNodes => {
      _validNodes.every(o => {
        var _hotKeyPath$current;

        if (!o.children) return true;

        if (((_hotKeyPath$current = hotKeyPath.current) === null || _hotKeyPath$current === void 0 ? void 0 : _hotKeyPath$current.parentPath) === o.path) {
          current = o;
          return false;
        }

        current = findParentNode(o.children);
        return true;
      });

      return current;
    };

    const node = findParentNode(validNodes.current);

    if (node) {
      controller.showSubMenu(node.path.split('::').slice(0, -1).join('::'));
      hotKeyPath.current = node;
    }
  };
  /**
  * 键盘向上下
  */


  const arrowDownOrUp = key => {
    if (!hotKeyPath.current) return;

    if (hotKeyPath.current.children && hotKeyPath.current.children.length > 0) {
      controller.showSubMenu(hotKeyPath.current.path.split('::').slice(0, -1).join('::'));
    }

    let current;

    const findNextNode = _validNodes => {
      if (_validNodes.length === 0) return;

      _validNodes.every((o, i) => {
        var _hotKeyPath$current2;

        const resNode = key === 'down' ? _validNodes[i + 1] : _validNodes[i - 1];

        if (((_hotKeyPath$current2 = hotKeyPath.current) === null || _hotKeyPath$current2 === void 0 ? void 0 : _hotKeyPath$current2.menuKey) === o.menuKey && resNode) {
          current = resNode;
          return false;
        } else {
          findNextNode(o.children || []);
        }

        return true;
      });

      return current;
    };

    const node = findNextNode(validNodes.current);
    if (node) hotKeyPath.current = node;
  };
  /**
   * 显示二级菜单
   *
   * @param {string} path 要显示的菜单项的key路径
   * @return {void}
   */


  const showSubMenu = React.useCallback(path => {
    setOpenedMenuKeys(path.split('::'));
  }, []);
  /**
   * 二级菜单是否展开
   *
   * @param {string} menuKey
   * @return {boolean} isVisible
   */

  const isSubMenuOpened = React.useCallback(menuKey => {
    return openedMenuKeys.includes(menuKey);
  }, [openedMenuKeys]);
  /**
   * 同级的二级菜单是否展开
   *
   * @param {string} path 要显示的菜单项的key路径
   * @return {boolean}
   */

  const isAnySubMenuOpened = React.useCallback(path => {
    const keys = getSameLevelMenuKeys(menuKeys, path);
    return keys.some(key => openedMenuKeys.includes(key));
  }, [openedMenuKeys, menuKeys]);
  /**
   * 菜单项是否被选中
   *
   * @param {string} menuKey
   * @return {boolean}
   */

  const isMenuItemSelected = React.useCallback(menuKey => {
    return selectedMenuKeys.includes(menuKey);
  }, [selectedMenuKeys]);
  /**
   * 关闭所有的展开菜单项
   *
   * @return {void}
   */

  const closeAllMenu = React.useCallback(() => {
    setHotkeyPosition(null);
    hotKeyPath.current = null;
    setOpenedMenuKeys([]);
  }, []);
  /**
   * 选中 MenuItem
   *
   * @param {string} menuKey
   * @return {void}
   */

  const selectMenuItem = React.useCallback(menuKey => {
    if (!selectedMenuKeys.includes(menuKey)) {
      setSelectedMenuKeys([...selectedMenuKeys, menuKey]);
    }
  }, [selectedMenuKeys, setSelectedMenuKeys]);
  const controller = React.useMemo(() => ({
    mode: mode,
    zIndex,
    autoClose: !!autoClose,
    menuId,
    isSubMenuOpened,
    isAnySubMenuOpened,
    showSubMenu,
    isMenuItemSelected,
    closeAllMenu,
    selectMenuItem,
    clickMenuItem: onClick,
    destroyOverlayWhenInvisible,
    showMenuTimer: 0,
    shortcutKey,
    menuRootRef: insertSubmenuToMenuRoot ? menuRootRef : undefined
  }), [mode, menuId, zIndex, autoClose, showSubMenu, isSubMenuOpened, isAnySubMenuOpened, isMenuItemSelected, closeAllMenu, selectMenuItem, onClick, destroyOverlayWhenInvisible, shortcutKey, menuRootRef, insertSubmenuToMenuRoot]);
  const hotkeyPositionValue = {
    hotkeyPosition,
    isHotkeyType,
    mousePosition,
    getActionNode,
    registerValidNode,
    unRegisterValidNode,
    setHotkeyPosition: node => {
      hotKeyPath.current = node;
      setHotkeyPosition(node);
    },
    setMousePosition,
    setHotkeyType: val => {
      if (val === false) setHotkeyPosition(null);
      setHotkeyType(val);
    }
  };
  React.useEffect(() => {
    const handleMouseDown = e => {
      // 后续寻求更好的办法
      const overlayElements = document.querySelectorAll(`.we-ui-submenu-${menuId}-overlay`); // 是否点击的是overlay

      const inOverlay = Array.from(overlayElements).some(overlayElement => {
        return elementContain(overlayElement, e.target);
      });

      if (!inOverlay) {
        closeAllMenu();
      }
    };

    const {
      length
    } = openedMenuKeys;

    if (length) {
      document.addEventListener('mousedown', handleMouseDown);
    }

    return () => {
      if (length) {
        document.removeEventListener('mousedown', handleMouseDown);
      }
    }; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [menuId, openedMenuKeys.length, closeAllMenu]);
  return /*#__PURE__*/_createElement$$(MenuRoot, {
    onMouseMove: shortcutKey ? handleMouseOver : null,
    ref: menuRootRef,
    className: classnames$1(`we-ui-submenu-${menuId}-overlay`, className, mode),
    style: style
  }, /*#__PURE__*/_createElement$$(PathContext.Provider, {
    value: ""
  }, /*#__PURE__*/_createElement$$(MenuKeyContext.Provider, {
    value: menuKeyCtxValue
  }, /*#__PURE__*/_createElement$$(ControllerContext.Provider, {
    value: controller
  }, /*#__PURE__*/_createElement$$(HotkeyPositionContext.Provider, {
    value: hotkeyPositionValue
  }, children)))));
});
Menu.defaultProps = {
  mode: exports.EMenuMode.vertical,
  defaultSelectedKeys: [],
  autoClose: true,
  destroyOverlayWhenInvisible: false,
  shortcutKey: false,
  shouldSelectFirstItem: false
};
Menu.Item = MenuItem;
Menu.ItemGroup = MenuItemGroup;
Menu.Divider = MenuDivider;
Menu.SubMenu = SubMenu;

/* eslint-disable @typescript-eslint/explicit-function-return-type */
const GlobalStyle = /*#__PURE__*/styled.createGlobalStyle`
  .ctxmenu-hidden {
    overflow: hidden;
  }
`;
const ContextRoot = withTheme(styled__default['default'].div(["position:fixed;bottom:0;right:0;left:0;top:0;z-index:", ";"], ({
  theme
}) => theme.ui.zIndexModal + 2));
const ContextContainer = withTheme(styled__default['default'].div(["position:fixed;left:-100%;top:-100%;border:1px solid ", ";box-shadow:", ";background-color:", ";border-radius:", "px;max-height:480px;overflow-y:auto;z-index:", ";"], ({
  theme
}) => theme.ui.dropdownBorderColor, ({
  theme
}) => theme.ui.boxShadow, ({
  theme
}) => theme.ui.colorGray1, ({
  theme
}) => theme.ui.dropdownBorderRadius, ({
  theme
}) => theme.ui.zIndexModal + 3));

/* eslint-disable no-console */
const _createElement$10 = /*#__PURE__*/React__default['default'].createElement;

var _ref$f = /*#__PURE__*/_createElement$10(GlobalStyle, null);

var _ref2$2 = /*#__PURE__*/_createElement$10(GlobalStyle, null);

const ContextMenu = props => {
  const {
    children,
    position,
    onVisibleChange,
    visible
  } = props; // 进行子组件的检查：children只有一个、子组件应该为Menu

  const child = Array.isArray(children) ? children[0] : children;

  if (! /*#__PURE__*/React__default['default'].isValidElement(child) || child.type !== Menu) {
    console.warn("ContextMenu's child should be Menu");
  }
  /**
   * 可不可见变化函数
   *
   * @param {Boolean} visible
   * @return void
   */


  const handleChangeVisible = React.useCallback(newVisible => {
    if (visible !== newVisible && onVisibleChange) {
      onVisibleChange(newVisible);
    }
  }, [visible, onVisibleChange]); // 位置样式

  const {
    x,
    y
  } = position || {
    x: 0,
    y: 0
  };
  const styles = React.useMemo(() => ({
    left: x,
    top: y
  }), [x, y]);
  /**
   * 点击回调函数
   *
   * @return {void}
   */

  const handleClick = React.useCallback(() => {
    handleChangeVisible(false);
  }, [handleChangeVisible]); // 点击菜单外

  const containerRef = useClickOuterRef(handleClick); // 右键菜单显示的时候，阻止body滚动

  React.useEffect(() => {
    if (visible) {
      document.body.className += ' ctxmenu-hidden';
    }

    return () => {
      if (visible) {
        document.body.className = (document.body.className || '').replace(' ctxmenu-hidden', '');
      }
    };
  }, [visible]);
  const handleContextMenu = React.useCallback(e => {
    e.preventDefault();
  }, []);
  return visible ? /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_createElement$10(ContextRoot, {
    onContextMenu: handleContextMenu
  }, /*#__PURE__*/_createElement$10(ContextContainer, {
    style: styles,
    onClick: handleClick,
    ref: containerRef
  }, /*#__PURE__*/React__default['default'].cloneElement(child, {
    selectedKeys: [],
    openKeys: []
  })), _ref$f), document.body) : _ref2$2;
};
ContextMenu.defaultProps = {
  position: {
    x: 0,
    y: 0
  }
};

const _createElement$11 = /*#__PURE__*/React__default['default'].createElement;
const useContextMenuRef = menuNode => {
  const ctxMenuRef = React.useRef(null);

  const [visible, setVisible] = React.useState(false),
        _ref = /*#__PURE__*/_createElement$11(ContextMenu, {
    position: position,
    visible: visible,
    onVisibleChange: setVisible
  }, menuNode);

  const [position, setPosition] = React.useState({
    x: 0,
    y: 0
  });
  const oRoot = React.useMemo(() => document.createElement('div'), []);
  React.useEffect(() => {
    /**
     * 右键菜单操作
     */
    const handleContextMenu = e => {
      e.preventDefault();
      setPosition({
        x: e.clientX,
        y: e.clientY
      });
      setVisible(true);
    };

    const oElem = ctxMenuRef.current;

    if (oElem) {
      oElem.addEventListener('contextmenu', handleContextMenu);
    }

    return () => {
      if (oElem) {
        oElem.removeEventListener('contextmenu', handleContextMenu);
      }
    };
  }, []);
  React.useEffect(() => {
    ReactDOM__default['default'].render(_ref, oRoot);
  }, [visible, position, setVisible, menuNode, oRoot]);
  return ctxMenuRef;
};

/* eslint-disable no-multiple-empty-lines */
const AlertRoot = withTheme(styled__default['default'].div(["", " width:100%;overflow:hidden;&.hidden{display:none;}.type-icon{font-size:", ";margin-right:", ";}.close-icon{margin-top:2px;color:", ";cursor:pointer;}&.close-mode{.close-icon{margin-top:2px;margin-left:", ";}}&.action-mode{.close-icon{display:none;}}&.info{border-color:", ";background-color:", ";.type-icon{color:", ";}}&.error{border-color:", ";background-color:", ";.type-icon{color:", ";}}&.warning{border-color:", ";background-color:", ";.type-icon{color:", ";}}"], resetComponent, ({
  theme
}) => theme.ui.fontSizeLarge, ({
  theme
}) => theme.ui.marginMedium, ({
  theme
}) => theme.ui.colorText3, ({
  theme
}) => theme.ui.margin, ({
  theme
}) => theme.ui.primaryColor, ({
  theme
}) => theme.ui.primaryColor2, ({
  theme
}) => theme.ui.primaryColor, ({
  theme
}) => theme.ui.errorColor, ({
  theme
}) => theme.ui.errorColor2, ({
  theme
}) => theme.ui.errorColor, ({
  theme
}) => theme.ui.warningColor, ({
  theme
}) => theme.ui.warningColor2, ({
  theme
}) => theme.ui.warningColor));
const AlertWrap = withTheme(styled__default['default'].div(["display:flex;align-items:flex-start;padding:", " ", ";line-height:1.6;font-size:", ";color:", ";"], ({
  theme
}) => theme.ui.alertVerticalPadding, ({
  theme
}) => theme.ui.alertHorizontalPadding, ({
  theme
}) => theme.ui.fontSizeSmall, ({
  theme
}) => theme.ui.colorText5));
const MessageWrap = withTheme(styled__default['default'].div(["flex:1 auto;width:0;display:flex;align-items:center;flex-direction:column;"]));
const MessageContent = withTheme(styled__default['default'].div(["display:flex;align-items:center;height:", ";width:100%;font-size:", ";"], ({
  theme
}) => theme.ui.elementHeightSmall, ({
  size,
  theme
}) => size === 'large' ? theme.ui.fontSize : theme.ui.fontSizeSmall));
const MessageText = withTheme(styled__default['default'].div(["", " flex-shrink:1;"], Ellipsis));
const DescriptionContent = withTheme(styled__default['default'].div(["display:flex;align-items:center;width:100%;height:", ";font-size:", ";"], ({
  theme
}) => theme.ui.elementHeightSmall, ({
  theme
}) => theme.ui.fontSizeSmall));
const DescriptionText = withTheme(styled__default['default'].div(["", ""], Ellipsis));
const TextButton = /*#__PURE__*/styled__default['default'](Button)(["font-size:12px;cursor:pointer;padding:0 4px 0 4px;display:flex;align-items:center;justify-content:center;"]);
const IconWrap = withTheme(styled__default['default'].div(["height:", ";display:flex;align-items:center;"], ({
  theme
}) => theme.ui.elementHeightSmall));
const ActionWrap = withTheme(styled__default['default'](TextButton)(["height:", ";color:", ";margin-left:", ";margin-right:", ";cursor:pointer;&:hover{color:", ";}"], ({
  theme
}) => theme.ui.elementHeightSmall, ({
  theme
}) => theme.ui.linkHoverColor, ({
  theme
}) => theme.ui.margin, ({
  theme
}) => theme.ui.margin, ({
  theme
}) => theme.ui.linkPressColor));
const CloseButton = withTheme(styled__default['default'](TextButton)(["color:", ";width:24px;height:", ";margin-left:0;color:#0089ff;&:hover,&:focus{color:", ";}&.active{color:", ";}"], ({
  theme
}) => theme.ui.colorText3, ({
  theme
}) => theme.ui.elementHeightSmall, ({
  theme
}) => theme.ui.colorText1, ({
  theme
}) => theme.ui.colorText1)); // export const AlertWrap = withTheme(styled.div<any>`
//   display: flex;
//   align-items: flex-start;
//   padding: ${({ theme }) => t
//   heme.ui.alertVerticalPadding} ${({ theme }) => theme.ui.alertHorizontalPadding};
//   line-height: 1.6;
//   font-size: ${({ theme }) => theme.ui.fontSizeSmall};
//   color: ${({ theme }) => theme.ui.colorText5};
// `);
// export const AlertRoot = withTheme(styled.div<any>`
//   width: 100%;
//   box-sizing: border-box;
//   border: 1px solid transparent;
//   border-radius: ${({ theme }) => theme.ui.radius};
//   overflow: hidden;
//   transition: height .3s ease;
//   * {
//     box-sizing: border-box;
//   }
//   .type-icon {
//     font-size: 16px;
//     margin-right: ${({ theme }) => theme.ui.marginMedium};
//     margin-top: 2px;
//   }
//   .close-icon {
//     margin-top: 2px;
//     color: ${({ theme }) => theme.ui.colorText3};
//     cursor: pointer;
//   }
//   &.close-mode {
//     .close-icon {
//       margin-top: 2px;
//       margin-left: ${({ theme }) => theme.ui.margin};
//     }
//   }
//   &.action-mode {
//     .close-icon {
//       display: none;
//     }
//   }
//   &.info {
//     border-color: ${({ theme }) => theme.ui.primaryColor};
//     background-color: ${({ theme }) => theme.ui.primaryColor2};
//     .type-icon {
//       color: ${({ theme }) => theme.ui.primaryColor};
//     }
//   }
//   &.error {
//     border-color: ${({ theme }) => theme.ui.errorColor};
//     background-color: ${({ theme }) => theme.ui.errorColor2};
//     .type-icon {
//       color: ${({ theme }) => theme.ui.errorColor};
//     }
//   }
//   &.warning {
//     border-color: ${({ theme }) => theme.ui.warningColor};
//     background-color: ${({ theme }) => theme.ui.warningColor2};
//     .type-icon {
//       color: ${({ theme }) => theme.ui.warningColor};
//     }
//   }
// `);
// export const MessageWrap = withTheme(styled.div`
//   flex: 1 auto;
//   width: 0;
//   display: flex;
//   align-items: center;
//   flex-direction: column;
// `);
// export const MessageContent = withTheme(styled.div<any>`
//   width: 100%;
//   font-size: ${({ size, theme }) =>
// (size === 'large' ? theme.ui.fontSize : theme.ui.fontSizeSmall)};
//   max-height: ${({ size, theme }) =>
// (size === 'large' ? 'auto' : parseInt(theme.ui.fontSizeSmall, 10) * 2 * 1.6 + 'px')};
//   overflow: hidden;
// `);
// export const DescriptionContent = withTheme(styled.div`
//   margin-top: ${({ theme }) => theme.ui.marginSmall};
//   color: ${({ theme }) => theme.ui.colorText3};
//   max-height: ${({ theme }) => (parseInt(theme.ui.fontSizeSmall, 10) * 2 * 1.6 + 'px')};
//   overflow: hidden;
// `);
// export const EllipsisWrap = withTheme(styled.div<any>`
//   position: relative;
//   overflow: hidden;
//   width: 100%;
//   ${({ ellipsis }) => (ellipsis ? Ellipsis : '')}
// `);
// export const EllipsisShadowWrap = withTheme(styled.div`
//   position: absolute;
//   left: 0;
//   right: 0;
//   top: 100%;
//   opacity: 0;
//   z-index: -9999;
// `);
// export const ActionWrap = withTheme(styled.span`
//   color: ${({ theme }) => theme.ui.linkColor};
//   margin-left: ${({ theme }) => theme.ui.margin};
//   cursor: pointer;
//   &:hover {
//     color: ${({ theme }) => theme.ui.linkHoverColor};
//   }
// `);

const _createElement$12 = /*#__PURE__*/React__default['default'].createElement;
// [向左]TODO：info 类型图标需要等视觉给过来后替换
const Alert = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    message,
    description,
    className,
    type,
    style,
    actionText,
    onAction,
    onClose,
    testid
  } = props; // visible 是受控的

  const [visible, setVisible] = useControlledValue(props.visible, props.defaultVisible); // 图标

  let TypeIconNode = ReportFillNormal;

  if (type === 'warning') {
    TypeIconNode = RoundcloseThickNormal;
  } else if (type === 'error') {
    TypeIconNode = RoundcloseThickNormal;
  }
  /**
   * 点击查看详情
   */


  const handleAction = React.useCallback(() => {
    let autoClose = true;

    if (onAction) {
      const returnedValue = onAction();
      autoClose = returnedValue !== false;
    }

    if (autoClose) {
      setVisible(false);
    }
  }, [onAction, setVisible]);
  /**
   * 点击关闭按钮
   */

  const handleClose = React.useCallback(() => {
    let autoClose = true;

    if (onClose) {
      const returnedValue = onClose();
      autoClose = returnedValue !== false;
    }

    if (autoClose) {
      setVisible(false);
    }
  }, [setVisible, onClose]);
  return /*#__PURE__*/_createElement$12(AlertRoot, {
    style: style,
    className: classnames(className, type, {
      hidden: !visible
    })
  }, /*#__PURE__*/_createElement$12(AlertWrap, null, /*#__PURE__*/_createElement$12(IconWrap, null, /*#__PURE__*/_createElement$12(TypeIconNode, {
    className: "type-icon"
  })), /*#__PURE__*/_createElement$12(MessageWrap, null, /*#__PURE__*/_createElement$12(MessageContent, {
    size: description ? 'large' : 'default'
  }, /*#__PURE__*/_createElement$12(MessageText, null, message)), !!description && /*#__PURE__*/_createElement$12(DescriptionContent, null, /*#__PURE__*/_createElement$12(DescriptionText, null, description))), !!actionText && /*#__PURE__*/_createElement$12(ActionWrap, {
    bordered: false,
    shape: "rect",
    onClick: handleAction
  }, actionText), /*#__PURE__*/_createElement$12(CloseButton, {
    bordered: false,
    shape: "rect",
    icon: /*#__PURE__*/_createElement$12(CloseBetaNormal, {
      style: {
        color: 'rgba(17, 31, 44, 0.4)'
      }
    }),
    onClick: handleClose,
    testid: testid ? `Alert-${testid}` : undefined
  })));
});
Alert.defaultProps = {
  type: 'info',
  defaultVisible: true
}; // 以下为多行省略的代码，暂时注释
// return (
//   <AlertRoot
//     style={{
//       ...(style || {}),
//       display: visible ? 'block' : 'none',
//     }}
//     className={classnames(className, type, {
//       'close-mode': !actionText,
//       'action-mode': actionText,
//     })}
//   >
//     <AlertWrap size={description ? 'large' : 'default'}>
//       <TypeIconNode className="type-icon" />
//       <MessageWrap>
//         <MessageContent
//           size={description ? 'large' : 'default'}
//         >
//           <Ellipsis
//             lines={description ? 1 : 2}
//             text={message}
//             suffix={
//               !!actionText && !description && (
//                 <ActionWrap onClick={handleAction}>{actionText}</ActionWrap>
//                )
//             }
//           />
//         </MessageContent>
//         {
//           !!description && (
//             <DescriptionContent>
//               <Ellipsis lines={2} text={description} />
//             </DescriptionContent>
//           )
//         }
//       </MessageWrap>
//       <ClosedNormal
//         className="close-icon"
//         onClick={handleClose}
//       />
//     </AlertWrap>
//   </AlertRoot>
// );

/* eslint-disable @typescript-eslint/explicit-function-return-type */
const NotificationFadeIn = /*#__PURE__*/styled.keyframes(["0%{left:365px;opacity:0;}100%{left:0;opacity:1;}"]);
const NotificationFadeOut = /*#__PURE__*/styled.keyframes(["0%{left:0;opacity:1;}100%{left:365px;opacity:0;}"]);
const ContainerRoot = withTheme(styled__default['default'].div(["position:fixed;right:0px;top:24px;bottom:auto;box-sizing:border-box;width:384px;margin:0;padding:0;margin-right:24px;max-width:calc(100vw - 32px);z-index:", ";font-size:", ";*{box-sizing:border-box;}"], ({
  theme
}) => theme.ui.zIndexMessage, ({
  theme
}) => theme.ui.fontSizeLarge));
const NotificationWrap = withTheme(styled__default['default'].div(["position:relative;margin-bottom:", ";box-shadow:", ";border:1px solid ", ";border-radius:", ";padding:", ";background-color:", ";&.notification-enter{animation:", " .24s cubic-bezier(.645,.045,.355,1);animation-play-state:paused;}&.notification-enter-active{animation-name:", ";animation-play-state:running;}&.notification-leave{animation:", " .24s cubic-bezier(.645,.045,.355,1);animation-play-state:paused;}&.notification-leave-active{animation-name:", ";animation-play-state:running;}"], ({
  theme
}) => theme.ui.margin, ({
  theme
}) => theme.ui.boxShadow, ({
  theme
}) => theme.ui.borderColor, ({
  theme
}) => theme.ui.marginMedium, ({
  theme
}) => theme.ui.notificationPadding, ({
  theme
}) => theme.ui.colorGray1, NotificationFadeIn, NotificationFadeIn, NotificationFadeOut, NotificationFadeOut));
const NotificationTitle = withTheme(styled__default['default'].div(["line-height:1.5;font-weight:500;margin-bottom:", ";"], ({
  theme
}) => theme.ui.marginSmall));
const NotificationBody = withTheme(styled__default['default'].div(["line-height:1.5;color:", ";"], ({
  theme
}) => theme.ui.colorText4));
const NotificationFooter = withTheme(styled__default['default'].div(["margin-top:", ";"], ({
  theme
}) => theme.ui.marginSmall));

/* eslint-disable no-plusplus */
const _createElement$13 = /*#__PURE__*/React__default['default'].createElement;
const Notification = props => {
  const {
    notifications
  } = props;
  return /*#__PURE__*/_createElement$13(ContainerRoot, null, /*#__PURE__*/_createElement$13(CSSTransitionGroup__default['default'], {
    transitionName: "notification",
    transitionEnterTimeout: 240,
    transitionLeaveTimeout: 240
  }, notifications.map(noti => /*#__PURE__*/_createElement$13(NotificationWrap, {
    key: noti.key
  }, /*#__PURE__*/_createElement$13(NotificationTitle, null, noti.title || null), /*#__PURE__*/_createElement$13(NotificationBody, null, noti.body || null), noti.footer !== null && /*#__PURE__*/_createElement$13(NotificationFooter, null, noti.footer)))));
};
const notification$1 = (() => {
  let uuid = 0;
  let notifications = [];
  let handleUpdate = null;

  function init() {
    if (handleUpdate) {
      return;
    }

    const oDiv = document.createElement('div');
    oDiv.style.position = 'absolute';
    oDiv.style.width = '100%';
    oDiv.style.top = '0px';
    oDiv.style.left = '0px';
    document.body.appendChild(oDiv);

    handleUpdate = notices => {
      ReactDOM__default['default'].render( /*#__PURE__*/_createElement$13(Notification, {
        notifications: notices
      }), oDiv);
    };
  }

  return {
    open(config) {
      init();
      config.key = config.key || `noid-${++uuid}`;

      if (uuid > 10000000) {
        uuid = 0;
      }

      config.duration = typeof config.duration !== 'undefined' ? config.duration || 0 : 4.5;

      if (config.duration !== 0) {
        setTimeout(() => this.close(config.key), config.duration * 1000);
      }

      notifications = [...notifications, config];
      handleUpdate(notifications);
    },

    close(key) {
      init();

      if (key) {
        const index = notifications.findIndex(n => n.key === key);

        if (index !== -1) {
          notifications = [...notifications];
          notifications.splice(index, 1);
        }
      } else {
        notifications = [];
      }

      handleUpdate(notifications);
    }

  };
})();

/* eslint-disable @typescript-eslint/explicit-function-return-type */
const ContainerRoot$1 = withTheme(styled__default['default'].div(["position:fixed;left:0px;top:16px;width:100%;box-sizing:border-box;z-index:", ";font-size:", ";color:", ";*{box-sizing:border-box;}"], ({
  theme
}) => theme.ui.zIndexMessage, ({
  theme
}) => theme.ui.fontSize, ({
  theme
}) => theme.ui.colorText4));
const Container$1 = withTheme(styled__default['default'].div(["position:absolute;left:50%;transform:translate(-50%,0);text-align:center;"]));
const MessageBox = withTheme(styled__default['default'].div(["margin-bottom:", ";.animated{transition:all .24s cubic-bezier(.645,.045,.355,1);}&.message-enter{.animated{opacity:0;transform:translate(0,-100%);}}&.message-enter-active{.animated{opacity:1;transform:translate(0,0);}}&.message-leave{.animated{opacity:1;transform:translate(0,0);}}&.message-leave-active{.animated{opacity:0;transform:translate(0,-100%);}}"], ({
  theme
}) => theme.ui.margin));
const MessageWrap$1 = withTheme(styled__default['default'].div(["display:inline-block;justify-content:center;align-items:center;padding:", " ", ";background-color:", ";box-shadow:", ";border:1px solid ", ";border-radius:100px;.icon{margin-right:", ";font-size:20px;&.success-icon{color:", ";}&.info-icon,&.loading-icon{color:", ";}&.error-icon{color:", ";}&.warning-icon{color:", ";}}"], ({
  theme
}) => theme.ui.margin, ({
  theme
}) => theme.ui.marginLarge, ({
  theme
}) => theme.ui.colorGray1, ({
  theme
}) => theme.ui.boxShadow, ({
  theme
}) => theme.ui.borderColor, ({
  theme
}) => theme.ui.marginSmall, ({
  theme
}) => theme.ui.successColor, ({
  theme
}) => theme.ui.infoColor, ({
  theme
}) => theme.ui.errorColor, ({
  theme
}) => theme.ui.warningColor));
const MessageContent$1 = withTheme(styled__default['default'].span(["line-height:1.5;", ""], Ellipsis));
const MessageFlex = withTheme(styled__default['default'].span(["display:flex;justify-content:center;align-items:center;"]));

/* eslint-disable arrow-body-style */
const _createElement$14 = /*#__PURE__*/React__default['default'].createElement;

var _ref$g = /*#__PURE__*/_createElement$14(CheckboxFillNormal, {
  className: "icon success-icon"
});

var _ref2$3 = /*#__PURE__*/_createElement$14(RoundcloseThickNormal, {
  className: "icon error-icon"
});

var _ref3$2 = /*#__PURE__*/_createElement$14(ReportFillNormal, {
  className: "icon info-icon"
});

var _ref4 = /*#__PURE__*/_createElement$14(ReportFillNormal, {
  className: "icon warning-icon"
});

var _ref5 = /*#__PURE__*/_createElement$14(LoadingNormal, {
  spin: true,
  className: "icon loading-icon"
});

const Message = props => {
  const {
    messages
  } = props;
  const IconNodes = {
    success: _ref$g,
    error: _ref2$3,
    info: _ref3$2,
    warning: _ref4,
    loading: _ref5
  };
  return /*#__PURE__*/_createElement$14(ContainerRoot$1, null, /*#__PURE__*/_createElement$14(Container$1, null, /*#__PURE__*/_createElement$14(CSSTransitionGroup__default['default'], {
    transitionName: "message",
    transitionEnterTimeout: 240,
    transitionLeaveTimeout: 240
  }, messages.map(msg => {
    const {
      key,
      type,
      content,
      animated = true
    } = msg;
    return /*#__PURE__*/_createElement$14(MessageBox, {
      key: key
    }, /*#__PURE__*/_createElement$14(MessageWrap$1, {
      className: classnames({
        animated
      })
    }, /*#__PURE__*/_createElement$14(MessageFlex, null, IconNodes[type], /*#__PURE__*/_createElement$14(MessageContent$1, null, content))));
  }))));
};
const message = (() => {
  let uuid = 0;
  let messages = [];
  let handleUpdate = null;

  function init() {
    if (handleUpdate) {
      return;
    }

    const oDiv = document.createElement('div');
    oDiv.style.position = 'absolute';
    oDiv.style.width = '100%';
    oDiv.style.top = '0px';
    oDiv.style.left = '0px';
    document.body.appendChild(oDiv);

    handleUpdate = msgs => {
      ReactDOM__default['default'].render( /*#__PURE__*/_createElement$14(Message, {
        messages: msgs
      }), oDiv);
    };
  }

  const getConfig = (config, duration) => {
    const newConfig = typeof config === 'string' ? {
      content: config,
      duration: typeof duration !== 'undefined' ? duration : 3
    } : config;
    newConfig.key = newConfig.key || `msgid-${++uuid}`;

    if (uuid > 10000000) {
      uuid = 0;
    }

    return newConfig;
  };

  return {
    open(config) {
      init();
      messages = [...messages, config];
      handleUpdate(messages);

      if (config.duration > 0) {
        setTimeout(() => {
          const {
            key,
            onClose
          } = config;
          this.close(key);
          onClose && onClose();
        }, config.duration * 1000);
      }
    },

    close(key) {
      if (key) {
        const index = messages.findIndex(m => m.key === key);

        if (index !== -1) {
          messages = [...messages];
          messages.splice(index, 1);
        }
      } else {
        messages = [];
      }

      if (handleUpdate) {
        handleUpdate(messages);
      }
    },

    success(config, duration) {
      config = getConfig(config, duration);
      config.type = 'success';
      this.open(config);
    },

    error(config, duration) {
      config = getConfig(config, duration);
      config.type = 'error';
      this.open(config);
    },

    warning(config, duration) {
      config = getConfig(config, duration);
      config.type = 'warning';
      this.open(config);
    },

    loading(config, duration) {
      config = getConfig(config, duration);
      config.type = 'loading';
      this.open(config);
    },

    info(config, duration) {
      config = getConfig(config, duration);
      config.type = 'info';
      this.open(config);
    }

  };
})();

/* eslint-disable @typescript-eslint/no-explicit-any */
const ConfirmButton = withTheme(styled__default['default'](Button)(["margin-left:", ";"], ({
  theme
}) => theme.ui.margin));
const Root = /*#__PURE__*/styled__default['default'].div(["box-sizing:border-box;*{box-sizing:border-box;}"]);
const Title$1 = /*#__PURE__*/styled__default['default'].div([""]);
const CloseButton$1 = withTheme(styled__default['default'].div(["position:absolute;right:14px;top:10px;padding:10px;line-height:1;font-size:16px;cursor:pointer;color:", ";transition:all .24s ease;&:hover{color:", ";}"], ({
  theme
}) => theme.ui.colorText3, ({
  theme
}) => theme.ui.colorText4));
const Header = withTheme(styled__default['default'].div(["font-weight:500;font-size:", ";margin-bottom:", ";"], ({
  theme
}) => theme.ui.fontSizeLarge, ({
  theme
}) => theme.ui.marginHug));
const Body = withTheme(styled__default['default'].div(["font-size:", ";"], ({
  theme
}) => theme.ui.fontSize));
const Footer = withTheme(styled__default['default'].div(["margin-top:", ";"], ({
  theme
}) => theme.ui.marginHug));
const FooterWrap = /*#__PURE__*/styled__default['default'].div(["display:flex;justify-content:flex-end;"]);
const Content$1 = withTheme(styled__default['default'].div(["position:relative;padding:", ";box-shadow:", ";background-color:", ";border-radius:", ";width:", ";"], ({
  theme
}) => theme.ui.paddingLarge, ({
  theme
}) => theme.ui.boxShadow, ({
  theme
}) => theme.ui.colorGray1, ({
  theme
}) => theme.ui.radiusBig, ({
  width
}) => typeof width === 'number' ? `${width}px` : width));
const Mask = withTheme(styled__default['default'].div(["display:", ";position:fixed;top:0;right:0;bottom:0;left:0;z-index:", ";height:100%;background-color:", ";"], ({
  visible
}) => visible ? 'block' : 'none', ({
  theme
}) => theme.ui.zIndexModalMask, ({
  theme
}) => theme.ui.modalMaskBackground));
const Wrap = withTheme(styled__default['default'].div(["display:", ";position:fixed;top:0;right:0;bottom:0;left:0;z-index:", ";overflow:auto;outline:0;justify-content:center;align-items:center;"], ({
  visible
}) => visible ? 'flex' : 'none', ({
  theme
}) => theme.ui.zIndexModal));
const TitleTextWrap = withTheme(styled__default['default'].span(["margin-left:", ";"], ({
  theme
}) => theme.ui.margin));
const TitleIconWrap = withTheme(styled__default['default'].span(["font-size:22px;color:", ";"], ({
  theme,
  colorKey
}) => colorKey ? theme.ui[colorKey] : theme.ui.colorText3));
const TitleIconTextWrap = /*#__PURE__*/styled__default['default'].div(["display:flex;align-items:center;"]);

const _createElement$15 = /*#__PURE__*/React__default['default'].createElement;

var _ref$h = /*#__PURE__*/_createElement$15(LoadingNormal, {
  spin: true
});

var _ref3$3 = /*#__PURE__*/_createElement$15(LoadingNormal, {
  spin: true
});

var _ref4$1 = /*#__PURE__*/_createElement$15(TitleIconWrap, {
  colorKey: "colorBlue1"
}, /*#__PURE__*/_createElement$15(ReportFillNormal, null));

var _ref5$1 = /*#__PURE__*/_createElement$15(TitleIconWrap, {
  colorKey: "colorGreen1"
}, /*#__PURE__*/_createElement$15(CheckboxFillNormal, null));

var _ref6 = /*#__PURE__*/_createElement$15(TitleIconWrap, {
  colorKey: "colorRed1"
}, /*#__PURE__*/_createElement$15(RoundcloseThickNormal, null));

var _ref7 = /*#__PURE__*/_createElement$15(TitleIconWrap, {
  colorKey: "colorOrange1"
}, /*#__PURE__*/_createElement$15(WarnFillNormal, null));

// eslint-disable-next-line max-lines-per-function
const Modal = Object.assign(props => {
  const {
    visible,
    onOk,
    title,
    children,
    onCancel,
    width,
    footer,
    confirmLoading,
    bodyStyle,
    maskStyle,
    style,
    closable,
    okButtonProps,
    cancelButtonProps,
    zIndex,
    maskClosable = true,
    testid,
    keyboard
  } = props; // 是否在加载中

  const [confirming, setConfirming] = React.useState(false);
  const finalConfirming = confirmLoading === undefined ? confirming : confirmLoading; // 记录是否已经显示过

  const mounted = React.useRef(false);
  mounted.current = mounted.current || !!visible; // 组件是否已被卸载

  const isUnmounted = React.useRef(false); // 国际化

  const t = useTranslate(props.locale); // OK和cancel的文案

  const okText = props.okText || t('we_ui_ok_text');
  const cancelText = props.cancelText || t('we_ui_cancel_text'); // 创建container节点

  const oContainer = React.useMemo(() => {
    if (mounted.current) {
      const oDiv = document.createElement('div');
      oDiv.style.position = 'absolute';
      oDiv.style.left = '0px';
      oDiv.style.top = '0px';
      oDiv.style.width = '100%';
      return oDiv;
    }

    return null; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [mounted.current]); // 插入节点到body

  React.useLayoutEffect(() => {
    if (oContainer) {
      document.body.appendChild(oContainer);
    }

    return () => {
      if (oContainer) {
        document.body.removeChild(oContainer);
      }

      isUnmounted.current = true;
    };
  }, [oContainer]);
  /**
   * 点击遮罩
   *
   * @return {void}
   */

  const handleClose = React.useCallback(() => {
    if (onCancel) {
      onCancel();
    }
  }, [onCancel]);
  /**
   * 阻止冒泡
   */

  const stopPropagation = React.useCallback(e => {
    e.stopPropagation();
  }, []);
  /**
   * 确认点击
   */

  const handleConfirm = React.useCallback(() => {
    if (onOk) {
      const returnedValue = onOk();

      if (returnedValue && returnedValue instanceof Promise) {
        setConfirming(true);
        returnedValue.then(() => {
          if (!isUnmounted.current) setConfirming(false);
        }).catch(e => {
          // eslint-disable-next-line no-console
          console.error(e);
        });
      }
    }
  }, [onOk, isUnmounted]);
  const maskStyleCombined = React.useMemo(() => {
    const v = { ...(maskStyle || {})
    };

    if (typeof zIndex === 'number') {
      v.zIndex = zIndex;
    }

    return v;
  }, [maskStyle, zIndex]);
  const wrapStyle = React.useMemo(() => {
    return typeof zIndex === 'number' ? {
      zIndex
    } : undefined;
  }, [zIndex]);
  const onClickMask = React.useCallback(() => {
    if (maskClosable) {
      handleClose();
    }
  }, [maskClosable, handleClose]);
  React.useEffect(() => {
    const handleKeyDown = event => {
      if (event.which === KEY_CODES.ESC) {
        handleClose();
      }
    };

    if (visible && keyboard) {
      document.addEventListener('keydown', handleKeyDown);
    }

    return () => {
      if (visible && keyboard) {
        document.removeEventListener('keydown', handleKeyDown);
      }
    };
  }, [handleClose, keyboard, visible]);
  return oContainer ? /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_createElement$15(Root, {
    "data-testid": testid ? `Modal_${testid}` : undefined
  }, /*#__PURE__*/_createElement$15(Mask, {
    visible: visible,
    style: maskStyleCombined
  }), /*#__PURE__*/_createElement$15(Wrap, {
    visible: visible,
    onMouseDown: onClickMask,
    style: wrapStyle
  }, /*#__PURE__*/_createElement$15(Content$1, {
    width: width,
    onMouseDown: stopPropagation,
    style: style,
    "data-testid": testid ? `Modal_content_${testid}` : undefined
  }, !!title && /*#__PURE__*/_createElement$15(Header, null, /*#__PURE__*/_createElement$15(Title$1, null, title)), /*#__PURE__*/_createElement$15(Body, {
    style: bodyStyle
  }, children), footer !== null && /*#__PURE__*/_createElement$15(Footer, null, footer || /*#__PURE__*/_createElement$15(FooterWrap, null, /*#__PURE__*/_createElement$15(Button, _extends__default['default']({
    shape: "round",
    onClick: handleClose,
    testid: testid ? `${testid}_close` : undefined
  }, cancelButtonProps || {}), cancelText), /*#__PURE__*/_createElement$15(ConfirmButton, _extends__default['default']({
    shape: "round",
    type: "primary",
    icon: finalConfirming ? _ref$h : undefined,
    onClick: handleConfirm,
    testid: testid ? `${testid}_confirm` : undefined
  }, okButtonProps || {}), okText))), !!closable && /*#__PURE__*/_createElement$15(CloseButton$1, {
    onClick: handleClose
  }, /*#__PURE__*/_createElement$15(ClosedNormal, {
    className: "close-icon",
    testid: testid ? `${testid}_CloseButton` : undefined
  }))))), oContainer) : null;
}, {
  confirm(options = {}) {
    const {
      content,
      onOk,
      onCancel,
      ...props
    } = options;
    let oConfirmContainer;
    oConfirmContainer = document.createElement('div');
    document.body.appendChild(oConfirmContainer);

    const destroy = () => {
      ReactDOM__default['default'].unmountComponentAtNode(oConfirmContainer);
      document.body.removeChild(oConfirmContainer);
      oConfirmContainer = undefined;
    };

    const handleOk = () => {
      let returnedValue;

      if (onOk) {
        returnedValue = onOk();
      }

      if (returnedValue && returnedValue instanceof Promise) {
        return returnedValue.then(() => destroy());
      } else {
        destroy();
      }
    };

    const handleCancel = () => {
      if (onCancel) {
        onCancel();
      }

      destroy();
    };

    ReactDOM__default['default'].render( /*#__PURE__*/_createElement$15(Modal, _extends__default['default']({}, props, {
      visible: true,
      title: options.title,
      width: options.width || 420,
      onOk: handleOk,
      onCancel: handleCancel
    }), content || ''), oConfirmContainer);
    return {
      destroy
    };
  },

  /**
   * 辅助构造不同类型的信息提示模态框（只提供一个按钮用于关闭）
   * 接受不同的 icon 元素作为参数，返回用于构造信息提示模态框的方法
   */
  // eslint-disable-next-line max-lines-per-function
  makeMessageModal(iconNode) {
    return function (options = {}) {
      const {
        content,
        onOk,
        title,
        okText,
        okButtonProps,
        showLoadingIcon = true,
        ...props
      } = options;
      let oMesContainer;

      if (!oMesContainer) {
        oMesContainer = document.createElement('div');
        document.body.appendChild(oMesContainer);
      }

      const destroy = () => {
        ReactDOM__default['default'].unmountComponentAtNode(oMesContainer);
        document.body.removeChild(oMesContainer);
        oMesContainer = undefined;
      };

      const handleOk = () => {
        let returnedValue;

        if (onOk) {
          returnedValue = onOk();
        }

        if (returnedValue && returnedValue instanceof Promise) {
          if (showLoadingIcon) render({
            visible: true,
            loading: true
          });
          return returnedValue.then(() => destroy());
        } else {
          destroy();
        }
      };

      const handleCancel = () => {
        render({
          visible: false
        });
        destroy();
      };

      var _ref2 = /*#__PURE__*/_createElement$15(TitleIconTextWrap, null, iconNode, /*#__PURE__*/_createElement$15(TitleTextWrap, null, title));

      function render({
        visible,
        loading
      }) {
        const titleNode = _ref2;

        const el = /*#__PURE__*/_createElement$15(Modal, _extends__default['default']({}, props, {
          visible: visible,
          title: titleNode,
          width: options.width || 420,
          onCancel: handleCancel,
          bodyStyle: {
            paddingLeft: '34px'
          },
          footer: /*#__PURE__*/_createElement$15(FooterWrap, null, /*#__PURE__*/_createElement$15(TranslateProvider, null, t => /*#__PURE__*/_createElement$15(ConfirmButton, _extends__default['default']({
            shape: "round",
            type: "primary",
            icon: loading ? _ref3$3 : undefined,
            onClick: handleOk,
            testid: options.testid ? `${options.testid}_ConfirmButton` : undefined
          }, okButtonProps || {}), okText || t('we_ui_ok_text'))))
        }), content || '');

        ReactDOM__default['default'].render(el, oMesContainer);
      }

      render({
        visible: true,
        loading: false
      });
      return {
        destroy
      };
    };
  },

  info(options = {}) {
    const infoModal = this.makeMessageModal(_ref4$1);
    return infoModal(options);
  },

  success(options = {}) {
    const successModal = this.makeMessageModal(_ref5$1);
    return successModal(options);
  },

  error(options = {}) {
    const errorModal = this.makeMessageModal(_ref6);
    return errorModal(options);
  },

  warning(options = {}) {
    const warningModal = this.makeMessageModal(_ref7);
    return warningModal(options);
  }

});
Modal.defaultProps = {
  width: 520,
  closable: true,
  keyboard: true
};

const InputNumberInner = withTheme(styled__default['default'].span(["position:relative;line-height:20px;display:inline-block;min-width:48px;border:1px solid ", ";border-radius:", ";"], p => p.theme.ui.commonLineLightColor, p => p.theme.ui.radius));
const InputStyled$1 = withTheme(styled__default['default'](InputMemo)(["box-sizing:border-box;border:0;padding:4px 16px 4px 4px;height:24px;&::-webkit-inner-spin-button{-webkit-appearance:none;margin:0;}"]));
const Adjuster = /*#__PURE__*/styled__default['default'].span(["position:absolute;right:0;top:0;bottom:0;width:12px;line-height:12px;z-index:0;"]);
const IconWrapper = withTheme(styled__default['default'].div(["box-sizing:border-box;position:relative;display:flex;flex-direction:column;justify-content:center;align-items:center;height:12px;cursor:pointer;&:hover{background-color:#eee;}&:active{background-color:#ddd;}.weicon{color:", ";&.disabled{color:", ";cursor:not-allowed;}}"], p => p.theme.ui.commonBaseColor3, p => p.theme.ui.commonBaseColor4));
const UnitWrapper = /*#__PURE__*/styled__default['default'].span(["margin-left:4px;user-select:none;"]);
const NumberInputWrap = /*#__PURE__*/styled__default['default'].span([""]);

/* eslint-disable max-lines-per-function */
const _createElement$16 = /*#__PURE__*/React__default['default'].createElement;
const iconStyle$1 = {
  width: 8,
  height: 8,
  lineHeight: 12
};
const NumberInput = props => {
  const {
    step,
    min,
    max,
    accuracy = 0,
    defaultValue,
    unit,
    onChange,
    disabled,
    className,
    style,
    placeholder = '',
    testid
  } = props;
  const [value, setValue] = useControlledValue(props.value, defaultValue);
  const inputRef = React.useRef(); // 上一个合法值，用于解析得到非法值的恢复

  const lastVal = React.useRef(min);
  const handleChange = React.useCallback(e => {
    if (onChange) {
      onChange(e);
    }

    setValue(e);
  }, [onChange, setValue]);
  const handleIncrease = React.useCallback(e => {
    e.preventDefault();
    const addResult = addFloat(Number(value), step);
    const newValue = formatNumber(addResult, accuracy, exports.ENumberStrategy.FLOOR);

    if (newValue <= max) {
      lastVal.current = newValue;
      handleChange(newValue);
    }
  }, [accuracy, handleChange, max, step, value]);
  const handleDecrease = React.useCallback(e => {
    e.preventDefault();
    const addResult = addFloat(Number(value), -step);
    const newValue = formatNumber(addResult, accuracy, exports.ENumberStrategy.FLOOR);

    if (newValue >= min) {
      lastVal.current = newValue;
      handleChange(newValue);
    }
  }, [accuracy, handleChange, min, step, value]);
  const handleInputBlur = React.useCallback(() => {
    // parse value
    let parsedValue = Number(value);

    if (isNaN(parsedValue)) {
      parsedValue = lastVal.current;
    } else if (parsedValue > max) {
      parsedValue = max;
    } else if (parsedValue < min) {
      parsedValue = min;
    } else if (needsRounding(value, accuracy)) {
      parsedValue = formatNumber(parsedValue, accuracy, exports.ENumberStrategy.FLOOR);
    }

    lastVal.current = parsedValue;
    handleChange(parsedValue);
  }, [value, accuracy, lastVal, max, min, handleChange]);
  const handleInputEnter = React.useCallback(() => {
    if (inputRef.current) {
      inputRef.current.blur();
    }
  }, [inputRef]);
  const handleInputChange = React.useCallback(e => {
    handleChange(e.target.value);
  }, [handleChange]);
  const val = Number(value);
  return /*#__PURE__*/_createElement$16(NumberInputWrap, null, /*#__PURE__*/_createElement$16(InputNumberInner, null, /*#__PURE__*/_createElement$16(InputStyled$1, {
    value: `${value === undefined ? '' : value}`,
    style: style,
    disabled: disabled,
    ref: inputRef // className 应放在哪里？
    ,
    className: className,
    onChange: handleInputChange,
    onBlur: handleInputBlur,
    onEnter: handleInputEnter,
    placeholder: placeholder,
    testid: testid ? `NumberInput-${testid}` : 'input-NumberInput'
  }), /*#__PURE__*/_createElement$16(Adjuster, null, /*#__PURE__*/_createElement$16(IconWrapper, {
    isUpper: true,
    onClick: handleIncrease,
    "data-testid": "arrow-increase"
  }, /*#__PURE__*/_createElement$16(ArrowUpTriangleNormal, {
    testid: testid,
    style: iconStyle$1,
    className: classnames({
      disabled: val + step > max
    })
  })), /*#__PURE__*/_createElement$16(IconWrapper, {
    isUpper: false,
    onClick: handleDecrease,
    "data-testid": "arrow-decrease"
  }, /*#__PURE__*/_createElement$16(ArrowDownTriangleNormal, {
    testid: testid,
    style: iconStyle$1,
    className: classnames({
      disabled: val - step < min
    })
  })))), unit && /*#__PURE__*/_createElement$16(UnitWrapper, null, unit));
};

const LineBox = /*#__PURE__*/styled__default['default'].div(["overflow:hidden;white-space:nowrap;display:flex;height:24px;align-items:center;"]);
const Wrapper = /*#__PURE__*/styled__default['default'].div(["&>*{margin:6px 0;}"]);
const Line = /*#__PURE__*/styled__default['default'].hr(["border:none;line-height:", ";overflow:hidden;position:relative;letter-spacing:0;width:", ";height:", ";background-color:", ";::before{font-size:", ";font-family:\"commonLineIconfont\" !important;content:\"", "\";color:", ";white-space:nowrap;font-style:normal;transform:", ";transform-origin:left;position:absolute;}"], props => props.size ? `${props.size}px` : 'inherit', props => props.length ? `${props.length}px` : 'inherit', props => props.size ? `${props.size}px` : 'inherit', props => props.bgColor ? props.bgColor : 'transparent', props => props.size ? `${props.unitHeight * props.size}px` : 'auto', props => props.lineContent ? props.lineContent : '', props => props.color ? props.color : 'inherit', props => props.scale > 0 ? `scale(${props.scale})` : 'scale(1)');
const Single = /*#__PURE__*/styled__default['default'].hr(["border:none;line-height:", ";overflow:hidden;width:", ";height:", ";background-color:", ";"], props => props.size ? `${props.size}px` : 'inherit', props => props.length ? `${props.length}px` : 'inherit', props => props.size ? `${props.size}px` : 'inherit', props => props.bgColor ? props.bgColor : 'inherit');
const OptionStyled = /*#__PURE__*/styled__default['default'](SelectOption)(["&.with-text{display:flex;}"]);
const TextSpan = /*#__PURE__*/styled__default['default'].span(["box-sizing:border-box;width:25px;margin-right:0;"]);
const TriggerStyled = /*#__PURE__*/styled__default['default'].div(["display:flex;font-size:12px;"]);

const _createElement$17 = /*#__PURE__*/React__default['default'].createElement;

/**
 * 每个svg图形只承载了最小可重复单元，通过重复迭代生成线
 * 根据总宽度和项目宽度，生成一个最小重复迭代的key值列表
 * @param {number} totalWidth 线条的总宽度
 * @param {number} unitWidth svg item的宽度
 */
function getCountkeys(totalWidth, unitWidth) {
  const count = Math.ceil(totalWidth / unitWidth);
  const keys = [];

  for (let i = 0; i < count; i += 1) {
    keys.push(`svg-${i}`);
  }

  return keys;
} // props 属性是否相同


function isPropsEqual(oldP, P) {
  return oldP.color === P.color && oldP.width === P.width;
} // 缓存虚拟dom提升性能


const linesCache = {};
const Thin = props => {
  const cache = linesCache.thin;
  if (cache && isPropsEqual(cache.props, props)) return cache.vnode;
  const {
    color = 'black',
    width = 120
  } = props;

  var _ref = /*#__PURE__*/_createElement$17("rect", {
    fill: color,
    x: "0",
    y: "0",
    width: "8",
    height: "2"
  });

  const vnode = /*#__PURE__*/_createElement$17(LineBox, {
    style: {
      width
    }
  }, getCountkeys(width, 8).map(key => /*#__PURE__*/_createElement$17("svg", {
    width: "8px",
    height: "2px",
    viewBox: "0 0 8 2",
    key: key
  }, _ref)));

  linesCache.thin = {
    props: { ...props
    },
    vnode
  };
  return vnode;
};
const Medium = props => {
  const cache = linesCache.medium;
  if (cache && isPropsEqual(cache.props, props)) return cache.vnode;
  const {
    color = 'black',
    width = 120
  } = props;

  var _ref2 = /*#__PURE__*/_createElement$17("rect", {
    fill: color,
    x: "0",
    y: "0",
    width: "12",
    height: "4"
  });

  const vnode = /*#__PURE__*/_createElement$17(LineBox, {
    style: {
      width
    }
  }, getCountkeys(width, 8).map(key => /*#__PURE__*/_createElement$17("svg", {
    width: "12px",
    height: "4px",
    viewBox: "0 0 12 4",
    key: key
  }, _ref2)));

  linesCache.medium = {
    props: { ...props
    },
    vnode
  };
  return vnode;
};
const Dashed = props => {
  const cache = linesCache.dashed;
  if (cache && isPropsEqual(cache.props, props)) return cache.vnode;
  const {
    color = 'black',
    width = 120
  } = props;

  var _ref3 = /*#__PURE__*/_createElement$17("path", {
    d: "M0,0 L3,0 L3,2 L0,2 L0,0 Z M5,0 L8,0 L8,2 L5,2 L5,0 Z",
    fill: color
  });

  const vnode = /*#__PURE__*/_createElement$17(LineBox, {
    style: {
      width
    }
  }, getCountkeys(width, 8).map(key => /*#__PURE__*/_createElement$17("svg", {
    width: "8px",
    height: "2px",
    viewBox: "0 0 8 2",
    key: key
  }, _ref3)));

  linesCache.dashed = {
    props: { ...props
    },
    vnode
  };
  return vnode;
};
const Dotted = props => {
  const cache = linesCache.dotted;
  if (cache && isPropsEqual(cache.props, props)) return cache.vnode;
  const {
    color = 'black',
    width = 120
  } = props;

  var _ref4 = /*#__PURE__*/_createElement$17("path", {
    d: "M0,0 L2,0 L2,2 L0,2 L0,0 Z M6,0 L8,0 L8,2 L6,2 L6,0 Z",
    fill: color
  });

  const vnode = /*#__PURE__*/_createElement$17(LineBox, {
    style: {
      width
    }
  }, getCountkeys(width, 8).map(key => /*#__PURE__*/_createElement$17("svg", {
    width: "8px",
    height: "2px",
    viewBox: "0 0 8 2",
    key: key
  }, _ref4)));

  linesCache.dotted = {
    props: { ...props
    },
    vnode
  };
  return vnode;
};
const Thick = props => {
  const cache = linesCache.thick;
  if (cache && isPropsEqual(cache.props, props)) return cache.vnode;
  const {
    color = 'black',
    width = 120
  } = props;

  var _ref5 = /*#__PURE__*/_createElement$17("rect", {
    fill: color,
    x: "0",
    y: "0",
    width: "18",
    height: "6"
  });

  const vnode = /*#__PURE__*/_createElement$17(LineBox, {
    style: {
      width
    }
  }, getCountkeys(width, 18).map(key => /*#__PURE__*/_createElement$17("svg", {
    width: "18px",
    height: "6px",
    viewBox: "0 0 18 6",
    key: key
  }, _ref5)));

  linesCache.thick = {
    props: { ...props
    },
    vnode
  };
  return vnode;
};
const Double = props => {
  const cache = linesCache.double;
  if (cache && isPropsEqual(cache.props, props)) return cache.vnode;
  const {
    color = 'black',
    width = 120
  } = props;

  var _ref6 = /*#__PURE__*/_createElement$17("path", {
    d: "M0,0 L18,0 L18,2 L0,2 L0,0 Z M0,4 L18,4 L18,6 L0,6 L0,4 Z",
    fill: color
  });

  const vnode = /*#__PURE__*/_createElement$17(LineBox, {
    style: {
      width
    }
  }, getCountkeys(width, 18).map(key => /*#__PURE__*/_createElement$17("svg", {
    width: "18px",
    height: "6px",
    viewBox: "0 0 18 6",
    key: key
  }, _ref6)));

  linesCache.double = {
    props: { ...props
    },
    vnode
  };
  return vnode;
};
const Hair = props => {
  const cache = linesCache.hair;
  if (cache && isPropsEqual(cache.props, props)) return cache.vnode;
  const {
    color = 'black',
    width = 120
  } = props;

  var _ref7 = /*#__PURE__*/_createElement$17("path", {
    d: "M0,0 L1,0 L1,2 L0,2 L0,0 Z M3,0 L4,0 L4,2 L3,2 L3,0 Z",
    fill: color
  });

  const vnode = /*#__PURE__*/_createElement$17(LineBox, {
    style: {
      width
    }
  }, getCountkeys(width, 4).map(key => /*#__PURE__*/_createElement$17("svg", {
    width: "4px",
    height: "2px",
    viewBox: "0 0 4 2",
    key: key
  }, _ref7)));

  linesCache.hair = {
    props: { ...props
    },
    vnode
  };
  return vnode;
};
const MediumDashed = props => {
  const cache = linesCache.mediumDashed;
  if (cache && isPropsEqual(cache.props, props)) return cache.vnode;
  const {
    color = 'black',
    width = 120
  } = props;

  var _ref8 = /*#__PURE__*/_createElement$17("path", {
    d: "M0,0 L9,0 L9,4 L0,4 L0,0 Z M13,0 L22,0 L22,4 L13,4 L13,0 Z",
    fill: color
  });

  const vnode = /*#__PURE__*/_createElement$17(LineBox, {
    style: {
      width
    }
  }, getCountkeys(width, 22).map(key => /*#__PURE__*/_createElement$17("svg", {
    width: "22px",
    height: "4px",
    viewBox: "0 0 22 4",
    key: key
  }, _ref8)));

  linesCache.mediumDashed = {
    props: { ...props
    },
    vnode
  };
  return vnode;
};
const DashDot = props => {
  const cache = linesCache.dashDot;
  if (cache && isPropsEqual(cache.props, props)) return cache.vnode;
  const {
    color = 'black',
    width = 120
  } = props;

  var _ref9 = /*#__PURE__*/_createElement$17("path", {
    d: "M12,0 L16,0 L16,2 L12,2 L12,0 Z M20,0 L28,0 L28,2 L20,2 L20,0 Z M0,0 L8,0 L8,2 L0,2 L0,0 Z",
    fill: color
  });

  const vnode = /*#__PURE__*/_createElement$17(LineBox, {
    style: {
      width
    }
  }, getCountkeys(width, 28).map(key => /*#__PURE__*/_createElement$17("svg", {
    width: "28px",
    height: "2px",
    viewBox: "0 0 28 2",
    key: key
  }, _ref9)));

  linesCache.dashDot = {
    props: { ...props
    },
    vnode
  };
  return vnode;
};
const MediumDashDot = props => {
  const cache = linesCache.mediumDashDot;
  if (cache && isPropsEqual(cache.props, props)) return cache.vnode;
  const {
    color = 'black',
    width = 120
  } = props;

  var _ref10 = /*#__PURE__*/_createElement$17("path", {
    d: "M0,0 L9,0 L9,4 L0,4 L0,0 Z M13,0 L17,0 L17,4 L13,4 L13,0 Z M21,0 L30,0 L30,4 L21,4 L21,0 Z",
    fill: color
  });

  const vnode = /*#__PURE__*/_createElement$17(LineBox, {
    style: {
      width
    }
  }, getCountkeys(width, 30).map(key => /*#__PURE__*/_createElement$17("svg", {
    width: "30px",
    height: "4px",
    viewBox: "0 0 30 4",
    key: key
  }, _ref10)));

  linesCache.mediumDashDot = {
    props: { ...props
    },
    vnode
  };
  return vnode;
};
const DashDotDot = props => {
  const cache = linesCache.dashDotDot;
  if (cache && isPropsEqual(cache.props, props)) return cache.vnode;
  const {
    color = 'black',
    width = 120
  } = props;

  var _ref11 = /*#__PURE__*/_createElement$17("path", {
    d: "M27,0 L33,0 L33,2 L27,2 L27,0 Z M15,0 L21,0 L21,2 L15,2 L15,0 Z M0,0 L9,0 L9,2 L0,2 L0,0 Z M39,0 L48,0 L48,2 L39,2 L39,0 Z",
    fill: color
  });

  const vnode = /*#__PURE__*/_createElement$17(LineBox, {
    style: {
      width
    }
  }, getCountkeys(width, 48).map(key => /*#__PURE__*/_createElement$17("svg", {
    width: "48px",
    height: "2px",
    viewBox: "0 0 48 2",
    key: key
  }, _ref11)));

  linesCache.dashDotDot = {
    props: { ...props
    },
    vnode
  };
  return vnode;
};
const MediumDashDotDot = props => {
  const cache = linesCache.mediumDashDotDot;
  if (cache && isPropsEqual(cache.props, props)) return cache.vnode;
  const {
    color = 'black',
    width = 120
  } = props;

  var _ref12 = /*#__PURE__*/_createElement$17("path", {
    d: "M27,0 L33,0 L33,4 L27,4 L27,0 Z M15,0 L21,0 L21,4 L15,4 L15,0 Z M0,0 L9,0 L9,4 L0,4 L0,0 Z M39,0 L48,0 L48,4 L39,4 L39,0 Z",
    fill: color
  });

  const vnode = /*#__PURE__*/_createElement$17(LineBox, {
    style: {
      width
    }
  }, getCountkeys(width, 48).map(key => /*#__PURE__*/_createElement$17("svg", {
    width: "48px",
    height: "4px",
    viewBox: "0 0 48 4",
    key: key
  }, _ref12)));

  linesCache.mediumDashDotDot = {
    props: { ...props
    },
    vnode
  };
  return vnode;
};
const SlantedDashDot = props => {
  const cache = linesCache.slantedDashDot;
  if (cache && isPropsEqual(cache.props, props)) return cache.vnode;
  const {
    color = 'black',
    width = 120
  } = props;

  var _ref13 = /*#__PURE__*/_createElement$17("path", {
    d: "M15,0 L21,0 L17,4 L11,4 L15,0 Z M0,0 L12,0 L8,4 L0,4 L0,0 Z M24,0 L32,0 L32,4 L20,4 L24,0 Z",
    fill: color
  });

  const vnode = /*#__PURE__*/_createElement$17(LineBox, {
    style: {
      width
    }
  }, getCountkeys(width, 32).map(key => /*#__PURE__*/_createElement$17("svg", {
    width: "32px",
    height: "4px",
    viewBox: "0 0 32 4",
    key: key
  }, _ref13)));

  linesCache.slantedDashDot = {
    props: { ...props
    },
    vnode
  };
  return vnode;
};
var lines = {
  Thin,
  Medium,
  Dashed,
  Dotted,
  Thick,
  Double,
  Hair,
  MediumDashed,
  DashDot,
  MediumDashDot,
  DashDotDot,
  MediumDashDotDot,
  SlantedDashDot
};

var Lines = /*#__PURE__*/Object.freeze({
  __proto__: null,
  Thin: Thin,
  Medium: Medium,
  Dashed: Dashed,
  Dotted: Dotted,
  Thick: Thick,
  Double: Double,
  Hair: Hair,
  MediumDashed: MediumDashed,
  DashDot: DashDot,
  MediumDashDot: MediumDashDot,
  DashDotDot: DashDotDot,
  MediumDashDotDot: MediumDashDotDot,
  SlantedDashDot: SlantedDashDot,
  'default': lines
});

const _createElement$18 = /*#__PURE__*/React__default['default'].createElement;

(function (LineType) {
  LineType["Thin"] = "Thin";
  LineType["Medium"] = "Medium";
  LineType["Dashed"] = "Dashed";
  LineType["Dotted"] = "Dotted";
  LineType["Thick"] = "Thick";
  LineType["Double"] = "Double";
  LineType["Hair"] = "Hair";
  LineType["MediumDashed"] = "MediumDashed";
  LineType["DashDot"] = "DashDot";
  LineType["MediumDashDot"] = "MediumDashDot";
  LineType["DashDotDot"] = "DashDotDot";
  LineType["MediumDashDotDot"] = "MediumDashDotDot";
  LineType["SlantedDashDot"] = "SlantedDashDot";
})(exports.LineType || (exports.LineType = {}));

class LineSelect extends React__default['default'].PureComponent {
  constructor(props) {
    super(props);

    this.handleLineTypeChange = lineType => {
      this.setState({
        currentLineType: lineType
      });
      const {
        onLineTypeChange
      } = this.props;

      if (onLineTypeChange) {
        onLineTypeChange(lineType);
      }
    };

    this.getLinesList = () => {
      const {
        lineTypes
      } = this.props;
      const renderLines = lineTypes !== undefined ? lineTypes : [];
      const lineComps = {};
      renderLines.forEach(lineTypItem => {
        if (Lines[lineTypItem]) {
          lineComps[lineTypItem] = Lines[lineTypItem];
        }
      });
      return lineComps;
    };

    const currentLineType = props.lineTypeValue ? props.lineTypeValue : exports.LineType.Thin;
    this.state = {
      currentLineType
    };
  }

  render() {
    const linesList = this.getLinesList();
    const {
      lineTypeValue,
      color,
      zIndex,
      disabled
    } = this.props;
    const {
      currentLineType
    } = this.state;
    const selectedValue = lineTypeValue || currentLineType;
    return /*#__PURE__*/_createElement$18(SelectMemo, {
      value: selectedValue,
      style: {
        width: 127
      },
      overlayStyle: {
        maxHeight: 400
      },
      onChange: this.handleLineTypeChange,
      zIndex: zIndex,
      disabled: disabled
    }, Object.keys(linesList).map(key => {
      const LineComp = linesList[key];
      return /*#__PURE__*/_createElement$18(SelectOption, {
        key: key,
        value: key
      }, /*#__PURE__*/_createElement$18(LineComp, {
        color: color,
        width: 80
      }));
    }));
  }

}
LineSelect.defaultProps = {
  lineTypes: [exports.LineType.Thin, exports.LineType.Medium, exports.LineType.Dashed, exports.LineType.Dotted, exports.LineType.Thick, exports.LineType.Double, exports.LineType.Hair, exports.LineType.MediumDashed, exports.LineType.DashDot, exports.LineType.MediumDashDot, exports.LineType.DashDotDot, exports.LineType.MediumDashDotDot, exports.LineType.SlantedDashDot],
  disabled: false
};

const _createElement$19 = /*#__PURE__*/React.createElement;
const defaultLineColor = '#000';
const lineWidthByBuiltIn = [1, 2, 4, 6];
const lineWidthByCustom = [4, 6]; // 线段属性

const commonLineMap = {
  single: {
    content: '',
    repeat: 0,
    sizeList: lineWidthByBuiltIn,
    defaultSize: 2,
    unitHeight: 6
  },
  dotted: {
    content: String.raw`\e7f5`,
    repeat: 800,
    sizeList: lineWidthByBuiltIn,
    defaultSize: 2,
    unitHeight: 16 / 3
  },
  dashed: {
    content: String.raw`\e7f8`,
    repeat: 400,
    sizeList: lineWidthByBuiltIn,
    defaultSize: 2,
    unitHeight: 16 / 2
  },
  dotDash: {
    content: String.raw`\e7f4`,
    repeat: 400,
    sizeList: lineWidthByBuiltIn,
    defaultSize: 2,
    unitHeight: 16
  },
  dotDotDash: {
    content: String.raw`\e7f6`,
    repeat: 400,
    sizeList: lineWidthByBuiltIn,
    defaultSize: 2,
    unitHeight: 16
  },
  double: {
    content: String.raw`\e7ed`,
    repeat: 400,
    sizeList: lineWidthByCustom,
    defaultSize: 4,
    unitHeight: 4
  },
  thickThinSmallGap: {
    content: String.raw`\e7ea`,
    repeat: 400,
    sizeList: lineWidthByCustom,
    defaultSize: 4,
    unitHeight: 16 / 6
  },
  thinThickThinMediumGap: {
    content: String.raw`\e7ec`,
    repeat: 400,
    sizeList: lineWidthByCustom,
    defaultSize: 4,
    unitHeight: 16 / 6
  },
  dashStroked: {
    content: String.raw`\e7f3`,
    repeat: 400,
    sizeList: lineWidthByCustom,
    defaultSize: 2,
    unitHeight: 16 / 7
  },
  wave: {
    content: String.raw`\e7f0`,
    repeat: 400,
    sizeList: lineWidthByCustom,
    defaultSize: 4,
    unitHeight: 10,
    scale: 0.2
  },
  doubleWave: {
    content: String.raw`\e7ef`,
    repeat: 400,
    sizeList: lineWidthByCustom,
    defaultSize: 4,
    unitHeight: 6,
    scale: 0.2
  },
  dashDotStroked: {
    content: String.raw`\e7e7`,
    repeat: 400,
    sizeList: lineWidthByCustom,
    defaultSize: 4,
    unitHeight: 16 / 5
  },
  widthDoubleWave: {
    content: String.raw`\e7f1`,
    repeat: 400,
    sizeList: lineWidthByCustom,
    defaultSize: 4,
    unitHeight: 10,
    scale: 0.2
  },
  widthWave: {
    content: String.raw`\e7f2`,
    repeat: 400,
    sizeList: lineWidthByCustom,
    defaultSize: 4,
    unitHeight: 10,
    scale: 0.2
  },
  roundDot: {
    content: String.raw`\e7f9`,
    repeat: 400,
    sizeList: lineWidthByCustom,
    defaultSize: 4,
    unitHeight: 16 / 3
  }
};

function repeatContent(content, times) {
  if (!content || !times) return '';
  const res = content.repeat(times);
  return res;
}

const ICONFONT_CSS = `
@font-face {
  font-family: 'commonLineIconfont';  /* project id 1679878 */
  src: url('//at.alicdn.com/t/font_1679878_3m8w8kt4k7i.eot');
  src: url('//at.alicdn.com/t/font_1679878_3m8w8kt4k7i.eot?#iefix') format('embedded-opentype'),
  url('//at.alicdn.com/t/font_1679878_3m8w8kt4k7i.woff2') format('woff2'),
  url('//at.alicdn.com/t/font_1679878_3m8w8kt4k7i.woff') format('woff'),
  url('//at.alicdn.com/t/font_1679878_3m8w8kt4k7i.ttf') format('truetype'),
  url('//at.alicdn.com/t/font_1679878_3m8w8kt4k7i.svg#iconfont') format('svg');
}
`;
const ICONFONT_ID = 'common-line-font-styles';

const inject = () => {
  let styleSheet = document.getElementById(ICONFONT_ID);

  if (!styleSheet) {
    styleSheet = document.createElement('style');
    styleSheet.setAttribute('type', 'text/css');
    styleSheet.id = ICONFONT_ID;
    styleSheet.innerHTML = ICONFONT_CSS;
    const head = document.getElementsByTagName('head')[0];

    if (head) {
      head.appendChild(styleSheet);
    }
  }
};

const CommonLine = props => {
  const {
    size,
    length,
    color,
    lineType: lineStyle
  } = props; // 注入全局 iconfont 样式

  inject();
  let finalColor = color; // 解决css color 无auto的问题

  if (color === undefined || color === '' || color === 'auto') {
    finalColor = defaultLineColor;
  }

  let finalLineStyle = lineStyle; // 加入最小单位高度, 用于做transform的scale比例计算

  let unitHeight = 8;
  let scale = 1;
  const selectedLine = commonLineMap[lineStyle];
  let content = commonLineMap.single && commonLineMap.single.content;

  if (selectedLine) {
    content = repeatContent(selectedLine.content, selectedLine.repeat);
    unitHeight = selectedLine.unitHeight;
    scale = selectedLine.scale || 1;
  } else {
    // 如果未找到, 则single 代替
    finalLineStyle = 'single';
  }
  /* eslint-disable */


  return /*#__PURE__*/_createElement$19(Wrapper, null, finalLineStyle === 'single' ? /*#__PURE__*/_createElement$19(Single, {
    length: length,
    bgColor: finalColor,
    size: size,
    color: finalColor
  }) : /*#__PURE__*/_createElement$19(Line, {
    length: length,
    lineContent: content,
    size: size,
    color: color,
    unitHeight: unitHeight,
    scale: scale
  }));
};
CommonLine.defaultProps = {
  lineType: 'single',
  size: 1,
  // 默认值 兼容之前hr颜色和厚度方案
  color: defaultLineColor
}; // export default CommonLine;

const _createElement$1a = /*#__PURE__*/React__default['default'].createElement;

const getDefaultLineTypeArray = () => {
  const typeArray = {};
  Object.keys(commonLineMap).forEach(key => {
    const lineProps = commonLineMap[key];
    const {
      defaultSize: size
    } = lineProps;
    typeArray[key] = {
      size,
      lineType: key
    };
  });
  return typeArray;
};

class CommonLineSelect extends React__default['default'].PureComponent {
  constructor(props) {
    super(props);

    this.handleLineTypeChange = type => {
      this.setState({
        innerLineType: type
      });
      const {
        onLineTypeChange
      } = this.props;

      if (onLineTypeChange) {
        onLineTypeChange(type);
      }
    };

    const innerLineType = props.lineType || props.defaultLineType || 'single';
    this.state = {
      innerLineType,
      innerVisible: props.visible === undefined ? props.defaultVisible : props.visible
    };
  }

  static getDerivedStateFromProps(nextProps, state) {
    const nextVisible = nextProps.visible;

    if (nextVisible !== undefined && nextVisible !== state.innerVisible) {
      return {
        innerVisible: nextVisible
      };
    }

    return null;
  }

  render() {
    const {
      lineType: selectedLineType,
      lineTypeArray,
      color,
      overlayStyle,
      optionWrapperStyle,
      zIndex,
      style,
      length,
      optionText,
      customTrigger,
      bordered,
      title,
      onVisibleChange,
      selectable = true,
      className,
      disabled
    } = this.props;
    const lineTypeMap = lineTypeArray || CommonLineSelect.lineTypes;
    const {
      innerLineType,
      innerVisible
    } = this.state;
    const activeLineType = selectedLineType || innerLineType;
    const withText = !!optionText && typeof optionText === 'function';
    const activeLineProps = lineTypeMap[activeLineType];
    const getTrigger = typeof customTrigger === 'function' ? customTrigger : () => /*#__PURE__*/_createElement$1a(TriggerStyled, null, withText && /*#__PURE__*/_createElement$1a(TextSpan, null, activeLineProps ? optionText(activeLineProps) : ''), /*#__PURE__*/_createElement$1a(CommonLine, {
      lineType: activeLineProps === null || activeLineProps === void 0 ? void 0 : activeLineProps.lineType,
      size: activeLineProps === null || activeLineProps === void 0 ? void 0 : activeLineProps.size,
      color: color,
      length: length
    }));

    const handleVisibleChange = e => {
      const {
        visible
      } = this.props;
      if (onVisibleChange) onVisibleChange(e);

      if (visible === undefined) {
        this.setState({
          innerVisible: e
        });
      }
    };

    return /*#__PURE__*/_createElement$1a(SelectMemo, {
      value: activeLineType,
      style: style,
      overlayStyle: overlayStyle,
      optionWrapperStyle: optionWrapperStyle // maxDropdownHeight={400}
      ,
      onChange: this.handleLineTypeChange,
      zIndex: zIndex,
      testid: "CommonLineSelect",
      renderTrigger: getTrigger,
      bordered: bordered,
      title: title,
      visible: innerVisible,
      onVisibleChange: handleVisibleChange,
      selectable: selectable,
      className: className,
      disabled: disabled
    }, Object.keys(lineTypeMap).map(key => {
      const lineProps = lineTypeMap[key];
      const {
        lineType,
        size
      } = lineProps;
      return /*#__PURE__*/_createElement$1a(OptionStyled, {
        key: key,
        value: key,
        testid: key,
        className: classnames({
          'with-text': withText
        })
      }, withText && /*#__PURE__*/_createElement$1a(TextSpan, null, `${optionText(lineTypeMap[key])}`), /*#__PURE__*/_createElement$1a(CommonLine, {
        lineType: lineType,
        size: size,
        color: color,
        length: length
      }));
    }));
  }

}
CommonLineSelect.lineTypes = getDefaultLineTypeArray();
CommonLineSelect.defaultProps = {
  bordered: true,
  defaultVisible: false,
  disabled: false
};

const BorderSetWrapper = /*#__PURE__*/styled__default['default'].div(["display:flex;flex-direction:column;justify-content:center;align-items:center;padding:14px 14px 9px 14px;align-items:baseline;"]);
const BorderTypeWrapper = withTheme(styled__default['default'].div(["display:grid;grid-template-columns:repeat(3,1fr);grid-gap:2px;justify-items:center;align-items:center;border:1px solid ", ";border-radius:", ";"], p => p.theme.ui.commonLineLightColor, p => p.theme.ui.radius));
const LineTypeWrapper = /*#__PURE__*/styled__default['default'].div(["display:flex;flex-direction:column;justify-content:flex-start;height:100px;width:100px;margin-left:16px;margin-right:2px;"]);
const IconWrapper$1 = withTheme(styled__default['default'].span(["box-sizing:border-box;border-radius:4px;width:28px;height:28px;background-color:", ";cursor:pointer;display:flex;align-items:center;justify-content:center;&:hover{background-color:", ";}"], p => p.active && p.theme.ui.buttonNormalActiveBgColor, p => p.theme.ui.buttonNormalHoverBgColor));
const ContentWrapper = /*#__PURE__*/styled__default['default'].div(["display:flex;flex-direction:row;align-items:center;padding-bottom:14px;"]);
const FooterWrapper = withTheme(styled__default['default'].div(["width:100%;padding-top:5px;border-top:1px solid ", ";"], p => p.theme.ui.commonLineLightColor));
const FooterInner = withTheme(styled__default['default'].div(["display:flex;flex-direction:row;justify-content:start;align-items:center;width:100%;border-radius:8px;&:hover{background-color:", ";}&.active{background-color:", ";}"], p => p.theme.ui.buttonNormalHoverBgColor, ({
  theme: {
    ui
  }
}) => ui.buttonNormalActiveBgColor));
const TextSpan$1 = /*#__PURE__*/styled__default['default'].span(["font-size:12px;line-height:17px;margin-left:3px;color:", ";cursor:pointer;"], theme.colorText5);
const FillColorWrapper = /*#__PURE__*/styled__default['default'].div(["display:flex;flex-direction:row;justify-content:flex-start;align-items:center;margin-top:2px;"]);
const LineSelectWrapper = /*#__PURE__*/styled__default['default'].div(["display:flex;flex-direction:row;justify-content:flex-start;align-items:center;margin:12px 0;"]);
const ThicknessInputWrapper = /*#__PURE__*/styled__default['default'].div(["display:flex;flex-direction:row;justify-content:flex-start;align-items:center;"]);
const LabelWrapper = /*#__PURE__*/styled__default['default'].div(["font-size:12px;line-height:17px;color:", ";width:37px;"], theme.colorText5);

const _createElement$1b = /*#__PURE__*/React__default['default'].createElement;

(function (BorderType) {
  BorderType["top"] = "top";
  BorderType["bottom"] = "bottom";
  BorderType["left"] = "left";
  BorderType["right"] = "right";
  BorderType["none"] = "none";
  BorderType["outer"] = "outer";
  BorderType["inner"] = "inner";
  BorderType["horizon"] = "horizon";
  BorderType["vertical"] = "vertical";
  BorderType["all"] = "all";
  BorderType["unselected"] = "unselected";
})(exports.BorderType || (exports.BorderType = {}));

const UNSELECTED = 'unselected';
class BorderTypePanel extends React__default['default'].PureComponent {
  constructor(props) {
    super(props);

    this.handleBorderTypeChange = borderType => {
      this.setState({
        currentBorderType: borderType
      });
      const {
        onBorderTypeChange
      } = this.props;

      if (onBorderTypeChange) {
        onBorderTypeChange(borderType);
      }
    };

    const currentBorderType = props.borderType ? props.borderType : UNSELECTED;
    this.state = {
      currentBorderType
    };
  }

  render() {
    const {
      borderType,
      borderIconSize = 18,
      borderSelectedColor = '#000000',
      style
    } = this.props;
    const {
      currentBorderType
    } = this.state;
    const activeBorderType = borderType || currentBorderType;
    const defaultWrapperStyle = {
      width: '100px',
      height: '100px'
    };
    const wrapperStyle = { ...defaultWrapperStyle,
      ...(style || {})
    };
    const iconStyle = {
      width: borderIconSize,
      height: borderIconSize,
      boxSizing: 'border-box',
      padding: '1px 1px'
    };
    const ICON_DEFAULT_COLOR = 'rgba(17, 31, 44, 0.72)';
    const pathColors = [// 当选中颜色为白色时，选中边框的外边缘为黑色，否则选中边框外边缘与内部颜色一致
    !borderSelectedColor || isWhite(borderSelectedColor) ? ICON_DEFAULT_COLOR : borderSelectedColor, borderSelectedColor || ICON_DEFAULT_COLOR, ICON_DEFAULT_COLOR];
    const borderList = {
      [exports.BorderType.outer]: /*#__PURE__*/_createElement$1b(BorderOuterNormal, {
        pathColors: pathColors,
        style: iconStyle
      }),
      [exports.BorderType.inner]: /*#__PURE__*/_createElement$1b(BorderInnerNormal, {
        pathColors: pathColors,
        style: iconStyle
      }),
      [exports.BorderType.all]: /*#__PURE__*/_createElement$1b(BorderAllNormal, {
        pathColors: pathColors,
        style: iconStyle
      }),
      [exports.BorderType.left]: /*#__PURE__*/_createElement$1b(BorderLeftNormal, {
        pathColors: pathColors,
        style: iconStyle
      }),
      [exports.BorderType.vertical]: /*#__PURE__*/_createElement$1b(BorderVerticalNormal, {
        pathColors: pathColors,
        style: iconStyle
      }),
      [exports.BorderType.right]: /*#__PURE__*/_createElement$1b(BorderRightNormal, {
        pathColors: pathColors,
        style: iconStyle
      }),
      [exports.BorderType.top]: /*#__PURE__*/_createElement$1b(BorderTopNormal, {
        pathColors: pathColors,
        style: iconStyle
      }),
      [exports.BorderType.horizon]: /*#__PURE__*/_createElement$1b(BorderHorizontalNormal, {
        pathColors: pathColors,
        style: iconStyle
      }),
      [exports.BorderType.bottom]: /*#__PURE__*/_createElement$1b(BorderBottomNormal, {
        pathColors: pathColors,
        style: iconStyle
      })
    };
    return /*#__PURE__*/_createElement$1b(BorderTypeWrapper, {
      style: wrapperStyle
    }, Object.keys(borderList).map(key => {
      const iconComp = borderList[key];
      const tipTitle = `we_ui_border_set_border_${exports.BorderType[key]}`;
      return /*#__PURE__*/_createElement$1b(TranslateProvider, {
        key: key
      }, t => /*#__PURE__*/_createElement$1b(Tooltip, {
        title: t(tipTitle)
      }, /*#__PURE__*/_createElement$1b(IconWrapper$1, {
        active: activeBorderType === key // style={btStyle}
        ,
        onClick: () => this.handleBorderTypeChange(key)
      }, iconComp)));
    }));
  }

}
BorderTypePanel.defaultProps = {
  borderIconSize: 18
};

const _createElement$1c = /*#__PURE__*/React__default['default'].createElement;
const DEFAULT_BORDER_COLOR = '#000000';
const ICON_DEFAULT_COLOR$1 = 'rgba(17, 31, 44, 0.72)';

var _ref$i = /*#__PURE__*/_createElement$1c(BorderOuterNormal, null);

var _ref2$4 = /*#__PURE__*/_createElement$1c(BorderInnerNormal, null);

var _ref3$4 = /*#__PURE__*/_createElement$1c(BorderAllNormal, null);

var _ref4$2 = /*#__PURE__*/_createElement$1c(BorderLeftNormal, null);

var _ref5$2 = /*#__PURE__*/_createElement$1c(BorderRightNormal, null);

var _ref6$1 = /*#__PURE__*/_createElement$1c(BorderTopNormal, null);

var _ref7$1 = /*#__PURE__*/_createElement$1c(BorderBottomNormal, null);

var _ref8 = /*#__PURE__*/_createElement$1c(BorderNoneNormal, null);

var _ref9 = /*#__PURE__*/_createElement$1c(BorderHorizontalNormal, null);

var _ref10 = /*#__PURE__*/_createElement$1c(BorderVerticalNormal, null);

var _ref11 = /*#__PURE__*/_createElement$1c(BorderNoneNormal, null);

class BorderSet extends React__default['default'].Component {
  constructor(props) {
    super(props);

    this.handleClick = e => {
      // 阻止冒泡
      e.stopPropagation();
    };

    this.handleVisibleChange = visible => {
      this.setState({
        dropdownVisible: visible
      });
    };

    this.handleClickLeft = () => {
      const {
        onClick
      } = this.props;

      if (onClick) {
        const {
          innerColor,
          innerLineType,
          innerBorderType
        } = this.state;
        const data = {
          borderColor: innerColor,
          borderType: innerBorderType,
          borderStyle: innerLineType
        };
        onClick(data);
      }
    };

    this.handlePropertyChange = borderProps => {
      const {
        onChange
      } = this.props;

      if (onChange) {
        const {
          innerColor,
          innerLineType,
          innerBorderType
        } = this.state;
        const data = {
          borderColor: innerColor,
          borderType: innerBorderType,
          borderStyle: innerLineType
        };
        const allProps = { ...data,
          ...borderProps
        };
        onChange(allProps, borderProps);
      }
    };

    this.handleColorChange = color => {
      this.setState({
        innerColor: color
      });
      this.handlePropertyChange({
        borderColor: color
      });
      this.setState({
        dropdownVisible: true
      });
    };

    this.handleLineChange = type => {
      this.setState({
        innerLineType: type
      });
      this.handlePropertyChange({
        borderStyle: type
      });
      this.setState({
        dropdownVisible: true
      });
    };

    this.handleBorderChange = type => {
      this.setState({
        innerBorderType: type
      });
      this.handlePropertyChange({
        borderType: type
      });
    };

    this.handleColorPickerVisible = visible => {
      this.setState({
        colorPickerVisible: visible
      });
    };

    this.handleLineSelectVisible = e => {
      this.setState({
        lineSelectVisible: e
      });
    };

    this.handleBorderNoneClick = () => this.handleBorderChange(exports.BorderType.none);

    this.getOverlayContent = () => {
      const {
        borderIconSize,
        borderStyles: lineTypes,
        color,
        supportConfigSize,
        locale
      } = this.props;
      const {
        innerColor: currentColor,
        innerBorderType,
        innerLineType,
        colorPickerVisible,
        lineSelectVisible
      } = this.state;
      const activeColor = color || currentColor;
      const inputStyle = {
        width: 63,
        height: 22
      };
      const iconStyle = {
        width: borderIconSize,
        height: borderIconSize,
        boxSizing: 'border-box',
        padding: '1px 1px'
      };
      return /*#__PURE__*/_createElement$1c(BorderSetWrapper, {
        onMouseDown: this.handleClick
      }, /*#__PURE__*/_createElement$1c(ContentWrapper, null, /*#__PURE__*/_createElement$1c(BorderTypePanel, {
        borderType: innerBorderType,
        borderIconSize: borderIconSize,
        onBorderTypeChange: this.handleBorderChange,
        borderSelectedColor: activeColor
      }), /*#__PURE__*/_createElement$1c(LineTypeWrapper, null, /*#__PURE__*/_createElement$1c(FillColorWrapper, null, /*#__PURE__*/_createElement$1c(LabelWrapper, null, /*#__PURE__*/_createElement$1c(TranslateComp, {
        locale: locale,
        textKey: 'we_ui_border_set_color'
      })), /*#__PURE__*/_createElement$1c(FillColorPicker, {
        active: colorPickerVisible,
        onActiveChange: this.handleColorPickerVisible,
        color: activeColor,
        automaticColor: DEFAULT_BORDER_COLOR,
        onColorPicker: this.handleColorChange,
        size: "small",
        locale: locale
      })), /*#__PURE__*/_createElement$1c(LineSelectWrapper, null, /*#__PURE__*/_createElement$1c(LabelWrapper, null, /*#__PURE__*/_createElement$1c(TranslateComp, {
        locale: locale,
        textKey: 'we_ui_border_set_line_type'
      })), /*#__PURE__*/_createElement$1c(CommonLineSelect, {
        lineTypeArray: lineTypes,
        length: 80,
        style: inputStyle,
        lineType: innerLineType // 线型颜色不需要跟随变化
        ,
        color: "#000000",
        onLineTypeChange: this.handleLineChange,
        visible: lineSelectVisible,
        onVisibleChange: this.handleLineSelectVisible
      })), !supportConfigSize ? null : /*#__PURE__*/_createElement$1c(ThicknessInputWrapper, null, /*#__PURE__*/_createElement$1c(LabelWrapper, null, /*#__PURE__*/_createElement$1c(TranslateComp, {
        locale: locale,
        textKey: 'we_ui_border_set_line_thickness'
      })), /*#__PURE__*/_createElement$1c(NumberInput, {
        defaultValue: 1,
        min: 1,
        max: 6,
        step: 1,
        style: inputStyle
      })))), /*#__PURE__*/_createElement$1c(FooterWrapper, null, /*#__PURE__*/_createElement$1c(FooterInner, {
        className: classnames({
          active: innerBorderType === exports.BorderType.none
        }),
        onClick: this.handleBorderNoneClick
      }, /*#__PURE__*/_createElement$1c(IconWrapper$1, {
        style: {
          color: ICON_DEFAULT_COLOR$1,
          backgroundColor: 'transparent'
        }
      }, /*#__PURE__*/_createElement$1c(BorderNoneNormal, {
        style: iconStyle
      })), /*#__PURE__*/_createElement$1c(TextSpan$1, null, /*#__PURE__*/_createElement$1c(TranslateComp, {
        locale: locale,
        textKey: 'we_ui_border_set_border_none'
      })))));
    };

    this.renderShowIcon = () => {
      const {
        innerBorderType
      } = this.state;

      switch (innerBorderType) {
        case 'outer':
          return _ref$i;

        case 'inner':
          return _ref2$4;

        case 'all':
          return _ref3$4;

        case 'left':
          return _ref4$2;

        case 'right':
          return _ref5$2;

        case 'top':
          return _ref6$1;

        case 'bottom':
          return _ref7$1;

        case 'none':
          return _ref8;

        case 'horizon':
          return _ref9;

        case 'vertical':
          return _ref10;

        default:
          return _ref11;
      }
    };

    const _innerColor = props.color ? props.color : DEFAULT_BORDER_COLOR;

    const _innerBorderType = props.borderType || exports.BorderType.all;

    const _innerLineType = props.defaultBorderStyle || 'single';

    this.state = {
      innerColor: _innerColor,
      innerBorderType: _innerBorderType,
      innerLineType: _innerLineType,
      dropdownVisible: false,
      colorPickerVisible: false,
      lineSelectVisible: false
    };
  }

  render() {
    const {
      dropdownVisible,
      colorPickerVisible,
      lineSelectVisible,
      innerColor: color
    } = this.state;
    const {
      className,
      style,
      disabled,
      title
    } = this.props;
    const overlayVisible = dropdownVisible || colorPickerVisible || lineSelectVisible;
    const pathColors = [// 当选中颜色为白色时，选中边框的外边缘为黑色，否则选中边框外边缘与内部颜色一致
    !color || isWhite(color) ? ICON_DEFAULT_COLOR$1 : color, color || ICON_DEFAULT_COLOR$1, ICON_DEFAULT_COLOR$1];
    return /*#__PURE__*/_createElement$1c(SplitButton, {
      overlay: this.getOverlayContent(),
      active: overlayVisible,
      onClickLeft: this.handleClickLeft,
      onActiveChange: this.handleVisibleChange,
      className: className,
      disabled: disabled,
      style: style,
      testid: "BorderSet",
      title: title
    }, /*#__PURE__*/React__default['default'].cloneElement(this.renderShowIcon(), {
      pathColors
    }));
  }

}
BorderSet.defaultProps = {
  supportConfigSize: true
};

const WatermarkWrapper = /*#__PURE__*/styled__default['default'].div(["position:absolute;top:0;left:0;height:100%;width:100%;user-select:none;opacity:0.06;pointer-events:none;"]);

const cnPattern = new RegExp('[\u4E00-\u9FA5]+');

function getMaxString(str, maxTextLength = 32) {
  if (!str) return '';
  let count = 0;
  let tmp = ''; // eslint-disable-next-line no-plusplus

  for (let i = 0; i < str.length; i++) {
    if (cnPattern.test(str[i])) {
      count += 2;
    } else {
      count += 1;
    }

    if (count > maxTextLength) {
      return `${tmp.slice(0, maxTextLength)}...`;
    }

    tmp += str[i];
  }

  return tmp;
}

const generateWatermark = (params, format) => {
  const {
    markStyle = {},
    nickName = '',
    orgName = '',
    maxTextLength
  } = params;
  const {
    width = 256,
    height = 300,
    color,
    fontSize = 10
  } = markStyle;
  const ratio = Math.min(3, window.devicePixelRatio || 1);
  const canvas = document.createElement('canvas');
  canvas.width = width * ratio;
  canvas.height = height * ratio;
  const ctx = canvas.getContext('2d');

  if (ctx) {
    ctx.font = `${fontSize * ratio}pt 'PingFang SC','Hiragino Sans GB','Microsoft YaHei','Helvetica Neue',Helvetica,Arial,sans-serif`;
    const watermarkNickName = getMaxString(nickName, maxTextLength);
    const watermarkOrgName = getMaxString(orgName, maxTextLength);
    ctx.fillStyle = color || 'rgb(25,31,37)';
    const nameMeasure = ctx.measureText(watermarkNickName);
    ctx.translate(8 * ratio, canvas.height * 0.5);
    ctx.rotate(-Math.PI / 6);
    ctx.fillText(watermarkOrgName, 0, 0);
    ctx.rotate(Math.PI / 6);
    ctx.translate((canvas.width / 2 - nameMeasure.width / 2 - 8 * ratio) * 1.08, (canvas.height * 0.24 + nameMeasure.width / 4) * 1.08);
    ctx.rotate(-Math.PI / 6);
    ctx.fillText(watermarkNickName || '', 0, 0);
  }

  if (format === 'canvas') {
    return canvas;
  }

  return canvas.toDataURL();
};

/* eslint-disable @typescript-eslint/explicit-function-return-type */
const _createElement$1d = /*#__PURE__*/React__default['default'].createElement;
class Watermark extends React__default['default'].Component {
  constructor(...args) {
    super(...args);
    this.waterRef = /*#__PURE__*/React__default['default'].createRef();

    this.updateBackgroundImage = () => {
      const {
        watermarkEnable,
        nickName,
        orgName,
        markStyle,
        maxTextLength
      } = this.props;

      if (!watermarkEnable) {
        if (this.waterRef && this.waterRef.current) {
          this.waterRef.current.style.backgroundImage = 'none';
        }

        return;
      }

      if (this.waterRef && this.waterRef.current) {
        this.waterRef.current.style.backgroundImage = `url(${generateWatermark({
          nickName,
          orgName,
          markStyle,
          maxTextLength
        })})`;
      }
    };
  }

  componentDidMount() {
    this.updateBackgroundImage();
  }

  componentDidUpdate(prevProps) {
    const {
      nickName,
      orgName,
      watermarkEnable
    } = this.props;

    if (watermarkEnable !== prevProps.watermarkEnable || nickName !== prevProps.nickName || orgName !== prevProps.orgName) {
      // 仅在文本内容变化时重绘
      this.updateBackgroundImage();
    }
  }

  render() {
    const {
      style,
      ...markProps
    } = this.props;
    const {
      watermarkEnable,
      markStyle = {}
    } = markProps;
    const {
      width = 256,
      height = 300
    } = markStyle;
    const bgStyle = {
      backgroundSize: `${width}px ${height}px`,
      display: watermarkEnable ? 'block' : 'none'
    };
    return /*#__PURE__*/_createElement$1d(WatermarkWrapper, {
      ref: this.waterRef,
      style: { ...bgStyle,
        ...style
      }
    });
  }

}

/* eslint-disable @typescript-eslint/explicit-function-return-type */
const PanelWrap = withTheme(styled__default['default'].div(["display:flex;width:100%;box-sizing:border-box;font-size:", ";color:", ";*{box-sizing:border-box;}"], ({
  theme
}) => theme.ui.fontSize, ({
  theme
}) => theme.ui.textColor));
const PanelColumnWrap = withTheme(styled__default['default'].div(["flex:1 auto;border-right:1px solid ", ";&:last-child{border-right:0;}"], ({
  theme
}) => theme.ui.borderColor));
const PanelColumnTitle = withTheme(styled__default['default'].div(["text-align:center;height:32px;line-height:32px;"]));
const PanelColumnBody = withTheme(styled__default['default'].div([""]));
const NumberSliderWrap = withTheme(styled__default['default'].div(["height:224px;padding-bottom:192px;overflow-y:hidden;&:hover{overflow-y:auto;}"]));
const NumberSliderNumber = withTheme(styled__default['default'].div(["height:32px;line-height:32px;text-align:center;user-select:none;&:hover{background-color:", ";cursor:pointer;}&.scrolling{background-color:transparent;cursor:default;}&.actived{background-color:", ";cursor:default;}"], ({
  theme
}) => theme.ui.backgroundColor, ({
  theme
}) => theme.ui.backgroundColor));
const Trigger$1 = withTheme(styled__default['default'].div(["box-sizing:border-box;display:inline-block;width:100%;min-width:150px;height:", ";line-height:", ";border:1px solid ", ";transition:all .24s ease;padding:0 ", ";font-size:0 ", ";user-select:none;&:hover{border-color:", ";cursor:pointer;}.calendar-icon{margin-left:", ";}&.placeholder{color:", ";}&.disabled{color:", ";background-color:", ";border-color:", ";cursor:not-allowed;}*{box-sizing:border-box;}"], ({
  theme
}) => theme.ui.elementHeight, ({
  theme
}) => theme.ui.elementHeight, ({
  theme
}) => theme.ui.borderColor, ({
  theme
}) => theme.ui.padding, ({
  theme
}) => theme.ui.fontSize, ({
  theme
}) => theme.ui.primaryColor, ({
  theme
}) => theme.ui.marginSmall, ({
  theme
}) => theme.ui.colorText2, ({
  theme
}) => theme.ui.disabledColor, ({
  theme
}) => theme.ui.disabledBackgroundColor, ({
  theme
}) => theme.ui.borderColor));
const TriggerWrap$7 = withTheme(styled__default['default'].div(["display:flex;align-items:center;.text{flex:1 auto;width:0;", "}"], Ellipsis));
const OverlayWrap$3 = withTheme(styled__default['default'].div(["width:240px;"]));
const OverlayInputs = withTheme(styled__default['default'].div(["padding:", ";"], ({
  theme
}) => theme.ui.padding));
const TimePanelWrap = withTheme(styled__default['default'].div(["padding:", ";"], ({
  theme
}) => theme.ui.padding));

class Animation {
  constructor(options) {
    this.timer = 0;
    this.startTime = 0;
    this.duration = void 0;
    this.progress = void 0;
    this.done = void 0;

    this.handleProgress = () => {
      const p = (Date.now() - this.startTime) / this.duration;

      if (p >= 1) {
        this.done(1);
      } else {
        this.progress(p);
        this.timer = requestAnimationFrame(this.handleProgress);
      }
    };

    this.duration = options.duration;
    this.progress = options.progress;
    this.done = options.done;
  }

  start() {
    this.clear();
    this.startTime = Date.now();
    this.timer = requestAnimationFrame(this.handleProgress);
    return this;
  }

  clear() {
    if (this.timer) {
      cancelAnimationFrame(this.timer);
      this.timer = 0;
    }

    return this;
  }

}

/* eslint-disable consistent-return */
const _createElement$1e = /*#__PURE__*/React__default['default'].createElement;
const NumberSlider = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    numbers,
    number = 0,
    onChange,
    visible,
    testid
  } = props;
  const containerRef = React.useRef(null); // 滚动的时候避免hover样式造成的鼠标闪动

  const [scrolling, setScrolling] = React.useState(false);
  /**
   * 初始化进来定位不需要动画
   */

  React.useEffect(() => {
    if (containerRef.current && visible) {
      containerRef.current.scrollTop = 32 * number;
    } // eslint-disable-next-line react-hooks/exhaustive-deps

  }, [visible]);
  /**
   * 滚动处理，一旦number更新了，就开始执行动画
   */

  useComponentDidUpdate(() => {
    if (containerRef.current && visible) {
      const targetValue = 32 * number;
      const currentValue = containerRef.current.scrollTop;
      setScrolling(true);
      const animation = new Animation({
        duration: 240,

        progress(p) {
          containerRef.current.scrollTop = p * (targetValue - currentValue) + currentValue;
        },

        done() {
          containerRef.current.scrollTop = targetValue;
          setScrolling(false);
        }

      }).start();
      return () => {
        animation.clear();
      };
    }
  }, [number, visible]);
  return /*#__PURE__*/_createElement$1e(NumberSliderWrap, {
    ref: containerRef,
    "data-testid": testid
  }, numbers.map(num => {
    return /*#__PURE__*/_createElement$1e(NumberSliderNumber, {
      key: num,
      className: classnames({
        actived: num === number,
        scrolling
      }),
      onClick: () => {
        number !== num && onChange(num);
      }
    }, num);
  }));
});

const _createElement$1f = /*#__PURE__*/React__default['default'].createElement;

const TimePanel = props => {
  const {
    locale,
    onChange,
    style,
    visible,
    testid
  } = props; // 国际化

  const t = useTranslate(locale); // 受控

  const [value, setValue] = useControlledValue(props.value, props.defaultValue); // 时 0 - 23

  const hourNumbers = React.useMemo(() => Object.keys(Array.from({
    length: 24
  })).map((_, i) => i), []); // 分 0 - 59

  const minuteNumbers = React.useMemo(() => Object.keys(Array.from({
    length: 60
  })).map((_, i) => i), []); // 秒 0 - 59

  const secondNumbers = React.useMemo(() => Object.keys(Array.from({
    length: 60
  })).map((_, i) => i), []);
  /**
   * 修改回调函数
   */

  const handleChanges = React.useMemo(() => {
    const handleChange = type => e => {
      const newValue = (value || dayjs__default['default']().hour(0).minute(0).second(0))[type](e);

      if (onChange) {
        onChange(newValue, newValue.format('HH:mm:ss'));
      }

      setValue(newValue);
    };

    return {
      hour: handleChange('hour'),
      minute: handleChange('minute'),
      second: handleChange('second')
    };
  }, [value, onChange, setValue]);
  return /*#__PURE__*/_createElement$1f(PanelWrap, {
    style: { ...(style || {}),
      display: visible ? 'flex' : 'none'
    }
  }, /*#__PURE__*/_createElement$1f(PanelColumnWrap, null, /*#__PURE__*/_createElement$1f(PanelColumnTitle, null, t('we_ui_time_hour')), /*#__PURE__*/_createElement$1f(PanelColumnBody, null, /*#__PURE__*/_createElement$1f(NumberSlider, {
    visible: visible,
    number: value ? value.hour() : 0,
    numbers: hourNumbers,
    onChange: handleChanges.hour,
    testid: `${testid}_hour`
  }))), /*#__PURE__*/_createElement$1f(PanelColumnWrap, null, /*#__PURE__*/_createElement$1f(PanelColumnTitle, null, t('we_ui_time_minute')), /*#__PURE__*/_createElement$1f(PanelColumnBody, null, /*#__PURE__*/_createElement$1f(NumberSlider, {
    visible: visible,
    number: value ? value.minute() : 0,
    numbers: minuteNumbers,
    onChange: handleChanges.minute,
    testid: `${testid}_minute`
  }))), /*#__PURE__*/_createElement$1f(PanelColumnWrap, null, /*#__PURE__*/_createElement$1f(PanelColumnTitle, null, t('we_ui_time_second')), /*#__PURE__*/_createElement$1f(PanelColumnBody, null, /*#__PURE__*/_createElement$1f(NumberSlider, {
    visible: visible,
    number: value ? value.second() : 0,
    numbers: secondNumbers,
    onChange: handleChanges.second,
    testid: `${testid}_second`
  }))));
};

TimePanel.defaultProps = {
  visible: true
};
const TimePanelMemo = /*#__PURE__*/React__default['default'].memo(TimePanel);

const _createElement$1g = /*#__PURE__*/React__default['default'].createElement;
// eslint-disable-next-line max-lines-per-function
const TimePicker = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    locale,
    renderTrigger,
    disabled,
    format,
    style,
    onVisibleChange,
    onChange,
    zIndex,
    testid
  } = props;
  const t = useTranslate(locale);
  const [value, setValue] = useControlledValue(props.value, props.defaultValue);
  const [visible, setVisible] = useControlledValue(props.visible, props.defaultVisible);
  const [inputValue, setInputValue] = React.useState(value ? value.format(format) : '');
  const placeholder = props.placeholder || t('we_ui_timepicker_placeholder');
  /**
   * 修改函数
   */

  const handleChange = React.useCallback(e => {
    if (value !== e) {
      if (onChange) {
        onChange(e);
      }

      setValue(e);
    }
  }, [value, onChange, setValue]);
  /**
   * 阻止冒泡，Dropdown自动关闭阻止
   *
   * @param {React.MouseEvent<HTMLElement>}
   * @return {void}
   */

  const handleClickOverlay = React.useCallback(e => {
    e.stopPropagation();
  }, []);
  /**
   * 输入框输入
   *
   * @param {React.ChangeEvent<HTMLInputElement>}
   * @return {void}
   */

  const handleChangeInput = React.useCallback(e => {
    setInputValue(e.target.value);
  }, []);
  /**
   * 输入框失焦
   *
   * @param {React.FocusEvent<HTMLInputElement>}
   * @return {void}
   */

  const handleInputBlur = React.useCallback(e => {
    const v = e.target.value.trim(); // 时间format需要加个虚拟的日期进去

    let timeDate = dayjs__default['default'](`1992-10-22 ${v}`, format);
    const isValid = timeDate.isValid();

    if (!isValid) {
      setInputValue(value ? value.format(format) : '');
    } else {
      if (value) {
        timeDate = timeDate.year(value.year()).month(value.month()).date(value.date());
      }

      setInputValue(timeDate.format(format));
      handleChange(timeDate);
    }
  }, [format, value, handleChange]); // 时间输入框的值受控于value和format

  useComponentDidUpdate(() => {
    setInputValue(value ? value.format(format) : '');
  }, [value, format]);
  const handleVisibleChange = React.useCallback(e => {
    if (onVisibleChange) {
      onVisibleChange(e);
    }

    setVisible(e);
  }, [onVisibleChange, setVisible]);
  return /*#__PURE__*/_createElement$1g(Dropdown, {
    trigger: "click",
    visible: visible,
    zIndex: zIndex,
    onVisibleChange: handleVisibleChange,
    overlay: /*#__PURE__*/_createElement$1g(OverlayWrap$3, {
      onMouseDown: handleClickOverlay
    }, /*#__PURE__*/_createElement$1g(OverlayInputs, null, /*#__PURE__*/_createElement$1g(InputMemo, {
      value: inputValue,
      placeholder: format,
      className: "input",
      onChange: handleChangeInput,
      onBlur: handleInputBlur,
      testid: testid
    })), /*#__PURE__*/_createElement$1g(TimePanelWrap, null, /*#__PURE__*/_createElement$1g(TimePanelMemo, {
      value: value,
      onChange: handleChange,
      testid: testid
    })))
  }, typeof renderTrigger === 'function' ? renderTrigger(value) : /*#__PURE__*/_createElement$1g(Trigger$1, {
    className: classnames({
      placeholder: !value,
      disabled
    }),
    style: style
  }, /*#__PURE__*/_createElement$1g(TriggerWrap$7, null, /*#__PURE__*/_createElement$1g("span", {
    className: "text"
  }, value ? value.format(format) : placeholder), /*#__PURE__*/_createElement$1g(ClockNormal, {
    className: "calendar-icon",
    testid: testid
  }))));
});
TimePicker.defaultProps = {
  format: 'HH:mm:ss',
  defaultVisible: false
};

/* eslint-disable @typescript-eslint/no-explicit-any */
/**
 * ================ 控制器相关 start ====================
 */

const ControlWrap = withTheme(styled__default['default'].div(["margin-bottom:", ";user-select:none;color:rgba(0,0,0,0.85);"], ({
  theme
}) => theme.ui.marginSmall));
const ControlRoot = withTheme(styled__default['default'].div(["display:flex;align-items:center;"]));
const ControlPrevWrap = withTheme(styled__default['default'].div(["display:flex;align-items:center;"]));
const ControlNextWrap = withTheme(styled__default['default'].div(["display:flex;align-items:center;"]));
const ControlMain = withTheme(styled__default['default'].div(["width:0;flex:1 auto;"]));
const ArrowWrap = withTheme(styled__default['default'].div(["position:relative;color:", ";cursor:pointer;text-align:center;line-height:1;&:hover{color:", ";}.arrow-icon{font-size:", ";}"], ({
  theme
}) => theme.ui.datePickerArrowColor, ({
  theme
}) => theme.ui.datePickerArrowHoverColor, ({
  theme
}) => theme.ui.fontSizeH3));
const PanelControlWrap = withTheme(styled__default['default'].div(["text-align:center;", " color:rgba(0,0,0,0.85);&.clickable{&:hover{color:", ";cursor:pointer;}}"], Ellipsis, ({
  theme
}) => theme.ui.primaryColor));
/**
 * ================ 控制器相关 end ====================
 */

/**
 * ================ 月份面板相关 start ====================
 */

const MonthPanelWrap = withTheme(styled__default['default'].div(["box-sizing:border-box;*{box-sizing:border-box;}"]));
const MonthPanelBody = withTheme(styled__default['default'].div(["display:flex;flex-wrap:wrap;"]));
const MonthPanelItem = withTheme(styled__default['default'].div(["width:33%;padding:", " ", ";span{display:block;text-align:center;", " padding:", " 0;border-radius:", ";&:hover{background-color:", ";cursor:pointer;}&.actived{color:", ";background-color:", ";cursor:default;}&.isDisabled{color:", ";background-color:", ";cursor:not-allowed;}}"], ({
  theme
}) => theme.ui.padding, ({
  theme
}) => theme.ui.paddingLarge, Ellipsis, ({
  theme
}) => theme.ui.paddingTiny, ({
  theme
}) => theme.ui.elementHeight, ({
  theme
}) => theme.ui.backgroundColor, ({
  theme
}) => theme.ui.colorGray1, ({
  theme
}) => theme.ui.primaryColor, ({
  theme
}) => theme.ui.disabledColor, ({
  theme
}) => theme.ui.disabledBackgroundColor));
/**
* ================ 月份面板相关 end ====================
*/

/**
 * ================ 年份面板相关 start ====================
 */

const YearPanelWrap = withTheme(styled__default['default'].div(["box-sizing:border-box;*{box-sizing:border-box;}"]));
const YearPanelBody = withTheme(styled__default['default'].div(["display:flex;flex-wrap:wrap;"]));
const YearPanelItem = withTheme(styled__default['default'].div(["width:33%;padding:", " ", ";span{display:block;text-align:center;", " padding:", " 0;border-radius:", ";&:hover{background-color:", ";cursor:pointer;}&.actived{color:", ";background-color:", ";cursor:default;}&.isDisabled{color:", ";background-color:", ";cursor:not-allowed;}}"], ({
  theme
}) => theme.ui.padding, ({
  theme
}) => theme.ui.paddingLarge, Ellipsis, ({
  theme
}) => theme.ui.paddingTiny, ({
  theme
}) => theme.ui.elementHeight, ({
  theme
}) => theme.ui.backgroundColor, ({
  theme
}) => theme.ui.colorGray1, ({
  theme
}) => theme.ui.primaryColor, ({
  theme
}) => theme.ui.disabledColor, ({
  theme
}) => theme.ui.disabledBackgroundColor));
/**
* ================ 年份面板相关 end ====================
*/

/**
 * ================ 日期面板相关 start ====================
 */

const DatePanelWrap = withTheme(styled__default['default'].div(["box-sizing:border-box;font-size:", ";color:", ";*{box-sizing:border-box;}"], ({
  theme
}) => theme.ui.fontSize, ({
  theme
}) => theme.ui.textColor));
const CanlendarTable = withTheme(styled__default['default'].table(["border-collapse:collapse;border-spacing:0;width:100%;table-layout:fixed;border:none;user-select:none;"]));
const CanlendarWeekday = withTheme(styled__default['default'].div(["margin-bottom:4px;color:rgba(0,0,0,0.85);"]));
const CanlendarDate = withTheme(styled__default['default'].div(["width:24px;height:24px;line-height:22px;border:1px solid transparent;margin:3px auto;border-radius:12px;text-align:center;color:", ";&.notCurrentMonth{color:", ";}&.isToday{position:relative;color:", ";border-color:", ";&:hover{background-color:transparent;border-color:", ";}}&:hover{background-color:", ";border-color:", ";cursor:pointer;}&.selected{color:", ";background-color:", " !important;border-color:", ";&:before{display:none;}}&.isDisabled{color:", ";background-color:", " !important;cursor:not-allowed;}"], ({
  theme
}) => theme.ui.colorText5, ({
  theme
}) => theme.ui.colorText3, ({
  theme
}) => theme.ui.primaryColor, ({
  theme
}) => theme.ui.primaryColor, ({
  theme
}) => theme.ui.primaryColor, ({
  theme
}) => theme.ui.backgroundColor, ({
  theme
}) => theme.ui.backgroundColor, ({
  theme
}) => theme.ui.colorGray1, ({
  theme
}) => theme.ui.primaryColor, ({
  theme
}) => theme.ui.primaryColor, ({
  theme
}) => theme.ui.disabledColor, ({
  theme
}) => theme.ui.disabledBackgroundColor));
const DatePanelBody = withTheme(styled__default['default'].div(["display:flex;flex-wrap:wrap;"]));
const DatePanelItem = withTheme(styled__default['default'].div(["width:33%;padding:", " ", ";span{display:block;text-align:center;", " padding:", " 0;border-radius:", ";&:hover{background-color:", ";cursor:pointer;}&.actived{color:", ";background-color:", ";cursor:default;}}"], ({
  theme
}) => theme.ui.padding, ({
  theme
}) => theme.ui.paddingLarge, Ellipsis, ({
  theme
}) => theme.ui.paddingSmall, ({
  theme
}) => theme.ui.paddingSmall, ({
  theme
}) => theme.ui.primaryColor1, ({
  theme
}) => theme.ui.colorGray1, ({
  theme
}) => theme.ui.primaryColor));
/**
* ================ 日期面板相关 end ====================
*/

/**
* ================ DatePicker相关 start ====================
*/

const DatePickerTrigger = withTheme(styled__default['default'].div(["position:relative;box-sizing:border-box;display:inline-block;width:100%;min-width:100px;height:", ";line-height:", ";border:1px solid ", ";border-radius:", ";transition:all .24s ease;padding:0 ", ";font-size:0 ", ";user-select:none;&:hover{border-color:", ";cursor:pointer;}.calendar-icon{margin-left:", ";color:", ";}&.placeholder{color:", ";}&.disabled{color:", ";background-color:", ";border-color:", ";cursor:not-allowed;}&.allowClear{.clear-icon{position:absolute;color:", ";right:", ";display:none;}&:hover{.calendar-icon{opacity:0;}.clear-icon{display:inline-block;}}}*{box-sizing:border-box;}"], ({
  theme
}) => theme.ui.elementHeight, ({
  theme
}) => `${parseInt(theme.ui.elementHeight, 10) - 2}px`, ({
  theme
}) => theme.ui.commonLineLightColor, ({
  theme
}) => theme.ui.radius, ({
  theme
}) => theme.ui.padding, ({
  theme
}) => theme.ui.fontSize, ({
  theme
}) => theme.ui.primaryColor, ({
  theme
}) => theme.ui.marginSmall, ({
  theme
}) => theme.ui.colorText2, ({
  theme
}) => theme.ui.colorText2, ({
  theme
}) => theme.ui.disabledColor, ({
  theme
}) => theme.ui.disabledBackgroundColor, ({
  theme
}) => theme.ui.disabledBorderColor, ({
  theme
}) => theme.ui.colorText2, ({
  theme
}) => theme.ui.padding));
const DatePickerTriggerWrap = withTheme(styled__default['default'].div(["display:flex;align-items:center;.text{flex:1 auto;width:0;", "}"], Ellipsis));
const DatePickerOverlay = withTheme(styled__default['default'].div(["box-sizing:border-box;width:300px;font-size:", ";*{box-sizing:border-box;}"], ({
  theme
}) => theme.ui.fontSize));
const DatePickerOverlayInputs = withTheme(styled__default['default'].div(["display:flex;padding:", ";.datetime-input{margin-right:", ";&:last-child{margin-right:0;}}"], ({
  theme
}) => theme.ui.padding, ({
  theme
}) => theme.ui.margin));
const DatePickerOverlayPanel = withTheme(styled__default['default'].div(["padding:", ";"], ({
  theme
}) => theme.ui.padding));
const DatePickerOverlayFooter = withTheme(styled__default['default'].div(["padding:", ";border-top:1px solid ", ";display:flex;justify-content:flex-end;align-items:center;.time-button{color:", ";margin-right:", ";cursor:pointer;&.disabled{color:", ";cursor:not-allowed;}}"], ({
  theme
}) => theme.ui.padding, ({
  theme
}) => theme.ui.borderColor, ({
  theme
}) => theme.ui.primaryColor, ({
  theme
}) => theme.ui.margin, ({
  theme
}) => theme.ui.disabledColor));
/**
* ================ DatePicker相关 end ====================
*/

const _createElement$1h = /*#__PURE__*/React__default['default'].createElement;
const Control = props => {
  const {
    children,
    hasPrev,
    hasNext,
    hasSuperPrev,
    hasSuperNext,
    onClickSuperNext,
    onClickNext,
    onClickSuperPrev,
    onClickPrev,
    testid
  } = props;
  return /*#__PURE__*/_createElement$1h(ControlRoot, null, /*#__PURE__*/_createElement$1h(ControlPrevWrap, null, hasSuperPrev && /*#__PURE__*/_createElement$1h(ArrowWrap, {
    onClick: onClickSuperPrev
  }, /*#__PURE__*/_createElement$1h(SuperArrowLeftBetaNormal, {
    className: "arrow-icon",
    testid: testid
  })), hasPrev && /*#__PURE__*/_createElement$1h(ArrowWrap, {
    onClick: onClickPrev
  }, /*#__PURE__*/_createElement$1h(ArrowLeftThinBetaNormal, {
    className: "arrow-icon",
    testid: testid
  }))), /*#__PURE__*/_createElement$1h(ControlMain, {
    "data-testid": testid
  }, children), /*#__PURE__*/_createElement$1h(ControlNextWrap, null, hasNext && /*#__PURE__*/_createElement$1h(ArrowWrap, {
    onClick: onClickNext
  }, /*#__PURE__*/_createElement$1h(ArrowRightThinBetaNormal, {
    className: "arrow-icon",
    testid: testid
  })), hasSuperNext && /*#__PURE__*/_createElement$1h(ArrowWrap, {
    onClick: onClickSuperNext
  }, /*#__PURE__*/_createElement$1h(SuperArrowRightBetaNormal, {
    className: "arrow-icon",
    testid: testid
  }))));
};
Control.defaultProps = {
  hasSuperNext: true,
  hasSuperPrev: true,
  hasNext: true,
  hasPrev: true,
  onClickSuperPrev: () => {},
  onClickSuperNext: () => {},
  onClickPrev: () => {},
  onClickNext: () => {}
};

/* eslint-disable react/no-array-index-key */
const _createElement$1i = /*#__PURE__*/React__default['default'].createElement;
const today = dayjs__default['default']();

// eslint-disable-next-line max-lines-per-function
const DatePanel = props => {
  const {
    onChange,
    controls,
    locale,
    onClickControl,
    onChangeTemporaryValue,
    style,
    disabledDate,
    testid
  } = props; // 国际化

  const t = useTranslate(locale);
  const dayjsLocale = useDayjsLocale(locale); // 拿到语言包短月份数组

  const weekdays = React.useMemo(() => {
    return dayjs__default['default']().locale(dayjsLocale).localeData().weekdaysMin();
  }, [dayjsLocale]);
  const [value, setValue] = useControlledValue(props.value, props.defaultValue);
  const [temporaryValue, setTemporaryValue] = useControlledValue(props.temporaryValue, value || dayjs__default['default']()); // value变化时，应该reset temporary value

  useComponentDidUpdate(() => {
    setTemporaryValue(props.value || dayjs__default['default']());
  }, [props.value]); // 计算要显示的天，遵循temporaryValue的值
  // 月份不同，可能所占的行数不一致，为了不抖动，统一取42天

  const daysArray = React.useMemo(() => {
    const results = [];
    const firstDate = temporaryValue.date(1);
    const lastDate = temporaryValue.add(1, 'month').date(0); // 获取 1 号是星期几，前面要补全整个星期

    const firstDateDay = firstDate.day();

    for (let i = 0; i < firstDateDay; i += 1) {
      results.unshift(firstDate.subtract(i + 1, 'day'));
    } // 本月


    const thisMonthLastDate = lastDate.date();

    for (let i = 0; i < thisMonthLastDate; i += 1) {
      results.push(firstDate.add(i, 'day'));
    } // 最后补全42个数字


    let i = 1;

    while (results.length < 42) {
      results.push(lastDate.add(i, 'day'));
      i += 1;
    } // 7个为一组


    const newResults = [];
    let group = [];
    results.forEach(item => {
      group.push(item);

      if (group.length === 7) {
        newResults.push(group);
        group = [];
      }
    });
    return newResults;
  }, [temporaryValue]);
  /**
   * 修改dayjs值
   *
   * @param {Dayjs} e
   * @return {void}
   */

  const handleChangeDate = e => {
    if (onChange) {
      onChange(e);
    }

    setTemporaryValue(e);
    setValue(e);
  }; // 控制条显示文案国际化


  const controlText = React.useMemo(() => {
    return temporaryValue.format(t('we_ui_date_year_month_format'));
  }, [temporaryValue, t]);
  /**
   * 控制条点击左右箭头增减时间处理函数
   * 1）+1 月
   * 2）-1 月
   * 3）+1 年
   * 4）-1 年
   *
   * @return {void}
   */

  const temporaryValueChangeHandlers = React.useMemo(() => {
    const commonHandler = (fnName, dt, unit) => {
      const newTemporaryValue = temporaryValue[fnName](dt, unit);

      if (onChangeTemporaryValue) {
        onChangeTemporaryValue(newTemporaryValue);
      }

      setTemporaryValue(newTemporaryValue);
    };

    return {
      addMonth: () => commonHandler('add', 1, 'month'),
      subtractMonth: () => commonHandler('subtract', 1, 'month'),
      addYear: () => commonHandler('add', 1, 'year'),
      subtractYear: () => commonHandler('subtract', 1, 'year')
    };
  }, [temporaryValue, onChangeTemporaryValue, setTemporaryValue]);
  return /*#__PURE__*/_createElement$1i(DatePanelWrap, {
    style: style
  }, /*#__PURE__*/_createElement$1i(ControlWrap, null, /*#__PURE__*/_createElement$1i(Control, {
    hasNext: (controls === null || controls === void 0 ? void 0 : controls.indexOf('next')) !== -1,
    hasPrev: (controls === null || controls === void 0 ? void 0 : controls.indexOf('prev')) !== -1,
    hasSuperNext: (controls === null || controls === void 0 ? void 0 : controls.indexOf('superNext')) !== -1,
    hasSuperPrev: (controls === null || controls === void 0 ? void 0 : controls.indexOf('superPrev')) !== -1,
    onClickNext: temporaryValueChangeHandlers.addMonth,
    onClickPrev: temporaryValueChangeHandlers.subtractMonth,
    onClickSuperNext: temporaryValueChangeHandlers.addYear,
    onClickSuperPrev: temporaryValueChangeHandlers.subtractYear,
    testid: testid ? `DatePanel-${testid}` : undefined
  }, /*#__PURE__*/_createElement$1i(PanelControlWrap, {
    className: classnames({
      clickable: !!onClickControl
    }),
    onClick: onClickControl
  }, controlText))), /*#__PURE__*/_createElement$1i(DatePanelBody, null, /*#__PURE__*/_createElement$1i(CanlendarTable, null, /*#__PURE__*/_createElement$1i("thead", null, /*#__PURE__*/_createElement$1i("tr", null, weekdays.map(weekday => {
    return /*#__PURE__*/_createElement$1i("th", {
      key: weekday
    }, /*#__PURE__*/_createElement$1i(CanlendarWeekday, null, weekday));
  }))), /*#__PURE__*/_createElement$1i("tbody", null, daysArray.map((days, index) => {
    return /*#__PURE__*/_createElement$1i("tr", {
      key: index
    }, days.map(item => {
      const isDisabled = typeof disabledDate === 'function' ? disabledDate(item, 'date') : false;
      return /*#__PURE__*/_createElement$1i("td", {
        key: item.format('YYYY-MM-DD')
      }, /*#__PURE__*/_createElement$1i(CanlendarDate, {
        onClick: () => {
          !isDisabled && handleChangeDate(item);
        },
        className: classnames({
          notCurrentMonth: !item.isSame(temporaryValue, 'month'),
          isToday: item.isSame(today, 'date'),
          selected: value && item.isSame(value, 'date'),
          isDisabled
        })
      }, item.format('DD')));
    }));
  })))));
};

DatePanel.defaultProps = {
  controls: ['superPrev', 'superNext', 'next', 'prev']
};
const DatePanelMemo = /*#__PURE__*/React__default['default'].memo(DatePanel);

const _createElement$1j = /*#__PURE__*/React__default['default'].createElement;

const MonthPanel = props => {
  const {
    onChange,
    control,
    onChangeYear,
    locale,
    onClickControl,
    style,
    disabledDate,
    testid
  } = props; // 国际化

  const t = useTranslate(locale);
  const dayjsLocale = useDayjsLocale(locale); // 可传dayjs值进来，受控

  const [value, setValue] = useControlledValue(props.value, props.defaultValue); // 可传当前显示年份，受控

  const [year, setYear] = useControlledValue(props.year, value.year()); // 拿到语言包短月份数组

  const months = React.useMemo(() => {
    return dayjs__default['default']().locale(dayjsLocale).localeData().monthsShort();
  }, [dayjsLocale]);
  const monthDates = React.useMemo(() => {
    return months.map((_, i) => dayjs__default['default']().year(year).month(i));
  }, [year, months]);
  /**
   * 修改dayjs值
   *
   * @param {number} e
   * @return {void}
   */

  const handleChange = e => {
    const newValue = value.month(e).year(year);

    if (onChange) {
      onChange(newValue);
    }

    setValue(newValue);
  };
  /**
   * 按下左右按钮修改年份
   *
   * @param {number} e year
   * @return {void}
   */


  const handleChangeYear = e => {
    if (onChangeYear) {
      onChangeYear(e);
    }

    setYear(e);
  }; // 控制条显示文案国际化


  const yearString = React.useMemo(() => dayjs__default['default']().year(year).format(t('we_ui_date_year_format')), [year, t]);
  return /*#__PURE__*/_createElement$1j(MonthPanelWrap, {
    style: style
  }, control !== false && /*#__PURE__*/_createElement$1j(ControlWrap, null, /*#__PURE__*/_createElement$1j(Control, {
    hasNext: false,
    hasPrev: false,
    onClickSuperNext: () => handleChangeYear(year + 1),
    onClickSuperPrev: () => handleChangeYear(year - 1),
    testid: testid ? `MonthPanel-${testid}` : undefined
  }, /*#__PURE__*/_createElement$1j(PanelControlWrap, {
    className: classnames({
      clickable: !!onClickControl
    }),
    onClick: onClickControl
  }, yearString))), /*#__PURE__*/_createElement$1j(MonthPanelBody, null, months.map((month, index) => {
    const isDisabled = typeof disabledDate === 'function' ? disabledDate(monthDates[index], 'month') : false;
    return /*#__PURE__*/_createElement$1j(MonthPanelItem, {
      key: month
    }, /*#__PURE__*/_createElement$1j("span", {
      className: classnames({
        actived: year === value.year() && index === value.month(),
        isDisabled
      }),
      onClick: () => {
        !isDisabled && handleChange(index);
      }
    }, month));
  })));
};

MonthPanel.defaultProps = {
  control: true,
  defaultValue: dayjs__default['default']()
};
const MonthPanelMemo = /*#__PURE__*/React__default['default'].memo(MonthPanel);

const _createElement$1k = /*#__PURE__*/React__default['default'].createElement;
// eslint-disable-next-line max-lines-per-function
const YearPanel = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    onChange,
    control,
    onChangeStartYear,
    onClickControl,
    style,
    disabledDate,
    testid
  } = props; // 可传dayjs值进来，受控

  const [value, setValue] = useControlledValue(props.value, props.defaultValue); // 临时值

  const [startYear, setStartYear] = useControlledValue(props.startYear, value.year() - 4); // 拿到语言包短月份数组

  const years = React.useMemo(() => {
    return Object.keys(Array.from({
      length: 12
    })).map((_, i) => i + startYear);
  }, [startYear]);
  const yearDates = React.useMemo(() => {
    return years.map(y => value.year(y));
  }, [years, value]);
  /**
   * 修改dayjs值
   *
   * @param {number} e
   * @return {void}
   */

  const handleChange = e => {
    const newValue = value.year(e);

    if (onChange) {
      onChange(newValue);
    }

    setValue(newValue);
  };
  /**
   * 按下右按钮修改年份
   *
   * @param {number} e year
   * @return {void}
   */


  const handleAddYear = React.useCallback(() => {
    const newStartYear = startYear + 12;

    if (onChangeStartYear) {
      onChangeStartYear(newStartYear);
    }

    setStartYear(newStartYear);
  }, [startYear, onChangeStartYear, setStartYear]);
  /**
   * 按下左按钮修改年份
   *
   * @param {number} e year
   * @return {void}
   */

  const hanldeSubtract = React.useCallback(() => {
    const newStartYear = startYear - 12;

    if (onChangeStartYear) {
      onChangeStartYear(newStartYear);
    }

    setStartYear(newStartYear);
  }, [startYear, setStartYear, onChangeStartYear]);
  return /*#__PURE__*/_createElement$1k(YearPanelWrap, {
    style: style
  }, control !== false && /*#__PURE__*/_createElement$1k(ControlWrap, null, /*#__PURE__*/_createElement$1k(Control, {
    hasNext: false,
    hasPrev: false,
    onClickSuperNext: handleAddYear,
    onClickSuperPrev: hanldeSubtract,
    testid: testid ? `YearPanel-${testid}` : ''
  }, /*#__PURE__*/_createElement$1k(PanelControlWrap, {
    className: classnames({
      clickable: !!onClickControl
    }),
    onClick: onClickControl
  }, startYear, " - ", startYear + 11))), /*#__PURE__*/_createElement$1k(YearPanelBody, null, years.map((item, index) => {
    const isDisabled = typeof disabledDate === 'function' ? disabledDate(yearDates[index], 'year') : false;
    return /*#__PURE__*/_createElement$1k(YearPanelItem, {
      key: item
    }, /*#__PURE__*/_createElement$1k("span", {
      className: classnames({
        actived: item === value.year(),
        isDisabled
      }),
      onClick: () => {
        !isDisabled && handleChange(item);
      }
    }, item));
  })));
});
YearPanel.defaultProps = {
  control: true,
  defaultValue: dayjs__default['default']()
};

const _createElement$1l = /*#__PURE__*/React__default['default'].createElement;

var _ref$j = /*#__PURE__*/_createElement$1l(CalendarNormal, {
  className: "calendar-icon"
});

// eslint-disable-next-line max-lines-per-function
const DatePicker = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    locale,
    format,
    showTime,
    style,
    onChange,
    onVisibleChange,
    onOk,
    disabled,
    renderTrigger,
    disabledDate,
    zIndex,
    allowClear,
    overlayStyle,
    overlayClassName,
    title,
    testid
  } = props; // 国际化函数

  const t = useTranslate(locale); // 时间值，受控

  const [value, setValue] = useControlledValue(props.value, props.defaultValue); // 面板显示与否，受控

  const [visible, setVisible] = useControlledValue(props.visible, props.defaultVisible); // 当前显示的面板

  const [panel, setPanel] = useControlledValue(props.panel, props.defaultPanel); // 临时值

  const [temporaryValue, setTemporaryValue] = React.useState(value || dayjs__default['default']()); // 年份面板起始年份，暂时的状态，应该在面板关闭的时候就还原

  const [yearPanelStartYear, setYearPanelStartYear] = React.useState(temporaryValue.year() - 4); // 月份的临时年份

  const [monthPanelYear, setMonthPanelYear] = React.useState(temporaryValue.year()); // 提示的国际化

  const placeholder = props.placeholder || (showTime ? t('we_ui_datepicker_datetime_placeholder') : t('we_ui_datepicker_date_placeholder')); // 格式化拼装

  const dateFormat = format || 'YYYY-MM-DD';
  let timeFormat = '';

  if (typeof showTime === 'object' && showTime.format) {
    timeFormat = showTime.format;
  } else {
    timeFormat = showTime ? 'HH:mm:ss' : '';
  }

  const finalFormat = [dateFormat, timeFormat].filter(f => f).join(' '); // 日期输入框的值

  const [dateInputValue, setDateInputValue] = React.useState(value ? value.format(dateFormat) : '');
  const [timeInputValue, setTimeInputValue] = React.useState(value ? value.format(timeFormat) : ''); // temporay 受控于value

  useComponentDidUpdate(() => {
    if (typeof value !== 'undefined') {
      setTemporaryValue(value || dayjs__default['default']());
    }
  }, [value]); // 日期输入框的值受控于value和format

  useComponentDidUpdate(() => {
    setDateInputValue(value ? value.format(dateFormat) : '');
  }, [value, dateFormat]); // 时间输入框的值受控于value和format

  useComponentDidUpdate(() => {
    setTimeInputValue(value ? value.format(timeFormat) : '');
  }, [value, timeFormat]);
  /**
   * overlay可见修改
   *
   * @param {boolean} e
   * @return {void}
   */

  const handleVisibleChange = React.useCallback(e => {
    if (!disabled) {
      if (onVisibleChange) {
        onVisibleChange(e);
      }

      setVisible(e);
    }
  }, [onVisibleChange, disabled, setVisible]);
  const handleConfirm = React.useCallback(() => {
    if (onOk) {
      onOk(value);
    }

    handleVisibleChange(false);
  }, [handleVisibleChange, onOk, value]);
  const handleChange = React.useCallback(e => {
    const changed = !e || !value || !value.isSame(e);

    if (changed) {
      if (onChange) {
        onChange(e);
      }

      setValue(e);
    }
  }, [value, onChange, setValue]);
  const handleChangeDateValue = React.useCallback(e => {
    if (!showTime) {
      handleVisibleChange(false);
    }

    handleChange(e);
  }, [handleVisibleChange, showTime, handleChange]);
  /**
   * 切换时间和日期面板
   *
   * @return {void}
   */

  const handleToggleTimeDatePanel = React.useCallback(() => {
    if (value) {
      if (panel === 'time') {
        setPanel('date');
      } else {
        setPanel('time');
      }
    }
  }, [panel, value, setPanel]);
  /**
   * 日期输入框输入
   *
   * @param {React.ChangeEvent<HTMLInputElement>}
   * @return {void}
   */

  const handleChangeDateInput = React.useCallback(e => {
    setDateInputValue(e.target.value);
  }, []);
  /**
   * 日期输入框失焦
   *
   * @param {React.FocusEvent<HTMLInputElement>}
   * @return {void}
   */

  const handleDateInputBlur = React.useCallback(e => {
    const v = e.target.value.trim();
    let inputDate = dayjs__default['default'](v, dateFormat);
    const isValid = inputDate.isValid();

    if (!isValid) {
      setDateInputValue(value ? value.format(dateFormat) : '');
    } else {
      if (value) {
        inputDate = inputDate.hour(value.hour()).minute(value.minute()).second(value.second());
      }

      setDateInputValue(inputDate.format(dateFormat));
      handleChange(inputDate);
    }
  }, [dateFormat, value, handleChange]);
  /**
   * 日期输入框聚焦
   *
   * @param {React.FocusEvent<HTMLInputElement>}
   * @return {void}
   */

  const handleDateInputFocus = React.useCallback(() => {
    if (panel === 'time') {
      setPanel('date');
    }
  }, [panel, setPanel]);
  /**
   * 日期输入框输入
   *
   * @param {React.ChangeEvent<HTMLInputElement>}
   * @return {void}
   */

  const handleChangeTimeInput = React.useCallback(e => {
    setTimeInputValue(e.target.value);
  }, []);
  /**
   * 日期输入框失焦
   *
   * @param {React.FocusEvent<HTMLInputElement>}
   * @return {void}
   */

  const handleTimeInputBlur = React.useCallback(e => {
    const v = e.target.value.trim(); // 时间format需要加个虚拟的日期进去

    let timeDate = dayjs__default['default'](`1992-10-22 ${v}`, timeFormat);
    const isValid = timeDate.isValid();

    if (!isValid) {
      setTimeInputValue(value ? value.format(timeFormat) : '');
    } else {
      if (value) {
        timeDate = timeDate.year(value.year()).month(value.month()).date(value.date());
      }

      setTimeInputValue(timeDate.format(timeFormat));
      handleChange(timeDate);
    }
  }, [timeFormat, value, handleChange]);
  /**
   * 日期输入框聚焦
   *
   * @param {React.FocusEvent<HTMLInputElement>}
   * @return {void}
   */

  const handleTimeInputFocus = React.useCallback(() => {
    if (panel !== 'time') {
      setPanel('time');
    }
  }, [panel, setPanel]);
  /**
   * 点击控制条进行面板切换
   *
   * @param {React.MouseEvent} e
   * @return {void}
   */

  const handleClickControl = React.useCallback(e => {
    e.stopPropagation();

    if (panel === 'date') {
      setMonthPanelYear(temporaryValue.year());
      setPanel('month');
    } else if (panel === 'month') {
      setYearPanelStartYear(monthPanelYear - 4);
      setPanel('year');
    } else if (panel === 'year') {
      setPanel('month');
    }
  }, [panel, temporaryValue, monthPanelYear, setPanel]);
  /**
   * 阻止冒泡，Dropdown自动关闭阻止
   *
   * @param {React.MouseEvent<HTMLElement>}
   * @return {void}
   */

  const handleClickOverlay = React.useCallback(e => e.stopPropagation(), []);
  /**
   * 年份修改，这个修改是暂时性的值
   *
   * @param {Dayjs} newTemporayValue
   * @return {void}
   */

  const handleChangeTemporaryYear = React.useCallback(newValue => {
    setTemporaryValue(newValue); // 切换到月份面板

    setPanel('month'); // 需要将月份面板的年份重置掉

    setMonthPanelYear(newValue.year());
  }, [setPanel]);
  /**
   * 月份修改，这个修改是暂时性的值
   *
   * @param {Dayjs} newTemporayValue
   * @return {void}
   */

  const handleChangeTemporaryMonth = React.useCallback(newValue => {
    setTemporaryValue(newValue); // 切换回日期面板

    setPanel('date');
  }, [setPanel]);
  /**
   * 清除
   */

  const handleClear = React.useCallback(e => {
    e.stopPropagation();
    handleChange(null);
  }, [handleChange]); // 三个面板切换的隐藏样式

  const datePanelStyle = React.useMemo(() => ({
    display: panel === 'date' ? 'block' : 'none'
  }), [panel]);
  const monthPanelStyle = React.useMemo(() => ({
    display: panel === 'month' ? 'block' : 'none'
  }), [panel]);
  const yearPanelStyle = React.useMemo(() => ({
    display: panel === 'year' ? 'block' : 'none'
  }), [panel]);
  return /*#__PURE__*/_createElement$1l(Dropdown, {
    trigger: "click",
    visible: visible,
    zIndex: zIndex,
    overlayStyle: overlayStyle,
    overlayClassName: overlayClassName,
    title: title,
    overlay: /*#__PURE__*/_createElement$1l(DatePickerOverlay, {
      onMouseDown: handleClickOverlay
    }, /*#__PURE__*/_createElement$1l(DatePickerOverlayInputs, null, /*#__PURE__*/_createElement$1l(InputMemo, {
      value: dateInputValue,
      placeholder: dateFormat,
      className: "datetime-input",
      onChange: handleChangeDateInput,
      onBlur: handleDateInputBlur,
      onFocus: handleDateInputFocus,
      testid: testid ? `${testid}_date` : undefined
    }), !!showTime && /*#__PURE__*/_createElement$1l(InputMemo, {
      value: timeInputValue,
      placeholder: timeFormat,
      className: "datetime-input",
      disabled: !value,
      onChange: handleChangeTimeInput,
      onBlur: handleTimeInputBlur,
      onFocus: handleTimeInputFocus,
      testid: testid ? `${testid}_time` : undefined
    })), /*#__PURE__*/_createElement$1l(DatePickerOverlayPanel, null, /*#__PURE__*/_createElement$1l(DatePanelMemo, {
      style: datePanelStyle,
      onClickControl: handleClickControl,
      temporaryValue: temporaryValue,
      onChangeTemporaryValue: setTemporaryValue,
      value: value,
      onChange: handleChangeDateValue,
      locale: locale,
      disabledDate: disabledDate,
      testid: testid
    }), /*#__PURE__*/_createElement$1l(MonthPanelMemo, {
      year: monthPanelYear,
      style: monthPanelStyle,
      onClickControl: handleClickControl,
      value: temporaryValue,
      onChangeYear: setMonthPanelYear,
      onChange: handleChangeTemporaryMonth,
      locale: locale,
      disabledDate: disabledDate,
      testid: testid
    }), /*#__PURE__*/_createElement$1l(YearPanel, {
      startYear: yearPanelStartYear,
      style: yearPanelStyle,
      onChangeStartYear: setYearPanelStartYear,
      value: temporaryValue,
      onChange: handleChangeTemporaryYear,
      onClickControl: handleClickControl,
      disabledDate: disabledDate,
      testid: testid
    }), !!showTime && /*#__PURE__*/_createElement$1l(TimePanelMemo, {
      visible: panel === 'time',
      value: temporaryValue,
      onChange: handleChange,
      testid: testid
    })), !!showTime && /*#__PURE__*/_createElement$1l(DatePickerOverlayFooter, null, /*#__PURE__*/_createElement$1l("span", {
      className: classnames('time-button', {
        disabled: !value
      }),
      onClick: handleToggleTimeDatePanel,
      "data-testid": testid ? `time-button-${testid}` : undefined
    }, panel === 'time' ? '选择日期' : '选择时间'), /*#__PURE__*/_createElement$1l(Button, {
      shape: "round",
      disabled: !value,
      type: "primary",
      onClick: handleConfirm,
      testid: testid
    }, "\u786E\u8BA4"))),
    onVisibleChange: handleVisibleChange
  }, typeof renderTrigger === 'function' ? renderTrigger(value) : /*#__PURE__*/_createElement$1l(DatePickerTrigger, {
    className: classnames({
      placeholder: !value,
      disabled,
      allowClear: !disabled && allowClear && !visible
    }),
    style: style
  }, /*#__PURE__*/_createElement$1l(DatePickerTriggerWrap, null, /*#__PURE__*/_createElement$1l("span", {
    className: "text"
  }, value ? value.format(finalFormat) : placeholder), _ref$j, !disabled && allowClear && !visible && /*#__PURE__*/_createElement$1l(RoundcloseThickNormal, {
    className: "clear-icon",
    onClick: handleClear,
    testid: testid
  }))));
});
DatePicker.defaultProps = {
  defaultVisible: false,
  format: 'YYYY-MM-DD',
  showTime: false,
  disabled: false,
  defaultPanel: 'date'
};

const BaseWrapper = /*#__PURE__*/styled__default['default'].div(["line-height:28px;font-size:14px;font-weight:normal;text-indent:0;border-radius:2px 2px;padding:8px 8px 8px 12px;"]);
const EditorWrapper = withTheme(styled__default['default'](BaseWrapper)(["display:flex;flex-direction:column;width:350px;background:", ";border:1px solid ", ";box-shadow:", ";color:", ";"], ({
  theme
}) => theme.ui.colorGray1, ({
  theme
}) => theme.ui.normalColor, ({
  theme
}) => theme.ui.boxShadow, ({
  theme
}) => theme.ui.colorText4));
const EditorContent = /*#__PURE__*/styled__default['default'].div(["display:flex;flex-direction:column;"]);
const EditorFooter = /*#__PURE__*/styled__default['default'].div(["display:flex;justify-content:flex-end;align-items:center;margin-top:8px;"]);
const ItemInput = withTheme(styled__default['default'].div(["position:relative;line-height:28px;margin:0 3px;text-align:left;flex:0 0 auto;display:flex;padding:2px 0;input{color:inherit;line-height:24px;padding:0 3px;display:inline-block;border:1px solid ", ";outline:0;font-size:14px;letter-spacing:0.05em;border-radius:5px;flex:1;}"], ({
  theme
}) => theme.ui.colorLine1));
const LinkText = withTheme(styled__default['default'].span(["display:inline-block;min-width:200px;max-width:250px;line-height:28px;padding:0 5px;color:", ";overflow:hidden;text-overflow:ellipsis;white-space:nowrap;cursor:pointer;&:hover{color:", ";}"], ({
  theme
}) => theme.ui.colorText4, ({
  theme
}) => theme.ui.colorBlue1));
const SaveButton = withTheme(styled__default['default'].div(["border-radius:15px;padding:0px 12px;font-size:14px;background-color:", ";color:", ";cursor:pointer;&:hover,:focus{background-color:#3da5ff;}"], ({
  theme
}) => theme.ui.colorBlue1, ({
  theme
}) => theme.ui.colorGray1));
const RemoveButton = /*#__PURE__*/styled__default['default'].div(["display:flex;align-items:center;margin-right:10px;cursor:pointer;"]);
const ToolbarWrapper$1 = withTheme(styled__default['default'](BaseWrapper)(["width:fit-content;display:flex;align-items:center;background:", ";border:1px solid ", ";box-shadow:", ";z-index:1;color:", ";.weicon{font-size:18px;vertical-align:middle;}"], ({
  theme
}) => theme.ui.colorGray1, ({
  theme
}) => theme.ui.normalColor, ({
  theme
}) => theme.ui.boxShadow, ({
  theme
}) => theme.ui.colorText4));
const LinkHrefWrapper = withTheme(styled__default['default'].span(["position:relative;flex:1;margin-left:12px;color:", ";height:24px;line-height:24px;:hover{cursor:pointer;}"], ({
  theme
}) => theme.ui.linkColor));
const LinkHref = withTheme(styled__default['default'].span(["display:inline-block;max-width:200px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;color:", ";"], ({
  theme: {
    ui
  }
}) => ui.primaryColor));
const ToolbarIconWrapper = withTheme(styled__default['default'].span(["display:inline-block;margin-left:10px;cursor:pointer;border-radius:50%;width:24px;height:24px;line-height:24px;text-align:center;:hover{background-color:", ";}"], ({
  theme
}) => theme.ui.colorFill4));

const _createElement$1m = /*#__PURE__*/React__default['default'].createElement;

var _ref$k = /*#__PURE__*/_createElement$1m(DeleteNormal, null);

// eslint-disable-next-line max-lines-per-function
const LinkEditor = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    defaultHref,
    defaultText,
    href,
    onHrefChange,
    text,
    onTextChange,
    onHide,
    locale,
    onSave,
    onRemove,
    onFocusedLinkEditor,
    style = {}
  } = props;
  const t = useTranslate(locale);
  const [innerHref, setInnerHref] = React__default['default'].useState(defaultHref);
  const [innerText, setInnerText] = React__default['default'].useState(defaultText);
  const inputFocused = React__default['default'].useRef(false);
  const save = React__default['default'].useCallback(() => {
    const currentText = text || innerText || '';
    const currentHref = href || innerHref || '';
    const trimedText = currentText.trim();
    const trimedHref = currentHref.trim();

    if (trimedText.length || trimedHref.length) {
      onSave(trimedText, trimedHref);
    }

    if (onHide) {
      onHide();
    }
  }, [innerText, innerHref, onSave]);
  const handleKeyDown = React.useCallback(e => {
    const event = e.nativeEvent;
    event.stopPropagation();
    const key = event.key.toLowerCase();

    if (event.isComposing) {
      return;
    }

    if (key.toLowerCase() === 'escape' || event.keyCode === 27) {
      event.preventDefault(); // ESC 退出

      if (onHide) {
        onHide();
      }
    } else if ((key === 'enter' || event.keyCode === 13) && inputFocused.current) {
      // Enter 保存
      event.preventDefault();
      save();
    }
  }, [save]);
  const handleHrefChange = React__default['default'].useCallback(e => {
    const textValue = e.target.value;

    if (onHrefChange) {
      // 受控模式
      onHrefChange(textValue);
    } else {
      setInnerHref(textValue);
    }
  }, []);
  const handleTextChange = React__default['default'].useCallback(e => {
    const hrefValue = e.target.value;

    if (onTextChange) {
      onTextChange(hrefValue);
    } else {
      setInnerText(hrefValue);
    }
  }, []);
  const handleSave = React__default['default'].useCallback(event => {
    event.preventDefault();
    event.stopPropagation();
    save();
  }, [save]);
  const handleRemove = React__default['default'].useCallback(event => {
    event.preventDefault();
    event.stopPropagation();
    setInnerHref('');
    onRemove();
  }, [onRemove]);
  const handleFocus = React__default['default'].useCallback(event => {
    event.preventDefault();
    event.stopPropagation();
    inputFocused.current = true;

    if (onFocusedLinkEditor) {
      onFocusedLinkEditor();
    }
  }, []);
  const handleBlur = React__default['default'].useCallback(() => {
    inputFocused.current = false;
  }, []);
  const currentText = text || innerText;
  const currentHref = href || innerHref;
  const hrefRef = React.useRef();
  React.useEffect(() => {
    if (hrefRef.current) {
      hrefRef.current.focus();
    }
  }, []);
  return /*#__PURE__*/_createElement$1m(EditorWrapper, {
    "data-testid": "link-editor",
    contentEditable: false,
    style: style
  }, /*#__PURE__*/_createElement$1m(EditorContent, null, /*#__PURE__*/_createElement$1m(ItemInput, null, /*#__PURE__*/_createElement$1m("label", {
    htmlFor: "text"
  }, t('we_ui_link_edit_text')), /*#__PURE__*/_createElement$1m("input", {
    name: "text",
    type: "text",
    value: currentText,
    onChange: handleTextChange,
    onFocus: handleFocus,
    onBlur: handleBlur,
    autoComplete: "off",
    onKeyDown: handleKeyDown
  })), /*#__PURE__*/_createElement$1m(ItemInput, null, /*#__PURE__*/_createElement$1m("label", {
    htmlFor: "href"
  }, t('we_ui_link_edit_link')), /*#__PURE__*/_createElement$1m("input", {
    name: "href",
    type: "text",
    value: currentHref,
    onChange: handleHrefChange,
    onFocus: handleFocus,
    onBlur: handleBlur,
    autoComplete: "off",
    ref: hrefRef,
    onKeyDown: handleKeyDown
  }))), /*#__PURE__*/_createElement$1m(EditorFooter, null, /*#__PURE__*/_createElement$1m(RemoveButton, {
    onMouseDown: handleRemove,
    "data-testid": "link-editor-remove"
  }, _ref$k, /*#__PURE__*/_createElement$1m("span", {
    className: "text"
  }, t('we_ui_link_delete'))), /*#__PURE__*/_createElement$1m(SaveButton, {
    onMouseDown: handleSave,
    "data-testid": "link-editor-save"
  }, /*#__PURE__*/_createElement$1m("span", {
    className: "text"
  }, t('we_ui_link_save')))));
});

/* eslint-disable max-lines-per-function */
const _createElement$1n = /*#__PURE__*/React.createElement;

var _ref$l = /*#__PURE__*/_createElement$1n(WebBetaNormal, null);

var _ref2$5 = /*#__PURE__*/_createElement$1n(EditorBorderBetaNormal, null);

var _ref3$5 = /*#__PURE__*/_createElement$1n(CopyNormal, null);

var _ref4$3 = /*#__PURE__*/_createElement$1n(DeleteNormal, null);

const LinkToolbar = /*#__PURE__*/React.memo(props => {
  const {
    href,
    onEdit,
    onRemove,
    onOpenLink,
    onHide,
    onCopied = throttle(() => message.success(t('we_ui_link_toolbar_copied')), 3000),
    locale,
    style = {},
    readOnly = false
  } = props;
  const t = useTranslate(locale);
  const handleVisit = React.useCallback(event => {
    event.preventDefault();

    if (event.button !== 2) {
      onOpenLink(href);
    }
  }, [href, onOpenLink]);
  const handleCopy = React.useCallback(event => {
    event.preventDefault();
    copyToClipboard(href, onCopied);
  }, [href, onCopied]);
  const handleRemove = React.useCallback(event => {
    event.preventDefault();
    onRemove();
  }, [onRemove]);
  React.useEffect(() => {
    const handleKeyDown = event => {
      const key = event.key.toLowerCase();

      if (key.toLowerCase() === 'escape' || event.keyCode === 27) {
        event.preventDefault(); // ESC 退出

        if (onHide) {
          onHide();
        }
      }
    };

    document.addEventListener('keydown', handleKeyDown);
    return () => {
      document.removeEventListener('keydown', handleKeyDown);
    };
  }, [onHide]);
  return /*#__PURE__*/_createElement$1n(ToolbarWrapper$1, {
    "data-testid": "link-toolbar",
    style: style
  }, _ref$l, /*#__PURE__*/_createElement$1n(LinkHrefWrapper, null, /*#__PURE__*/_createElement$1n(Tooltip, {
    title: t('we_ui_link_open_link')
  }, /*#__PURE__*/_createElement$1n(LinkHref, {
    onMouseDown: handleVisit,
    "data-testid": "link-toolbar-visit"
  }, href))), !readOnly && /*#__PURE__*/_createElement$1n(Tooltip, {
    title: t('we_ui_link_toolbar_edit')
  }, /*#__PURE__*/_createElement$1n(ToolbarIconWrapper, {
    "data-testid": "link-toolbar-edit",
    onClick: onEdit
  }, _ref2$5)), /*#__PURE__*/_createElement$1n(Tooltip, {
    title: t('we_ui_link_toolbar_copy')
  }, /*#__PURE__*/_createElement$1n(ToolbarIconWrapper, {
    "data-testid": "link-toolbar-copy",
    onClick: handleCopy
  }, _ref3$5)), !readOnly && /*#__PURE__*/_createElement$1n(Tooltip, {
    title: t('we_ui_link_delete')
  }, /*#__PURE__*/_createElement$1n(ToolbarIconWrapper, {
    "data-testid": "link-toolbar-remove",
    onClick: handleRemove
  }, _ref4$3)));
});

const _createElement$1o = /*#__PURE__*/React.createElement;
class LinkPortal extends React.PureComponent {
  constructor(props) {
    super(props);
    this.portalRef = /*#__PURE__*/React.createRef();

    this.handleLinkMouseDown = () => {
      this.onVisibleChange(true);
    };

    this.handleSave = (text, href) => {
      const {
        onSave
      } = this.props;
      if (onSave) onSave(text, href);
      this.setState({
        editMode: false
      });
      this.handleHide();
    };

    this.handleRemove = () => {
      const {
        onRemove
      } = this.props;
      if (onRemove) onRemove();
      this.setState({
        editMode: true
      });
      this.handleHide();
    };

    this.handleHide = () => {
      this.onVisibleChange(false);
    };

    this.getOverlay = () => {
      const {
        editMode
      } = this.state; // text/href 从 props 读了，已经不算非受控了

      const {
        text,
        href = '',
        locale,
        onCopied,
        onOpenLink,
        readOnly
      } = this.props;
      const portalStyle = {
        width: 'fit-content',
        position: 'absolute'
      };
      return editMode ? /*#__PURE__*/_createElement$1o("div", {
        ref: this.portalRef,
        style: portalStyle
      }, /*#__PURE__*/_createElement$1o(LinkEditor, {
        defaultText: text,
        defaultHref: href,
        onSave: this.handleSave,
        onRemove: this.handleRemove,
        locale: locale,
        onHide: this.handleHide
      })) : /*#__PURE__*/_createElement$1o("div", {
        ref: this.portalRef,
        style: portalStyle
      }, /*#__PURE__*/_createElement$1o(LinkToolbar, {
        href: href,
        onEdit: () => this.setState({
          editMode: true
        }),
        onRemove: this.handleRemove,
        onHide: this.handleHide,
        onOpenLink: onOpenLink,
        onCopied: onCopied,
        locale: locale,
        readOnly: readOnly
      }));
    };

    const innerVisible = props.visible || props.defaultVisible || false;

    let _editMode = props.defaultEditMode || false;

    if (props.defaultEditMode === undefined && innerVisible && props.href.trim().length === 0) {
      _editMode = true;
    }

    this.state = {
      editMode: _editMode,
      innerVisible
    };
  }

  onVisibleChange(v) {
    const {
      visible,
      onVisibleChange
    } = this.props;

    if (onVisibleChange) {
      onVisibleChange(v);
    }

    if (visible === undefined) {
      this.setState({
        innerVisible: v
      });
    }
  }

  render() {
    const {
      children,
      triggerRect,
      visible,
      getContainer
    } = this.props;
    const {
      innerVisible
    } = this.state;
    const activeVisible = visible || innerVisible;
    return /*#__PURE__*/_createElement$1o(Portal, {
      "data-type": "LinkPortal",
      className: "demo-link-portal",
      visible: activeVisible,
      overlay: this.getOverlay(),
      portalMatchTrigger: false,
      offset: [0, 6],
      triggerRect: triggerRect,
      getContainer: getContainer
    }, children && /*#__PURE__*/React.cloneElement(children, {
      onMouseDown: this.handleLinkMouseDown
    }));
  }

}
LinkPortal.defaultProps = {
  visible: true,
  readOnly: false
};

/* eslint-disable @typescript-eslint/no-explicit-any */
const themeStyle = /*#__PURE__*/styled.css(["position:relative;box-sizing:border-box;width:17px;height:17px;border:1px solid rgba(17,31,44,0.16);overflow:hidden;"]);
const ThemeItem = withTheme(styled__default['default'].div(["", ";display:flex;flex-direction:column;justify-content:space-evenly;align-items:stretch;padding:1px;i{display:block;height:3px;}"], themeStyle));
const ClearItem$1 = withTheme(styled__default['default'].div(["", ";padding:0;&:before{position:absolute;content:'';display:block;left:-7px;right:-8px;top:50%;transform:rotate(45deg);height:1px;background-color:rgba(17,31,44,0.32);}"], themeStyle));
const ColorsHeaderWrap = withTheme(styled__default['default'].div(["display:flex;align-items:center;ul{width:0;margin:0;padding:0;flex:1 auto;display:flex;align-items:center;list-style:none;padding:0;margin:0;}li{position:relative;list-style:none;margin-right:4px;cursor:pointer;border:1px solid transparent;transition:all .3s ease;position:relative;box-sizing:border-box;&:hover,&.active{border-color:#d9d9d9;.rect{display:block;}}&.active{border-color:rgba(17,31,44,0.65);}&:first-child{.rect{display:none;}}.rect{display:none;position:absolute;box-sizing:border-box;left:0;right:0;bottom:0;top:0;border:3px solid #fff;}}"]));
const DragableIconRoot = withTheme(styled__default['default'].div(["padding:", ";padding-left:0;cursor:grab;"], ({
  theme
}) => theme.ui.paddingTiny));
const RightButtons = /*#__PURE__*/styled__default['default'].div(["display:flex;flex-wrap:nowrap;"]);
const ButtonInner$1 = /*#__PURE__*/styled__default['default'].div(["display:flex;align-items:center;"]);
const DragableIconDotRow = withTheme(styled__default['default'].div(["display:flex;justify-content:space-between;margin-bottom:3px;&:last-child{margin-bottom:0;}"]));
const DragableIconDot = withTheme(styled__default['default'].i(["display:block;width:2px;height:2px;background-color:", ";border-radius:50%;margin-right:3px;"], ({
  theme
}) => theme.ui.colorGray7));
const OptionsWrap = withTheme(styled__default['default'].ul(["", " position:relative;overflow-y:auto;max-height:280px;margin-top:14px;&::-webkit-scrollbar{width:4px;background-color:#eee;}&::-webkit-scrollbar-track{background-color:#eee;}&::-webkit-scrollbar-thumb{background:#ccc;border-radius:2px;}"], resetComponent));
const OptionItem = withTheme(styled__default['default'].li(["", " display:flex;justify-content:center;align-items:center;background-color:", ";margin-bottom:", ";.option-input{width:0;flex:1 auto;}.close-icon{cursor:pointer;&.disabled{cursor:not-allowed;color:#aaa;}}"], resetComponent, ({
  theme
}) => theme.ui.colorGray1, ({
  theme
}) => theme.ui.margin));
const FooterWrap$1 = withTheme(styled__default['default'].div(["", " display:flex;justify-content:space-between;"], resetComponent));
const TitleWrap = withTheme(styled__default['default'].div(["", " font-size:14px;color:#111F2C;"], resetComponent));
const TipTextWrap = withTheme(styled__default['default'].div(["height:20px;font-size:12px;color:rgba(17,31,44,0.56);text-align:left;line-height:20px;margin-top:12px;"]));
const CloseIconWrap = withTheme(styled__default['default'].div(["display:flex;width:28px;height:28px;cursor:pointer;justify-content:center;align-items:center;color:#000;"]));
const ColorTriggerWrap = withTheme(styled__default['default'].div(["width:28px;height:28px;margin:0 0 0 4px;cursor:pointer;display:flex;justify-content:center;align-items:center;font-size:12px;color:#000;"]));

const _createElement$1p = /*#__PURE__*/React__default['default'].createElement;

var _ref$m = /*#__PURE__*/_createElement$1p(DragableIconRoot, null, /*#__PURE__*/_createElement$1p(DragableIconDotRow, null, /*#__PURE__*/_createElement$1p(DragableIconDot, null), /*#__PURE__*/_createElement$1p(DragableIconDot, null)), /*#__PURE__*/_createElement$1p(DragableIconDotRow, null, /*#__PURE__*/_createElement$1p(DragableIconDot, null), /*#__PURE__*/_createElement$1p(DragableIconDot, null)), /*#__PURE__*/_createElement$1p(DragableIconDotRow, null, /*#__PURE__*/_createElement$1p(DragableIconDot, null), /*#__PURE__*/_createElement$1p(DragableIconDot, null)));

const DragableIcon = () => _ref$m;

const themes = [{
  iconColors: ['#EB8B6D', '#FFD865', '#AACF8F'],
  colors: ['#EB8B6D', '#FFD865', '#AACF8F', '#9FC3E8', '#6F8CC6']
}, {
  iconColors: ['#F9E6D7', '#F7CCAD', '#F9B080'],
  colors: ['#F9E6D7', '#F7CCAD', '#F9B080', '#DE7840', '#C65A13']
}, {
  iconColors: ['#DBE4F6', '#B2C8E6', '#91A9DC'],
  colors: ['#DBE4F6', '#B2C8E6', '#91A9DC', '#587AC3', '#305198']
}, {
  iconColors: ['#CFCECF', '#B0ABAC', '#76716F'],
  colors: ['#CFCECF', '#B0ABAC', '#76716F', '#3A3839', '#191718']
}];

const _createElement$1q = /*#__PURE__*/React__default['default'].createElement;

var _ref$n = /*#__PURE__*/_createElement$1q(ClearItem$1, null);

const Theme = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    theme
  } = props;
  const isEmpty = theme.iconColors.length === 0;
  return isEmpty ? _ref$n : /*#__PURE__*/_createElement$1q(ThemeItem, null, theme.iconColors.map(iconColor => {
    return /*#__PURE__*/_createElement$1q("i", {
      key: iconColor,
      style: {
        backgroundColor: iconColor
      }
    });
  }));
});

var useMemorizeCallback = (callback => {
  const cache = React.useRef([]);
  return (...args) => {
    const found = cache.current.find(pair => isEqual(pair[0], args));

    if (found) {
      return found[1];
    } else {
      const fn = callback(...args);
      cache.current.push([args, fn]);
      return fn;
    }
  };
});

const _createElement$1r = /*#__PURE__*/React__default['default'].createElement;
const throttleMessage = throttle(msg => message.error(msg), 3000);

const isTheme = (themeColors, colors) => {
  const themeColorsFixed = [];

  for (let i = 0, len = colors.length; i < len; i++) {
    const colorIndex = i % themeColors.length;
    themeColorsFixed.push(themeColors[colorIndex]);
  }

  return isEqual(themeColorsFixed.map(c => c.toLowerCase()), colors.map(c => c.toLowerCase()));
}; // eslint-disable-next-line max-lines-per-function


var _ref$o = /*#__PURE__*/_createElement$1r("i", {
  className: "rect"
});

var _ref2$6 = /*#__PURE__*/_createElement$1r(DragableIcon, null);

var _ref3$6 = /*#__PURE__*/_createElement$1r(PlusNormal, {
  className: "add-icon"
});

const OptionsModal = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    onChangeOptions,
    removable,
    onOk,
    onClickRemove,
    zIndex,
    testid,
    themes,
    tipText,
    ...restProps
  } = props;
  const optionsWrapRef = React.useRef(null);
  const [options, setOptions] = useControlledValue(props.options, props.defaultOptions); // 国际化文案

  const t = useTranslate(props.locale);
  const title = t('we_ui_options_modal_title');
  const okText = t('we_ui_ok_text');
  const cancelText = t('we_ui_cancel_text');
  const removeText = t('we_ui_options_modal_clear');
  const warningText = t('we_ui_options_modal_warning_message');
  const colorListLabel = t('we_ui_options_modal_color_list_label');
  const addText = t('we_ui_options_modal_add_item'); // 给每个option增加ID

  const optionsWithId = React.useMemo(() => {
    return options.map(option => {
      return { ...option,
        id: option.id || uuid()
      };
    }); // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [options.length]); // ID不能变化，不然输入框会失去焦点，但是值需要同步

  options.forEach((option, index) => {
    optionsWithId[index].id = option.id || optionsWithId[index].id;
    optionsWithId[index].value = option.value;
    optionsWithId[index].color = option.color;
  }); // 主题增加无颜色

  const allThemes = React.useMemo(() => {
    return [{
      iconColors: [],
      colors: []
    }, ...(themes || [])];
  }, [themes]); // 计算当前主题的 index

  const currentThemeIndex = React.useMemo(() => {
    if (options.every(o => !o.color)) {
      return 0;
    }

    const colors = options.map(o => o.color || '');
    let themeIndex = -1;
    themes.some((theme, index) => {
      if (isTheme(theme.colors, colors)) {
        themeIndex = index + 1;
        return true;
      }

      return false;
    });
    return themeIndex;
  }, [options, themes]);
  const notNullThemeIndex = React.useRef(currentThemeIndex);

  if (currentThemeIndex !== -1) {
    notNullThemeIndex.current = currentThemeIndex;
  }
  /**
   * 输入框输入
   *
   * @param {number} index
   * @param {React.ChangeEvent<HTMLInputElement>} e
   */


  const changeValue = useMemorizeCallback(index => {
    return e => {
      const {
        value
      } = e.target;
      setOptions(oldOptions => {
        const newOptions = [...oldOptions];
        newOptions[index] = { ...newOptions[index],
          value
        };

        if (onChangeOptions) {
          onChangeOptions(newOptions);
        }

        return newOptions;
      });
    };
  });
  /**
   * 添加单项
   */

  const addOption = React.useCallback(() => {
    const currentTheme = allThemes[notNullThemeIndex.current];
    setOptions(oldOptions => {
      const newOption = currentThemeIndex === 0 || !currentTheme ? {
        value: '',
        id: uuid()
      } : {
        color: currentTheme.colors[oldOptions.length % currentTheme.colors.length],
        value: '',
        id: uuid()
      };
      const newOptions = [...oldOptions, newOption];

      if (onChangeOptions) {
        onChangeOptions(newOptions);
      }

      return newOptions;
    }); // 效果为自动滚动到底部

    setTimeout(() => {
      if (optionsWrapRef.current) {
        optionsWrapRef.current.scrollTop = optionsWrapRef.current.scrollHeight;
      }
    }, 0);
  }, [currentThemeIndex, allThemes, onChangeOptions, setOptions]);
  /**
   * 点击确定按钮处理函数
   *
   * @return {void}
   */

  const handleOk = React.useCallback(() => {
    const uniqOptions = uniqBy(options, 'value').filter(o => o.value).map(o => {
      const newOption = { ...o
      };

      if (typeof newOption.color === 'undefined') {
        delete newOption.color;
      } else if (typeof newOption.color !== 'undefined') {
        newOption.color = tinycolor__default['default'](newOption.color).toString();
      }

      return newOption;
    });

    if (uniqOptions.length < 2) {
      throttleMessage(warningText);
    } else {
      if (onOk) {
        onOk(uniqOptions);
      }

      if (onChangeOptions) {
        onChangeOptions(uniqOptions);
      }

      setOptions(uniqOptions);
    }
  }, [options, setOptions, onOk, warningText, onChangeOptions]);
  /**
   * 删除选项
   *
   * @param {number} index
   */

  const deleteOption = useMemorizeCallback(index => {
    return () => {
      setOptions(oldOptions => {
        const newOptions = [...oldOptions];
        newOptions.splice(index, 1);

        if (onChangeOptions) {
          onChangeOptions(newOptions);
        }

        return newOptions;
      });
    };
  });
  /**
   * 拖拽结束更换顺序
   *
   * @param {DropResult} e
   */

  const handleDragEnd = React.useCallback(e => {
    const {
      destination,
      source
    } = e;

    if (destination && destination.index !== source.index) {
      const {
        index: destinationIndex
      } = destination;
      const {
        index: sourceIndex
      } = source;
      setOptions(oldOptions => {
        const newOptions = [...oldOptions];
        const sourceOption = newOptions[sourceIndex];
        newOptions.splice(sourceIndex, 1);
        newOptions.splice(destinationIndex, 0, sourceOption);

        if (onChangeOptions) {
          onChangeOptions(newOptions);
        }

        return newOptions;
      });
    }
  }, [onChangeOptions, setOptions]);
  /**
   * 修改颜色
   *
   * @param {number} index
   * @param {string} color
   */

  const changeColor = useMemorizeCallback(index => {
    return color => {
      setOptions(oldOptions => {
        const newOptions = [...oldOptions];
        newOptions[index] = { ...newOptions[index],
          color
        };

        if (onChangeOptions) {
          onChangeOptions(newOptions);
        }

        return newOptions;
      });
    };
  });
  /**
   * 修改主题
   *
   * @param {number} index
   * @param {IOptionsModalTheme} theme
   */

  const changeTheme = useMemorizeCallback((index, theme) => {
    return () => {
      const {
        colors: themeColors
      } = theme;
      setOptions(oldOptions => {
        const newOptions = oldOptions.map(o => ({ ...o
        }));
        newOptions.forEach((option, optionIndex) => {
          if (index === 0) {
            delete option.color;
          } else {
            option.color = themeColors[optionIndex % themeColors.length];
          }
        });

        if (onChangeOptions) {
          onChangeOptions(newOptions);
        }

        return newOptions;
      });
    };
  });
  return /*#__PURE__*/_createElement$1r(Modal, _extends__default['default']({
    zIndex: zIndex,
    testid: testid,
    title: /*#__PURE__*/_createElement$1r(TitleWrap, null, title),
    width: 360,
    footer: /*#__PURE__*/_createElement$1r(FooterWrap$1, null, /*#__PURE__*/_createElement$1r(Button, {
      shape: "round",
      onClick: onClickRemove,
      disabled: !removable,
      testid: `${testid}_remove`
    }, removeText), /*#__PURE__*/_createElement$1r(RightButtons, null, /*#__PURE__*/_createElement$1r(Button, {
      shape: "round",
      onClick: props.onCancel,
      style: {
        marginRight: 8
      },
      testid: `${testid}_cancel`
    }, cancelText), /*#__PURE__*/_createElement$1r(Button, {
      shape: "round",
      type: "primary",
      onClick: handleOk,
      testid: `${testid}_ok`
    }, okText))),
    closable: false
  }, restProps), /*#__PURE__*/_createElement$1r(ColorsHeaderWrap, null, /*#__PURE__*/_createElement$1r("label", null, colorListLabel, "\uFF1A"), /*#__PURE__*/_createElement$1r("ul", null, allThemes.map((theme, index) => {
    return /*#__PURE__*/_createElement$1r("li", {
      key: `${index}`,
      className: index === currentThemeIndex ? 'active' : undefined,
      onClick: changeTheme(index, theme)
    }, /*#__PURE__*/_createElement$1r(Theme, {
      theme: theme
    }), _ref$o);
  }))), !!tipText && /*#__PURE__*/_createElement$1r(TipTextWrap, null, tipText), /*#__PURE__*/_createElement$1r(reactBeautifulDnd.DragDropContext, {
    onDragEnd: handleDragEnd
  }, /*#__PURE__*/_createElement$1r(reactBeautifulDnd.Droppable, {
    droppableId: "table-dropdown-list"
  }, dropProvided => /*#__PURE__*/_createElement$1r(OptionsWrap, _extends__default['default']({
    ref: composeRef(optionsWrapRef, dropProvided.innerRef)
  }, dropProvided.droppableProps), optionsWithId.map((option, index) => {
    const isWhite = !option.color || tinycolor__default['default'].equals('#ffffff', option.color);
    const pathColors = isWhite ? ['rgba(17,31,44,0.72)', '#ffffff', 'rgba(17,31,44,0.72)'] : [option.color, option.color, 'rgba(17,31,44,0.72)'];
    const isLight = option.color ? tinycolor__default['default'](option.color).isLight() : true;
    const placeholderColor = isLight ? 'rgba(17, 31, 44, 0.56)' : 'rgba(255, 255, 255, 0.56)';
    const color = isLight ? 'rgba(17, 31, 44, 1)' : 'rgba(255, 255, 255, 1)';
    return /*#__PURE__*/_createElement$1r(reactBeautifulDnd.Draggable, {
      key: option.id,
      draggableId: option.id,
      index: index
    }, dragProvider => /*#__PURE__*/_createElement$1r(OptionItem, _extends__default['default']({
      ref: dragProvider.innerRef
    }, dragProvider.draggableProps, dragProvider.dragHandleProps, {
      tabIndex: "-1"
    }), _ref2$6, /*#__PURE__*/_createElement$1r(InputMemo, {
      className: "option-input",
      value: option.value,
      onChange: changeValue(index, onChangeOptions),
      testid: testid,
      placeholderColor: placeholderColor,
      style: {
        backgroundColor: option.color ? option.color : 'transparent'
      },
      inputStyle: {
        color
      }
    }), /*#__PURE__*/_createElement$1r(ColorPicker, {
      color: option.color,
      onColorPicker: changeColor(index, onChangeOptions),
      zIndex: typeof zIndex === 'number' ? zIndex + 1 : undefined,
      colorBlockText: "A",
      automaticColor: "rgba(1,2,3,0)",
      clearColor: "rgba(1,2,3,0)"
    }, /*#__PURE__*/_createElement$1r(Button, {
      bordered: false,
      style: {
        marginLeft: 4
      },
      icon: /*#__PURE__*/_createElement$1r(BgfontcolorNormal, {
        testid: `${testid}_color`,
        pathColors: pathColors
      })
    })), /*#__PURE__*/_createElement$1r(Button, {
      bordered: false,
      disabled: optionsWithId.length <= 2,
      icon: /*#__PURE__*/_createElement$1r(DeleteNormal, {
        className: "close-icon",
        testid: `${testid}_delete`
      }),
      onClick: deleteOption(index, onChangeOptions)
    })));
  }), dropProvided.placeholder))), /*#__PURE__*/_createElement$1r(Button, {
    type: "text",
    size: "small",
    onClick: addOption,
    testid: testid,
    style: {
      lineHeight: 1,
      height: 'auto'
    }
  }, /*#__PURE__*/_createElement$1r(ButtonInner$1, null, _ref3$6, /*#__PURE__*/_createElement$1r("span", {
    className: "text"
  }, addText))));
});
OptionsModal.defaultProps = {
  defaultOptions: [{
    value: '',
    color: themes[0].colors[0]
  }, {
    value: '',
    color: themes[0].colors[1]
  }, {
    value: '',
    color: themes[0].colors[2]
  }],
  themes: themes,
  removable: true,
  zIndex: 500
};

/* eslint-disable arrow-body-style */
const SwitchButton = withTheme(styled__default['default'].button(["", " border:0;display:inline-block;position:relative;outline:none;transition:all .36s cubic-bezier(.78,.14,.15,.86);", " border-radius:", ";background-color:", ";overflow:hidden;cursor:pointer;", " ", ""], resetComponent, ({
  size,
  theme
}) => {
  if (size === 'small') {
    return `
        width: ${theme.ui.switchWidthSmall};
        height: ${theme.ui.switchHeightSmall};
      `;
  }

  return `
      width: ${theme.ui.switchWidth};
      height: ${theme.ui.switchHeight};
    `;
}, ({
  theme
}) => theme.ui.switchHeight, ({
  theme
}) => theme.ui.colorText1, ({
  checked,
  theme
}) => {
  return checked ? `
      background-color: ${theme.ui.primaryColor};
    ` : '';
}, ({
  disabled,
  checked,
  theme
}) => {
  return disabled ? `
      cursor: not-allowed;
      background-color: ${checked ? theme.ui.primaryDisabledColor : theme.ui.disabledBackgroundColor};
    ` : '';
}));
const SwitchInner = withTheme(styled__default['default'].span(["", " display:block;left:2px;top:2px;transition:all .36s cubic-bezier(.78,.14,.15,.86);", " border-radius:50%;position:absolute;background-color:", ";", ""], resetComponent, ({
  checked,
  size,
  theme
}) => {
  const height = size === 'small' ? parseInt(theme.ui.switchHeightSmall, 10) : parseInt(theme.ui.switchHeight, 10);
  return checked ? `
      left: calc(100% - ${height - 2}px);
    ` : '';
}, ({
  theme
}) => theme.ui.colorGray1, ({
  size,
  theme
}) => {
  if (size === 'small') {
    return `
        width: ${parseInt(theme.ui.switchHeightSmall, 10) - 4}px;
        height: ${parseInt(theme.ui.switchHeightSmall, 10) - 4}px;
      `;
  }

  return `
      width: ${parseInt(theme.ui.switchHeight, 10) - 4}px;
      height: ${parseInt(theme.ui.switchHeight, 10) - 4}px;
    `;
}));

/* eslint-disable no-param-reassign */
const _createElement$1s = /*#__PURE__*/React__default['default'].createElement;
const Switch = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    className,
    style,
    onChange,
    size,
    disabled,
    id,
    title,
    testid
  } = props;
  const [checked, setChecked] = useControlledValue(props.checked, props.defaultChecked);
  /**
   * 变化处理函数
   *
   * @param {boolean|undefined}
   * @return void
   */

  const handleToggleChecked = React.useCallback(newValue => {
    if (typeof newValue !== 'boolean') {
      newValue = !checked;
    }

    if (newValue !== checked && !disabled) {
      if (onChange) {
        onChange(newValue);
      }

      setChecked(newValue);
    }
  }, [checked, disabled, setChecked, onChange]);
  /**
   * 键盘左右键处理
   *
   * @param {React.KeyboardEvent<HTMLButtonElement>} e
   * @return {void}
   */

  const handleKeyDown = React.useCallback(e => {
    if (e.which === KEY_CODES.LEFT) {
      handleToggleChecked(false);
    } else if (e.which === KEY_CODES.RIGHT) {
      handleToggleChecked(true);
    }
  }, [handleToggleChecked]);

  const switchNode = /*#__PURE__*/_createElement$1s(SwitchButton, {
    autoFocus: true,
    checked: checked,
    className: className,
    style: style,
    onClick: handleToggleChecked,
    onKeyDown: handleKeyDown,
    size: size,
    disabled: disabled,
    id: id,
    "data-testid": testid ? `Switch-${testid}` : undefined
  }, /*#__PURE__*/_createElement$1s(SwitchInner, {
    size: size,
    checked: checked
  }));

  return title ? /*#__PURE__*/_createElement$1s(Tooltip, {
    title: title
  }, switchNode) : switchNode;
});
Switch.displayName = 'Switch';

/* eslint-disable arrow-body-style */
const CheckboxInner = withTheme(styled__default['default'].span(["", " display:inline-block;vertical-align:middle;width:16px;height:16px;border:1px solid ", ";background-color:", ";transition:all .24s ease-in;border-radius:3px;&.disabled{background-color:", ";}&:after{position:absolute;box-sizing:border-box;top:51%;left:28%;display:table;width:5.71428571px;height:9.14285714px;border:2px solid ", ";;border-top:0;border-left:0;transform:rotate(45deg) scale(0) translate(-50%,-50%);opacity:0;transition:all .1s cubic-bezier(.71,-.46,.88,.6),opacity .1s;content:' ';}"], resetComponent, ({
  theme
}) => theme.ui.borderColor, ({
  theme
}) => theme.ui.colorGray1, ({
  theme
}) => theme.ui.disabledBackgroundColor, ({
  theme
}) => theme.ui.colorGray1));
const CheckboxWrap = withTheme(styled__default['default'].label(["", " cursor:", ";", ";", ""], resetComponent, ({
  disabled
}) => disabled ? 'not-allowed' : 'pointer', ({
  disabled,
  theme
}) => {
  return disabled ? '' : `
      &:hover {
        ${CheckboxInner} {
          border-color: ${theme.ui.primaryColor};
        }
      }
    `;
}, ({
  checked,
  theme: {
    ui
  },
  disabled
}) => {
  return checked ? `
      ${CheckboxInner} {
        border-color: ${disabled ? ui.borderColor : ui.primaryColor};
        background-color: ${disabled ? ui.disabledBackgroundColor : ui.primaryColor};
        &:after {
          position: absolute;
          display: table;
          border: 2px solid ${disabled ? ui.disabledColor : ui.colorGray1};
          border-top: 0;
          border-left: 0;
          -webkit-transform: rotate(45deg) scale(1) translate(-50%,-50%);
          transform: rotate(45deg) scale(1) translate(-50%,-50%);
          opacity: 1;
          -webkit-transition: all .2s cubic-bezier(.12,.4,.29,1.46) .1s;
          transition: all .2s cubic-bezier(.12,.4,.29,1.46) .1s;
          content: ' ';
        }
      }
    ` : '';
}));
const CheckboxText = withTheme(styled__default['default'].span(["", " display:inline-block;vertical-align:middle;padding:0 ", ";"], resetComponent, ({
  theme
}) => theme.ui.padding));
const CheckboxContent = withTheme(styled__default['default'].span(["", " position:relative;input{position:absolute;top:0;right:0;bottom:0;left:0;z-index:1;width:0;height:0;cursor:pointer;opacity:0;&:focus ~ ", "{border-color:", ";}}"], resetComponent, CheckboxInner, ({
  theme
}) => theme.ui.primaryColor));
const CheckboxGroupWrap = withTheme(styled__default['default'].div(["", ""], resetComponent));

const CheckboxContext = /*#__PURE__*/React__default['default'].createContext(null);

const _createElement$1t = /*#__PURE__*/React__default['default'].createElement;
const Checkbox = /*#__PURE__*/React__default['default'].memo( /*#__PURE__*/React__default['default'].forwardRef((props, ref) => {
  const {
    children,
    onChange,
    value,
    label,
    defaultChecked = false
  } = props; // eslint-disable-next-line prefer-const

  let [checked, setChecked] = useControlledValue(props.checked, defaultChecked);
  const provider = React.useContext(CheckboxContext); // 如果有Group，直接根据 Group的选中数组判断

  if (provider && provider.checkedValues) {
    checked = provider.checkedValues.indexOf(value) !== -1;
  } // disabeld状态，如果有Group包住，且Group的disabed为true，则disabled为true


  const disabled = provider && provider.disabled ? true : props.disabled; // Group 修改参数函数

  const onToggleValue = provider && provider.onToggleValue;
  /**
   * 修改选中状态
   *
   * @param {React.ChangeEvent<HTMLInputElement>} e
   * @return {void}
   */

  const handleChange = React.useCallback(e => {
    if (onToggleValue && value) {
      onToggleValue({
        checked: e.target.checked,
        value
      });
    } else {
      if (onChange) {
        onChange(e);
      }

      setChecked(e.target.checked);
    }
  }, [onChange, onToggleValue, value, setChecked]);
  /**
   * Enter键切换选中状态
   *
   * @param {React.KeyboardEvent<HTMLInputElement>} e
   * @return {void}
   */

  const handleKeyDown = React.useCallback(e => {
    if (e.which === KEY_CODES.ENTER) {
      handleChange({
        target: {
          checked: !checked
        }
      });
    }
  }, [checked, handleChange]);
  const labelNode = label || children;
  return /*#__PURE__*/_createElement$1t(CheckboxWrap, {
    checked: checked,
    disabled: disabled,
    "data-testid": provider && provider.testid ? `CheckboxGroup-${provider.testid}` : undefined
  }, /*#__PURE__*/_createElement$1t(CheckboxContent, {
    disabled: disabled,
    checked: checked
  }, /*#__PURE__*/_createElement$1t("input", {
    ref: ref,
    type: "checkbox",
    onChange: handleChange,
    onKeyDown: handleKeyDown,
    disabled: disabled,
    checked: checked
  }), /*#__PURE__*/_createElement$1t(CheckboxInner, {
    className: classnames({
      disabled
    })
  })), labelNode && /*#__PURE__*/_createElement$1t(CheckboxText, null, labelNode));
}));
Checkbox.displayName = 'Checkbox';

const _createElement$1u = /*#__PURE__*/React__default['default'].createElement;
const CheckboxGroup = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    children,
    disabled,
    onChange,
    options,
    testid
  } = props;
  const [value, setValue] = useControlledValue(props.value, props.defaultValue);
  /**
   * 选中切换
   *
   * @param {string} e
   * @return {void}
   */

  const handleToggleValue = React.useCallback(e => {
    const newValue = [...value];
    let changed = false;
    const index = newValue.indexOf(e.value);

    if (e.checked && index === -1) {
      changed = true;
      newValue.push(e.value);
    } else if (!e.checked && index !== -1) {
      changed = true;
      newValue.splice(index, 1);
    }

    if (changed) {
      if (onChange) {
        onChange(newValue);
      }

      setValue(newValue);
    }
  }, [onChange, value, setValue]);
  /**
   * 透传给Checkbox组件的属性
   *
   * @return {ICheckboxContext} context
   */

  const provider = React.useMemo(() => {
    return {
      disabled: !!disabled,
      onToggleValue: handleToggleValue,
      checkedValues: value,
      testid
    }; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [disabled, handleToggleValue, value, testid]);
  const optionsNode = React.useMemo(() => (options || []).map(option => {
    const item = typeof option === 'string' ? {
      value: option,
      label: option
    } : option;
    return /*#__PURE__*/_createElement$1u(Checkbox, {
      key: item.value,
      value: item.value,
      disabled: item.disabled
    }, item.label);
  }), [options]);
  return /*#__PURE__*/_createElement$1u(CheckboxGroupWrap, {
    "data-testid": testid ? `CheckboxGroup-${testid}` : undefined
  }, /*#__PURE__*/_createElement$1u(CheckboxContext.Provider, {
    value: provider
  }, options ? optionsNode : children));
});
CheckboxGroup.defaultProps = {
  defaultValue: []
};
CheckboxGroup.displayName = 'CheckboxGroup';

const directionCss = /*#__PURE__*/styled.css(["", ""], ({
  direction
}) => {
  if (direction === 'rtl') {
    return 'flex-direction: row-reverse;';
  }

  return '';
});
const avatarWidth = /*#__PURE__*/styled.css(["width:", ";"], ({
  theme,
  size
}) => {
  let sizeString = '';
  if (size === 'small') sizeString = 'Small';
  if (size === 'large') sizeString = 'Large';
  return theme.ui[`elementHeight${sizeString}`];
});
const avatarHeight = /*#__PURE__*/styled.css(["height:", ";"], ({
  theme,
  size
}) => {
  let sizeString = '';
  if (size === 'small') sizeString = 'Small';
  if (size === 'large') sizeString = 'Large';
  return theme.ui[`elementHeight${sizeString}`];
});
const AvatarWrap = withTheme(styled__default['default'].div(["", " display:inline-block;position:relative;", ";", ";cursor:pointer;"], resetComponent, avatarWidth, avatarHeight));
const AvatarInner = withTheme(styled__default['default'].div(["box-sizing:border-box;position:relative;width:100%;height:100%;border-radius:50%;overflow:hidden;border:1px solid ", ";&:hover,&:active{border:1px solid ", ";}"], ({
  theme
}) => theme.ui.colorGray1, ({
  color,
  theme
}) => typeof color === 'string' ? color : theme.ui.colorGray1));
const divider = /*#__PURE__*/styled.css(["content:'';display:block;position:absolute;background-color:", ";"], ({
  theme
}) => theme.ui.colorGray1);
const leftDivider = /*#__PURE__*/styled.css(["", " left:0;top:0;bottom:0;width:1px;"], divider);
const rightDivider = /*#__PURE__*/styled.css(["", " right:0;top:0;bottom:0;width:1px;"], divider);
const topDivider = /*#__PURE__*/styled.css(["", " right:0;left:0;top:0;height:1px;"], divider);
const AvatarImage = withTheme(styled__default['default'].div(["position:absolute;left:0;top:0;width:100%;height:100%;background-image:url(", ");background-size:cover;background-position:center center;&.avatar_1_1{border-radius:50%;}&.avatar_2_1,&.avatar_3_1{transform:translate(-50%,0);}&.avatar_2_2{transform:translate(50%,0);&:after{", "}}&.avatar_3_2{transform:translate(50%,-50%);&:after{", "}}&.avatar_3_3{transform:translate(50%,50%);&:after{", "}&:before{", "}}&.avatar_4_1{transform:translate(-50%,-50%);&:after{", "}}&.avatar_4_2{transform:translate(-50%,50%);&:after{", "}&:before{", "}}&.avatar_4_3{transform:translate(50%,-50%);}&.avatar_4_4{transform:translate(50%,50%);&:after{", "}}"], ({
  url
}) => url, leftDivider, leftDivider, leftDivider, topDivider, rightDivider, rightDivider, topDivider, topDivider));
const AvatarCorner = withTheme(styled__default['default'].div(["position:absolute;bottom:0;right:0;width:8px;height:8px;border-radius:50%;overflow:hidden;background-color:", ";border:1px solid ", ";box-sizing:border-box;"], ({
  theme
}) => theme.ui.colorGray1, ({
  theme
}) => theme.ui.colorGray1));
const AvatarColor = withTheme(styled__default['default'].div(["width:100%;height:100%;background-color:", ";"], ({
  backgroundColor
}) => backgroundColor));
const NameWrap = withTheme(styled__default['default'].div(["width:100%;height:100%;background-color:", ";color:", ";display:flex;justify-content:center;align-items:center;font-size:14px;"], ({
  theme
}) => theme.ui.primaryColor, ({
  theme
}) => theme.ui.colorGray1));
const TooltipWrap = /*#__PURE__*/styled__default['default'].div(["display:flex;align-items:center;.status-icon{font-size:12px;}"]);
const AvatarGroupWrap = withTheme(styled__default['default'].div(["display:inline-block;"]));
const GroupAvatarList = withTheme(styled__default['default'].ul(["", ";", ";width:100%;", ";display:flex;position:relative;"], resetComponent, directionCss, avatarHeight));
const GroupAvatarItem = withTheme(styled__default['default'].li(["", ";", ";position:relative;flex:1 auto;&.more{border:0;}&.more:hover .more-item-span{background-color:#C6C9CD;}"], resetComponent, avatarHeight));
const GroupMoreItem = withTheme(styled__default['default'].div(["box-sizing:border-box;", ";", ";background-color:#E2E4E5;border-radius:50%;border:1px solid ", ";display:flex;justify-content:center;align-items:center;cursor:pointer;i{display:block;background-color:", ";width:2px;height:2px;margin-right:2px;border-radius:50%;&:last-child{margin-right:0;}}"], avatarHeight, avatarWidth, ({
  theme
}) => theme.ui.colorGray1, ({
  theme
}) => theme.ui.textColor));
const GroupMoreItemSpan = withTheme(styled__default['default'].span(["font-size:12px;transform:scale(.75);"]));
const OverlayWrap$4 = withTheme(styled__default['default'].div(["padding:10px 0;min-width:100px;"]));
const CountWrap = withTheme(styled__default['default'].div(["font-size:", ";color:", ";line-height:2;padding-left:6px;"], ({
  theme
}) => theme.ui.fontSizeSmall, ({
  theme
}) => theme.ui.commonBaseColor3));
const OverlayAvatarItem = withTheme(styled__default['default'].div(["", " justify-content:space-between;margin:0 6px;padding:6px;.status-icon{font-size:14px;}"], optionWrapStyle));
const OverlayAvatarName = withTheme(styled__default['default'].div(["margin-left:7px;padding-right:16px;"]));
const ListWrap = withTheme(styled__default['default'].div(["width:100%;overflow-y:auto;"]));
const OverlayAvatarWrap = withTheme(styled__default['default'].div(["display:flex;align-items:center;"]));
const OverlayAvatarStatus = withTheme(styled__default['default'].span(["margin-left:auto;color:", ";"], ({
  theme
}) => theme.ui.commonBaseColor3));

/* eslint-disable max-lines-per-function */
const _createElement$1v = /*#__PURE__*/React__default['default'].createElement;
// 固化头像组中颜色角标的选用和顺序
const COLOR_SCHEME = ['#0984FF', '#12C764', '#BF5AF2', '#FF9F0C', '#3BBEFA', '#FFCC01', '#99CAFF', '#FFD399'];
const COLOR_SCHEME_LEN = COLOR_SCHEME.length;
const defaultStyle = {
  width: '165px'
};
const overlayIconSize = {
  width: 20,
  height: 20
};

var _ref$p = /*#__PURE__*/_createElement$1v("i", null);

var _ref2$7 = /*#__PURE__*/_createElement$1v("i", null);

var _ref3$7 = /*#__PURE__*/_createElement$1v("i", null);

const AvatarGroup = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    children,
    max,
    className,
    style,
    direction,
    zIndex,
    onClick,
    overlayStyle,
    overlayMaxHeight
  } = props; // 数量

  const avatarCount = React__default['default'].Children.count(children);
  const isOverflowing = avatarCount > max; // 子组件的类型判定

  React__default['default'].Children.forEach(children, child => {
    warning__default['default']( /*#__PURE__*/React__default['default'].isValidElement(child) && child.type.displayName === 'Avatar', 'AvatarGroup 的子组件应该为 Avatar 组件.');
  });
  const avatarWidth = isOverflowing ? `${100 / (max + 1)}%` : `${100 / avatarCount}%`;
  const avatarStyle = React__default['default'].useMemo(() => ({
    width: avatarWidth,
    maxWidth: 28
  }), [avatarWidth]);
  return /*#__PURE__*/_createElement$1v(AvatarGroupWrap, {
    style: { ...defaultStyle,
      ...style
    },
    className: className
  }, /*#__PURE__*/_createElement$1v(GroupAvatarList, {
    direction: direction
  }, React__default['default'].Children.toArray(children).slice(0, max).map((child, idx) => {
    return /*#__PURE__*/_createElement$1v(GroupAvatarItem, {
      key: child.props.name,
      style: avatarStyle
    }, /*#__PURE__*/React__default['default'].cloneElement(child, {
      color: child.props.color || COLOR_SCHEME[idx % COLOR_SCHEME_LEN],
      onClick: child.props.onClick || (() => onClick === null || onClick === void 0 ? void 0 : onClick(idx))
    }));
  }), isOverflowing && /*#__PURE__*/_createElement$1v(GroupAvatarItem, {
    className: "more",
    style: {
      width: avatarWidth,
      maxWidth: 28
    }
  }, /*#__PURE__*/_createElement$1v(Dropdown, {
    overlayStyle: overlayStyle,
    overlay: /*#__PURE__*/_createElement$1v(OverlayWrap$4, null, /*#__PURE__*/_createElement$1v(CountWrap, null, "\u5171 ", avatarCount, " \u4EBA"), /*#__PURE__*/_createElement$1v(ListWrap, {
      style: {
        maxHeight: overlayMaxHeight
      }
    }, React__default['default'].Children.toArray(children).map((child, idx) => {
      const {
        name,
        status,
        color
      } = child.props;
      const avatarColor = color || COLOR_SCHEME[idx % COLOR_SCHEME_LEN];
      const iconProps = {
        style: {
          color: avatarColor
        },
        className: 'status-icon'
      };
      return /*#__PURE__*/_createElement$1v(OverlayAvatarItem, {
        key: name,
        onClick: () => onClick === null || onClick === void 0 ? void 0 : onClick(idx)
      }, /*#__PURE__*/_createElement$1v(OverlayAvatarWrap, null, /*#__PURE__*/React__default['default'].cloneElement(child, {
        title: '',
        style: overlayIconSize,
        isInOverlay: true
      })), /*#__PURE__*/_createElement$1v(OverlayAvatarName, null, name || ''), status === 'can-edit' || status === 'is-editing' ? /*#__PURE__*/_createElement$1v(EditorNormal, iconProps) : /*#__PURE__*/_createElement$1v(ViewNormal, iconProps));
    }))),
    zIndex: zIndex
  }, /*#__PURE__*/_createElement$1v(GroupMoreItem, {
    className: "more-item-span"
  }, Number(avatarCount) < 999 ? /*#__PURE__*/_createElement$1v(GroupMoreItemSpan, null, `${avatarCount}`) : /*#__PURE__*/_createElement$1v(React__default['default'].Fragment, null, _ref$p, " ", _ref2$7, " ", _ref3$7))))));
});
AvatarGroup.defaultProps = {
  max: 8,
  direction: 'ltr'
};

const isEmojiCharacter = substring => {
  for (let i = 0; i < substring.length; i++) {
    const hs = substring.charCodeAt(i);

    if (hs >= 0xd800 && hs <= 0xdbff) {
      if (substring.length > 1) {
        const ls = substring.charCodeAt(i + 1);
        const uc = (hs - 0xd800) * 0x400 + (ls - 0xdc00) + 0x10000;

        if (uc >= 0x1d000 && uc <= 0x1f77f) {
          return true;
        }
      }
    } else if (substring.length > 1) {
      const ls = substring.charCodeAt(i + 1);

      if (ls === 0x20e3) {
        return true;
      }
    } else if (hs >= 0x2100 && hs <= 0x27ff) {
      return true;
    } else if (hs >= 0x2B05 && hs <= 0x2b07) {
      return true;
    } else if (hs >= 0x2934 && hs <= 0x2935) {
      return true;
    } else if (hs >= 0x3297 && hs <= 0x3299) {
      return true;
    } else if (hs === 0xa9 || hs === 0xae || hs === 0x303d || hs === 0x3030 || hs === 0x2b55 || hs === 0x2b1c || hs === 0x2b1b || hs === 0x2b50) {
      return true;
    }
  }
};

const _createElement$1w = /*#__PURE__*/React__default['default'].createElement;
const GROUP_DEFAULT_AVATAR = '//gw.alicdn.com/tfs/TB1TBGRHW61gK0jSZFlXXXDKFXa-144-144.png';
const SINGLE_DEFAULT_AVATAR = '//gw.alicdn.com/tfs/TB1yx7PjsKfxu4jSZPfXXb3dXXa-144-144.png';
const Avatar = Object.assign( /*#__PURE__*/React__default['default'].memo(props => {
  const {
    url,
    style,
    className,
    name,
    color,
    corner,
    title,
    status,
    onClick,
    size,
    isInOverlay,
    nameWrapStyle
  } = props;
  /**
   * 头像情况：
   * 1) 名字、蓝底作为头像：url不存在，且名字存在
   * 2）多人头像：url为数组，如果url为空数组，则为默认群聊头像
   * 2）单人头像：url为字符串，如果url不存在，则为默认单人头像
   */

  let urls = []; // 过滤 emoji

  const avatarFilterName = Array.from(name || '').reverse().find(element => !isEmojiCharacter(element));
  const isNameAvatar = !url && !!avatarFilterName; // 是否为名字头像

  if (!isNameAvatar) {
    // 统一转为字符串数组
    urls = (Array.isArray(url) ? url : [url]).filter(u => u).slice(-4); // 如果数组为空，根据是否群聊设置默认头像

    if (urls.length === 0) {
      urls.push(Array.isArray(url) ? GROUP_DEFAULT_AVATAR : SINGLE_DEFAULT_AVATAR);
    }
  }

  const iconProps = React.useMemo(() => ({
    style: {
      color
    },
    className: 'status-icon'
  }), [color]); // 优先使用 title (为空字符串则无 tooltip)，若 name 和 status 均传入则按规则渲染 tooltip

  const avatarTitle = title !== undefined ? title : typeof name === 'string' && status && /*#__PURE__*/_createElement$1w(TooltipWrap, null, /*#__PURE__*/_createElement$1w("span", {
    style: {
      paddingRight: 6
    }
  }, name), status === 'can-edit' || status === 'is-editing' ? /*#__PURE__*/_createElement$1w(EditorNormal, iconProps) : /*#__PURE__*/_createElement$1w(ViewNormal, iconProps));
  return /*#__PURE__*/_createElement$1w(Tooltip, {
    title: avatarTitle
  }, /*#__PURE__*/_createElement$1w(AvatarWrap, {
    style: style,
    className: className,
    onClick: onClick,
    size: size
  }, /*#__PURE__*/_createElement$1w(AvatarInner, {
    color: isInOverlay ? undefined : color
  }, urls.map((src, index) => {
    return /*#__PURE__*/_createElement$1w(AvatarImage, {
      key: src,
      className: `avatar_${urls.length}_${index + 1}`,
      url: src
    });
  }), isNameAvatar && /*#__PURE__*/_createElement$1w(NameWrap, null, /*#__PURE__*/_createElement$1w("span", {
    style: nameWrapStyle
  }, avatarFilterName))), corner && /*#__PURE__*/_createElement$1w(AvatarCorner, null, // color ? (
  //   <AvatarColor backgroundColor={color} />
  // ) : corner
  corner)));
}), {
  Group: AvatarGroup
});
Avatar.defaultProps = {
  size: 'normal'
};
Avatar.displayName = 'Avatar';

const ModalWrapper = withTheme(styled__default['default'].div(["", " padding:0px 16px 16px 16px;box-sizing:border-box;width:350px;color:#414C56;font-size:14px;box-shadow:", ";z-index:2;user-select:none;@media print{display:none;}"], dropdownBoxStyle, ({
  focused
}) => focused ? '0 2px 10px rgba(0, 0, 0, 0.12)' : ''));
const ModalInput = withTheme(styled__default['default'].input(["box-sizing:border-box;position:relative;display:inline-block;outline:0;list-style:none;width:100%;height:32px;padding:4px 11px;background-image:none;border:1px solid #d9d9d9;border-radius:4px;flex-grow:1;&:hover{border:solid 1px #3296fa;}", ""], ({
  theme
}) => Placeholder(theme.ui.colorText2)));
const ModalText = /*#__PURE__*/styled__default['default'].div(["user-select:none;display:inline-block;text-align:center;"]);
const ModalCloseButton = withTheme(styled__default['default'].span(["position:absolute;top:16px;right:16px;cursor:pointer;color:", ";&:hover{color:#3296fa;}"], ({
  theme
}) => theme.ui.commonBaseColor3));
const PanelWrapper = withTheme(styled__default['default'].div(["display:flex;flex-direction:column;"]));
const operationPanelStyle = /*#__PURE__*/styled.css(["display:flex;flex-direction:row;justify-content:space-between;align-items:center;"]);
const OperationPanel = /*#__PURE__*/styled__default['default'].div(["", " margin-top:12px;padding:8px 0px;"], operationPanelStyle);
const FocusPanel = /*#__PURE__*/styled__default['default'].div(["display:flex;flex-direction:row;align-items:center;justify-content:space-between;flex:none;width:116px;margin-left:auto;"]);
const OperationButtonWrapper = /*#__PURE__*/styled__default['default'].div(["display:flex;flex-direction:row;"]);
const Description = withTheme(styled__default['default'].div(["color:", ";font-size:14px;text-align:left;padding:8px 0px;"], ({
  theme
}) => theme.ui.colorText4));
const rowWrapperStyle = /*#__PURE__*/styled.css(["margin-top:8px;"]);
const RowWrapper = /*#__PURE__*/styled__default['default'].div(["", ""], rowWrapperStyle);
const FlexRowWrapper = /*#__PURE__*/styled__default['default'].div(["", " display:flex;"], rowWrapperStyle);

const _createElement$1x = /*#__PURE__*/React.createElement;

var _ref$q = /*#__PURE__*/_createElement$1x(ArrowLeftNormal, null);

var _ref2$8 = /*#__PURE__*/_createElement$1x("span", null, "0/0");

var _ref3$8 = /*#__PURE__*/_createElement$1x(ArrowRightNormal, null);

class FindAndReplace extends React.Component {
  constructor(props) {
    super(props);
    this.inputRef = /*#__PURE__*/React.createRef();

    this.handleReplaceCurrent = () => {
      const {
        onReplaceCurrent
      } = this.props;
      const {
        replaceText = ''
      } = this.state;

      if (onReplaceCurrent) {
        onReplaceCurrent(replaceText);
      }
    };

    this.handleReplaceAll = () => {
      const {
        onReplaceAll
      } = this.props;
      const {
        replaceText = ''
      } = this.state;

      if (onReplaceAll) {
        onReplaceAll(replaceText);
      }
    };

    this.handleFindInputChange = event => {
      const {
        value: text = ''
      } = event.target;
      const {
        onFindInputChange
      } = this.props;

      if (onFindInputChange) {
        onFindInputChange(text);
      }
    };

    this.handleClose = () => {
      const {
        onClose,
        onFindInputChange
      } = this.props;
      onClose && onClose();
      onFindInputChange('');
      this.setState({
        replaceText: ''
      });
    };

    this.handleFindInputKeyDown = event => {
      const {
        onFocusIndexChange,
        focusIndex
      } = this.props;

      if (isShiftEnterHotKey(event)) {
        onFocusIndexChange(focusIndex - 1);
      } else if (isEnterHotKey(event) && onFocusIndexChange) {
        onFocusIndexChange(focusIndex + 1);
      } else if (isEscHotKey(event)) {
        this.handleClose();
      }
    };

    this.handleFocusPrevMatchedItem = () => {
      const {
        onFocusIndexChange,
        focusIndex
      } = this.props;

      if (onFocusIndexChange) {
        onFocusIndexChange(focusIndex - 1);
      }
    };

    this.handleFocusNextMatchedItem = () => {
      const {
        onFocusIndexChange,
        focusIndex
      } = this.props;

      if (onFocusIndexChange) {
        onFocusIndexChange(focusIndex + 1);
      }
    };

    this.handleReplaceInputChange = event => {
      const {
        value: text = ''
      } = event.target;
      this.setState({
        replaceText: text
      });
    };

    this.handleReplaceInputKeyDown = event => {
      const {
        onReplaceCurrent
      } = this.props;
      const {
        replaceText
      } = this.state;

      if (isEnterHotKey(event) && onReplaceCurrent) {
        onReplaceCurrent(replaceText);
      } else if (isEscHotKey(event)) {
        this.handleClose();
      }
    };

    this.focusInput = () => {
      if (this.inputRef.current) {
        this.inputRef.current.focus();
      }
    };

    this.selectInput = () => {
      if (this.inputRef.current) {
        this.inputRef.current.select();
      }
    };

    this.renderFocusIndex = () => {
      const {
        matchedCount,
        focusIndex,
        testid // locale,

      } = this.props;
      return /*#__PURE__*/_createElement$1x(FocusPanel, null, /*#__PURE__*/_createElement$1x(Button, {
        shape: "circle",
        disabled: !matchedCount,
        onClick: this.handleFocusPrevMatchedItem,
        icon: _ref$q,
        tabIndex: "-1",
        testid: testid ? `ArrowLeftNormal-${testid}` : undefined
      }), /*#__PURE__*/_createElement$1x(ModalText, {
        style: {
          wordBreak: 'keep-all',
          whiteSpace: 'nowrap'
        }
      }, matchedCount > 0 ? /*#__PURE__*/_createElement$1x("span", null, `${focusIndex}/${matchedCount}`) // : <TranslateComp locale={locale} textKey={'we_ui_find_and_replace_result'} />
      : _ref2$8), /*#__PURE__*/_createElement$1x(Button, {
        shape: "circle",
        disabled: !matchedCount,
        onClick: this.handleFocusNextMatchedItem,
        icon: _ref3$8,
        tabIndex: "-1",
        testid: testid ? `ArrowRightNormal-${testid}` : undefined
      }));
    };

    this.renderFindPanel = () => {
      const {
        findText
      } = this.props;
      return /*#__PURE__*/_createElement$1x(PanelWrapper, null, /*#__PURE__*/_createElement$1x(FlexRowWrapper, null, /*#__PURE__*/_createElement$1x(TranslateProvider, null, t => /*#__PURE__*/_createElement$1x(ModalInput, {
        autoFocus: true,
        "data-testid": "J_findValueInput",
        ref: this.inputRef,
        value: findText,
        onChange: this.handleFindInputChange,
        onKeyDown: this.handleFindInputKeyDown,
        placeholder: t('we_ui_find_and_replace_find_placeholder')
      }))), /*#__PURE__*/_createElement$1x(OperationPanel, null, this.renderFocusIndex()));
    };

    this.renderReplacePanel = () => {
      const {
        findText,
        locale,
        matchedCount
      } = this.props;
      const {
        replaceText
      } = this.state;
      return /*#__PURE__*/_createElement$1x(PanelWrapper, null, /*#__PURE__*/_createElement$1x(Description, null, /*#__PURE__*/_createElement$1x(TranslateComp, {
        locale: locale,
        textKey: 'we_ui_find_and_replace_find_description'
      })), /*#__PURE__*/_createElement$1x(TranslateProvider, null, t => /*#__PURE__*/_createElement$1x(ModalInput, {
        autoFocus: true,
        "data-testid": "J_findValueInput",
        ref: this.inputRef,
        value: findText,
        onChange: this.handleFindInputChange,
        onKeyDown: this.handleFindInputKeyDown,
        placeholder: t('we_ui_find_and_replace_find_placeholder')
      })), /*#__PURE__*/_createElement$1x(RowWrapper, null, /*#__PURE__*/_createElement$1x(Description, null, /*#__PURE__*/_createElement$1x(TranslateComp, {
        locale: locale,
        textKey: 'we_ui_find_and_replace_replace_description'
      })), /*#__PURE__*/_createElement$1x(TranslateProvider, null, t => /*#__PURE__*/_createElement$1x(ModalInput, {
        "data-testid": "J_replaceValueInput",
        value: replaceText,
        onChange: this.handleReplaceInputChange,
        onKeyDown: this.handleReplaceInputKeyDown,
        placeholder: t('we_ui_find_and_replace_replace_placeholder')
      }))), /*#__PURE__*/_createElement$1x(OperationPanel, null, /*#__PURE__*/_createElement$1x(OperationButtonWrapper, null, /*#__PURE__*/_createElement$1x(Button, {
        shape: "round",
        disabled: matchedCount === 0,
        "data-testid": "J_replaceOne",
        onClick: this.handleReplaceCurrent
      }, /*#__PURE__*/_createElement$1x(TranslateComp, {
        locale: locale,
        textKey: 'we_ui_find_and_replace_replace'
      })), /*#__PURE__*/_createElement$1x(Button, {
        shape: "round",
        disabled: matchedCount === 0,
        style: {
          marginLeft: 10
        },
        "data-testid": "J_replaceAll",
        onClick: this.handleReplaceAll
      }, /*#__PURE__*/_createElement$1x(TranslateComp, {
        locale: locale,
        textKey: 'we_ui_find_and_replace_replace_all'
      }))), this.renderFocusIndex()));
    };

    this.state = {
      replaceText: props.defaultReplaceText || ''
    };
  }

  render() {
    const {
      activeTabKey,
      focused = false,
      isFindOnly,
      locale,
      defaultTabKey,
      testid,
      domRef,
      onTabClick
    } = this.props;
    return /*#__PURE__*/_createElement$1x(ModalWrapper, {
      focused: focused,
      ref: domRef
    }, /*#__PURE__*/_createElement$1x(Tabs, {
      defaultActiveKey: defaultTabKey,
      activeKey: activeTabKey,
      onTabClick: onTabClick
    }, /*#__PURE__*/_createElement$1x(TabPane, {
      tab: /*#__PURE__*/_createElement$1x(TranslateComp, {
        locale: locale,
        textKey: 'we_ui_find_and_replace_find'
      }),
      key: "find"
    }, this.renderFindPanel()), isFindOnly ? null : /*#__PURE__*/_createElement$1x(TabPane, {
      tab: /*#__PURE__*/_createElement$1x(TranslateComp, {
        locale: locale,
        textKey: 'we_ui_find_and_replace_replace'
      }),
      key: "replace"
    }, this.renderReplacePanel())), /*#__PURE__*/_createElement$1x(ModalCloseButton, {
      onMouseDown: this.handleClose
    }, /*#__PURE__*/_createElement$1x(ClosedNormal, {
      testid: testid
    })));
  }

}

const FindAndReplacePortal = dragAndDropHOC(FindAndReplace, {
  shouldDragElement: event => {
    const tagName = event.target.tagName.toLowerCase(); // 鼠标点击在输入框上时，不可拖拽

    return tagName !== 'input';
  }
});

const RatioSelectWrap = /*#__PURE__*/styled__default['default'].div(["display:inline-block;"]);
const RatioSelectInner = /*#__PURE__*/styled__default['default'].div(["display:flex;justify-content:center;align-items:center;"]);
const Button$1 = withTheme(styled__default['default'].div(["display:flex;justify-content:center;align-items:center;width:", ";height:", ";cursor:pointer;color:", ";&:hover{background-color:", ";border-radius:", ";}&:focus{outline:none;background-color:", ";}&.disabled{background-color:transparent;cursor:not-allowed;color:", ";}.weicon{font-size:12px;}"], ({
  theme
}) => theme.ui.elementHeightSmall, ({
  theme
}) => theme.ui.elementHeightSmall, ({
  theme
}) => theme.ui.commonBaseColor2, ({
  theme
}) => theme.ui.backgroundColor, ({
  theme
}) => theme.ui.radius, ({
  theme
}) => theme.ui.backgroundColor, ({
  theme
}) => theme.ui.disabledColor));
const SelectWrap$1 = /*#__PURE__*/styled__default['default'].div([""]);
const TriggerSpanWrap = /*#__PURE__*/styled__default['default'].span(["vertical-align:middle;"]);

const _createElement$1y = /*#__PURE__*/React__default['default'].createElement;
const RATIOS = [0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];
const triggerStyle = {
  width: 36,
  textAlign: 'center',
  fontSize: 12
}; // eslint-disable-next-line max-lines-per-function

var _ref$r = /*#__PURE__*/_createElement$1y(MinusNormal, null);

var _ref2$9 = /*#__PURE__*/_createElement$1y(PlusNormal, null);

const RatioSelect = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    locale,
    onVisibleChange,
    onChange,
    step,
    zIndex,
    placement,
    disabled,
    customedList
  } = props; // 国际化文案

  const t = useTranslate(locale);
  const placeholderTitle = t('we_ui_ratio_select_placeholder');
  const zoomInTitle = t('we_ui_ratio_select_zoom_in');
  const zoomOutTitle = t('we_ui_ratio_select_zoom_out');
  const addText = t('we_ui_add_text');
  const reduceText = t('we_ui_reduce_text'); // visible 受控

  const [visible, setVisible] = useControlledValue(props.visible, props.defaultVisible); // value 受控

  const [value, setValue] = useControlledValue(props.value, props.defaultValue);
  /**
   * 可见性变化
   */

  const handleVisibleChange = React.useCallback(e => {
    if (onVisibleChange) {
      onVisibleChange(e);
    }

    setVisible(e);
  }, [setVisible, onVisibleChange]);
  /**
   * 值发生变化
   */

  const handleValueChange = React.useCallback(e => {
    if (onChange) {
      onChange(e);
    }

    setValue(e);
  }, [onChange, setValue]);
  /**
   * 减少比例
   */

  const handleReduce = React.useCallback(() => {
    if (disabled) return; // 浮点数精度问题消除

    const newValue = Math.round(value * 100) - Math.round(step * 100);

    if (newValue >= RATIOS[0] * 100) {
      handleValueChange(newValue / 100);
    }
  }, [value, handleValueChange, step]);
  /**
   * 增加比例
   */

  const handleAdd = React.useCallback(() => {
    if (disabled) return; // 浮点数精度问题消除

    const newValue = Math.round(value * 100) + Math.round(step * 100);

    if (newValue <= RATIOS[RATIOS.length - 1] * 100) {
      handleValueChange(newValue / 100);
    }
  }, [value, handleValueChange, step]);
  /**
   * 如果是focus到减少按钮并回车
   */

  const handleMinusKeyDown = React.useCallback(e => {
    if (e.which === KEY_CODES.ENTER) {
      handleReduce();
    }
  }, [handleReduce]);
  /**
   * 如果是focus到增加按钮并回车
   */

  const handleAddKeyDown = React.useCallback(e => {
    if (e.which === KEY_CODES.ENTER) {
      handleAdd();
    }
  }, [handleAdd]);
  /**
   * 不是根据select来渲染
   */

  const renderRatio = React.useCallback(e => /*#__PURE__*/_createElement$1y(TriggerSpanWrap, null, Math.round(e * 100), "%"), []);
  return /*#__PURE__*/_createElement$1y(RatioSelectWrap, null, /*#__PURE__*/_createElement$1y(RatioSelectInner, null, /*#__PURE__*/_createElement$1y(Tooltip, {
    title: zoomOutTitle
  }, /*#__PURE__*/_createElement$1y(Button$1, {
    title: zoomOutTitle,
    tabIndex: 0,
    onKeyDown: handleMinusKeyDown,
    onClick: handleReduce,
    className: classnames({
      disabled: value === RATIOS[0] || disabled
    }),
    "data-testid": "RatioSelect_minus"
  }, _ref$r)), /*#__PURE__*/_createElement$1y(SelectWrap$1, null, /*#__PURE__*/_createElement$1y(SelectMemo, {
    size: "small",
    value: value,
    visible: visible,
    onChange: handleValueChange,
    renderTrigger: renderRatio,
    onVisibleChange: handleVisibleChange,
    zIndex: zIndex,
    style: triggerStyle,
    showArrow: false,
    placement: placement,
    title: placeholderTitle,
    disabled: disabled,
    testid: "RatioSelect"
  }, /*#__PURE__*/_createElement$1y(SelectOptionGroup, null, RATIOS.map(ratio => {
    return /*#__PURE__*/_createElement$1y(SelectOption, {
      key: `${ratio}`,
      value: ratio,
      testid: `RatioSelect_${ratio}`
    }, ratio * 100, "%");
  })), customedList ? /*#__PURE__*/_createElement$1y(SelectOptionGroup, null, customedList.map(item => {
    return /*#__PURE__*/_createElement$1y(SelectOption, {
      key: `${item.text}`,
      value: item.value,
      testid: `RatioSelect_${item.text}`
    }, item.text);
  })) : /*#__PURE__*/_createElement$1y(React__default['default'].Fragment, null), /*#__PURE__*/_createElement$1y(SelectOption, {
    disabled: value >= RATIOS[RATIOS.length - 1],
    onSelect: handleAdd,
    testid: "RatioSelect_add"
  }, addText, step * 100, "%"), /*#__PURE__*/_createElement$1y(SelectOption, {
    onSelect: handleReduce,
    disabled: value <= RATIOS[0],
    testid: "RatioSelect_reduce"
  }, reduceText, step * 100, "%"))), /*#__PURE__*/_createElement$1y(Tooltip, {
    title: zoomInTitle
  }, /*#__PURE__*/_createElement$1y(Button$1, {
    tabIndex: 0,
    onKeyDown: handleAddKeyDown,
    onClick: handleAdd,
    className: classnames({
      disabled: value === RATIOS[RATIOS.length - 1] || disabled
    }),
    "data-testid": "RatioSelect_plus"
  }, _ref2$9))));
});
RatioSelect.defaultProps = {
  defaultVisible: false,
  step: 0.05,
  defaultValue: 1,
  placement: 'top',
  disabled: false
};

const _createElement$1z = /*#__PURE__*/React__default['default'].createElement;

class AbsolutePopup extends React.Component {
  constructor(...args) {
    super(...args);
    this.state = { ...this.props
    };

    this.handleVisibleChange = e => {
      this.handleChangeState({
        visible: e
      });
    };
  }

  /**
   * 暴露给外面的 ref 进行状态修改
   *
   * @param {Partial<IAbsolutePopupProps>} state
   */
  handleChangeState(state) {
    const onVisibleChange = 'onVisibleChange' in state ? state.onVisibleChange : this.state.onVisibleChange;

    if ('visible' in state && state.visible !== this.state.visible && onVisibleChange) {
      onVisibleChange(!!state.visible);
    }

    this.setState(state);
  }
  /**
   * Dropdown 显示/隐藏处理
   *
   * @param {boolean} e
   * @return {void}
   */


  render() {
    const {
      overlay,
      left,
      top,
      visible,
      zIndex,
      offsetY,
      offsetX,
      overlayStyle,
      ...restProps
    } = this.state;
    return /*#__PURE__*/_createElement$1z(Dropdown, {
      key: `${left}${top}`,
      visible: visible,
      overlay: /*#__PURE__*/React__default['default'].cloneElement(overlay, restProps),
      zIndex: zIndex,
      placement: "bottomLeft",
      offsetX: offsetX,
      offsetY: offsetY,
      overlayStyle: overlayStyle,
      onVisibleChange: this.handleVisibleChange,
      pageX: left,
      pageY: top
    });
  }

}

AbsolutePopup.defaultProps = {
  visible: false,
  offsetX: 8,
  offsetY: 8,
  overlayStyle: {}
};

AbsolutePopup.create = props => {
  const popupRef = /*#__PURE__*/React__default['default'].createRef(); // 容器节点初始化

  const container = document.createElement('div');
  container.setAttribute('style', 'position: absolute; left: 0; top: 0; width: 100%');
  let appended = false;
  /**
   * 插入容器节点
   *
   * @return {void}
   */

  function handleAppendContainer(visible) {
    if (visible && !appended) {
      appended = true;
      document.body.appendChild(container);
    }
  }

  handleAppendContainer(!!props.visible);
  ReactDOM__default['default'].render( /*#__PURE__*/_createElement$1z(AbsolutePopup, _extends__default['default']({}, props, {
    ref: popupRef
  })), container);
  return {
    /**
     * 更新
     *
     * @param {Pick<P, keyof P>}
     * @return {void}
     */
    update(newState) {
      handleAppendContainer(!!newState.visible);

      if (popupRef.current) {
        popupRef.current.handleChangeState(newState);
      }
    },

    /**
     * 隐藏
     *
     * @return {void}
     */
    hide() {
      this.update({
        visible: false
      });
    },

    /**
     * 销毁
     *
     * @return {void}
     */
    destory() {
      ReactDOM__default['default'].unmountComponentAtNode(container);
      document.body.removeChild(container);
      appended = false;
    }

  };
};

const RadioInner = withTheme(styled__default['default'].span(["", " display:inline-block;vertical-align:middle;width:16px;height:16px;border:1px solid ", ";background-color:", ";transition:all 0.24s ease-in;border-radius:50%;position:relative;&.disabled{background-color:", ";}"], resetComponent, ({
  theme
}) => theme.ui.borderColor, ({
  theme
}) => theme.ui.colorGray1, ({
  theme
}) => theme.ui.disabledBackgroundColor));
const RadioWrap = withTheme(styled__default['default'].label(["", " cursor:", ";", ";", ""], resetComponent, ({
  disabled
}) => disabled ? 'not-allowed' : 'pointer', ({
  disabled,
  theme
}) => {
  return disabled ? '' : `
      &:hover {
        ${RadioInner} {
          border-color: ${theme.ui.primaryColor};
        }
      }
    `;
}, ({
  checked,
  theme: {
    ui
  },
  disabled
}) => {
  return checked ? `
      ${RadioInner} {
        border-color: ${disabled ? ui.borderColor : ui.primaryColor};
        border-width: 4px;
      }
    ` : '';
}));
const RadioText = withTheme(styled__default['default'].span(["", " display:inline-block;vertical-align:middle;padding:0 ", ";"], resetComponent, ({
  theme
}) => theme.ui.padding));
const RadioContent = withTheme(styled__default['default'].span(["", " position:relative;input{position:absolute;top:0;right:0;bottom:0;left:0;z-index:1;width:0;height:0;cursor:pointer;opacity:0;&:focus ~ ", "{border-color:", ";}}"], resetComponent, RadioInner, ({
  theme
}) => theme.ui.primaryColor));
const RadioGroupWrap = withTheme(styled__default['default'].div(["", ""], resetComponent));

const RadioContext = /*#__PURE__*/React__default['default'].createContext(null);

const _createElement$1A = /*#__PURE__*/React__default['default'].createElement;
const Radio = /*#__PURE__*/React__default['default'].memo( /*#__PURE__*/React__default['default'].forwardRef((props, ref) => {
  const {
    children,
    onChange,
    value
  } = props; // eslint-disable-next-line prefer-const

  let [checked, setChecked] = useControlledValue(props.checked, false);
  const provider = React.useContext(RadioContext); // 如果有Group，直接根据 Group的选中项判断

  if (provider && provider.checkedValue) {
    checked = provider.checkedValue === value;
  } // disabled状态，如果有Group包住，且Group的disabled为true，则disabled为true


  const disabled = provider && provider.disabled ? true : props.disabled; // Group 修改参数函数

  const onToggleValue = provider && provider.onToggleValue;
  /**
   * 修改选中状态
   *
   * @param {React.ChangeEvent<HTMLInputElement>} e
   * @return {void}
   */

  const handleChange = React.useCallback(e => {
    if (onToggleValue && value) {
      onToggleValue({
        checked: e.target.checked,
        value
      });
    } else {
      if (onChange) {
        onChange(e);
      }

      setChecked(e.target.checked);
    }
  }, [onChange, onToggleValue, value, setChecked]);
  return /*#__PURE__*/_createElement$1A(RadioWrap, {
    checked: checked,
    disabled: disabled
  }, /*#__PURE__*/_createElement$1A(RadioContent, {
    disabled: disabled,
    checked: checked
  }, /*#__PURE__*/_createElement$1A("input", {
    ref: ref,
    type: "radio",
    onChange: handleChange,
    disabled: disabled,
    checked: checked
  }), /*#__PURE__*/_createElement$1A(RadioInner, {
    className: classnames({
      disabled
    })
  })), children && /*#__PURE__*/_createElement$1A(RadioText, null, children));
}));
Radio.displayName = 'Radio';

const _createElement$1B = /*#__PURE__*/React__default['default'].createElement;
const RadioGroup = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    children,
    disabled,
    onChange,
    options
  } = props;
  const [value, setValue] = useControlledValue(props.value, props.defaultValue);
  /**
   * 选中切换
   *
   * @param {string} e
   * @return {void}
   */

  const handleToggleValue = React.useCallback(e => {
    const newValue = e.value;

    if (onChange) {
      onChange(newValue);
    }

    setValue(newValue);
  }, [onChange, setValue]);
  /**
   * 透传给Radio组件的属性
   *
   * @return {IRadioContext} context
   */

  const provider = React.useMemo(() => {
    return {
      disabled: !!disabled,
      onToggleValue: handleToggleValue,
      checkedValue: value
    }; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [!!disabled, handleToggleValue, value]);
  return /*#__PURE__*/_createElement$1B(RadioGroupWrap, null, /*#__PURE__*/_createElement$1B(RadioContext.Provider, {
    value: provider
  }, options ? options.map(option => {
    const item = typeof option === 'string' ? {
      value: option,
      label: option
    } : option;
    return /*#__PURE__*/_createElement$1B(Radio, {
      key: item.value,
      value: item.value,
      disabled: item.disabled
    }, item.label);
  }) : children));
});
RadioGroup.defaultProps = {
  defaultValue: ''
};
RadioGroup.displayName = 'RadioGroup';

const _createElement$1C = /*#__PURE__*/React__default['default'].createElement;
const OverlayWrap$5 = withTheme(styled__default['default'].div(["padding:", " 0;"], ({
  theme
}) => theme.ui.padding));
const OverlayItem$1 = withTheme(styled__default['default'].div(["position:relative;display:flex;justify-content:space-between;align-items:center;padding:", " 20px;margin:0 ", ";cursor:pointer;transition:all .1s ease-in-out;font-size:", ";border-radius:", ";height:32px;box-sizing:border-box;&:hover{background-color:", ";}.indent-icon{margin-right:8px;color:", ";}"], ({
  theme
}) => theme.ui.paddingSmall, ({
  theme
}) => theme.ui.marginMedium, ({
  theme
}) => theme.ui.fontSizeSmall, ({
  theme
}) => theme.ui.radiusLarge, ({
  theme
}) => theme.ui.backgroundColor, ({
  theme
}) => theme.ui.commonBaseColor2));
const TextSpan$2 = /*#__PURE__*/styled__default['default'].span([""]);

var _ref$s = /*#__PURE__*/_createElement$1C(IncreaseindentNormal, null);

const IndentButton = props => {
  const {
    style,
    className,
    disabled,
    onSelect,
    onClick,
    title,
    titles,
    locale,
    size
  } = props;
  const [active, setActive] = React.useState(false);
  const t = useTranslate(locale);
  const options = [{
    title: t('we_ui_indent_button_increase_indent'),
    Icon: IncreaseindentNormal,
    value: 'increase'
  }, {
    title: t('we_ui_indent_button_decrease_indent'),
    Icon: DecreaseindentNormal,
    value: 'decrease'
  }];
  const handleClickOption = React.useCallback(e => {
    if (onSelect) onSelect(e);
  }, [onSelect]);
  const handleClickLeft = React.useCallback(() => {
    if (onClick) onClick();
  }, [onClick]);
  const getOverlay = React.useMemo(() => /*#__PURE__*/_createElement$1C(OverlayWrap$5, null, options.map(item => /*#__PURE__*/_createElement$1C(Tooltip, {
    key: item.value,
    title: getTitleContent(titles[item.value]),
    placement: getTitlePlacement(titles[item.value])
  }, /*#__PURE__*/_createElement$1C(OverlayItem$1, {
    onClick: () => handleClickOption(item.value),
    "data-testid": `option-${item.value}`
  }, /*#__PURE__*/_createElement$1C(item.Icon, {
    className: "indent-icon"
  }), /*#__PURE__*/_createElement$1C(TextSpan$2, null, item.title))))), [options, handleClickOption, titles]);
  return /*#__PURE__*/_createElement$1C(SplitButton, {
    overlay: getOverlay,
    onClickLeft: handleClickLeft,
    active: active,
    onActiveChange: setActive,
    className: className,
    disabled: disabled,
    style: style,
    testid: "IndentButton",
    title: title,
    size: size
  }, _ref$s);
};
IndentButton.defaultProps = {
  titles: {}
};

const _createElement$1D = /*#__PURE__*/React__default['default'].createElement;
const DEFAULT_BULLET_LIST_ARRAY = ['SCIR_ECIR_SREC', 'SFDI_SRIG_SREC', 'EREC_EREC_EREC', 'SARR_SDIO_SCIR', 'SSTA_ECIR_SREC', 'SRIG_ECIR_SREC'];
const DEFAULT_NUMBER_LIST_ARRAY = ['DEC_LEN_LROM_P', 'DEC_LEN_LROM_H', 'DEC_DEC_DEC_P', 'UEN_LEN_LROM_P', 'UROM_UEN_DEC_P', 'DDEC_LEN_LROM_P', 'ZH_DEC_LEN_D', 'ZH_DEC_LEN_A'];
const LIST_STYLE_MAP = {
  SCIR_ECIR_SREC: 'https://img.alicdn.com/tfs/TB1mWdYbAcx_u4jSZFlXXXnUFXa-78-78.svg',
  SFDI_SRIG_SREC: 'https://img.alicdn.com/tfs/TB1hpepOpP7gK0jSZFjXXc5aXXa-78-78.svg',
  EREC_EREC_EREC: 'https://img.alicdn.com/tfs/TB1cJR4czMZ7e4jSZFOXXX7epXa-78-78.svg',
  SARR_SDIO_SCIR: 'https://img.alicdn.com/tfs/TB1aaWcOEY1gK0jSZFMXXaWcVXa-78-78.svg',
  SSTA_ECIR_SREC: 'https://img.alicdn.com/tfs/TB1VoX8OxD1gK0jSZFsXXbldVXa-78-78.svg',
  SRIG_ECIR_SREC: 'https://img.alicdn.com/tfs/TB1cqp4OAL0gK0jSZFtXXXQCXXa-78-78.svg',
  DEC_LEN_LROM_P: 'https://img.alicdn.com/tfs/TB19lt9OEz1gK0jSZLeXXb9kVXa-78-78.svg',
  DEC_LEN_LROM_H: 'https://img.alicdn.com/tfs/TB18HydOAL0gK0jSZFAXXcA9pXa-78-78.svg',
  DEC_DEC_DEC_P: 'https://img.alicdn.com/tfs/TB1gHycOqL7gK0jSZFBXXXZZpXa-78-78.svg',
  UEN_LEN_LROM_P: 'https://img.alicdn.com/tfs/TB1VaOnOBr0gK0jSZFnXXbRRXXa-78-78.svg',
  UROM_UEN_DEC_P: 'https://img.alicdn.com/tfs/TB1xcqhOAY2gK0jSZFgXXc5OFXa-78-78.svg',
  DDEC_LEN_LROM_P: 'https://img.alicdn.com/tfs/TB1yjive8Bh1e4jSZFhXXcC9VXa-78-78.svg',
  ZH_DEC_LEN_D: 'https://img.alicdn.com/tfs/TB1bFQZ0aL7gK0jSZFBXXXZZpXa-82-82.svg',
  ZH_DEC_LEN_A: 'https://img.alicdn.com/tfs/TB11.iDj4vbeK8jSZPfXXariXXa-82-82.svg'
};
const OverlayContent = /*#__PURE__*/styled__default['default'].div(["width:272px;display:flex;flex-wrap:wrap;justify-content:flex-start;padding:4px;"]);
const ListStyleItemWrap = /*#__PURE__*/styled__default['default'].div([""]);
const ListStyleItem = withTheme(styled__default['default'].img(["width:80px;height:80px;margin:4px;border:1px solid rgba(17,31,44,0.12);border-radius:2px;cursor:pointer;&:hover{border:1px solid ", ";}&.actived{border:2px solid ", ";}"], ({
  theme
}) => theme.ui.primaryColor, ({
  theme
}) => theme.ui.primaryColor));

var _ref$t = /*#__PURE__*/_createElement$1D(BulletedlistNormal, null);

var _ref2$a = /*#__PURE__*/_createElement$1D(NumberedlistNormal, null);

const ListSet = props => {
  const {
    mode = 'ul',
    defaultListStyle,
    listStyle,
    onChange,
    onClick,
    className,
    style,
    disabled,
    title,
    active,
    size
  } = props;
  const listStyleArray = React.useMemo(() => mode === 'ul' ? DEFAULT_BULLET_LIST_ARRAY : DEFAULT_NUMBER_LIST_ARRAY, [mode]);
  const [value, setValue] = useControlledValue(listStyle, defaultListStyle || listStyleArray[0]);
  const [overlayVisible, setOverlayVisible] = React.useState(false);
  const handleChange = React.useCallback(e => {
    if (onChange) {
      onChange(e);
    }

    setValue(e);
    setOverlayVisible(!overlayVisible);
  }, [onChange, setValue, overlayVisible]);
  const handleVisibleChange = React.useCallback(visible => {
    setOverlayVisible(visible);
  }, []);
  const handleClickLeft = React.useCallback(() => {
    if (onClick) {
      onClick(value);
    }
  }, [onClick, value]);

  const getOverlay = () => {
    return /*#__PURE__*/_createElement$1D(OverlayContent, null, listStyleArray.map(item => {
      return /*#__PURE__*/_createElement$1D(ListStyleItemWrap, {
        key: item,
        onClick: () => handleChange(item),
        role: "button"
      }, /*#__PURE__*/_createElement$1D(ListStyleItem, {
        src: LIST_STYLE_MAP[item],
        alt: "list-style-item",
        className: classnames({
          actived: item === value
        }),
        "data-testid": `option-${item}`
      }));
    }));
  };

  const renderTriggerIcon = React.useMemo(() => mode === 'ul' ? _ref$t : _ref2$a, [mode]);
  return /*#__PURE__*/_createElement$1D(SplitButton, {
    overlay: getOverlay(),
    onClickLeft: handleClickLeft,
    className: className,
    disabled: disabled,
    style: style,
    active: overlayVisible,
    onActiveChange: handleVisibleChange,
    testid: "ListSet",
    title: title,
    highlight: active,
    size: size
  }, renderTriggerIcon);
};

const BorderPickerWrap = /*#__PURE__*/styled__default['default'].div(["width:240px;"]);
const GroupWrap = /*#__PURE__*/styled__default['default'].div(["display:flex;flex-direction:row;justify-content:space-between;align-items:center;position:relative;height:36px;margin:0 8px;padding-top:4px;"]);
const TextSpan$3 = /*#__PURE__*/styled__default['default'].div(["height:24px;line-height:24px;font-size:12px;padding-left:4px;flex:0 0 auto;display:inline-block;"]);
const PaletteBox = /*#__PURE__*/styled__default['default'].div(["width:fit-content;"]);
const LineTypeSelectsWrap = /*#__PURE__*/styled__default['default'].div(["padding:12px;margin-top:-10px;position:relative;&:before{", " top:0;left:20px;}"], Divider);
const SelectLeftWrap = /*#__PURE__*/styled__default['default'].div(["display:flex;align-items:center;"]);

/* eslint-disable max-lines-per-function */
const _createElement$1E = /*#__PURE__*/React__default['default'].createElement;
//   color?: string;
//   lineSize?: string;
//   lineStyle?: string;
// }

const DEFAULT_COLOR$2 = 'inherit';

var _ref$u = /*#__PURE__*/_createElement$1E(LinethicknessNormal, null);

var _ref2$b = /*#__PURE__*/_createElement$1E(LinetypeNormal, null);

const BorderPicker = props => {
  const {
    color,
    onColorPick,
    lineSize,
    defaultLineSize,
    lineSizeMap,
    onLineSizeChange,
    lineStyle,
    defaultLineStyle,
    lineStyleMap,
    onLineStyleChange,
    locale,
    style,
    bordered,
    className,
    disabled,
    title,
    onClick,
    size
  } = props;
  const [dropdownVisible, setDropdownVisible] = React.useState(false); // const [colorPickerVisible, setColorPickerVisible] = useState(false);

  const [sizeSelectVisible, setSizeSelectVisible] = React.useState(false);
  const [styleSelectVisible, setStyleSelectVisible] = React.useState(false);
  const t = useTranslate(locale);
  const handleDropdownVisible = React.useCallback(e => {
    setDropdownVisible(e);
  }, [setDropdownVisible]); // const handleColorPickerVisible = (e: boolean) => {
  //   setColorPickerVisible(e);
  // };

  const handleSizeSelectVisible = React.useCallback(e => {
    setSizeSelectVisible(e);
  }, [setSizeSelectVisible]);
  const handleStyleSelectVisible = React.useCallback(e => {
    setStyleSelectVisible(e);
  }, [setStyleSelectVisible]);
  const handleColorPick = React.useCallback(pickedColor => {
    if (onColorPick) onColorPick(pickedColor);
  }, [onColorPick]);
  const handleLineSizeChange = React.useCallback(value => {
    if (onLineSizeChange) onLineSizeChange(value);
    setDropdownVisible(true);
  }, [onLineSizeChange, setDropdownVisible]);
  const handleLineStyleChange = React.useCallback(value => {
    if (onLineStyleChange) onLineStyleChange(value);
    setDropdownVisible(true);
  }, [onLineStyleChange, setDropdownVisible]);
  const handleClick = React.useCallback(() => {
    if (onClick) {
      onClick();
    }
  }, [onClick]);

  var _ref3 = /*#__PURE__*/_createElement$1E(CommonLineSelect, {
    lineTypeArray: lineStyleMap,
    lineType: lineStyle,
    defaultLineType: defaultLineStyle,
    length: 60,
    color: "#000000",
    onLineTypeChange: handleLineStyleChange,
    visible: styleSelectVisible,
    onVisibleChange: handleStyleSelectVisible
  });

  const getOverlay = () => {
    return /*#__PURE__*/_createElement$1E(BorderPickerWrap, null, /*#__PURE__*/_createElement$1E(PaletteBox, null, /*#__PURE__*/_createElement$1E(ColorPalette, {
      color: color,
      onPick: handleColorPick,
      automaticColor: "",
      clearColor: "",
      quickSetText: t('we_ui_color_picker_no_color'),
      showRecentColors: false
    })), /*#__PURE__*/_createElement$1E(LineTypeSelectsWrap, null, /*#__PURE__*/_createElement$1E(GroupWrap, null, /*#__PURE__*/_createElement$1E(SelectLeftWrap, null, _ref$u, /*#__PURE__*/_createElement$1E(TextSpan$3, null, t('we_ui_border_set_line_thickness'))), /*#__PURE__*/_createElement$1E(CommonLineSelect, {
      lineTypeArray: lineSizeMap,
      lineType: lineSize,
      length: 35,
      color: "#000000",
      onLineTypeChange: handleLineSizeChange,
      defaultLineType: defaultLineSize,
      optionText: p => `${p.size}pt`,
      visible: sizeSelectVisible,
      onVisibleChange: handleSizeSelectVisible
    })), /*#__PURE__*/_createElement$1E(GroupWrap, null, /*#__PURE__*/_createElement$1E(SelectLeftWrap, null, _ref2$b, /*#__PURE__*/_createElement$1E(TextSpan$3, null, t('we_ui_border_set_line_type'))), _ref3)));
  };

  const pathColors = React.useMemo(() => [// 当选中颜色为白色时，选中边框的外边缘为黑色，否则选中边框外边缘与内部颜色一致
  !color || isWhite(color) ? DEFAULT_COLOR$2 : color, color || DEFAULT_COLOR$2, DEFAULT_COLOR$2], [color]);
  const visible = dropdownVisible || sizeSelectVisible || styleSelectVisible;
  return /*#__PURE__*/_createElement$1E(SplitButton, {
    overlay: getOverlay(),
    active: visible,
    onClickLeft: handleClick,
    onActiveChange: handleDropdownVisible,
    className: className,
    disabled: disabled,
    style: style,
    testid: "BorderPicker",
    title: title,
    bordered: bordered,
    size: size
  }, /*#__PURE__*/_createElement$1E(PictureBorderNormal, {
    pathColors: pathColors
  }));
};

const _createElement$1F = /*#__PURE__*/React__default['default'].createElement;
const TriggerWrap$8 = /*#__PURE__*/styled__default['default'].div(["display:flex;align-items:center;.title{width:70px;margin-left:6px;", ";}"], Ellipsis);
const OverlayWrap$6 = withTheme(styled__default['default'].div(["padding:", " 0;"], ({
  theme
}) => theme.ui.padding));
const OverlayItem$2 = withTheme(styled__default['default'].div(["position:relative;display:flex;justify-content:space-between;align-items:center;padding:", " 20px;margin:0 ", ";cursor:pointer;transition:all .1s ease-in-out;font-size:", ";border-radius:", ";height:32px;box-sizing:border-box;&:hover{background-color:", ";}&.disabled{color:", ";background-color:transparent;cursor:not-allowed;}.check-icon{opacity:0;font-size:12px;color:#3296fa;position:absolute;left:4px;top:50%;transform:translateY(-50%);}.check-icon.actived{opacity:1;}"], ({
  theme
}) => theme.ui.paddingSmall, ({
  theme
}) => theme.ui.marginMedium, ({
  theme
}) => theme.ui.fontSizeSmall, ({
  theme
}) => theme.ui.radiusLarge, ({
  theme
}) => theme.ui.backgroundColor, ({
  theme
}) => theme.ui.disabledColor));
const TextSpan$4 = /*#__PURE__*/styled__default['default'].span([""]);

var _ref$v = /*#__PURE__*/_createElement$1F(MergeNormal, null);

const MergeCellButton = props => {
  const {
    className,
    onSelect,
    onClick,
    locale,
    defaultStatus = 'unmerged',
    title,
    titles = {},
    showTitle,
    disabled,
    ...restProps
  } = props;
  const [overlayActive, setOverlayActive] = React.useState(false);
  const [status, setStatus] = useControlledValue(props.status, defaultStatus);
  const t = useTranslate(locale);

  const toggle = curr => curr === 'unmerged' ? 'merged' : 'unmerged';

  const handleClickMerged = () => {
    if (onSelect) {
      onSelect('merged');
    }

    setStatus(toggle);
    setOverlayActive(false);
  };

  const handleClickUnMerged = () => {
    if (onSelect) {
      onSelect('unmerged');
    }

    setStatus('unmerged');
    setOverlayActive(false);
  };

  const options = [{
    title: t('we_ui_merge_cell_button_merge_cell'),
    Icon: MergeNormal,
    value: 'merged',
    handleClick: handleClickMerged
  }, {
    title: t('we_ui_merge_cell_button_split_cell'),
    Icon: MergeCellsNormal,
    value: 'unmerged',
    handleClick: handleClickUnMerged
  }];
  const anotherOption = options.find(o => o.value !== status);
  const handleClickLeft = React.useCallback(() => {
    if (onClick) {
      onClick(status);
    }

    setStatus(curr => curr === 'merged' ? 'unmerged' : 'merged');
  }, [onClick, status, setStatus]);
  const isMerged = status === 'merged';
  const getOverlay = React.useMemo(() => {
    return /*#__PURE__*/_createElement$1F(OverlayWrap$6, null, options.map(item => /*#__PURE__*/_createElement$1F(Tooltip, {
      key: item.value,
      title: getTitleContent(titles[item.value]),
      placement: getTitlePlacement(titles[item.value])
    }, /*#__PURE__*/_createElement$1F(OverlayItem$2, {
      onClick: item.handleClick,
      "data-testid": `option-${item.value}`,
      className: classnames({
        disabled: status === 'unmerged' && item.value === 'unmerged'
      })
    }, /*#__PURE__*/_createElement$1F(TextSpan$4, null, item.title), item.value === 'merged' && /*#__PURE__*/_createElement$1F(SelectNormal, {
      className: classnames('check-icon', {
        actived: isMerged
      })
    })))));
  }, [options, status, isMerged, titles]);
  return /*#__PURE__*/_createElement$1F(SplitButton, _extends__default['default']({}, restProps, {
    overlay: getOverlay,
    onClickLeft: handleClickLeft,
    active: overlayActive,
    onActiveChange: setOverlayActive,
    className: classnames(className, {
      leftSelected: isMerged
    }),
    testid: "MergeCellButton",
    title: title,
    disabled: disabled
  }), /*#__PURE__*/_createElement$1F(TriggerWrap$8, {
    className: "we-ui-merge-cell-button-trigger"
  }, _ref$v, anotherOption && showTitle && /*#__PURE__*/_createElement$1F("span", {
    className: "title"
  }, anotherOption.title)));
};

/* eslint-disable arrow-body-style */
const imgPadding = 1;
const imgMargin = 1;
const imgBorder = 1;
const menuImgMargin = {
  upDown: 4,
  leftRight: 6
};
const smallMode = {
  upper: 26,
  down: 38
};
const normalMode = {
  upper: 38,
  down: 38
};
const btnWidth = 12;
const IconWrapper$2 = withTheme(styled__default['default'].div(["width:", ";height:", ";cursor:pointer;display:flex;justify-content:center;align-items:center;border-radius:", ";background-color:", ";&:hover{background-color:#eee;}&:active{background-color:#ddd;}.weicon{color:", ";&.disabled{color:", ";cursor:not-allowed;}}"], p => p.isDown ? '26px' : `${btnWidth}px`, p => p.isDown ? '8px' : `${btnWidth}px`, p => p.isDown ? '2px 2px 0 0' : '50%', p => p.active ? '#eee' : '', p => p.theme.ui.commonBaseColor3, p => p.theme.ui.commonBaseColor4));
const TableStyleItemWrap = withTheme(styled__default['default'].div(["padding:", ";margin:", ";border:", "px solid transparent;width:", ";border-radius:2px;&:hover{border:", ";}&.actived{border:", "px solid #0089FF;}"], p => p.size === 'small' ? `${imgPadding - 1}px` : `${imgPadding}px`, p => {
  if (p.footer) {
    return `${menuImgMargin.upDown}px ${menuImgMargin.leftRight}px`;
  } else {
    return `0px ${imgMargin}px`;
  }
}, imgBorder, p => {
  if (p.footer === true) {
    return `${p.mode.down}px`;
  } else {
    return `${p.mode.upper}px`;
  }
}, p => `${imgBorder}px solid ${p.theme.ui.commonBaseColor4}`, imgBorder));
const TableStyleItem = withTheme(styled__default['default'].img(["width:100%;cursor:pointer;display:block;"]));
const TableStyleSet = withTheme(styled__default['default'].div(["display:flex;justify-content:flex-start;"]));
const TableStyleDown = /*#__PURE__*/styled__default['default'].div(["display:flex;justify-content:center;"]);
const TableStyleWrapper = /*#__PURE__*/styled__default['default'].div(["width:", ";padding-top:", ";border:", ";border-radius:", ";"], p => `${p.width}px`, p => p.mode === 'normal' ? '8px' : '', p => p.mode === 'normal' ? '1px solid rgba(17,31,44,0.08)' : '', p => p.mode === 'normal' ? '4px' : '');
const TableStyleUpper = /*#__PURE__*/styled__default['default'].div(["display:flex;align-items:center;justify-content:space-between;"]);
const OverlayWrapper = /*#__PURE__*/styled__default['default'].div(["padding:10px 10px;"]);

/* eslint-disable no-param-reassign */
const _createElement$1G = /*#__PURE__*/React__default['default'].createElement;

function rotateArrow(angle) {
  return {
    flex: 'none',
    transform: `rotate(${angle}deg)`,
    width: 8,
    height: 8
  };
}

let styleList2D = [];
let menuStyleList2D = [];
const STYLE_LIST = [{
  name: '3-1',
  url: 'https://img.alicdn.com/tfs/TB1IZK.e5DsXe8jSZR0XXXK6FXa-38-28.svg'
}, {
  name: '3-2',
  url: 'https://img.alicdn.com/tfs/TB11ecLjaNj0u4jSZFyXXXgMVXa-38-28.svg'
}, {
  name: '3-3',
  url: 'https://img.alicdn.com/tfs/TB1LSH9SAL0gK0jSZFtXXXQCXXa-38-28.svg'
}, {
  name: '3-4',
  url: 'https://img.alicdn.com/tfs/TB1o9gZdZieb18jSZFvXXaI3FXa-38-28.svg'
}, {
  name: '3-5',
  url: 'https://img.alicdn.com/tfs/TB1aAYxg9R26e4jSZFEXXbwuXXa-38-28.svg'
}, {
  name: '3-6',
  url: 'https://img.alicdn.com/tfs/TB1sA7hSpT7gK0jSZFpXXaTkpXa-38-28.svg'
}, {
  name: '3-7',
  url: 'https://img.alicdn.com/tfs/TB1jiUAetTfau8jSZFwXXX1mVXa-38-28.svg'
}, {
  name: '4-1',
  url: 'https://img.alicdn.com/tfs/TB16_wfSuH2gK0jSZJnXXaT1FXa-38-28.svg'
}, {
  name: '4-2',
  url: 'https://img.alicdn.com/tfs/TB1X84Ge9slXu8jSZFuXXXg7FXa-38-28.svg'
}, {
  name: '4-3',
  url: 'https://img.alicdn.com/tfs/TB1OcIvSpP7gK0jSZFjXXc5aXXa-38-28.svg'
}, {
  name: '4-4',
  url: 'https://img.alicdn.com/tfs/TB1oiUAetTfau8jSZFwXXX1mVXa-38-28.svg'
}, {
  name: '4-5',
  url: 'https://img.alicdn.com/tfs/TB1IQZhSqL7gK0jSZFBXXXZZpXa-38-28.svg'
}, {
  name: '4-6',
  url: 'https://img.alicdn.com/tfs/TB1jkkiSAL0gK0jSZFAXXcA9pXa-38-28.svg'
}, {
  name: '4-7',
  url: 'https://img.alicdn.com/tfs/TB1MDEAi8Bh1e4jSZFhXXcC9VXa-38-28.svg'
}, {
  name: '5-1',
  url: 'https://img.alicdn.com/tfs/TB1hB4Ge9slXu8jSZFuXXXg7FXa-38-28.svg'
}, {
  name: '5-2',
  url: 'https://img.alicdn.com/tfs/TB1jQYxg9R26e4jSZFEXXbwuXXa-38-28.svg'
}, {
  name: '5-3',
  url: 'https://img.alicdn.com/tfs/TB1VMz_gzMZ7e4jSZFOXXX7epXa-38-28.svg'
}, {
  name: '5-4',
  url: 'https://img.alicdn.com/tfs/TB1MeRhi_M11u4jSZPxXXahcXXa-38-28.svg'
}, {
  name: '5-6',
  url: 'https://img.alicdn.com/tfs/TB1ZKIcSxD1gK0jSZFsXXbldVXa-38-28.svg'
}, {
  name: '5-5',
  url: 'https://img.alicdn.com/tfs/TB1TuUbSEz1gK0jSZLeXXb9kVXa-38-28.svg'
}, {
  name: '5-7',
  url: 'https://img.alicdn.com/tfs/TB1OTEAi8Bh1e4jSZFhXXcC9VXa-38-28.svg'
}, {
  name: '1-1',
  url: 'https://img.alicdn.com/tfs/TB1WcVCgwgP7K4jSZFqXXamhVXa-38-28.svg'
}, {
  name: '1-2',
  url: 'https://img.alicdn.com/tfs/TB1KokmSAY2gK0jSZFgXXc5OFXa-38-28.svg'
}, {
  name: '1-3',
  url: 'https://img.alicdn.com/tfs/TB1CTJ0dhvbeK8jSZPfXXariXXa-38-28.svg'
}, {
  name: '1-4',
  url: 'https://img.alicdn.com/tfs/TB18dIcSvb2gK0jSZK9XXaEgFXa-38-28.svg'
}, {
  name: '1-5',
  url: 'https://img.alicdn.com/tfs/TB1_iQAetTfau8jSZFwXXX1mVXa-38-28.svg'
}, {
  name: '1-6',
  url: 'https://img.alicdn.com/tfs/TB1qdkXSpY7gK0jSZKzXXaikpXa-38-28.svg'
}, {
  name: '1-7',
  url: 'https://img.alicdn.com/tfs/TB1DKUbSEz1gK0jSZLeXXb9kVXa-38-28.svg'
}, {
  name: '2-1',
  url: 'https://img.alicdn.com/tfs/TB16._3fAcx_u4jSZFlXXXnUFXa-38-28.svg'
}, {
  name: '2-2',
  url: 'https://img.alicdn.com/tfs/TB1GDJ0dhvbeK8jSZPfXXariXXa-38-28.svg'
}, {
  name: '2-3',
  url: 'https://img.alicdn.com/tfs/TB1v_EAi8Bh1e4jSZFhXXcC9VXa-38-28.svg'
}, {
  name: '2-4',
  url: 'https://img.alicdn.com/tfs/TB1gHwhSEH1gK0jSZSyXXXtlpXa-38-28.svg'
}, {
  name: '2-5',
  url: 'https://img.alicdn.com/tfs/TB1XtMcSvb2gK0jSZK9XXaEgFXa-38-28.svg'
}, {
  name: '2-6',
  url: 'https://img.alicdn.com/tfs/TB12DwfSuH2gK0jSZJnXXaT1FXa-38-28.svg'
}, {
  name: '2-7',
  url: 'https://img.alicdn.com/tfs/TB1_7giSAL0gK0jSZFAXXcA9pXa-38-28.svg'
}];

function convert2D(arr, pageSize) {
  const res = [];

  for (let i = 0; i < arr.length; i += pageSize) {
    const temp = arr.slice(i, i + pageSize);
    res.push(temp);
  }

  return res;
}

let currentImgPadding = imgPadding;
const TableStyle = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    onChange,
    size = 'normal',
    styleList = STYLE_LIST,
    pageSize = 4,
    menuPageSize = 7
  } = props;
  currentImgPadding = size === 'normal' ? imgPadding : imgPadding - 1;
  const currentMode = size === 'small' ? smallMode : normalMode;
  const wrapperWidth = btnWidth * 2 + (currentMode.upper + currentImgPadding * 2 + imgMargin * 2 + imgBorder * 2) * pageSize;
  styleList2D = React.useMemo(() => {
    return convert2D(styleList, pageSize);
  }, [pageSize, styleList]);
  menuStyleList2D = React.useMemo(() => {
    return convert2D(styleList, menuPageSize);
  }, [menuPageSize, styleList]);
  const maxPage = styleList2D.length - 1;
  const [value, setValue] = useControlledValue(props.value, props.defaultValue || styleList[0].name);

  const handleClick = function (item) {
    if (item !== value && onChange) {
      onChange(item);
    }

    setValue(item);
    setOverlayVisible(false);
    const idx = styleList.findIndex(ele => {
      return ele.name === item;
    });
    const rowIndex = Math.floor(idx / pageSize);

    if (rowIndex !== undefined) {
      switchPage(rowIndex);
    }
  };

  const [currentTab, setCurrentTab] = React.useState(0);
  const [showArrowDown, setShowArrowDown] = React.useState(false);
  const [overlayVisible, setOverlayVisible] = React.useState(false);

  const switchPage = nextPage => {
    if (nextPage >= 0 && nextPage <= maxPage) {
      setCurrentTab(nextPage);
    }
  };

  const getOverlay = () => {
    return /*#__PURE__*/_createElement$1G(OverlayWrapper, null, menuStyleList2D.map((row, rIndex) => {
      return /*#__PURE__*/_createElement$1G(TableStyleSet, {
        key: `footer-${rIndex}`
      }, row.map((item, cIndex) => {
        return /*#__PURE__*/_createElement$1G(TableStyleItemWrap, {
          key: `footer-${item.name}`,
          onClick: () => handleClick(item.name),
          footer: true,
          mode: currentMode,
          className: item.name === value ? 'actived' : ''
        }, /*#__PURE__*/_createElement$1G(TableStyleItem, {
          src: menuStyleList2D[rIndex][cIndex].url
        }));
      }));
    }));
  };

  return /*#__PURE__*/_createElement$1G(TableStyleWrapper, {
    onMouseEnter: () => setShowArrowDown(true),
    onMouseLeave: () => setShowArrowDown(false),
    width: wrapperWidth,
    mode: size
  }, /*#__PURE__*/_createElement$1G(TableStyleUpper, null, /*#__PURE__*/_createElement$1G(IconWrapper$2, {
    onClick: () => switchPage(currentTab - 1),
    "data-testid": "arrow-increase"
  }, /*#__PURE__*/_createElement$1G(ArrowUpTriangleNormal, {
    style: rotateArrow(-90),
    className: classnames({
      disabled: currentTab === 0
    })
  })), /*#__PURE__*/_createElement$1G(Tabs, {
    activeKey: String(currentTab),
    hasTabBar: false,
    style: {
      flex: 1
    }
  }, styleList2D.map((row, rowIndex) => {
    return /*#__PURE__*/_createElement$1G(TabPane, {
      key: String(rowIndex),
      tab: String(rowIndex)
    }, /*#__PURE__*/_createElement$1G(TableStyleSet, null, row.map((item, colIndex) => {
      return /*#__PURE__*/_createElement$1G(TableStyleItemWrap, {
        key: item.name,
        onClick: () => handleClick(item.name),
        mode: currentMode,
        size: size,
        className: item.name === value ? 'actived' : ''
      }, /*#__PURE__*/_createElement$1G(TableStyleItem, {
        src: styleList2D[rowIndex][colIndex].url
      }));
    })));
  })), /*#__PURE__*/_createElement$1G(IconWrapper$2, {
    onClick: () => switchPage(currentTab + 1)
  }, /*#__PURE__*/_createElement$1G(ArrowUpTriangleNormal, {
    style: rotateArrow(90),
    className: classnames({
      disabled: currentTab === maxPage
    })
  }))), /*#__PURE__*/_createElement$1G(TableStyleDown, null, /*#__PURE__*/_createElement$1G(Dropdown, {
    overlay: getOverlay(),
    onVisibleChange: vi => setOverlayVisible(vi),
    placement: "bottom",
    visible: overlayVisible
  }, /*#__PURE__*/_createElement$1G(IconWrapper$2, {
    isDown: true,
    onClick: () => setOverlayVisible(!overlayVisible),
    width: "26px",
    active: overlayVisible
  }, /*#__PURE__*/_createElement$1G(ArrowDownTriangleNormal, {
    style: showArrowDown || overlayVisible ? {
      width: 8,
      height: 8
    } : {
      visibility: 'hidden',
      width: 8,
      height: 8
    }
  })))));
});
TableStyle.displayName = 'TableStyle';
TableStyle.defaultProps = {
  pageSize: 4,
  size: 'normal',
  menuPageSize: 7
};

const TriggerWrap$9 = /*#__PURE__*/styled__default['default'].div(["display:flex;align-items:center;font-size:12px;transform:rotate(0deg) scale(0.83);"]);
const OptionWrap$5 = withTheme(styled__default['default'].div(["display:flex;align-items:center;font-size:12px;.icon{margin-right:8px;}"]));

const _createElement$1H = /*#__PURE__*/React__default['default'].createElement;

const PageViewSelect = props => {
  const {
    locale,
    style,
    onChange,
    title,
    titles,
    zIndex,
    disabled
  } = props;
  const [value, setValue] = useControlledValue(props.value, props.defaultValue);
  const t = useTranslate(locale); // 页面视图的选项

  const options = React.useMemo(() => [{
    title: t('we_ui_view_page_view'),
    value: 'page-view',
    Icon: PageFlowBetaNormal
  }, {
    title: t('we_ui_view_paging_view'),
    value: 'paging-view',
    Icon: PageLayoutBetaNormal
  }, {
    title: t('we_ui_view_web_view'),
    value: 'web-view',
    Icon: PageWebBetaNormal
  }], [t]); // 该组件的trigger区域显示Icon+文字

  const renderTrigger = React.useCallback(selectedView => {
    const index = options.findIndex(option => option.value === selectedView);
    const currentOption = options[index];
    return /*#__PURE__*/_createElement$1H(TriggerWrap$9, {
      style: {
        minWidth: 60
      }
    }, currentOption && /*#__PURE__*/_createElement$1H(React__default['default'].Fragment, null, /*#__PURE__*/_createElement$1H(currentOption.Icon, {
      style: {
        marginRight: '8px'
      }
    }), currentOption.title));
  }, [options]);
  const handleChange = React.useCallback(e => {
    if (onChange) {
      onChange(e);
    }

    setValue(e);
  }, [setValue, onChange]);
  return /*#__PURE__*/_createElement$1H(SelectMemo, {
    value: value,
    onChange: handleChange,
    style: style,
    renderTrigger: renderTrigger,
    zIndex: zIndex,
    title: title,
    testid: "PageViewSelect",
    disabled: disabled
  }, options.map(option => /*#__PURE__*/_createElement$1H(SelectOption, {
    value: option.value,
    key: option.value,
    title: titles[option.value]
  }, /*#__PURE__*/_createElement$1H(OptionWrap$5, null, /*#__PURE__*/_createElement$1H(option.Icon, {
    className: "icon"
  }), /*#__PURE__*/_createElement$1H("span", null, option.title)))));
};

PageViewSelect.defaultProps = {
  defaultValue: 'page-view',
  titles: {},
  disabled: false
};

const CheckboxContent$1 = /*#__PURE__*/styled__default['default'].div(["", " max-width:125px;"], Ellipsis);
const CheckboxWrapper = /*#__PURE__*/styled__default['default'].div(["flex:1;"]);
const ListItemWrapper = /*#__PURE__*/styled__default['default'].div(["display:flex;justify-content:space-between;align-items:center;"]);
const ItemCount = withTheme(styled__default['default'].div(["color:", ";margin-right:", ";min-width:16px;"], ({
  theme
}) => theme.ui.colorText3, ({
  theme
}) => theme.ui.marginMedium));
const ListSelectWrap = withTheme(styled__default['default'].div(["border-radius:", ";border:1px solid ", ";padding:8px;display:inline-block;"], ({
  theme
}) => theme.ui.radius, ({
  theme
}) => theme.ui.commonLineLightColor));

const _createElement$1I = /*#__PURE__*/React__default['default'].createElement;
const ListSelectItem = /*#__PURE__*/React.memo(props => {
  const {
    data,
    index,
    style
  } = props;
  const {
    dataList,
    itemStyle = {}
  } = data;
  const item = dataList[index];

  if (!item) {
    return null;
  }

  return /*#__PURE__*/_createElement$1I(ListItemWrapper, {
    style: style
  }, /*#__PURE__*/_createElement$1I(CheckboxWrapper, null, /*#__PURE__*/_createElement$1I(Checkbox, {
    value: item.value,
    disabled: item.disabled
  }, /*#__PURE__*/_createElement$1I(CheckboxContent$1, {
    style: itemStyle
  }, item.label))), item.count ? /*#__PURE__*/_createElement$1I(ItemCount, null, item.count) : null);
}, reactWindow.areEqual);

const _createElement$1J = /*#__PURE__*/React__default['default'].createElement;
const createItemData = memoize__default['default']((dataList, itemStyle) => ({
  dataList,
  itemStyle
}));
const ListSelect = props => {
  const {
    dataList,
    onChange,
    width,
    height,
    value = [],
    style = {},
    itemHeight,
    testid,
    itemStyle
  } = props;
  const itemData = createItemData(dataList, itemStyle);
  return /*#__PURE__*/_createElement$1J(ListSelectWrap, {
    style: style
  }, /*#__PURE__*/_createElement$1J(CheckboxGroup, {
    onChange: onChange,
    value: value,
    testid: testid
  }, /*#__PURE__*/_createElement$1J(reactWindow.FixedSizeList, {
    height: height,
    itemCount: dataList.length,
    itemData: itemData,
    itemSize: itemHeight,
    width: width,
    itemKey: (index, data) => {
      const item = data[index];
      return `FixedSizeList_${(item === null || item === void 0 ? void 0 : item.value) || index}`;
    }
  }, ListSelectItem)));
};
ListSelect.defaultProps = {
  itemHeight: 20,
  value: []
};

const LeftWrap$1 = /*#__PURE__*/styled__default['default'].div(["padding:20px 0;"]);
const RightWrap = /*#__PURE__*/styled__default['default'].div(["padding:20px;border-left:1px solid rgba(17,31,44,0.08);"]);
const TriggerWrapper = /*#__PURE__*/styled__default['default'].div(["height:24px;width:57px;border-radius:4px;display:flex;justify-content:center;align-items:center;font-size:13px;cursor:pointer;&:hover,&.active{background-color:rgba(17,31,44,0.08);}.trigger-icon{font-size:14px;margin-right:4px;}"]);
const SuffixWrapper = /*#__PURE__*/styled__default['default'].div(["font-size:12px;color:rgba(17,31,44,0.40);"]);
const Divider$2 = withTheme(styled__default['default'].div(["height:1px;margin:", " 8px;background-color:", ";"], ({
  theme
}) => theme.ui.marginMedium, ({
  theme
}) => theme.ui.commonLineLightColor));
const MenuItemWrap$1 = withTheme(styled__default['default'].div(["", ";height:36px;padding:6px 8px;margin-bottom:2px;&.active{background-color:rgba(17,31,44,0.12);}.arrow-icon{position:relative;right:-2px;color:", ";&.disabled{color:", ";}}"], optionWrapStyle, ({
  theme
}) => theme.ui.commonBaseColor3, ({
  theme
}) => theme.ui.disabledColor));
const MenuItemTitle = withTheme(styled__default['default'].div(["min-width:120px;padding-right:8px;"]));

const _createElement$1K = /*#__PURE__*/React__default['default'].createElement;

var _ref$w = /*#__PURE__*/_createElement$1K(Divider$2, null);

const FileMenuDivider = /*#__PURE__*/React__default['default'].memo(() => _ref$w);

const FileMenuContext = /*#__PURE__*/React__default['default'].createContext({});

/**
 * 获取 Controller
 *
 * @param {String} name Component's name
 * @return {Controller | never}
 */

const useController$1 = name => {
  const ctrl = React.useContext(FileMenuContext);

  if (!ctrl) {
    throw new Error(`${name} 组件必须为 FileMenu 组件的子组件`);
  }

  return ctrl;
};

const _createElement$1L = /*#__PURE__*/React__default['default'].createElement;
const FileMenuItem = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    children,
    menuKey,
    disabled,
    style,
    testid,
    title,
    suffix,
    onClick,
    autoClose
  } = props;
  const withChildren = !!children;
  const prevChildren = usePrevious(children);
  const prevAutoClose = usePrevious(autoClose);
  const ctrl = useController$1('FileMenuItem');

  if (typeof prevChildren === 'undefined' && !disabled) {
    ctrl.setInitialContent(menuKey, children, !!autoClose);
  }

  if ((prevChildren !== children || prevAutoClose !== autoClose) && ctrl.currentMenuKey === menuKey) {
    ctrl.updateContent(menuKey, children, !!autoClose);
  }

  const handleClick = React.useCallback(e => {
    let clickReturned;

    if (!disabled) {
      if (onClick) {
        clickReturned = onClick(menuKey, e);
      }

      if (ctrl.onClick) {
        ctrl.onClick(menuKey, e);
      }

      if (ctrl.currentMenuKey !== menuKey && withChildren) {
        ctrl.updateContent(menuKey, children, !!autoClose);
      }
    }

    if (clickReturned !== false && autoClose && !withChildren) {
      ctrl.setVisible(false);
    } // eslint-disable-next-line react-hooks/exhaustive-deps

  }, [ctrl.currentMenuKey, ctrl.setVisible, ctrl.updateContent, ctrl.onClick, menuKey, withChildren, onClick, autoClose, children, disabled]);
  React.useEffect(() => {
    return () => {
      ctrl.onMenuItemUnmount(menuKey);
    }; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [menuKey]);
  return /*#__PURE__*/_createElement$1L(MenuItemWrap$1, {
    className: classnames({
      disabled,
      active: ctrl.currentMenuKey === menuKey
    }),
    onClick: handleClick,
    style: style,
    "data-testid": testid ? `file-menu-item-${testid}` : undefined
  }, /*#__PURE__*/_createElement$1L(MenuItemTitle, null, title), /*#__PURE__*/_createElement$1L(ArrowRightNormal, {
    className: classnames('icon arrow-icon', {
      disabled
    }),
    style: {
      display: withChildren ? 'inline-block' : 'none'
    }
  }), /*#__PURE__*/_createElement$1L(SuffixWrapper, {
    style: {
      display: !withChildren ? 'inline-block' : 'none'
    }
  }, suffix));
});
FileMenuItem.defaultProps = {
  autoClose: true,
  disabled: false,
  menuKey: `file-menu-item-${uuid()}`
};

const _createElement$1M = /*#__PURE__*/React__default['default'].createElement;

var _ref$x = /*#__PURE__*/_createElement$1M(CatalogueBetaNormal, {
  className: "trigger-icon"
});

// eslint-disable-next-line max-lines-per-function
const FileMenu = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    style,
    overlayStyle,
    zIndex,
    contentStyle,
    children,
    text,
    locale,
    trigger,
    onClick,
    onVisibleChange
  } = props;
  const t = useTranslate(locale);
  const [visible, setVisible] = useControlledValue(props.visible, props.defaultVisible);
  const [currentItem, setCurrentItem] = React.useState(null);
  const fileText = text || t('we_ui_file_menu_text');
  const handleVisibleChange = React.useCallback(e => {
    if (onVisibleChange) {
      onVisibleChange(e);
    }

    setVisible(e);
  }, [onVisibleChange, setVisible]);
  const setInitialContent = React.useCallback((menuKey, content, autoClose) => {
    setCurrentItem(item => {
      if (item) {
        return item;
      }

      return {
        menuKey,
        content,
        autoClose
      };
    });
  }, []);
  /**
   * 更新Item内容
   */

  const updateContent = React.useCallback((menuKey, content, autoClose) => {
    setCurrentItem({
      menuKey,
      content,
      autoClose
    });
  }, []);
  const currentMenuKey = currentItem && currentItem.menuKey || '';
  const onMenuItemUnmount = React.useCallback(menuKey => {
    if (menuKey === currentMenuKey) {
      setCurrentItem(null);
    }
  }, [currentMenuKey]);
  const ctx = React.useMemo(() => {
    return {
      updateContent,
      currentMenuKey,
      setInitialContent,
      onMenuItemUnmount,
      setVisible: handleVisibleChange,
      onClick
    };
  }, [updateContent, currentMenuKey, setInitialContent, onMenuItemUnmount, handleVisibleChange, onClick]);
  const overlayStyleCombined = React.useMemo(() => {
    return {
      display: 'flex',
      alignItems: 'stretch',
      ...(overlayStyle || {})
    };
  }, [overlayStyle]);
  const handleClickRight = React.useCallback(() => {
    if (currentItem && currentItem.autoClose) {
      handleVisibleChange(false);
    } // eslint-disable-next-line react-hooks/exhaustive-deps

  }, [!!(currentItem && currentItem.autoClose), handleVisibleChange]);
  return /*#__PURE__*/_createElement$1M(Dropdown, {
    overlay: /*#__PURE__*/_createElement$1M(FileMenuContext.Provider, {
      value: ctx
    }, /*#__PURE__*/_createElement$1M(LeftWrap$1, null, children), currentItem && /*#__PURE__*/_createElement$1M(RightWrap, {
      style: contentStyle,
      onClick: handleClickRight
    }, currentItem.content)),
    zIndex: zIndex,
    overlayStyle: overlayStyleCombined,
    trigger: trigger,
    visible: visible,
    onVisibleChange: handleVisibleChange
  }, /*#__PURE__*/_createElement$1M(TriggerWrapper, {
    style: style,
    className: classnames({
      active: visible
    })
  }, _ref$x, /*#__PURE__*/_createElement$1M("span", null, fileText)));
});
FileMenu.defaultProps = {
  trigger: 'click',
  defaultVisible: false
};
FileMenu.Divider = FileMenuDivider;
FileMenu.Item = FileMenuItem;

const Container$2 = /*#__PURE__*/styled__default['default'].div(["background:#FFFFFF;display:flex;padding:0 16px;align-items:center;position:relative;height:52px;"]);
const Cancel = /*#__PURE__*/styled__default['default'].div(["flex:0 0 auto;width:64px;height:36px;font-size:16px;color:#111F2C;display:flex;align-items:center;justify-content:center;&:hover{cursor:pointer;}"]);

const InputWrapper = /*#__PURE__*/styled__default['default'].span(["position:relative;flex:1 0 auto;"]);
const Input$1 = withTheme(styled__default['default'].input(["box-sizing:border-box;background:rgba(17,31,44,0.08);border:none;outline:none;border-radius:18px;font-size:15px;color:#111F2C;padding:8px 34px;width:100%;height:36px;line-height:36px;"]));
const IconBox = /*#__PURE__*/styled__default['default'].div(["position:absolute;top:0;width:34px;height:100%;display:flex;flex-direction:row;align-items:center;justify-content:center;&.left{left:0;};&.right{right:0;};&.right .weicon-roundclose-fill-beta{cursor:pointer;};"]);

const _createElement$1N = /*#__PURE__*/React__default['default'].createElement;
const defaultIconStyle = {
  color: 'rgba(17, 31, 44, 0.40)'
};

var _ref$y = /*#__PURE__*/_createElement$1N(IconBox, {
  className: "left"
}, /*#__PURE__*/_createElement$1N(SearchBetaNormal, {
  style: defaultIconStyle
}));

const InputComponent = props => {
  const ref = React.useRef();
  const {
    text = '',
    onChange,
    prefix = true
  } = props;
  const [value, setValue] = React.useState('');
  /**
   * value是否为空
   */

  const isEmptyValue = () => {
    return String(value) === '';
  };
  /**
   * input change处理
   */


  const handleChange = React.useCallback(e => {
    setValue(e.target.value);
    onChange(e.target.value);
  }, [onChange]);
  const handleClear = React.useCallback(e => {
    setValue('');
    onChange('');
    e.preventDefault();
  }, [onChange]);
  React.useEffect(() => {
    var _ref$current;

    (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.focus();
  }, []);
  React.useEffect(() => {
    setValue(String(text));
  }, [text]);
  return /*#__PURE__*/_createElement$1N(InputWrapper, null, prefix && _ref$y, /*#__PURE__*/_createElement$1N(IconBox, {
    className: "right"
  }, !isEmptyValue() && /*#__PURE__*/_createElement$1N(RoundcloseFillBetaNormal, {
    style: defaultIconStyle,
    onMouseDown: handleClear
  })), /*#__PURE__*/_createElement$1N(Input$1, {
    value: value,
    onChange: handleChange,
    ref: ref,
    placeholder: props.placeholder
  }));
};

const _createElement$1O = /*#__PURE__*/React__default['default'].createElement;
const Search = props => {
  const {
    text,
    search,
    cancel,
    visible,
    className
  } = props; // 国际化

  const t = useTranslate(props.local); // 是否显示

  const style = {
    display: visible ? 'flex' : 'none'
  };
  return /*#__PURE__*/_createElement$1O(Container$2, {
    style: style,
    className: className
  }, /*#__PURE__*/_createElement$1O(InputComponent, {
    text: text,
    onChange: search,
    placeholder: t('we_ui_find_and_replace_find')
  }), /*#__PURE__*/_createElement$1O(Cancel, {
    onClick: cancel
  }, t('we_ui_cancel_text')));
};

const Container$3 = /*#__PURE__*/styled__default['default'].div(["width:133px;height:36px;margin-left:auto;font-size:14px;color:#111F2C;border-radius:18px;border:1px solid rgba(17,31,44,0.06);box-shadow:0 2px 8px 0 rgba(0,0,0,0.08);background:#FFFFFF;flex:none;display:flex;flex-direction:row;align-items:center;justify-content:space-around;z-index:999;"]);
const ModalText$1 = /*#__PURE__*/styled__default['default'].div(["user-select:none;display:inline-block;text-align:center;"]);
const SplitLine = /*#__PURE__*/styled__default['default'].div(["flex:0 0 auto;width:1px;height:15.8px;background-color:rgba(17,31,44,0.08);;"]);

const _createElement$1P = /*#__PURE__*/React__default['default'].createElement;

var _ref$z = /*#__PURE__*/_createElement$1P(SplitLine, null);

var _ref2$c = /*#__PURE__*/_createElement$1P(SplitLine, null);

const SearchSwitch = props => {
  const {
    index = 0,
    count,
    pre,
    next = 0,
    className
  } = props;
  const [focusIndex, setIndex] = React.useState(index);
  React.useEffect(() => {
    setIndex(Number(index));
  }, [index]);
  /**
   * 切换至前一个
   */

  const handlePre = React.useCallback(e => {
    // eslint-disable-next-line no-nested-ternary
    const preIndex = focusIndex - 1 <= 0 ? count : focusIndex - 1;
    setIndex(preIndex);
    pre && pre(preIndex);
    e.preventDefault();
  }, [count, focusIndex, pre]);
  /**
   * 切换至后一个
   */

  const handleNext = React.useCallback(e => {
    // eslint-disable-next-line no-nested-ternary
    const nextIndex = focusIndex + 1 > count ? count ? 1 : 0 : focusIndex + 1;
    setIndex(nextIndex);
    next && next(nextIndex);
    e.preventDefault();
  }, [count, focusIndex, next]);
  const gray = {
    color: 'rgba(17,31,44,0.56)'
  };
  return /*#__PURE__*/_createElement$1P(Container$3, {
    className: className
  }, /*#__PURE__*/_createElement$1P(Button, {
    type: "text",
    size: "small",
    icon: /*#__PURE__*/_createElement$1P(ArrowLeftNormal, {
      style: !focusIndex ? gray : {}
    }),
    tabIndex: "-1",
    onMouseDown: handlePre
  }), _ref$z, /*#__PURE__*/_createElement$1P(ModalText$1, {
    style: {
      wordBreak: 'keep-all',
      whiteSpace: 'nowrap'
    }
  }, /*#__PURE__*/_createElement$1P("span", null, `${focusIndex}/${count}`)), _ref2$c, /*#__PURE__*/_createElement$1P(Button, {
    type: "text",
    size: "small",
    icon: /*#__PURE__*/_createElement$1P(ArrowRightNormal, {
      style: focusIndex === count ? gray : {}
    }),
    tabIndex: "-1",
    onMouseDown: handleNext
  }));
};

const Container$4 = /*#__PURE__*/styled__default['default'].div(["background:#FFFFFF;display:flex;padding:0 16px;align-items:center;position:relative;width:100vw;height:52px;"]);
const Box = /*#__PURE__*/styled__default['default'].div(["flex:0 0 auto;width:64px;height:36px;font-size:15px;color:#0089FF;padding:0 8px;display:flex;align-items:center;justify-content:flex-end;&:hover{cursor:pointer;}&.round{justify-content:center;background:#FFFFFF;border-radius:18px;border:1px solid rgba(17,31,44,0.06);box-shadow:0 2px 8px 0 rgba(0,0,0,0.08);z-index:999;}&.round.disable{color:rgba(17,31,44,0.56);}"]);

const _createElement$1Q = /*#__PURE__*/React__default['default'].createElement;
const Replace = props => {
  const {
    visible,
    disabled,
    className,
    onExpand,
    replace,
    replaceAll,
    btnMode
  } = props;
  const [text, setText] = React.useState('');
  const [isMiniMode, setMode] = React.useState(true); // 国际化

  const t = useTranslate(props.local); // 是否显示

  const style = {
    display: visible ? 'flex' : 'none'
  };
  React.useEffect(() => {
    btnMode !== undefined && setMode(!!btnMode);
  }, [btnMode]);
  /**
   * text change处理
   */

  const hansleChange = React.useCallback(value => {
    setText(value);
  }, []);
  /**
   * mode切换
   */

  const handleMode = React.useCallback(e => {
    if (!disabled) {
      setMode(false);
      onExpand && onExpand();
    }

    e.preventDefault();
  }, [disabled, onExpand]);
  /**
   * 替换
   */

  const handleReplace = React.useCallback(e => {
    replace(text);
    e.preventDefault();
  }, [replace, text]);
  /**
   * 替换全部
   */

  const handleReplaceAll = React.useCallback(() => {
    setMode(true);
    replaceAll(text);
  }, [replaceAll, text]);
  return /*#__PURE__*/_createElement$1Q("div", {
    style: style,
    className: className
  }, isMiniMode ? /*#__PURE__*/_createElement$1Q(Box, {
    className: `round ${disabled ? 'disable' : ''}`,
    onMouseDown: handleMode
  }, t('we_ui_find_and_replace_replace')) : /*#__PURE__*/_createElement$1Q(Container$4, null, /*#__PURE__*/_createElement$1Q(InputComponent, {
    prefix: false,
    text: text,
    onChange: hansleChange,
    placeholder: t('we_ui_find_and_replace_replace_description')
  }), /*#__PURE__*/_createElement$1Q(Box, {
    onMouseDown: handleReplace
  }, t('we_ui_find_and_replace_replace')), /*#__PURE__*/_createElement$1Q(Box, {
    onClick: handleReplaceAll
  }, t('we_ui_find_and_replace_replace_all'))));
};

// 插入类型

(function (EInsertType) {
  EInsertType[EInsertType["Person"] = 0] = "Person";
  EInsertType[EInsertType["Group"] = 1] = "Group";
  EInsertType[EInsertType["Document"] = 2] = "Document";
})(exports.EInsertType || (exports.EInsertType = {}));

(function (EQuickInsertStatus) {
  EQuickInsertStatus[EQuickInsertStatus["loading"] = 0] = "loading";
  EQuickInsertStatus[EQuickInsertStatus["ready"] = 1] = "ready";
  EQuickInsertStatus[EQuickInsertStatus["loadMore"] = 2] = "loadMore";
})(exports.EQuickInsertStatus || (exports.EQuickInsertStatus = {}));

const HeaderWrapper = /*#__PURE__*/styled__default['default'].div(["height:30px;margin-top:2px;padding:2px 0px 2px 10px;display:flex;align-items:center;justify-content:space-between;"]);
const HeaderTitle = /*#__PURE__*/styled__default['default'].span(["font-size:12px;width:fit-content;color:", ";display:flex;align-items:center;justify-content:center;opacity:", ";transition:opacity 600ms ease-in-out;"], theme.colorText4, p => p.isShowTitle ? 1 : 0);
const HeaderButton = /*#__PURE__*/styled__default['default'].span(["right:0;padding:0px 4px;font-size:12px;height:27px;margin-right:13px;width:fit-content;display:flex;border-radius:4px;align-items:center;justify-content:center;cursor:pointer;&:hover{background-color:", ";}&:active{background-color:", ";}"], theme.splitButtonHoverBgColor, theme.splitButtonActiveBgColor);
const IconWrapper$3 = /*#__PURE__*/styled__default['default'].span(["color:rgba(17,31,44,0.56);display:flex;align-items:center;justify-content:center;"]);
const ButtonText = /*#__PURE__*/styled__default['default'].div(["padding-left:2px;"]);
const QuickInsertWrapper = /*#__PURE__*/styled__default['default'].div(["min-height:347px;height:352px;width:300px;display:flex;flex-direction:column;& .quick-insert-list{::-webkit-scrollbar{background-color:transparent;width:8px;}::-webkit-scrollbar-thumb{background:rgba(194,194,194,1);border-radius:10px;}::-webkit-scrollbar-thumb:hover{background:rgba(0,0,0,0.45);}::-webkit-scrollbar-track{background:transparent;}}"]);
const ListWrapper = /*#__PURE__*/styled__default['default'].div(["display:flex;flex-direction:column;flex:1;overflow-x:hidden;"]);
const LoadingWrapper = /*#__PURE__*/styled__default['default'].div(["display:flex;justify-content:center;align-items:center;height:30px;color:", ";"], theme.colorText2);
const LoadingText = /*#__PURE__*/styled__default['default'].div(["padding-left:4px;"]);
const ItemWrapper = /*#__PURE__*/styled__default['default'].div(["box-sizing:border-box;height:47px;min-height:47px;display:flex;flex-direction:row;align-items:center;padding-left:10px;background:", ";cursor:pointer;"], p => p.active ? theme.colorLine1 : 'transparent');
const ItemContent = /*#__PURE__*/styled__default['default'].div(["display:flex;flex-direction:column;padding:4px 10px;flex:1;"]);
const ItemTitle = /*#__PURE__*/styled__default['default'].div(["font-size:14px;color:", ";"], theme.colorText5);
const ItemDescription = /*#__PURE__*/styled__default['default'].span(["font-size:12px;color:", ";display:flex;flex-direction:row;"], theme.colorText3);
const EllipsisText = /*#__PURE__*/styled__default['default'].span(["flex:1;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;"]);
const GroupTitle = /*#__PURE__*/styled__default['default'].div(["box-sizing:border-box;height:30px;min-height:30px;padding-top:10px;padding-left:10px;font-size:12px;color:", ";"], theme.colorText4);
const EmptyWrapper = /*#__PURE__*/styled__default['default'].div(["display:flex;flex-direction:column;justify-content:center;align-items:center;flex:1;"]);
const EmptyText = /*#__PURE__*/styled__default['default'].div(["color:", ";margin-top:20px;"], theme.colorText2);
const ImageWrapper = /*#__PURE__*/styled__default['default'].img(["width:100px;height:100px;"]);
const MiddleEllipsisWrapper = /*#__PURE__*/styled__default['default'].div(["display:flex;flex-direction:row;width:", "px;white-space:nowrap;"], p => p.width);
const AvatarWrapper = /*#__PURE__*/styled__default['default'].div(["height:32px;.avatar{width:32px;height:32px;}.avatar > div{border-radius:6px;border:0;}.avatar > div > div{border-radius:6px;}"]);

const _createElement$1R = /*#__PURE__*/React__default['default'].createElement;

const DESCRIPTION_LAST_CHAR_COUNT = 10;
const MiddleEllipsisText = /*#__PURE__*/React__default['default'].memo(props => {
  // 文本容器的引用
  const refContainer = React__default['default'].useRef(null); // prop属性

  const {
    text,
    width,
    lastCharNum
  } = props; // state

  const [isTextOverflow, setTextOverflow] = React__default['default'].useState(false);
  const [divideIndex, setDivideIndex] = React__default['default'].useState(0);
  React__default['default'].useEffect(() => {
    if (refContainer.current) {
      const rect = refContainer.current.getBoundingClientRect();
      const containerWidth = rect.width;
      const textWidth = refContainer.current.scrollWidth;

      if (containerWidth > 0 && textWidth > containerWidth) {
        setTextOverflow(true); // 一行展示不下时，中间省略，截取最后10个字符最后显示

        const lastLen = Math.min(text.length, lastCharNum);
        const diIndex = text.length - lastLen;
        setDivideIndex(diIndex);
      }
    }
  }, [text, width]);
  const text1 = (text === null || text === void 0 ? void 0 : text.slice(0, divideIndex)) || '';
  const text2 = (text === null || text === void 0 ? void 0 : text.slice(divideIndex)) || '';
  return /*#__PURE__*/_createElement$1R(Tooltip, {
    title: text,
    disabled: !isTextOverflow
  }, /*#__PURE__*/_createElement$1R(MiddleEllipsisWrapper, {
    width: width,
    ref: refContainer
  }, isTextOverflow ? /*#__PURE__*/_createElement$1R(React__default['default'].Fragment, null, /*#__PURE__*/_createElement$1R(EllipsisText, null, text1), /*#__PURE__*/_createElement$1R("span", null, text2)) : /*#__PURE__*/_createElement$1R("span", null, text)));
});
const QuickInsertItem = /*#__PURE__*/React__default['default'].memo(props => {
  // Description的引用
  const refDescription = React__default['default'].useRef(null); // const descriptionWidth = React.useRef<number>(0);

  const [descriptionWidth, setDescriptionWidth] = React__default['default'].useState(0);
  React__default['default'].useEffect(() => {
    if (refDescription.current) {
      const rect = refDescription.current.getBoundingClientRect();
      setDescriptionWidth(rect.width);
    }
  }, []);
  const {
    data,
    active,
    onItemClick
  } = props;
  const {
    type,
    key,
    iconUrls,
    title,
    description
  } = data;
  const nickName = type === exports.EInsertType.Person ? data.nickName : ''; // 存在头像url并且第一个url不为空串

  const isNameAvatar = (iconUrls === null || iconUrls === void 0 ? void 0 : iconUrls.length) > 0 && iconUrls[0];

  const handleClick = () => {
    if (typeof onItemClick === 'function') {
      onItemClick(data);
    }
  }; // 渲染文档icon


  const renderDocIcon = () => {
    // todo
    return null;
  };

  return /*#__PURE__*/_createElement$1R(ItemWrapper, {
    key: key,
    active: active,
    onClick: handleClick
  }, type === exports.EInsertType.Document ? renderDocIcon() : /*#__PURE__*/_createElement$1R(AvatarWrapper, null, /*#__PURE__*/_createElement$1R(Avatar, {
    className: "avatar",
    size: "normal",
    url: isNameAvatar ? iconUrls : undefined,
    name: nickName
  })), /*#__PURE__*/_createElement$1R(ItemContent, null, /*#__PURE__*/_createElement$1R(ItemTitle, null, title), /*#__PURE__*/_createElement$1R(ItemDescription, {
    ref: refDescription
  }, /*#__PURE__*/_createElement$1R(MiddleEllipsisText, {
    width: descriptionWidth,
    text: description,
    lastCharNum: DESCRIPTION_LAST_CHAR_COUNT
  }))));
});

var _ref$A = /*#__PURE__*/_createElement$1R(LoadingNormal, {
  spin: true
});

const LoadingItem = ({
  locale
}) => {
  return /*#__PURE__*/_createElement$1R(LoadingWrapper, null, _ref$A, /*#__PURE__*/_createElement$1R(LoadingText, null, /*#__PURE__*/_createElement$1R(TranslateComp, {
    locale: locale,
    textKey: 'we_ui_quick_insert_loading'
  })));
};

/* eslint-disable max-lines-per-function */
const _createElement$1S = /*#__PURE__*/React__default['default'].createElement;
const DEFAULT_ITEM_HEIGHT = 50;
const LIST_ITEM_HEIGHT = 47;
const GROUP_TITLE_HEIGHT = 30;
const EMPTY_IMG = 'https://img.alicdn.com/tfs/TB1ko6CKG61gK0jSZFlXXXDKFXa-240-240.png';

const getItemSize = itemData => {
  let size = DEFAULT_ITEM_HEIGHT;

  if (itemData) {
    size = typeof itemData === 'string' ? GROUP_TITLE_HEIGHT : LIST_ITEM_HEIGHT;
  }

  return size;
};

const getListData = datas => {
  const listData = [];
  let offset = 0;
  let headerTitle = '';
  datas.forEach((subGroup, index) => {
    // 第1个分组在标题中展示
    if (index === 0) {
      headerTitle = subGroup.title;
    } else {
      listData.push({
        pos: offset,
        itemData: subGroup.title,
        groupTitle: subGroup.title
      });
      offset += getItemSize(subGroup.title);
    }

    if (subGroup.list && subGroup.list.length > 0) {
      subGroup.list.forEach(item => {
        listData.push({
          pos: offset,
          groupTitle: subGroup.title,
          itemData: item
        });
        offset += getItemSize(item);
      });
    }
  });
  return [listData, headerTitle];
};

var _ref2$d = /*#__PURE__*/_createElement$1S(ImageWrapper, {
  src: EMPTY_IMG
});

const QuickInsertPanel = /*#__PURE__*/React__default['default'].memo(props => {
  const {
    data,
    status,
    locale
  } = props;
  const [listData, defaultTitle] = React__default['default'].useMemo(() => getListData(data), [data]); // 列表引用

  const refList = React__default['default'].useRef(null); // // 最近一次 mousemove event的鼠标位置

  const latestMousePosY = React__default['default'].useRef(0); // // 最近一次 scroll event的滚动位置

  const latestScrollPosY = React__default['default'].useRef(0); // // 当前是否在处理 keydown 事件

  const isKeyDownTyping = React__default['default'].useRef(false);
  const [activeIndex, setActiveIndex] = React__default['default'].useState(0);
  const [headerTitle, setHeaderTitle] = React__default['default'].useState(''); // 是否显示标题，

  const [isShowTitle, setShowTitle] = React__default['default'].useState(true);
  React__default['default'].useEffect(() => {
    document.addEventListener('keydown', handleKeyDown, true);
    return () => {
      document.removeEventListener('keydown', handleKeyDown, true);
    };
  }); // 获取列表项(相对与列表顶部)的高度

  const getItemRelativeHeight = index => {
    if (!listData || !listData.length) {
      return 0;
    }

    const uiItemData = listData[index];

    if (!uiItemData) {
      return 0;
    }

    return uiItemData.pos + getItemSize(uiItemData.itemData);
  };

  const getListContainerHeight = () => {
    let containerHeight = 0;

    if (refList.current) {
      const rect = refList.current.getBoundingClientRect();
      containerHeight = rect.height;
    }

    return containerHeight;
  };

  const findCursorIndex = offset => {
    if (!listData || offset < 0) {
      return -1;
    }

    const index = listData.findIndex((item, id, array) => {
      if (offset >= item.pos && (array[id + 1] && offset < array[id + 1].pos || !array[id + 1])) {
        return true;
      } else {
        return false;
      }
    });
    return index;
  };

  const handleListScroll = () => {
    // 快捷键产生的事件，忽略处理
    if (isKeyDownTyping.current) {
      return;
    }

    let scrollOffset = 0;
    let scrollHeight = 0;

    if (refList.current) {
      scrollOffset = refList.current.scrollTop;
      scrollHeight = refList.current.scrollHeight;
    } // 查找距离最近的一个item


    const resultItem = listData.find((item, index, array) => {
      if (scrollOffset >= item.pos && (array[index + 1] && scrollOffset < array[index + 1].pos || !array[index + 1])) {
        return true;
      } else {
        return false;
      }
    });

    if (resultItem) {
      const resultUiItem = resultItem;
      setHeaderTitle(resultUiItem.groupTitle); // 是否显示标题

      const isShow = typeof resultUiItem.itemData !== 'string';
      setShowTitle(isShow);
    } // 查找光标所在的列表项


    const offsetY = latestMousePosY.current + scrollOffset;
    const index = findCursorIndex(offsetY);

    if (index >= 0) {
      setActiveIndex(index);
    } // 滑动到最底部，触发“加载更多”


    const containerHeight = getListContainerHeight();

    if (scrollOffset > latestScrollPosY.current && scrollOffset >= scrollHeight - containerHeight) {
      const {
        loadMore
      } = props;

      if (typeof loadMore === 'function') {
        loadMore();
      }
    }

    latestScrollPosY.current = scrollOffset;
  };

  const handleMouseMove = e => {
    // 获取鼠标相对于列表容器的位置
    const {
      pageY = 0
    } = e;
    let containerY = 0;

    if (refList.current) {
      const rect = refList.current.getBoundingClientRect();
      containerY = rect.y;
    }

    const mouseRelativeY = pageY - containerY;
    latestMousePosY.current = mouseRelativeY; // 查找光标所在的列表项

    const index = findCursorIndex(latestScrollPosY.current + mouseRelativeY);

    if (index >= 0) {
      setActiveIndex(index);
    }
  };

  const handleKeyDown = event => {
    const {
      useHotKey,
      onItemClick
    } = props;

    if (!useHotKey) {
      return;
    }

    isKeyDownTyping.current = true;

    if (isUpHotKey(event)) {
      event.stopPropagation();
      event.preventDefault();
      let newActiveIndex = Math.max(activeIndex - 1, 0);
      const uiItemData = listData[newActiveIndex];

      if (typeof uiItemData.itemData === 'string') {
        newActiveIndex = Math.max(newActiveIndex - 1, 0);
      }

      const listHeight = getItemRelativeHeight(listData.length - 1);
      const relativeHeight = getItemRelativeHeight(newActiveIndex);
      const containerHeight = getListContainerHeight();

      if (refList.current && relativeHeight < listHeight - containerHeight) {
        const uiItem = listData[newActiveIndex];
        const offset = uiItem ? uiItem.pos : 0;
        refList.current.scrollTo(0, offset);
        latestScrollPosY.current = offset;
      }

      setActiveIndex(newActiveIndex);
    } else if (isDownHotKey(event)) {
      event.stopPropagation();
      event.preventDefault();
      let newActiveIndex = Math.min(activeIndex + 1, listData.length - 1);
      const uiItemData = listData[newActiveIndex];

      if (typeof uiItemData.itemData === 'string') {
        newActiveIndex = Math.min(newActiveIndex + 1, listData.length - 1);
      }

      const relativeHeight = getItemRelativeHeight(newActiveIndex);
      const containerHeight = getListContainerHeight();

      if (refList.current && relativeHeight > containerHeight) {
        const offset = relativeHeight - containerHeight;
        refList.current.scrollTo(0, offset);
        latestScrollPosY.current = offset;
      }

      setActiveIndex(newActiveIndex);
    } else if (isEnterHotKey(event)) {
      event.stopPropagation();
      event.preventDefault();
      const uiItem = listData && listData[activeIndex];

      if (uiItem && typeof onItemClick === 'function') {
        const itemData = uiItem.itemData;

        if (itemData) {
          onItemClick(itemData);
        }
      }
    }

    setTimeout(() => {
      isKeyDownTyping.current = false;
    }, 10);
  };

  const renderHeader = () => {
    const {
      advanceOption
    } = props;
    const {
      icon,
      name,
      onClick: handleAdvanceSelect
    } = advanceOption;
    let title = '';

    if (status !== exports.EQuickInsertStatus.loading && listData && listData.length > 0) {
      title = headerTitle || defaultTitle;
    }

    return /*#__PURE__*/_createElement$1S(HeaderWrapper, null, /*#__PURE__*/_createElement$1S(HeaderTitle, {
      isShowTitle: isShowTitle
    }, title), /*#__PURE__*/_createElement$1S(HeaderButton, {
      onClick: handleAdvanceSelect
    }, /*#__PURE__*/_createElement$1S(IconWrapper$3, null, icon), /*#__PURE__*/_createElement$1S(ButtonText, null, name)));
  };

  var _ref = /*#__PURE__*/_createElement$1S(EmptyWrapper, null, _ref2$d, /*#__PURE__*/_createElement$1S(EmptyText, null, /*#__PURE__*/_createElement$1S(TranslateComp, {
    locale: locale,
    textKey: 'we_ui_quick_insert_no_data'
  })));

  const renderList = () => {
    const isEmpty = !listData || !listData.length;
    return isEmpty ? _ref : /*#__PURE__*/_createElement$1S(ListWrapper, {
      className: "quick-insert-list",
      ref: refList,
      onScroll: handleListScroll,
      onMouseMove: handleMouseMove
    }, listData.map((item, index) => renderRow(index, item.itemData)));
  };

  const renderRow = (index, dt) => {
    if (!dt) {
      return null;
    }

    const {
      onItemClick
    } = props;

    if (typeof dt === 'string') {
      return /*#__PURE__*/_createElement$1S(GroupTitle, {
        key: `group-title-${index}`
      }, dt);
    } else {
      const insertData = dt;
      return /*#__PURE__*/_createElement$1S(QuickInsertItem, {
        key: `list-item-${index}`,
        active: index === activeIndex,
        onItemClick: onItemClick,
        data: insertData
      });
    }
  };

  const isLoading = status === exports.EQuickInsertStatus.loading;
  const isLoadingMore = status === exports.EQuickInsertStatus.loadMore;
  return /*#__PURE__*/_createElement$1S(QuickInsertWrapper, null, renderHeader(), isLoading ? /*#__PURE__*/_createElement$1S(LoadingItem, {
    locale: locale
  }) : renderList(), isLoadingMore ? /*#__PURE__*/_createElement$1S(LoadingItem, {
    locale: locale
  }) : null);
});

exports.AbsolutePopup = AbsolutePopup;
exports.AbstractBetaNormal = AbstractBetaNormal;
exports.AddBetaNormal = AddBetaNormal;
exports.AddCalendarNormal = AddCalendarNormal;
exports.AddDownBetaNormal = AddDownBetaNormal;
exports.AddFill = AddFill;
exports.AddFillBetaNormal = AddFillBetaNormal;
exports.AddHeadNormal = AddHeadNormal;
exports.AddLeftBetaNormal = AddLeftBetaNormal;
exports.AddNormal = AddNormal;
exports.AddRightBetaNormal = AddRightBetaNormal;
exports.AddThinNormal = AddThinNormal;
exports.AddTopBetaNormal = AddTopBetaNormal;
exports.AddfontsizeNormal = AddfontsizeNormal;
exports.AddlightNormal = AddlightNormal;
exports.AddpeopleNormal = AddpeopleNormal;
exports.Alert = Alert;
exports.AlignBothBetaNormal = AlignBothBetaNormal;
exports.AlignBottomNormal = AlignBottomNormal;
exports.AlignCenterBetaNormal = AlignCenterBetaNormal;
exports.AlignCenterNormal = AlignCenterNormal;
exports.AlignLeftBetaNormal = AlignLeftBetaNormal;
exports.AlignRightBetaNormal = AlignRightBetaNormal;
exports.AlignStretchBetaNormal = AlignStretchBetaNormal;
exports.AlignTopNormal = AlignTopNormal;
exports.AntiClockwiseBetaNormal = AntiClockwiseBetaNormal;
exports.ArrowDownBetaNormal = ArrowDownBetaNormal;
exports.ArrowDownNormal = ArrowDownNormal;
exports.ArrowDownSmallBetaNormal = ArrowDownSmallBetaNormal;
exports.ArrowDownTriangleNormal = ArrowDownTriangleNormal;
exports.ArrowLeftBetaNormal = ArrowLeftBetaNormal;
exports.ArrowLeftNormal = ArrowLeftNormal;
exports.ArrowLeftThinBetaNormal = ArrowLeftThinBetaNormal;
exports.ArrowRightBetaNormal = ArrowRightBetaNormal;
exports.ArrowRightNormal = ArrowRightNormal;
exports.ArrowRightOutlineSmallBetaNormal = ArrowRightOutlineSmallBetaNormal;
exports.ArrowRightSmallBetaNormal = ArrowRightSmallBetaNormal;
exports.ArrowRightThinBetaNormal = ArrowRightThinBetaNormal;
exports.ArrowUpBetaNormal = ArrowUpBetaNormal;
exports.ArrowUpNormal = ArrowUpNormal;
exports.ArrowUpSmallBetaNormal = ArrowUpSmallBetaNormal;
exports.ArrowUpTriangleNormal = ArrowUpTriangleNormal;
exports.AscendingLightNormal = AscendingLightNormal;
exports.AscendingNormal = AscendingNormal;
exports.AtBetaNormal = AtBetaNormal;
exports.AtNormal = AtNormal;
exports.AutowidthNormal = AutowidthNormal;
exports.Avatar = Avatar;
exports.AvatarGroup = AvatarGroup;
exports.BgNormal = BgNormal;
exports.BgfontcolorNormal = BgfontcolorNormal;
exports.BgsheetcolorNormal = BgsheetcolorNormal;
exports.BiaoqingNormal = BiaoqingNormal;
exports.BoldBetaNormal = BoldBetaNormal;
exports.BoldNormal = BoldNormal;
exports.BorderAllBetaNormal = BorderAllBetaNormal;
exports.BorderAllNormal = BorderAllNormal;
exports.BorderBottomBetaNormal = BorderBottomBetaNormal;
exports.BorderBottomNormal = BorderBottomNormal;
exports.BorderHorizonBetaNormal = BorderHorizonBetaNormal;
exports.BorderHorizontalNormal = BorderHorizontalNormal;
exports.BorderInnerBetaNormal = BorderInnerBetaNormal;
exports.BorderInnerNormal = BorderInnerNormal;
exports.BorderLeftBetaNormal = BorderLeftBetaNormal;
exports.BorderLeftNormal = BorderLeftNormal;
exports.BorderNoneBetaNormal = BorderNoneBetaNormal;
exports.BorderNoneNormal = BorderNoneNormal;
exports.BorderOuterBetaNormal = BorderOuterBetaNormal;
exports.BorderOuterNormal = BorderOuterNormal;
exports.BorderPicker = BorderPicker;
exports.BorderRightBetaNormal = BorderRightBetaNormal;
exports.BorderRightNormal = BorderRightNormal;
exports.BorderSet = BorderSet;
exports.BorderTopBetaNormal = BorderTopBetaNormal;
exports.BorderTopNormal = BorderTopNormal;
exports.BorderTypePanel = BorderTypePanel;
exports.BorderVerticalBetaNormal = BorderVerticalBetaNormal;
exports.BorderVerticalNormal = BorderVerticalNormal;
exports.BrushBetaNormal = BrushBetaNormal;
exports.BrushNormal = BrushNormal;
exports.BucketBetaNormal = BucketBetaNormal;
exports.BulletedlistNormal = BulletedlistNormal;
exports.Button = Button;
exports.CalendarBetaNormal = CalendarBetaNormal;
exports.CalendarNormal = CalendarNormal;
exports.CatalogueBetaNormal = CatalogueBetaNormal;
exports.CategoryBetaNormal = CategoryBetaNormal;
exports.CategoryFillBetaNormal = CategoryFillBetaNormal;
exports.CellHeightBetaNormal = CellHeightBetaNormal;
exports.CellPictureBetaNormal = CellPictureBetaNormal;
exports.CellWidthBetaNormal = CellWidthBetaNormal;
exports.CenteralignNormal = CenteralignNormal;
exports.ChangePicNormal = ChangePicNormal;
exports.ChatNormal = ChatNormal;
exports.CheckBetaNormal = CheckBetaNormal;
exports.CheckCircleBetaNormal = CheckCircleBetaNormal;
exports.CheckSquareBetaNormal = CheckSquareBetaNormal;
exports.Checkbox = Checkbox;
exports.CheckboxBetaNormal = CheckboxBetaNormal;
exports.CheckboxCheckedNormal = CheckboxCheckedNormal;
exports.CheckboxFillBetaNormal = CheckboxFillBetaNormal;
exports.CheckboxFillNormal = CheckboxFillNormal;
exports.CheckboxGroup = CheckboxGroup;
exports.CheckboxNormal = CheckboxNormal;
exports.CheckboxlistNormal = CheckboxlistNormal;
exports.ChecklistCheckedBetaNormal = ChecklistCheckedBetaNormal;
exports.ChecklistNormal = ChecklistNormal;
exports.ChecklistUncheckBetaNormal = ChecklistUncheckBetaNormal;
exports.CircleLoadingBetaNormal = CircleLoadingBetaNormal;
exports.ClearDataBetaNormal = ClearDataBetaNormal;
exports.ClearNormal = ClearNormal;
exports.ClipNormal = ClipNormal;
exports.ClockBetaNormal = ClockBetaNormal;
exports.ClockNormal = ClockNormal;
exports.ClockwiseNormal = ClockwiseNormal;
exports.CloseBetaNormal = CloseBetaNormal;
exports.ClosedNormal = ClosedNormal;
exports.CodeBetaNormal = CodeBetaNormal;
exports.CodeBlockBetaNormal = CodeBlockBetaNormal;
exports.CodeNormal = CodeNormal;
exports.ColorBlockItem = ColorBlockItem;
exports.ColorPalette = ColorPalette;
exports.ColorPicker = ColorPicker;
exports.CommentBetaNormal = CommentBetaNormal;
exports.CommentFillNormal = CommentFillNormal;
exports.CommentLightNormal = CommentLightNormal;
exports.CommentNormal = CommentNormal;
exports.CommonLine = CommonLine;
exports.CommonLineSelect = CommonLineSelect;
exports.ComputerBetaNormal = ComputerBetaNormal;
exports.ConditionalFormattingBetaNormal = ConditionalFormattingBetaNormal;
exports.ConditionalformattinLightNormal = ConditionalformattinLightNormal;
exports.ConditionalformattinNormal = ConditionalformattinNormal;
exports.ConstituencyAscendingBetaNormal = ConstituencyAscendingBetaNormal;
exports.ConstituencyDescendingBetaNormal = ConstituencyDescendingBetaNormal;
exports.ContactNormal = ContactNormal;
exports.ContextMenu = ContextMenu;
exports.CopyBetaNormal = CopyBetaNormal;
exports.CopyNormal = CopyNormal;
exports.CounterclockwiseNormal = CounterclockwiseNormal;
exports.CropBetaNormal = CropBetaNormal;
exports.CrossoutNormal = CrossoutNormal;
exports.CurrencyNormal = CurrencyNormal;
exports.CutBetaNormal = CutBetaNormal;
exports.CutNormal = CutNormal;
exports.CutPicNormal = CutPicNormal;
exports.DEFAULT_BULLET_LIST_ARRAY = DEFAULT_BULLET_LIST_ARRAY;
exports.DEFAULT_NUMBER_LIST_ARRAY = DEFAULT_NUMBER_LIST_ARRAY;
exports.DarkModeNormal = DarkModeNormal;
exports.DatePanel = DatePanelMemo;
exports.DatePicker = DatePicker;
exports.DecimalPointMinusBetaNormal = DecimalPointMinusBetaNormal;
exports.DecimalPointPlusBetaNormal = DecimalPointPlusBetaNormal;
exports.DecreaseindentNormal = DecreaseindentNormal;
exports.DeleteBetaNormal = DeleteBetaNormal;
exports.DeleteColumnBetaNormal = DeleteColumnBetaNormal;
exports.DeleteHangBetaNormal = DeleteHangBetaNormal;
exports.DeleteLieBetaNormal = DeleteLieBetaNormal;
exports.DeleteLinkNormal = DeleteLinkNormal;
exports.DeleteNormal = DeleteNormal;
exports.DeleteRowBetaNormal = DeleteRowBetaNormal;
exports.DetailsFillNormal = DetailsFillNormal;
exports.DingdocNormal = DingdocNormal;
exports.DingdriveAiBetaNormal = DingdriveAiBetaNormal;
exports.DingdriveDingdocBetaNormal = DingdriveDingdocBetaNormal;
exports.DingdriveDingexcelBetaNormal = DingdriveDingexcelBetaNormal;
exports.DingdriveExcelBetaNormal = DingdriveExcelBetaNormal;
exports.DingdriveKeynoteBetaNormal = DingdriveKeynoteBetaNormal;
exports.DingdriveNumbersBetaNormal = DingdriveNumbersBetaNormal;
exports.DingdriveOtherBetaNormal = DingdriveOtherBetaNormal;
exports.DingdrivePageBetaNormal = DingdrivePageBetaNormal;
exports.DingdrivePdfBetaNormal = DingdrivePdfBetaNormal;
exports.DingdrivePictureBetaNormal = DingdrivePictureBetaNormal;
exports.DingdrivePptBetaNormal = DingdrivePptBetaNormal;
exports.DingdrivePsBetaNormal = DingdrivePsBetaNormal;
exports.DingdriveSketchBetaNormal = DingdriveSketchBetaNormal;
exports.DingdriveTxtBetaNormal = DingdriveTxtBetaNormal;
exports.DingdriveVideoBetaNormal = DingdriveVideoBetaNormal;
exports.DingdriveVoiceBetaNormal = DingdriveVoiceBetaNormal;
exports.DingdriveWhitepageBetaNormal = DingdriveWhitepageBetaNormal;
exports.DingdriveWordBetaNormal = DingdriveWordBetaNormal;
exports.DingdriveZipBetaNormal = DingdriveZipBetaNormal;
exports.DingnoteBetaNormal = DingnoteBetaNormal;
exports.DingnoteDocBetaNormal = DingnoteDocBetaNormal;
exports.DingnoteExcelBetaNormal = DingnoteExcelBetaNormal;
exports.Divider = Divider;
exports.DncreaseDecimalPlacesNormal = DncreaseDecimalPlacesNormal;
exports.DocAddNormal = DocAddNormal;
exports.DocLightNormal = DocLightNormal;
exports.DocNormal = DocNormal;
exports.DocumentBetaNormal = DocumentBetaNormal;
exports.DoubleLineToolbar = DoubleLineToolbar;
exports.DoubletoolbarNormal = DoubletoolbarNormal;
exports.DownloadBetaNormal = DownloadBetaNormal;
exports.DownloadNormal = DownloadNormal;
exports.DragNormal = DragNormal;
exports.DrawerNormal = DrawerNormal;
exports.DropDownListBetaNormal = DropDownListBetaNormal;
exports.Dropdown = Dropdown;
exports.EditorBetaNormal = EditorBetaNormal;
exports.EditorBorderBetaNormal = EditorBorderBetaNormal;
exports.EditorNormal = EditorNormal;
exports.EmbedCardBetaNormal = EmbedCardBetaNormal;
exports.EraserBetaNormal = EraserBetaNormal;
exports.EraserNormal = EraserNormal;
exports.ExclamationCircleBetaNormal = ExclamationCircleBetaNormal;
exports.FenduanfuNormal = FenduanfuNormal;
exports.FengefuNormal = FengefuNormal;
exports.FenjiefuNormal = FenjiefuNormal;
exports.FenyefuNormal = FenyefuNormal;
exports.FileMenu = FileMenu;
exports.FileMenuItem = FileMenuItem;
exports.FillColorPicker = FillColorPicker;
exports.FillNormal = FillNormal;
exports.FilterBetaNormal = FilterBetaNormal;
exports.FilterLightNormal = FilterLightNormal;
exports.FilterNormal = FilterNormal;
exports.FilterSheetNormal = FilterSheetNormal;
exports.FindAndReplace = FindAndReplace;
exports.FindAndReplacePortal = FindAndReplacePortal;
exports.FocusBetaNormal = FocusBetaNormal;
exports.FocusLightNormal = FocusLightNormal;
exports.FocusNormal = FocusNormal;
exports.FocusSelectBetaNormal = FocusSelectBetaNormal;
exports.FontFamilySelect = FontFamilySelect;
exports.FontNormal = FontNormal;
exports.FontSizeBetaNormal = FontSizeBetaNormal;
exports.FontSizeSelect = FontSizeSelect;
exports.FontcolorNormal = FontcolorNormal;
exports.FormBetaNormal = FormBetaNormal;
exports.FormulaBetaNormal = FormulaBetaNormal;
exports.FreezeBetaNormal = FreezeBetaNormal;
exports.FreezeLightNormal = FreezeLightNormal;
exports.FreezeNormal = FreezeNormal;
exports.FuctionsLightNormal = FuctionsLightNormal;
exports.FuctionsNormal = FuctionsNormal;
exports.FullScreenBetaNormal = FullScreenBetaNormal;
exports.FullScreenNormal = FullScreenNormal;
exports.FullscreenLineNormal = FullscreenLineNormal;
exports.GotoNormal = GotoNormal;
exports.GridBetaNormal = GridBetaNormal;
exports.GroupColumnBetaNormal = GroupColumnBetaNormal;
exports.GroupNormal = GroupNormal;
exports.GroupRowBetaNormal = GroupRowBetaNormal;
exports.HelpBetaNormal = HelpBetaNormal;
exports.HiddenToolGroup = HiddenToolGroup;
exports.HiddenToolLine = HiddenToolLine;
exports.HideNormal = HideNormal;
exports.HorizontalAlignSelect = HorizontalAlignSelect;
exports.IconBase = IconBase;
exports.IncreaseDecimalPlacesNormal = IncreaseDecimalPlacesNormal;
exports.IncreaseindentNormal = IncreaseindentNormal;
exports.IndentButton = IndentButton;
exports.IndentLessBetaNormal = IndentLessBetaNormal;
exports.IndentMoreBetaNormal = IndentMoreBetaNormal;
exports.Input = InputMemo;
exports.InsertBetaNormal = InsertBetaNormal;
exports.InsertFileBetaNormal = InsertFileBetaNormal;
exports.InsertNormal = InsertNormal;
exports.InsertRowAboveBetaNormal = InsertRowAboveBetaNormal;
exports.InsertRowBelowCopyBetaNormal = InsertRowBelowCopyBetaNormal;
exports.InsertRowLeftCopyBetaNormal = InsertRowLeftCopyBetaNormal;
exports.InsertRowRightCopyBetaNormal = InsertRowRightCopyBetaNormal;
exports.InvisibleNormal = InvisibleNormal;
exports.ItalicBetaNormal = ItalicBetaNormal;
exports.ItalicNormal = ItalicNormal;
exports.JustifyNormal = JustifyNormal;
exports.KEY_CODES = KEY_CODES;
exports.KeyboardBetaNormal = KeyboardBetaNormal;
exports.KeyboardFillBetaNormal = KeyboardFillBetaNormal;
exports.LIST_STYLE_MAP = LIST_STYLE_MAP;
exports.LaterShortwayLineNormal = LaterShortwayLineNormal;
exports.Layout = Layout;
exports.LeftBetaNormal = LeftBetaNormal;
exports.LeftalignNormal = LeftalignNormal;
exports.LineHeightBetaNormal = LineHeightBetaNormal;
exports.LineHeightSelect = LineHeightSelect;
exports.LineSelect = LineSelect;
exports.LineStyleBetaNormal = LineStyleBetaNormal;
exports.LineThicknessBetaNormal = LineThicknessBetaNormal;
exports.LineheightNormal = LineheightNormal;
exports.LinethicknessNormal = LinethicknessNormal;
exports.LinetypeNormal = LinetypeNormal;
exports.LinkBetaNormal = LinkBetaNormal;
exports.LinkEditor = LinkEditor;
exports.LinkLightNormal = LinkLightNormal;
exports.LinkPortal = LinkPortal;
exports.LinkToolbar = LinkToolbar;
exports.ListSelect = ListSelect;
exports.ListSelectItem = ListSelectItem;
exports.ListSet = ListSet;
exports.LoadingBetaNormal = LoadingBetaNormal;
exports.LoadingNormal = LoadingNormal;
exports.LocaleProvider = LocaleProvider;
exports.LockCellBetaNormal = LockCellBetaNormal;
exports.LockFillNormal = LockFillNormal;
exports.LockLightNormal = LockLightNormal;
exports.LockNormal = LockNormal;
exports.LookLockCellBetaNormal = LookLockCellBetaNormal;
exports.MemberNormal = MemberNormal;
exports.MentionBetaNormal = MentionBetaNormal;
exports.Menu = Menu;
exports.MenuDivider = MenuDivider;
exports.MenuItem = MenuItem;
exports.MenuItemGroup = MenuItemGroup;
exports.MergeCellButton = MergeCellButton;
exports.MergeCellsBetaNormal = MergeCellsBetaNormal;
exports.MergeCellsNormal = MergeCellsNormal;
exports.MergeNormal = MergeNormal;
exports.MicTiltBetaNormal = MicTiltBetaNormal;
exports.MinusBetaNormal = MinusBetaNormal;
exports.MinusNormal = MinusNormal;
exports.Modal = Modal;
exports.MonthPanel = MonthPanelMemo;
exports.MoreBetaNormal = MoreBetaNormal;
exports.MoreNormal = MoreNormal;
exports.MoreVerticalBetaNormal = MoreVerticalBetaNormal;
exports.NameCardNormal = NameCardNormal;
exports.NonPublicBetaNormal = NonPublicBetaNormal;
exports.NoteNormal = NoteNormal;
exports.NoticeNormal = NoticeNormal;
exports.NotificationBetaNormal = NotificationBetaNormal;
exports.NotificationNormal = NotificationNormal;
exports.NumberInput = NumberInput;
exports.NumberedlistNormal = NumberedlistNormal;
exports.OptionsModal = OptionsModal;
exports.OrderListBetaNormal = OrderListBetaNormal;
exports.OverflowNormal = OverflowNormal;
exports.PackupLineNormal = PackupLineNormal;
exports.PageFlowBetaNormal = PageFlowBetaNormal;
exports.PageHeaderMarginBetaNormal = PageHeaderMarginBetaNormal;
exports.PageLayoutBetaNormal = PageLayoutBetaNormal;
exports.PageTailMarginBetaNormal = PageTailMarginBetaNormal;
exports.PageViewSelect = PageViewSelect;
exports.PageWebBetaNormal = PageWebBetaNormal;
exports.PaintingformatNormal = PaintingformatNormal;
exports.ParagraghSpaceDownBetaNormal = ParagraghSpaceDownBetaNormal;
exports.PasteBetaNormal = PasteBetaNormal;
exports.PasteNormal = PasteNormal;
exports.PauseBetaNormal = PauseBetaNormal;
exports.PcFolderUploadNormal = PcFolderUploadNormal;
exports.PercentNormal = PercentNormal;
exports.PersonNormal = PersonNormal;
exports.PhoneBetaNormal = PhoneBetaNormal;
exports.PhotoNormal = PhotoNormal;
exports.PictureBetaNormal = PictureBetaNormal;
exports.PictureBorderNormal = PictureBorderNormal;
exports.PictureLightNormal = PictureLightNormal;
exports.PictureNormal = PictureNormal;
exports.PlaceholderNormal = PlaceholderNormal;
exports.PlayBetaNormal = PlayBetaNormal;
exports.PlusBetaNormal = PlusBetaNormal;
exports.PlusNormal = PlusNormal;
exports.Portal = Portal;
exports.PositionNormal = PositionNormal;
exports.PresentModeBetaNormal = PresentModeBetaNormal;
exports.Preview1BetaNormal = Preview1BetaNormal;
exports.PreviewBetaNormal = PreviewBetaNormal;
exports.PrintBetaNormal = PrintBetaNormal;
exports.ProhibitionNotificationBetaNormal = ProhibitionNotificationBetaNormal;
exports.QuestionCircleBetaNormal = QuestionCircleBetaNormal;
exports.QuickInsertPanel = QuickInsertPanel;
exports.QuoteBetaNormal = QuoteBetaNormal;
exports.Radio = Radio;
exports.RadioGroup = RadioGroup;
exports.RangePickerBetaNormal = RangePickerBetaNormal;
exports.RatioSelect = RatioSelect;
exports.ReadNormal = ReadNormal;
exports.ReadOnlyBetaNormal = ReadOnlyBetaNormal;
exports.ReconnectBetaNormal = ReconnectBetaNormal;
exports.RecordBetaNormal = RecordBetaNormal;
exports.RedoBetaNormal = RedoBetaNormal;
exports.RedoNormal = RedoNormal;
exports.ReducefontsizeNormal = ReducefontsizeNormal;
exports.ReferDingdriveBetaNormal = ReferDingdriveBetaNormal;
exports.ReferLinkBetaNormal = ReferLinkBetaNormal;
exports.ReferMemoBetaNormal = ReferMemoBetaNormal;
exports.ReferNoteBetaNormal = ReferNoteBetaNormal;
exports.ReferenceLightNormal = ReferenceLightNormal;
exports.ReferenceNormal = ReferenceNormal;
exports.RefreshNormal = RefreshNormal;
exports.Replace = Replace;
exports.ReplaceBetaNormal = ReplaceBetaNormal;
exports.ReportFillBetaNormal = ReportFillBetaNormal;
exports.ReportFillNormal = ReportFillNormal;
exports.ResetPicBetaNormal = ResetPicBetaNormal;
exports.RightThickBetaNormal = RightThickBetaNormal;
exports.RightThickNormal = RightThickNormal;
exports.RightalignNormal = RightalignNormal;
exports.Rotate90BetaNormal = Rotate90BetaNormal;
exports.RoundCloseNormal = RoundCloseNormal;
exports.RoundcloseBetaNormal = RoundcloseBetaNormal;
exports.RoundcloseFillBetaNormal = RoundcloseFillBetaNormal;
exports.RoundcloseThickBetaNormal = RoundcloseThickBetaNormal;
exports.RoundcloseThickNormal = RoundcloseThickNormal;
exports.SaveBetaNormal = SaveBetaNormal;
exports.ScriptSelect = ScriptSelect;
exports.Search = Search;
exports.SearchBetaNormal = SearchBetaNormal;
exports.SearchLightNormal = SearchLightNormal;
exports.SearchNormal = SearchNormal;
exports.SearchSwitch = SearchSwitch;
exports.SecurityBetaNormal = SecurityBetaNormal;
exports.Select = SelectMemo;
exports.SelectDownloadNormal = SelectDownloadNormal;
exports.SelectNormal = SelectNormal;
exports.SelectOption = SelectOption;
exports.SelectOptionGroup = SelectOptionGroup;
exports.SendBetaNormal = SendBetaNormal;
exports.SettingsNormal = SettingsNormal;
exports.ShandiankuangBetaNormal = ShandiankuangBetaNormal;
exports.ShareBetaNormal = ShareBetaNormal;
exports.ShareNewNormal = ShareNewNormal;
exports.ShiftDownNormal = ShiftDownNormal;
exports.ShiftUpNormal = ShiftUpNormal;
exports.SigmaLightNormal = SigmaLightNormal;
exports.SingleLineToolbar = SingleLineToolbar;
exports.SingletoolbarNormal = SingletoolbarNormal;
exports.SomecolorNormal = SomecolorNormal;
exports.SortNormal = SortNormal;
exports.SpaceafterNormal = SpaceafterNormal;
exports.SpacebeforeNormal = SpacebeforeNormal;
exports.SplitButton = SplitButton;
exports.SplitCellsBetaNormal = SplitCellsBetaNormal;
exports.SquareNormal = SquareNormal;
exports.StarBetaNormal = StarBetaNormal;
exports.StarFullBetaNormal = StarFullBetaNormal;
exports.StopBetaNormal = StopBetaNormal;
exports.StopCircleBetaNormal = StopCircleBetaNormal;
exports.StrikethroughBetaNormal = StrikethroughBetaNormal;
exports.SubMenu = SubMenu;
exports.SubscriptBetaNormal = SubscriptBetaNormal;
exports.SuperArrowLeftBetaNormal = SuperArrowLeftBetaNormal;
exports.SuperArrowRightBetaNormal = SuperArrowRightBetaNormal;
exports.SuperscriptBetaNormal = SuperscriptBetaNormal;
exports.Switch = Switch;
exports.TabPane = TabPane;
exports.TableAscendingBetaNormal = TableAscendingBetaNormal;
exports.TableBetaNormal = TableBetaNormal;
exports.TableDescendingBetaNormal = TableDescendingBetaNormal;
exports.TableLightNormal = TableLightNormal;
exports.TableNormal = TableNormal;
exports.TablePanel = TablePanel;
exports.TableSet = TableSet;
exports.TableStyle = TableStyle;
exports.TableThemeBetaNormal = TableThemeBetaNormal;
exports.TableWidthFitContainerBetaNormal = TableWidthFitContainerBetaNormal;
exports.TableWrapSelect = TableWrapSelect;
exports.Tabs = Tabs;
exports.TextTypeSelect = TextTypeSelect;
exports.TimePanel = TimePanelMemo;
exports.TimePicker = TimePicker;
exports.TodoNormal = TodoNormal;
exports.ToolBox = ToolBox;
exports.ToolButton = ToolButton;
exports.ToolGroup = ToolGroup;
exports.ToolLine = ToolLine;
exports.Toolbar = Toolbar;
exports.ToolbarDivider = ToolbarDivider;
exports.Tooltip = Tooltip;
exports.TranslateLightNormal = TranslateLightNormal;
exports.TranslateNormal = TranslateNormal;
exports.TranslationBetaNormal = TranslationBetaNormal;
exports.UncheckBetaNormal = UncheckBetaNormal;
exports.UnderlineBetaNormal = UnderlineBetaNormal;
exports.UnderlineNormal = UnderlineNormal;
exports.UndoBetaNormal = UndoBetaNormal;
exports.UndoNormal = UndoNormal;
exports.UngroupColumnBetaNormal = UngroupColumnBetaNormal;
exports.UngroupRowBetaNormal = UngroupRowBetaNormal;
exports.UnlockCellBetaNormal = UnlockCellBetaNormal;
exports.UnlockNormal = UnlockNormal;
exports.UnorderedListBetaNormal = UnorderedListBetaNormal;
exports.UpTopBetaNormal = UpTopBetaNormal;
exports.UploadNormal = UploadNormal;
exports.VedioNormal = VedioNormal;
exports.VerticalAlignBottomBetaNormal = VerticalAlignBottomBetaNormal;
exports.VerticalAlignMiddleBetaNormal = VerticalAlignMiddleBetaNormal;
exports.VerticalAlignSelect = VerticalAlignSelect;
exports.VerticalAlignTopBetaNormal = VerticalAlignTopBetaNormal;
exports.VideoBetaNormal = VideoBetaNormal;
exports.VideoMeetingNormal = VideoMeetingNormal;
exports.ViewNormal = ViewNormal;
exports.VoiceFillNormal = VoiceFillNormal;
exports.VoiceNormal = VoiceNormal;
exports.VoicelightNormal = VoicelightNormal;
exports.WarnFillNormal = WarnFillNormal;
exports.WarningBetaNormal = WarningBetaNormal;
exports.WarningFillBetaNormal = WarningFillBetaNormal;
exports.WarningNormal = WarningNormal;
exports.Watermark = Watermark;
exports.WebBetaNormal = WebBetaNormal;
exports.WechatNormal = WechatNormal;
exports.WindowLineNormal = WindowLineNormal;
exports.WrapLineBreakBetaNormal = WrapLineBreakBetaNormal;
exports.WrapNormal = WrapNormal;
exports.WrapOverflowBetaNormal = WrapOverflowBetaNormal;
exports.WrapTruncatedBetaNormal = WrapTruncatedBetaNormal;
exports.XDownNormal = XDownNormal;
exports.XUpNormal = XUpNormal;
exports.YearPanel = YearPanel;
exports.YuanBetaNormal = YuanBetaNormal;
exports.addFloat = addFloat;
exports.camelCase = camelCase;
exports.classnames = classnames;
exports.commonLineMap = commonLineMap;
exports.copyToClipboard = copyToClipboard;
exports.debounce = debounce;
exports.defineLocale = defineLocale;
exports.dragAndDropHOC = dragAndDropHOC;
exports.equalFloat = equalFloat;
exports.formatNumber = formatNumber;
exports.generateWatermark = generateWatermark;
exports.getAlignPointsAndOffsets = getAlignPointsAndOffsets;
exports.isDownHotKey = isDownHotKey;
exports.isEnterHotKey = isEnterHotKey;
exports.isEqual = isEqual;
exports.isEscHotKey = isEscHotKey;
exports.isShiftEnterHotKey = isShiftEnterHotKey;
exports.isTransparent = isTransparent;
exports.isUpHotKey = isUpHotKey;
exports.isWhite = isWhite;
exports.lineWidthByBuiltIn = lineWidthByBuiltIn;
exports.lineWidthByCustom = lineWidthByCustom;
exports.message = message;
exports.needsRounding = needsRounding;
exports.notification = notification$1;
exports.omit = omit;
exports.pick = pick;
exports.runNextTime = runNextTime;
exports.svgDefaultProps = svgDefaultProps;
exports.theme = theme;
exports.throttle = throttle;
exports.typeOf = typeOf;
exports.uniq = uniq;
exports.uniqBy = uniqBy;
exports.useClickOuterRef = useClickOuterRef;
exports.useComponentDidUpdate = useComponentDidUpdate;
exports.useContextMenuRef = useContextMenuRef;
exports.useControlledValue = useControlledValue;
exports.useFlush = useFlush;
exports.useFontFamily = useFontFamily;
exports.usePrevious = usePrevious;
exports.uuid = uuid;
exports.withTheme = withTheme;
//# sourceMappingURL=index.js.map
