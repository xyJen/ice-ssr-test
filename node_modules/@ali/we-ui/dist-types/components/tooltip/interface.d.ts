/// <reference types="react" />
import type { IPlacement } from "../trigger";
export interface ITooltipProps {
    /**
     * 设置气泡中的文字
     */
    title?: string | React.ReactNode;
    /**
     * 设置气泡提示出现的位置
     */
    placement?: IPlacement;
    /**
     * 子节点
     */
    children: React.ReactElement;
    /**
     * 层级
     */
    zIndex?: number;
    /**
     * 样式
     */
    overlayStyle?: React.CSSProperties;
    /**
     * 类名
     */
    overlayClassName?: string;
    /**
     * 禁止显示
     */
    disabled?: boolean;
}
export declare type ITooltipHandlerEvent = Pick<ITooltipProps, 'title' | 'zIndex' | 'placement' | 'overlayStyle' | 'overlayClassName'> & {
    triggerNode?: HTMLElement;
    disabled?: boolean;
};
export interface IState extends ITooltipHandlerEvent {
    visible: boolean;
}
export interface ITooltipSingletonHandle {
    handleEnter: (id: string, e: ITooltipHandlerEvent) => void;
    handleLeave: (id: string) => void;
    handleUpdate: (id: string, e: ITooltipHandlerEvent) => void;
}
