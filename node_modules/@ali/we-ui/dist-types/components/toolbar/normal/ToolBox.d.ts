import React from 'react';
import { ButtonSize } from "../../button";
export declare type childrenType = React.ReactNodeArray | React.ReactElement<any> | null;
export declare enum EToolBoxLayout {
    /**
     * 单独icon，名称通过tooltip显示
    */
    Single = "single",
    /**
     * 垂直布局(上面icon，下面名称)
    */
    Vertical = "vertical",
    /**
     * 水平布局(左侧icon，右侧名称)
     */
    Horizontal = "horizontal"
}
export interface IToolBoxProps {
    /**
     * 布局方式
    */
    layout?: EToolBoxLayout;
    /**
     * 工具名字
    */
    name?: string;
    /**
    * 包裹的组件
    */
    children?: childrenType;
    /**
     * 类名
     */
    className?: string;
    /**
     * 点击
     */
    onClick?: (e: React.MouseEvent<HTMLElement>) => void;
    /**
     * 双击
     */
    onDoubleClick?: (e: React.MouseEvent<HTMLElement>) => void;
    /**
     * 鼠标移入的事件
     */
    onMouseEnter?: () => void;
    /**
     * 鼠标移出的事件
     */
    onMouseLeave?: () => void;
    /**
     * 是否禁用
     */
    disabled?: boolean;
    /**
     * 禁用时显示文案，disabled 为 true 时，优先级高于 name
     */
    disabledTip?: string;
}
export declare class ToolBox extends React.PureComponent<IToolBoxProps> {
    static defaultProps: {
        layout: EToolBoxLayout;
        disabled: boolean;
    };
    handleMouseEnter: () => void;
    handleMouseLeave: () => void;
    renderSingle: () => JSX.Element;
    renderVertical: () => JSX.Element;
    renderHorizontal: () => JSX.Element;
    render(): JSX.Element;
}
export declare type ToolBoxArray = Array<React.ReactElement<IToolBoxProps>>;
export interface IToolButtonProps extends IToolBoxProps {
    /**
     * 设置按钮的图标组件
     */
    icon?: React.ReactNode;
    /**
     * 是否为激活态
     */
    active?: boolean;
    /**
     * Button的样式
     */
    style?: React.CSSProperties;
    /**
     * 暴露 data-testid, 用于测试
     */
    testid?: string;
    /**
     * ToolBox 的类名
     */
    boxClassName?: string;
    /**
     * button 的大小
     */
    size?: ButtonSize;
    /**
     * 是否禁用
     */
    disabled?: boolean;
    /**
     * 禁用时显示文案，disabled 为 true 时，优先级高于 name
     */
    disabledTip?: string;
}
export declare const ToolButton: React.FC<IToolButtonProps>;
