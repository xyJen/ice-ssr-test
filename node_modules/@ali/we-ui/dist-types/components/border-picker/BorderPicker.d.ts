import React from 'react';
import { ButtonSize } from '../button';
import { ILineTypeValue } from '../lines';
interface IBorderPanelProps {
    /**
     * 颜色
     */
    color: string;
    /**
     * 选中颜色的回调，选择无颜色时回传空字符串 `''`
     */
    onColorPick?: (color: string) => void;
    /**
     * 选中的线条粗细（受控），为 lineSizeMap 的 key
     */
    lineSize?: string;
    /**
     * 默认的线条粗细（非受控），为 lineSizeMap 的 key
     */
    defaultLineSize?: string;
    /**
     * 选择线条粗细时使用的映射
     */
    lineSizeMap: Record<string, ILineTypeValue>;
    /**
     * 线条粗细变化的回调函数
     */
    onLineSizeChange?: (lineSize: string) => void;
    /**
     * 选中的线条样式（受控），为 lineStyleMap 的 key
     */
    lineStyle?: string;
    /**
     * 默认的线条样式（非受控），为 lineStyleMap 的 key
     */
    defaultLineStyle?: string;
    /**
     * 选择线条样式时使用的映射
     */
    lineStyleMap: Record<string, ILineTypeValue>;
    /**
     * 线条样式变化的回调函数
     */
    onLineStyleChange?: (lineStyle: string) => void;
    /**
     * 国际化语言
     */
    locale?: string;
    /**
     * 点击左侧按钮的回调
     */
    onClick?: () => void;
}
export interface IBorderPickerProps extends IBorderPanelProps {
    /**
     * Button 的样式
     */
    style?: React.CSSProperties;
    /**
     * Button 是否显示边框
     */
    bordered?: boolean;
    /**
     * 层级
     */
    zIndex?: number;
    /**
     * 类名
     */
    className?: string;
    /**
     * 是否禁用
     */
    disabled?: boolean;
    /**
     * tooltip提示
     */
    title?: string | React.ReactNode;
    /**
     * button 的大小
     */
    size?: ButtonSize;
}
export declare const BorderPicker: React.FC<IBorderPickerProps>;
export {};
