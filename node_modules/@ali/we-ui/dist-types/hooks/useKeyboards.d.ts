/// <reference types="react" />
export declare type IKeyboardCondition = number[] | {
    and: number[];
} | {
    or: number[];
};
export declare type IKeyboardPair = [
    IKeyboardCondition,
    React.KeyboardEventHandler<HTMLElement>
] | [
    IKeyboardCondition,
    React.KeyboardEventHandler<HTMLElement>,
    boolean
];
export interface IUseKeyboardsOptions {
    /**
     * 键盘处理条件和回调
     */
    keyboards: IKeyboardPair[];
    /**
     * 总开关
     */
    on?: boolean;
    onFocus?: React.FocusEventHandler<HTMLElement>;
    onBlur?: React.FocusEventHandler<HTMLElement>;
    onKeyDown?: React.KeyboardEventHandler<HTMLElement>;
    onKeyUp?: React.KeyboardEventHandler<HTMLElement>;
}
declare const _default: (options?: IUseKeyboardsOptions) => {
    onKeyDown: ((event: import("react").KeyboardEvent<HTMLElement>) => void) | undefined;
    onKeyUp: ((event: import("react").KeyboardEvent<HTMLElement>) => void) | undefined;
    onFocus: (e: React.FocusEvent<HTMLElement>) => void;
    onBlur: (e: React.FocusEvent<HTMLElement>) => void;
};
export default _default;
